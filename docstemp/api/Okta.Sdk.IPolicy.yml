### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IPolicy
  commentId: T:Okta.Sdk.IPolicy
  id: IPolicy
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IPolicy.ActivateAsync(System.Threading.CancellationToken)
  - Okta.Sdk.IPolicy.Conditions
  - Okta.Sdk.IPolicy.Created
  - Okta.Sdk.IPolicy.CreateRuleAsync(Okta.Sdk.IPolicyRule,System.Threading.CancellationToken)
  - Okta.Sdk.IPolicy.CreateRuleAsync``1(Okta.Sdk.PolicyRule,System.Threading.CancellationToken)
  - Okta.Sdk.IPolicy.DeactivateAsync(System.Threading.CancellationToken)
  - Okta.Sdk.IPolicy.Description
  - Okta.Sdk.IPolicy.GetPolicyRuleAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPolicy.GetPolicyRuleAsync``1(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPolicy.Id
  - Okta.Sdk.IPolicy.LastUpdated
  - Okta.Sdk.IPolicy.ListPolicyRules
  - Okta.Sdk.IPolicy.Name
  - Okta.Sdk.IPolicy.Priority
  - Okta.Sdk.IPolicy.Status
  - Okta.Sdk.IPolicy.System
  - Okta.Sdk.IPolicy.Type
  langs:
  - csharp
  - vb
  name: IPolicy
  nameWithType: IPolicy
  fullName: Okta.Sdk.IPolicy
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/IPolicy.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IPolicy
    path: ../src/Okta.Sdk/IPolicy.cs
    startLine: 10
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: Represents a Policy resource in the Okta API.
  example: []
  syntax:
    content: 'public interface IPolicy : IResource'
    content.vb: >-
      Public Interface IPolicy

          Inherits IResource
  inheritedMembers:
  - Okta.Sdk.IResource.Item(System.String)
  - Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  - Okta.Sdk.IResource.GetData
  - Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  - Okta.Sdk.IResource.GetProperty``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IPolicy.Conditions
  commentId: P:Okta.Sdk.IPolicy.Conditions
  id: Conditions
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: Conditions
  nameWithType: IPolicy.Conditions
  fullName: Okta.Sdk.IPolicy.Conditions
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Conditions
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 17
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IPolicyRuleConditions Conditions { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IPolicyRuleConditions
    content.vb: Property Conditions As IPolicyRuleConditions
  overload: Okta.Sdk.IPolicy.Conditions*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IPolicy.Created
  commentId: P:Okta.Sdk.IPolicy.Created
  id: Created
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: IPolicy.Created
  fullName: Okta.Sdk.IPolicy.Created
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Created
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: DateTimeOffset? Created { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: ReadOnly Property Created As DateTimeOffset?
  overload: Okta.Sdk.IPolicy.Created*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IPolicy.Description
  commentId: P:Okta.Sdk.IPolicy.Description
  id: Description
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: IPolicy.Description
  fullName: Okta.Sdk.IPolicy.Description
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Description
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 21
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Description As String
  overload: Okta.Sdk.IPolicy.Description*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IPolicy.Id
  commentId: P:Okta.Sdk.IPolicy.Id
  id: Id
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IPolicy.Id
  fullName: Okta.Sdk.IPolicy.Id
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Id
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 23
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Okta.Sdk.IPolicy.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IPolicy.LastUpdated
  commentId: P:Okta.Sdk.IPolicy.LastUpdated
  id: LastUpdated
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: LastUpdated
  nameWithType: IPolicy.LastUpdated
  fullName: Okta.Sdk.IPolicy.LastUpdated
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: LastUpdated
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 25
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: DateTimeOffset? LastUpdated { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: ReadOnly Property LastUpdated As DateTimeOffset?
  overload: Okta.Sdk.IPolicy.LastUpdated*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IPolicy.Name
  commentId: P:Okta.Sdk.IPolicy.Name
  id: Name
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IPolicy.Name
  fullName: Okta.Sdk.IPolicy.Name
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Name
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 27
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Name As String
  overload: Okta.Sdk.IPolicy.Name*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IPolicy.Priority
  commentId: P:Okta.Sdk.IPolicy.Priority
  id: Priority
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: IPolicy.Priority
  fullName: Okta.Sdk.IPolicy.Priority
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Priority
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 29
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: int? Priority { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Property Priority As Integer?
  overload: Okta.Sdk.IPolicy.Priority*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IPolicy.Status
  commentId: P:Okta.Sdk.IPolicy.Status
  id: Status
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: IPolicy.Status
  fullName: Okta.Sdk.IPolicy.Status
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Status
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 31
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Status { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Status As String
  overload: Okta.Sdk.IPolicy.Status*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IPolicy.System
  commentId: P:Okta.Sdk.IPolicy.System
  id: System
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: System
  nameWithType: IPolicy.System
  fullName: Okta.Sdk.IPolicy.System
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: System
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 33
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: bool? System { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Property System As Boolean?
  overload: Okta.Sdk.IPolicy.System*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IPolicy.Type
  commentId: P:Okta.Sdk.IPolicy.Type
  id: Type
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IPolicy.Type
  fullName: Okta.Sdk.IPolicy.Type
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Type
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 35
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: PolicyType Type { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.PolicyType
    content.vb: Property Type As PolicyType
  overload: Okta.Sdk.IPolicy.Type*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IPolicy.ActivateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPolicy.ActivateAsync(System.Threading.CancellationToken)
  id: ActivateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: ActivateAsync(CancellationToken)
  nameWithType: IPolicy.ActivateAsync(CancellationToken)
  fullName: Okta.Sdk.IPolicy.ActivateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateAsync
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 37
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task ActivateAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ActivateAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IPolicy.ActivateAsync*
- uid: Okta.Sdk.IPolicy.DeactivateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPolicy.DeactivateAsync(System.Threading.CancellationToken)
  id: DeactivateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: DeactivateAsync(CancellationToken)
  nameWithType: IPolicy.DeactivateAsync(CancellationToken)
  fullName: Okta.Sdk.IPolicy.DeactivateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateAsync
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 40
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task DeactivateAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeactivateAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IPolicy.DeactivateAsync*
- uid: Okta.Sdk.IPolicy.ListPolicyRules
  commentId: M:Okta.Sdk.IPolicy.ListPolicyRules
  id: ListPolicyRules
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: ListPolicyRules()
  nameWithType: IPolicy.ListPolicyRules()
  fullName: Okta.Sdk.IPolicy.ListPolicyRules()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListPolicyRules
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 43
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: ICollectionClient<IPolicyRule> ListPolicyRules()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IPolicyRule}
    content.vb: Function ListPolicyRules As ICollectionClient(Of IPolicyRule)
  overload: Okta.Sdk.IPolicy.ListPolicyRules*
- uid: Okta.Sdk.IPolicy.CreateRuleAsync(Okta.Sdk.IPolicyRule,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPolicy.CreateRuleAsync(Okta.Sdk.IPolicyRule,System.Threading.CancellationToken)
  id: CreateRuleAsync(Okta.Sdk.IPolicyRule,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: CreateRuleAsync(IPolicyRule, CancellationToken)
  nameWithType: IPolicy.CreateRuleAsync(IPolicyRule, CancellationToken)
  fullName: Okta.Sdk.IPolicy.CreateRuleAsync(Okta.Sdk.IPolicyRule, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateRuleAsync
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 46
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IPolicyRule> CreateRuleAsync(IPolicyRule policyRule, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyRule
      type: Okta.Sdk.IPolicyRule
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IPolicyRule}
    content.vb: Function CreateRuleAsync(policyRule As IPolicyRule, cancellationToken As CancellationToken = Nothing) As Task(Of IPolicyRule)
  overload: Okta.Sdk.IPolicy.CreateRuleAsync*
- uid: Okta.Sdk.IPolicy.GetPolicyRuleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPolicy.GetPolicyRuleAsync(System.String,System.Threading.CancellationToken)
  id: GetPolicyRuleAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: GetPolicyRuleAsync(String, CancellationToken)
  nameWithType: IPolicy.GetPolicyRuleAsync(String, CancellationToken)
  fullName: Okta.Sdk.IPolicy.GetPolicyRuleAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPolicy.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetPolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/IPolicy.Generated.cs
    startLine: 49
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IPolicyRule> GetPolicyRuleAsync(string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: ruleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IPolicyRule}
    content.vb: Function GetPolicyRuleAsync(ruleId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPolicyRule)
  overload: Okta.Sdk.IPolicy.GetPolicyRuleAsync*
- uid: Okta.Sdk.IPolicy.GetPolicyRuleAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPolicy.GetPolicyRuleAsync``1(System.String,System.Threading.CancellationToken)
  id: GetPolicyRuleAsync``1(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: GetPolicyRuleAsync<T>(String, CancellationToken)
  nameWithType: IPolicy.GetPolicyRuleAsync<T>(String, CancellationToken)
  fullName: Okta.Sdk.IPolicy.GetPolicyRuleAsync<T>(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IPolicy.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetPolicyRuleAsync
    path: ../src/Okta.Sdk/IPolicy.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a policy rule\n"
  example: []
  syntax:
    content: >-
      Task<T> GetPolicyRuleAsync<T>(string ruleId, CancellationToken cancellationToken = default(CancellationToken))

          where T : class, IPolicyRule
    parameters:
    - id: ruleId
      type: System.String
      description: The policy rule Id
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    typeParameters:
    - id: T
      description: The type of policy rule
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The policy rule
    content.vb: Function GetPolicyRuleAsync(Of T As {Class, IPolicyRule})(ruleId As String, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Okta.Sdk.IPolicy.GetPolicyRuleAsync*
  nameWithType.vb: IPolicy.GetPolicyRuleAsync(Of T)(String, CancellationToken)
  fullName.vb: Okta.Sdk.IPolicy.GetPolicyRuleAsync(Of T)(System.String, System.Threading.CancellationToken)
  name.vb: GetPolicyRuleAsync(Of T)(String, CancellationToken)
- uid: Okta.Sdk.IPolicy.CreateRuleAsync``1(Okta.Sdk.PolicyRule,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPolicy.CreateRuleAsync``1(Okta.Sdk.PolicyRule,System.Threading.CancellationToken)
  id: CreateRuleAsync``1(Okta.Sdk.PolicyRule,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPolicy
  langs:
  - csharp
  - vb
  name: CreateRuleAsync<T>(PolicyRule, CancellationToken)
  nameWithType: IPolicy.CreateRuleAsync<T>(PolicyRule, CancellationToken)
  fullName: Okta.Sdk.IPolicy.CreateRuleAsync<T>(Okta.Sdk.PolicyRule, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IPolicy.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateRuleAsync
    path: ../src/Okta.Sdk/IPolicy.cs
    startLine: 29
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nCreates a policy rule\n"
  example: []
  syntax:
    content: >-
      Task<T> CreateRuleAsync<T>(PolicyRule policyRule, CancellationToken cancellationToken = default(CancellationToken))

          where T : class, IPolicyRule
    parameters:
    - id: policyRule
      type: Okta.Sdk.PolicyRule
      description: The policy rule
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    typeParameters:
    - id: T
      description: The type of policy rule
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The created policy rule
    content.vb: Function CreateRuleAsync(Of T As {Class, IPolicyRule})(policyRule As PolicyRule, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Okta.Sdk.IPolicy.CreateRuleAsync*
  nameWithType.vb: IPolicy.CreateRuleAsync(Of T)(PolicyRule, CancellationToken)
  fullName.vb: Okta.Sdk.IPolicy.CreateRuleAsync(Of T)(Okta.Sdk.PolicyRule, System.Threading.CancellationToken)
  name.vb: CreateRuleAsync(Of T)(PolicyRule, CancellationToken)
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IResource.Item(System.String)
  commentId: P:Okta.Sdk.IResource.Item(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: Item[String]
  nameWithType: IResource.Item[String]
  fullName: Okta.Sdk.IResource.Item[System.String]
  nameWithType.vb: IResource.Item(String)
  fullName.vb: Okta.Sdk.IResource.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetArrayProperty<T>(String)
  nameWithType: IResource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetArrayProperty<T>(System.String)
  nameWithType.vb: IResource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty<T>
    nameWithType: IResource.GetArrayProperty<T>
    fullName: Okta.Sdk.IResource.GetArrayProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty(Of T)
    nameWithType: IResource.GetArrayProperty(Of T)
    fullName: Okta.Sdk.IResource.GetArrayProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetData
  commentId: M:Okta.Sdk.IResource.GetData
  parent: Okta.Sdk.IResource
  name: GetData()
  nameWithType: IResource.GetData()
  fullName: Okta.Sdk.IResource.GetData()
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: IResource.SetProperty(String, Object)
  fullName: Okta.Sdk.IResource.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: IResource.GetProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetProperty<T>(System.String)
  nameWithType.vb: IResource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: IResource.GetProperty<T>
    fullName: Okta.Sdk.IResource.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: IResource.GetProperty(Of T)
    fullName: Okta.Sdk.IResource.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  parent: Okta.Sdk
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
- uid: Okta.Sdk.IPolicy.Conditions*
  commentId: Overload:Okta.Sdk.IPolicy.Conditions
  name: Conditions
  nameWithType: IPolicy.Conditions
  fullName: Okta.Sdk.IPolicy.Conditions
- uid: Okta.Sdk.IPolicyRuleConditions
  commentId: T:Okta.Sdk.IPolicyRuleConditions
  parent: Okta.Sdk
  name: IPolicyRuleConditions
  nameWithType: IPolicyRuleConditions
  fullName: Okta.Sdk.IPolicyRuleConditions
- uid: Okta.Sdk.IPolicy.Created*
  commentId: Overload:Okta.Sdk.IPolicy.Created
  name: Created
  nameWithType: IPolicy.Created
  fullName: Okta.Sdk.IPolicy.Created
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.IPolicy.Description*
  commentId: Overload:Okta.Sdk.IPolicy.Description
  name: Description
  nameWithType: IPolicy.Description
  fullName: Okta.Sdk.IPolicy.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.IPolicy.Id*
  commentId: Overload:Okta.Sdk.IPolicy.Id
  name: Id
  nameWithType: IPolicy.Id
  fullName: Okta.Sdk.IPolicy.Id
- uid: Okta.Sdk.IPolicy.LastUpdated*
  commentId: Overload:Okta.Sdk.IPolicy.LastUpdated
  name: LastUpdated
  nameWithType: IPolicy.LastUpdated
  fullName: Okta.Sdk.IPolicy.LastUpdated
- uid: Okta.Sdk.IPolicy.Name*
  commentId: Overload:Okta.Sdk.IPolicy.Name
  name: Name
  nameWithType: IPolicy.Name
  fullName: Okta.Sdk.IPolicy.Name
- uid: Okta.Sdk.IPolicy.Priority*
  commentId: Overload:Okta.Sdk.IPolicy.Priority
  name: Priority
  nameWithType: IPolicy.Priority
  fullName: Okta.Sdk.IPolicy.Priority
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IPolicy.Status*
  commentId: Overload:Okta.Sdk.IPolicy.Status
  name: Status
  nameWithType: IPolicy.Status
  fullName: Okta.Sdk.IPolicy.Status
- uid: Okta.Sdk.IPolicy.System*
  commentId: Overload:Okta.Sdk.IPolicy.System
  name: System
  nameWithType: IPolicy.System
  fullName: Okta.Sdk.IPolicy.System
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IPolicy.Type*
  commentId: Overload:Okta.Sdk.IPolicy.Type
  name: Type
  nameWithType: IPolicy.Type
  fullName: Okta.Sdk.IPolicy.Type
- uid: Okta.Sdk.PolicyType
  commentId: T:Okta.Sdk.PolicyType
  parent: Okta.Sdk
  name: PolicyType
  nameWithType: PolicyType
  fullName: Okta.Sdk.PolicyType
- uid: Okta.Sdk.IPolicy.ActivateAsync*
  commentId: Overload:Okta.Sdk.IPolicy.ActivateAsync
  name: ActivateAsync
  nameWithType: IPolicy.ActivateAsync
  fullName: Okta.Sdk.IPolicy.ActivateAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.IPolicy.DeactivateAsync*
  commentId: Overload:Okta.Sdk.IPolicy.DeactivateAsync
  name: DeactivateAsync
  nameWithType: IPolicy.DeactivateAsync
  fullName: Okta.Sdk.IPolicy.DeactivateAsync
- uid: Okta.Sdk.IPolicy.ListPolicyRules*
  commentId: Overload:Okta.Sdk.IPolicy.ListPolicyRules
  name: ListPolicyRules
  nameWithType: IPolicy.ListPolicyRules
  fullName: Okta.Sdk.IPolicy.ListPolicyRules
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IPolicyRule}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IPolicyRule}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IPolicyRule>
  nameWithType: ICollectionClient<IPolicyRule>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IPolicyRule>
  nameWithType.vb: ICollectionClient(Of IPolicyRule)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IPolicyRule)
  name.vb: ICollectionClient(Of IPolicyRule)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IPolicyRule
    name: IPolicyRule
    nameWithType: IPolicyRule
    fullName: Okta.Sdk.IPolicyRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IPolicyRule
    name: IPolicyRule
    nameWithType: IPolicyRule
    fullName: Okta.Sdk.IPolicyRule
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IPolicy.CreateRuleAsync*
  commentId: Overload:Okta.Sdk.IPolicy.CreateRuleAsync
  name: CreateRuleAsync
  nameWithType: IPolicy.CreateRuleAsync
  fullName: Okta.Sdk.IPolicy.CreateRuleAsync
- uid: Okta.Sdk.IPolicyRule
  commentId: T:Okta.Sdk.IPolicyRule
  parent: Okta.Sdk
  name: IPolicyRule
  nameWithType: IPolicyRule
  fullName: Okta.Sdk.IPolicyRule
- uid: System.Threading.Tasks.Task{Okta.Sdk.IPolicyRule}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IPolicyRule}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPolicyRule>
  nameWithType: Task<IPolicyRule>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IPolicyRule>
  nameWithType.vb: Task(Of IPolicyRule)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IPolicyRule)
  name.vb: Task(Of IPolicyRule)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IPolicyRule
    name: IPolicyRule
    nameWithType: IPolicyRule
    fullName: Okta.Sdk.IPolicyRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IPolicyRule
    name: IPolicyRule
    nameWithType: IPolicyRule
    fullName: Okta.Sdk.IPolicyRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IPolicy.GetPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.IPolicy.GetPolicyRuleAsync
  name: GetPolicyRuleAsync
  nameWithType: IPolicy.GetPolicyRuleAsync
  fullName: Okta.Sdk.IPolicy.GetPolicyRuleAsync
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.PolicyRule
  commentId: T:Okta.Sdk.PolicyRule
  parent: Okta.Sdk
  name: PolicyRule
  nameWithType: PolicyRule
  fullName: Okta.Sdk.PolicyRule
