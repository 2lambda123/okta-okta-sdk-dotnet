### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.Internal.PolicyRuleResolver
  commentId: T:Okta.Sdk.Internal.PolicyRuleResolver
  id: PolicyRuleResolver
  parent: Okta.Sdk.Internal
  children:
  - Okta.Sdk.Internal.PolicyRuleResolver.GetResolvedTypeInternal(System.Collections.Generic.IDictionary{System.String,System.Object})
  langs:
  - csharp
  - vb
  name: PolicyRuleResolver
  nameWithType: PolicyRuleResolver
  fullName: Okta.Sdk.Internal.PolicyRuleResolver
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/Generated/PolicyRuleResolver.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PolicyRuleResolver
    path: ../src/Okta.Sdk/Generated/PolicyRuleResolver.Generated.cs
    startLine: 14
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nResolves PolicyRule resources based on the Type property.\n"
  example: []
  syntax:
    content: 'public class PolicyRuleResolver : AbstractResourceTypeResolver<PolicyRule>, IResourceTypeResolver'
    content.vb: >-
      Public Class PolicyRuleResolver

          Inherits AbstractResourceTypeResolver(Of PolicyRule)

          Implements IResourceTypeResolver
  inheritance:
  - System.Object
  - Okta.Sdk.Internal.AbstractResourceTypeResolver{Okta.Sdk.PolicyRule}
  implements:
  - Okta.Sdk.Internal.IResourceTypeResolver
  inheritedMembers:
  - Okta.Sdk.Internal.AbstractResourceTypeResolver{Okta.Sdk.PolicyRule}.GetResolvedType(System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Okta.Sdk.Internal.PolicyRuleResolver.GetResolvedTypeInternal(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Okta.Sdk.Internal.PolicyRuleResolver.GetResolvedTypeInternal(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: GetResolvedTypeInternal(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Okta.Sdk.Internal.PolicyRuleResolver
  langs:
  - csharp
  - vb
  name: GetResolvedTypeInternal(IDictionary<String, Object>)
  nameWithType: PolicyRuleResolver.GetResolvedTypeInternal(IDictionary<String, Object>)
  fullName: Okta.Sdk.Internal.PolicyRuleResolver.GetResolvedTypeInternal(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/PolicyRuleResolver.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetResolvedTypeInternal
    path: ../src/Okta.Sdk/Generated/PolicyRuleResolver.Generated.cs
    startLine: 21
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nGets the type of a PolicyRule resource given its <code data-dev-comment-type=\"paramref\" class=\"paramref\">data</code>.\n"
  example: []
  syntax:
    content: protected override Type GetResolvedTypeInternal(IDictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: The resource data.
    return:
      type: System.Type
      description: The resource type.
    content.vb: Protected Overrides Function GetResolvedTypeInternal(data As IDictionary(Of String, Object)) As Type
  overridden: Okta.Sdk.Internal.AbstractResourceTypeResolver{Okta.Sdk.PolicyRule}.GetResolvedTypeInternal(System.Collections.Generic.IDictionary{System.String,System.Object})
  overload: Okta.Sdk.Internal.PolicyRuleResolver.GetResolvedTypeInternal*
  nameWithType.vb: PolicyRuleResolver.GetResolvedTypeInternal(IDictionary(Of String, Object))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Okta.Sdk.Internal.PolicyRuleResolver.GetResolvedTypeInternal(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: GetResolvedTypeInternal(IDictionary(Of String, Object))
references:
- uid: Okta.Sdk.Internal
  commentId: N:Okta.Sdk.Internal
  name: Okta.Sdk.Internal
  nameWithType: Okta.Sdk.Internal
  fullName: Okta.Sdk.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Okta.Sdk.Internal.AbstractResourceTypeResolver{Okta.Sdk.PolicyRule}
  commentId: T:Okta.Sdk.Internal.AbstractResourceTypeResolver{Okta.Sdk.PolicyRule}
  parent: Okta.Sdk.Internal
  definition: Okta.Sdk.Internal.AbstractResourceTypeResolver`1
  name: AbstractResourceTypeResolver<PolicyRule>
  nameWithType: AbstractResourceTypeResolver<PolicyRule>
  fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver<Okta.Sdk.PolicyRule>
  nameWithType.vb: AbstractResourceTypeResolver(Of PolicyRule)
  fullName.vb: Okta.Sdk.Internal.AbstractResourceTypeResolver(Of Okta.Sdk.PolicyRule)
  name.vb: AbstractResourceTypeResolver(Of PolicyRule)
  spec.csharp:
  - uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1
    name: AbstractResourceTypeResolver
    nameWithType: AbstractResourceTypeResolver
    fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.PolicyRule
    name: PolicyRule
    nameWithType: PolicyRule
    fullName: Okta.Sdk.PolicyRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1
    name: AbstractResourceTypeResolver
    nameWithType: AbstractResourceTypeResolver
    fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.PolicyRule
    name: PolicyRule
    nameWithType: PolicyRule
    fullName: Okta.Sdk.PolicyRule
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Internal.IResourceTypeResolver
  commentId: T:Okta.Sdk.Internal.IResourceTypeResolver
  parent: Okta.Sdk.Internal
  name: IResourceTypeResolver
  nameWithType: IResourceTypeResolver
  fullName: Okta.Sdk.Internal.IResourceTypeResolver
- uid: Okta.Sdk.Internal.AbstractResourceTypeResolver{Okta.Sdk.PolicyRule}.GetResolvedType(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Okta.Sdk.Internal.AbstractResourceTypeResolver{Okta.Sdk.PolicyRule}.GetResolvedType(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Okta.Sdk.Internal.AbstractResourceTypeResolver{Okta.Sdk.PolicyRule}
  definition: Okta.Sdk.Internal.AbstractResourceTypeResolver`1.GetResolvedType(System.Collections.Generic.IDictionary{System.String,System.Object})
  name: GetResolvedType(IDictionary<String, Object>)
  nameWithType: AbstractResourceTypeResolver<PolicyRule>.GetResolvedType(IDictionary<String, Object>)
  fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver<Okta.Sdk.PolicyRule>.GetResolvedType(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractResourceTypeResolver(Of PolicyRule).GetResolvedType(IDictionary(Of String, Object))
  fullName.vb: Okta.Sdk.Internal.AbstractResourceTypeResolver(Of Okta.Sdk.PolicyRule).GetResolvedType(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: GetResolvedType(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1.GetResolvedType(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: GetResolvedType
    nameWithType: AbstractResourceTypeResolver<PolicyRule>.GetResolvedType
    fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver<Okta.Sdk.PolicyRule>.GetResolvedType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1.GetResolvedType(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: GetResolvedType
    nameWithType: AbstractResourceTypeResolver(Of PolicyRule).GetResolvedType
    fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver(Of Okta.Sdk.PolicyRule).GetResolvedType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1
  commentId: T:Okta.Sdk.Internal.AbstractResourceTypeResolver`1
  name: AbstractResourceTypeResolver<T>
  nameWithType: AbstractResourceTypeResolver<T>
  fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver<T>
  nameWithType.vb: AbstractResourceTypeResolver(Of T)
  fullName.vb: Okta.Sdk.Internal.AbstractResourceTypeResolver(Of T)
  name.vb: AbstractResourceTypeResolver(Of T)
  spec.csharp:
  - uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1
    name: AbstractResourceTypeResolver
    nameWithType: AbstractResourceTypeResolver
    fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1
    name: AbstractResourceTypeResolver
    nameWithType: AbstractResourceTypeResolver
    fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1.GetResolvedType(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Okta.Sdk.Internal.AbstractResourceTypeResolver`1.GetResolvedType(System.Collections.Generic.IDictionary{System.String,System.Object})
  isExternal: true
  name: GetResolvedType(IDictionary<String, Object>)
  nameWithType: AbstractResourceTypeResolver<T>.GetResolvedType(IDictionary<String, Object>)
  fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver<T>.GetResolvedType(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractResourceTypeResolver(Of T).GetResolvedType(IDictionary(Of String, Object))
  fullName.vb: Okta.Sdk.Internal.AbstractResourceTypeResolver(Of T).GetResolvedType(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: GetResolvedType(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1.GetResolvedType(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: GetResolvedType
    nameWithType: AbstractResourceTypeResolver<T>.GetResolvedType
    fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver<T>.GetResolvedType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1.GetResolvedType(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: GetResolvedType
    nameWithType: AbstractResourceTypeResolver(Of T).GetResolvedType
    fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver(Of T).GetResolvedType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Internal.AbstractResourceTypeResolver{Okta.Sdk.PolicyRule}.GetResolvedTypeInternal(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Okta.Sdk.Internal.AbstractResourceTypeResolver{Okta.Sdk.PolicyRule}.GetResolvedTypeInternal(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Okta.Sdk.Internal.AbstractResourceTypeResolver{Okta.Sdk.PolicyRule}
  definition: Okta.Sdk.Internal.AbstractResourceTypeResolver`1.GetResolvedTypeInternal(System.Collections.Generic.IDictionary{System.String,System.Object})
  name: GetResolvedTypeInternal(IDictionary<String, Object>)
  nameWithType: AbstractResourceTypeResolver<PolicyRule>.GetResolvedTypeInternal(IDictionary<String, Object>)
  fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver<Okta.Sdk.PolicyRule>.GetResolvedTypeInternal(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractResourceTypeResolver(Of PolicyRule).GetResolvedTypeInternal(IDictionary(Of String, Object))
  fullName.vb: Okta.Sdk.Internal.AbstractResourceTypeResolver(Of Okta.Sdk.PolicyRule).GetResolvedTypeInternal(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: GetResolvedTypeInternal(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1.GetResolvedTypeInternal(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: GetResolvedTypeInternal
    nameWithType: AbstractResourceTypeResolver<PolicyRule>.GetResolvedTypeInternal
    fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver<Okta.Sdk.PolicyRule>.GetResolvedTypeInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1.GetResolvedTypeInternal(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: GetResolvedTypeInternal
    nameWithType: AbstractResourceTypeResolver(Of PolicyRule).GetResolvedTypeInternal
    fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver(Of Okta.Sdk.PolicyRule).GetResolvedTypeInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Internal.PolicyRuleResolver.GetResolvedTypeInternal*
  commentId: Overload:Okta.Sdk.Internal.PolicyRuleResolver.GetResolvedTypeInternal
  name: GetResolvedTypeInternal
  nameWithType: PolicyRuleResolver.GetResolvedTypeInternal
  fullName: Okta.Sdk.Internal.PolicyRuleResolver.GetResolvedTypeInternal
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1.GetResolvedTypeInternal(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Okta.Sdk.Internal.AbstractResourceTypeResolver`1.GetResolvedTypeInternal(System.Collections.Generic.IDictionary{System.String,System.Object})
  isExternal: true
  name: GetResolvedTypeInternal(IDictionary<String, Object>)
  nameWithType: AbstractResourceTypeResolver<T>.GetResolvedTypeInternal(IDictionary<String, Object>)
  fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver<T>.GetResolvedTypeInternal(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractResourceTypeResolver(Of T).GetResolvedTypeInternal(IDictionary(Of String, Object))
  fullName.vb: Okta.Sdk.Internal.AbstractResourceTypeResolver(Of T).GetResolvedTypeInternal(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: GetResolvedTypeInternal(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1.GetResolvedTypeInternal(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: GetResolvedTypeInternal
    nameWithType: AbstractResourceTypeResolver<T>.GetResolvedTypeInternal
    fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver<T>.GetResolvedTypeInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Internal.AbstractResourceTypeResolver`1.GetResolvedTypeInternal(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: GetResolvedTypeInternal
    nameWithType: AbstractResourceTypeResolver(Of T).GetResolvedTypeInternal
    fullName: Okta.Sdk.Internal.AbstractResourceTypeResolver(Of T).GetResolvedTypeInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
