### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.CreateOpenIdConnectApplication
  commentId: T:Okta.Sdk.CreateOpenIdConnectApplication
  id: CreateOpenIdConnectApplication
  parent: Okta.Sdk
  children:
  - Okta.Sdk.CreateOpenIdConnectApplication.Activate
  - Okta.Sdk.CreateOpenIdConnectApplication.ApplicationType
  - Okta.Sdk.CreateOpenIdConnectApplication.AutoKeyRotation
  - Okta.Sdk.CreateOpenIdConnectApplication.ClientId
  - Okta.Sdk.CreateOpenIdConnectApplication.ClientUri
  - Okta.Sdk.CreateOpenIdConnectApplication.ConsentMethod
  - Okta.Sdk.CreateOpenIdConnectApplication.GrantTypes
  - Okta.Sdk.CreateOpenIdConnectApplication.InitiateLoginUri
  - Okta.Sdk.CreateOpenIdConnectApplication.IssuerMode
  - Okta.Sdk.CreateOpenIdConnectApplication.Keys
  - Okta.Sdk.CreateOpenIdConnectApplication.Label
  - Okta.Sdk.CreateOpenIdConnectApplication.LogoUri
  - Okta.Sdk.CreateOpenIdConnectApplication.PolicyUri
  - Okta.Sdk.CreateOpenIdConnectApplication.PostLogoutRedirectUris
  - Okta.Sdk.CreateOpenIdConnectApplication.RedirectUris
  - Okta.Sdk.CreateOpenIdConnectApplication.ResponseTypes
  - Okta.Sdk.CreateOpenIdConnectApplication.TermsOfServiceUri
  - Okta.Sdk.CreateOpenIdConnectApplication.TokenEndpointAuthMethod
  langs:
  - csharp
  - vb
  name: CreateOpenIdConnectApplication
  nameWithType: CreateOpenIdConnectApplication
  fullName: Okta.Sdk.CreateOpenIdConnectApplication
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateOpenIdConnectApplication
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 12
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nHelper class for OpenId Connect application settings\n"
  example: []
  syntax:
    content: public sealed class CreateOpenIdConnectApplication
    content.vb: Public NotInheritable Class CreateOpenIdConnectApplication
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Okta.Sdk.CreateOpenIdConnectApplication.Label
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.Label
  id: Label
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: CreateOpenIdConnectApplication.Label
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.Label
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Label
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 17
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets a label\n"
  example: []
  syntax:
    content: public string Label { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Label As String
  overload: Okta.Sdk.CreateOpenIdConnectApplication.Label*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.Activate
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.Activate
  id: Activate
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: Activate
  nameWithType: CreateOpenIdConnectApplication.Activate
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.Activate
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Activate
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 22
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets an activate flag value\n"
  example: []
  syntax:
    content: public bool Activate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Activate As Boolean
  overload: Okta.Sdk.CreateOpenIdConnectApplication.Activate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.ClientId
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.ClientId
  id: ClientId
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: CreateOpenIdConnectApplication.ClientId
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.ClientId
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ClientId
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 27
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets a client id\n"
  example: []
  syntax:
    content: public string ClientId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientId As String
  overload: Okta.Sdk.CreateOpenIdConnectApplication.ClientId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.TokenEndpointAuthMethod
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.TokenEndpointAuthMethod
  id: TokenEndpointAuthMethod
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: TokenEndpointAuthMethod
  nameWithType: CreateOpenIdConnectApplication.TokenEndpointAuthMethod
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.TokenEndpointAuthMethod
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: TokenEndpointAuthMethod
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 32
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets a token endpoint authentication method\n"
  example: []
  syntax:
    content: public OAuthEndpointAuthenticationMethod TokenEndpointAuthMethod { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.OAuthEndpointAuthenticationMethod
    content.vb: Public Property TokenEndpointAuthMethod As OAuthEndpointAuthenticationMethod
  overload: Okta.Sdk.CreateOpenIdConnectApplication.TokenEndpointAuthMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.AutoKeyRotation
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.AutoKeyRotation
  id: AutoKeyRotation
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: AutoKeyRotation
  nameWithType: CreateOpenIdConnectApplication.AutoKeyRotation
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.AutoKeyRotation
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AutoKeyRotation
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 37
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets an auto key rotation flag value\n"
  example: []
  syntax:
    content: public bool AutoKeyRotation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AutoKeyRotation As Boolean
  overload: Okta.Sdk.CreateOpenIdConnectApplication.AutoKeyRotation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.ClientUri
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.ClientUri
  id: ClientUri
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: ClientUri
  nameWithType: CreateOpenIdConnectApplication.ClientUri
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.ClientUri
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ClientUri
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 42
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets a client uri\n"
  example: []
  syntax:
    content: public string ClientUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientUri As String
  overload: Okta.Sdk.CreateOpenIdConnectApplication.ClientUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.LogoUri
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.LogoUri
  id: LogoUri
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: LogoUri
  nameWithType: CreateOpenIdConnectApplication.LogoUri
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.LogoUri
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: LogoUri
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 47
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets a logo uri\n"
  example: []
  syntax:
    content: public string LogoUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LogoUri As String
  overload: Okta.Sdk.CreateOpenIdConnectApplication.LogoUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.ResponseTypes
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.ResponseTypes
  id: ResponseTypes
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: ResponseTypes
  nameWithType: CreateOpenIdConnectApplication.ResponseTypes
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.ResponseTypes
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ResponseTypes
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 52
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets a response type list\n"
  example: []
  syntax:
    content: public IList<OAuthResponseType> ResponseTypes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Okta.Sdk.OAuthResponseType}
    content.vb: Public Property ResponseTypes As IList(Of OAuthResponseType)
  overload: Okta.Sdk.CreateOpenIdConnectApplication.ResponseTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.RedirectUris
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.RedirectUris
  id: RedirectUris
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: RedirectUris
  nameWithType: CreateOpenIdConnectApplication.RedirectUris
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.RedirectUris
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RedirectUris
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 57
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets a redirect uri list\n"
  example: []
  syntax:
    content: public IList<string> RedirectUris { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property RedirectUris As IList(Of String)
  overload: Okta.Sdk.CreateOpenIdConnectApplication.RedirectUris*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.PostLogoutRedirectUris
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.PostLogoutRedirectUris
  id: PostLogoutRedirectUris
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: PostLogoutRedirectUris
  nameWithType: CreateOpenIdConnectApplication.PostLogoutRedirectUris
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.PostLogoutRedirectUris
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PostLogoutRedirectUris
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 62
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets a post-logout redirect uri list\n"
  example: []
  syntax:
    content: public IList<string> PostLogoutRedirectUris { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property PostLogoutRedirectUris As IList(Of String)
  overload: Okta.Sdk.CreateOpenIdConnectApplication.PostLogoutRedirectUris*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.GrantTypes
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.GrantTypes
  id: GrantTypes
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: GrantTypes
  nameWithType: CreateOpenIdConnectApplication.GrantTypes
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.GrantTypes
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GrantTypes
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 67
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets a grant type list\n"
  example: []
  syntax:
    content: public IList<OAuthGrantType> GrantTypes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Okta.Sdk.OAuthGrantType}
    content.vb: Public Property GrantTypes As IList(Of OAuthGrantType)
  overload: Okta.Sdk.CreateOpenIdConnectApplication.GrantTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.ApplicationType
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.ApplicationType
  id: ApplicationType
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: ApplicationType
  nameWithType: CreateOpenIdConnectApplication.ApplicationType
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.ApplicationType
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ApplicationType
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 72
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets an application type\n"
  example: []
  syntax:
    content: public OpenIdConnectApplicationType ApplicationType { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.OpenIdConnectApplicationType
    content.vb: Public Property ApplicationType As OpenIdConnectApplicationType
  overload: Okta.Sdk.CreateOpenIdConnectApplication.ApplicationType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.TermsOfServiceUri
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.TermsOfServiceUri
  id: TermsOfServiceUri
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: TermsOfServiceUri
  nameWithType: CreateOpenIdConnectApplication.TermsOfServiceUri
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.TermsOfServiceUri
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: TermsOfServiceUri
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 77
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets a term of service uri\n"
  example: []
  syntax:
    content: public string TermsOfServiceUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TermsOfServiceUri As String
  overload: Okta.Sdk.CreateOpenIdConnectApplication.TermsOfServiceUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.PolicyUri
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.PolicyUri
  id: PolicyUri
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: PolicyUri
  nameWithType: CreateOpenIdConnectApplication.PolicyUri
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.PolicyUri
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PolicyUri
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 82
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets a policy uri\n"
  example: []
  syntax:
    content: public string PolicyUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PolicyUri As String
  overload: Okta.Sdk.CreateOpenIdConnectApplication.PolicyUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.ConsentMethod
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.ConsentMethod
  id: ConsentMethod
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: ConsentMethod
  nameWithType: CreateOpenIdConnectApplication.ConsentMethod
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.ConsentMethod
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ConsentMethod
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 87
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the consent method\n"
  example: []
  syntax:
    content: public OpenIdConnectApplicationConsentMethod ConsentMethod { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.OpenIdConnectApplicationConsentMethod
    content.vb: Public Property ConsentMethod As OpenIdConnectApplicationConsentMethod
  overload: Okta.Sdk.CreateOpenIdConnectApplication.ConsentMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.IssuerMode
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.IssuerMode
  id: IssuerMode
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: IssuerMode
  nameWithType: CreateOpenIdConnectApplication.IssuerMode
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.IssuerMode
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IssuerMode
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 92
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the issuer mode\n"
  example: []
  syntax:
    content: public OpenIdConnectApplicationIssuerMode IssuerMode { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.OpenIdConnectApplicationIssuerMode
    content.vb: Public Property IssuerMode As OpenIdConnectApplicationIssuerMode
  overload: Okta.Sdk.CreateOpenIdConnectApplication.IssuerMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.InitiateLoginUri
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.InitiateLoginUri
  id: InitiateLoginUri
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: InitiateLoginUri
  nameWithType: CreateOpenIdConnectApplication.InitiateLoginUri
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.InitiateLoginUri
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: InitiateLoginUri
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 97
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the initiate-login URI\n"
  example: []
  syntax:
    content: public string InitiateLoginUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InitiateLoginUri As String
  overload: Okta.Sdk.CreateOpenIdConnectApplication.InitiateLoginUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateOpenIdConnectApplication.Keys
  commentId: P:Okta.Sdk.CreateOpenIdConnectApplication.Keys
  id: Keys
  parent: Okta.Sdk.CreateOpenIdConnectApplication
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: CreateOpenIdConnectApplication.Keys
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.Keys
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateOpenIdConnectApplication.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Keys
    path: ../src/Okta.Sdk/CreateOpenIdConnectApplication.cs
    startLine: 102
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the keys.\n"
  example: []
  syntax:
    content: public IList<IJsonWebKey> Keys { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Okta.Sdk.IJsonWebKey}
    content.vb: Public Property Keys As IList(Of IJsonWebKey)
  overload: Okta.Sdk.CreateOpenIdConnectApplication.Keys*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.CreateOpenIdConnectApplication.Label*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.Label
  name: Label
  nameWithType: CreateOpenIdConnectApplication.Label
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.Label
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.CreateOpenIdConnectApplication.Activate*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.Activate
  name: Activate
  nameWithType: CreateOpenIdConnectApplication.Activate
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.Activate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Okta.Sdk.CreateOpenIdConnectApplication.ClientId*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.ClientId
  name: ClientId
  nameWithType: CreateOpenIdConnectApplication.ClientId
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.ClientId
- uid: Okta.Sdk.CreateOpenIdConnectApplication.TokenEndpointAuthMethod*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.TokenEndpointAuthMethod
  name: TokenEndpointAuthMethod
  nameWithType: CreateOpenIdConnectApplication.TokenEndpointAuthMethod
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.TokenEndpointAuthMethod
- uid: Okta.Sdk.OAuthEndpointAuthenticationMethod
  commentId: T:Okta.Sdk.OAuthEndpointAuthenticationMethod
  parent: Okta.Sdk
  name: OAuthEndpointAuthenticationMethod
  nameWithType: OAuthEndpointAuthenticationMethod
  fullName: Okta.Sdk.OAuthEndpointAuthenticationMethod
- uid: Okta.Sdk.CreateOpenIdConnectApplication.AutoKeyRotation*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.AutoKeyRotation
  name: AutoKeyRotation
  nameWithType: CreateOpenIdConnectApplication.AutoKeyRotation
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.AutoKeyRotation
- uid: Okta.Sdk.CreateOpenIdConnectApplication.ClientUri*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.ClientUri
  name: ClientUri
  nameWithType: CreateOpenIdConnectApplication.ClientUri
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.ClientUri
- uid: Okta.Sdk.CreateOpenIdConnectApplication.LogoUri*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.LogoUri
  name: LogoUri
  nameWithType: CreateOpenIdConnectApplication.LogoUri
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.LogoUri
- uid: Okta.Sdk.CreateOpenIdConnectApplication.ResponseTypes*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.ResponseTypes
  name: ResponseTypes
  nameWithType: CreateOpenIdConnectApplication.ResponseTypes
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.ResponseTypes
- uid: System.Collections.Generic.IList{Okta.Sdk.OAuthResponseType}
  commentId: T:System.Collections.Generic.IList{Okta.Sdk.OAuthResponseType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<OAuthResponseType>
  nameWithType: IList<OAuthResponseType>
  fullName: System.Collections.Generic.IList<Okta.Sdk.OAuthResponseType>
  nameWithType.vb: IList(Of OAuthResponseType)
  fullName.vb: System.Collections.Generic.IList(Of Okta.Sdk.OAuthResponseType)
  name.vb: IList(Of OAuthResponseType)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.OAuthResponseType
    name: OAuthResponseType
    nameWithType: OAuthResponseType
    fullName: Okta.Sdk.OAuthResponseType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.OAuthResponseType
    name: OAuthResponseType
    nameWithType: OAuthResponseType
    fullName: Okta.Sdk.OAuthResponseType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.CreateOpenIdConnectApplication.RedirectUris*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.RedirectUris
  name: RedirectUris
  nameWithType: CreateOpenIdConnectApplication.RedirectUris
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.RedirectUris
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.CreateOpenIdConnectApplication.PostLogoutRedirectUris*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.PostLogoutRedirectUris
  name: PostLogoutRedirectUris
  nameWithType: CreateOpenIdConnectApplication.PostLogoutRedirectUris
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.PostLogoutRedirectUris
- uid: Okta.Sdk.CreateOpenIdConnectApplication.GrantTypes*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.GrantTypes
  name: GrantTypes
  nameWithType: CreateOpenIdConnectApplication.GrantTypes
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.GrantTypes
- uid: System.Collections.Generic.IList{Okta.Sdk.OAuthGrantType}
  commentId: T:System.Collections.Generic.IList{Okta.Sdk.OAuthGrantType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<OAuthGrantType>
  nameWithType: IList<OAuthGrantType>
  fullName: System.Collections.Generic.IList<Okta.Sdk.OAuthGrantType>
  nameWithType.vb: IList(Of OAuthGrantType)
  fullName.vb: System.Collections.Generic.IList(Of Okta.Sdk.OAuthGrantType)
  name.vb: IList(Of OAuthGrantType)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.OAuthGrantType
    name: OAuthGrantType
    nameWithType: OAuthGrantType
    fullName: Okta.Sdk.OAuthGrantType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.OAuthGrantType
    name: OAuthGrantType
    nameWithType: OAuthGrantType
    fullName: Okta.Sdk.OAuthGrantType
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.CreateOpenIdConnectApplication.ApplicationType*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.ApplicationType
  name: ApplicationType
  nameWithType: CreateOpenIdConnectApplication.ApplicationType
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.ApplicationType
- uid: Okta.Sdk.OpenIdConnectApplicationType
  commentId: T:Okta.Sdk.OpenIdConnectApplicationType
  parent: Okta.Sdk
  name: OpenIdConnectApplicationType
  nameWithType: OpenIdConnectApplicationType
  fullName: Okta.Sdk.OpenIdConnectApplicationType
- uid: Okta.Sdk.CreateOpenIdConnectApplication.TermsOfServiceUri*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.TermsOfServiceUri
  name: TermsOfServiceUri
  nameWithType: CreateOpenIdConnectApplication.TermsOfServiceUri
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.TermsOfServiceUri
- uid: Okta.Sdk.CreateOpenIdConnectApplication.PolicyUri*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.PolicyUri
  name: PolicyUri
  nameWithType: CreateOpenIdConnectApplication.PolicyUri
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.PolicyUri
- uid: Okta.Sdk.CreateOpenIdConnectApplication.ConsentMethod*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.ConsentMethod
  name: ConsentMethod
  nameWithType: CreateOpenIdConnectApplication.ConsentMethod
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.ConsentMethod
- uid: Okta.Sdk.OpenIdConnectApplicationConsentMethod
  commentId: T:Okta.Sdk.OpenIdConnectApplicationConsentMethod
  parent: Okta.Sdk
  name: OpenIdConnectApplicationConsentMethod
  nameWithType: OpenIdConnectApplicationConsentMethod
  fullName: Okta.Sdk.OpenIdConnectApplicationConsentMethod
- uid: Okta.Sdk.CreateOpenIdConnectApplication.IssuerMode*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.IssuerMode
  name: IssuerMode
  nameWithType: CreateOpenIdConnectApplication.IssuerMode
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.IssuerMode
- uid: Okta.Sdk.OpenIdConnectApplicationIssuerMode
  commentId: T:Okta.Sdk.OpenIdConnectApplicationIssuerMode
  parent: Okta.Sdk
  name: OpenIdConnectApplicationIssuerMode
  nameWithType: OpenIdConnectApplicationIssuerMode
  fullName: Okta.Sdk.OpenIdConnectApplicationIssuerMode
- uid: Okta.Sdk.CreateOpenIdConnectApplication.InitiateLoginUri*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.InitiateLoginUri
  name: InitiateLoginUri
  nameWithType: CreateOpenIdConnectApplication.InitiateLoginUri
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.InitiateLoginUri
- uid: Okta.Sdk.CreateOpenIdConnectApplication.Keys*
  commentId: Overload:Okta.Sdk.CreateOpenIdConnectApplication.Keys
  name: Keys
  nameWithType: CreateOpenIdConnectApplication.Keys
  fullName: Okta.Sdk.CreateOpenIdConnectApplication.Keys
- uid: System.Collections.Generic.IList{Okta.Sdk.IJsonWebKey}
  commentId: T:System.Collections.Generic.IList{Okta.Sdk.IJsonWebKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IJsonWebKey>
  nameWithType: IList<IJsonWebKey>
  fullName: System.Collections.Generic.IList<Okta.Sdk.IJsonWebKey>
  nameWithType.vb: IList(Of IJsonWebKey)
  fullName.vb: System.Collections.Generic.IList(Of Okta.Sdk.IJsonWebKey)
  name.vb: IList(Of IJsonWebKey)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: )
    nameWithType: )
    fullName: )
