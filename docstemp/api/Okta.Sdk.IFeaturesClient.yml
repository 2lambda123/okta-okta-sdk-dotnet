### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IFeaturesClient
  commentId: T:Okta.Sdk.IFeaturesClient
  id: IFeaturesClient
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IFeaturesClient.GetFeatureAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IFeaturesClient.ListFeatureDependencies(System.String)
  - Okta.Sdk.IFeaturesClient.ListFeatureDependents(System.String)
  - Okta.Sdk.IFeaturesClient.ListFeatures
  - Okta.Sdk.IFeaturesClient.UpdateFeatureLifecycleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IFeaturesClient
  nameWithType: IFeaturesClient
  fullName: Okta.Sdk.IFeaturesClient
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/Generated/IFeaturesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IFeaturesClient
    path: ../src/Okta.Sdk/Generated/IFeaturesClient.Generated.cs
    startLine: 15
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: A client that works with Okta Feature resources.
  example: []
  syntax:
    content: public interface IFeaturesClient
    content.vb: Public Interface IFeaturesClient
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IFeaturesClient.ListFeatures
  commentId: M:Okta.Sdk.IFeaturesClient.ListFeatures
  id: ListFeatures
  parent: Okta.Sdk.IFeaturesClient
  langs:
  - csharp
  - vb
  name: ListFeatures()
  nameWithType: IFeaturesClient.ListFeatures()
  fullName: Okta.Sdk.IFeaturesClient.ListFeatures()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IFeaturesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListFeatures
    path: ../src/Okta.Sdk/Generated/IFeaturesClient.Generated.cs
    startLine: 21
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: ICollectionClient<IFeature> ListFeatures()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IFeature}
      description: A collection of <xref href="Okta.Sdk.IFeature" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListFeatures As ICollectionClient(Of IFeature)
  overload: Okta.Sdk.IFeaturesClient.ListFeatures*
- uid: Okta.Sdk.IFeaturesClient.GetFeatureAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IFeaturesClient.GetFeatureAsync(System.String,System.Threading.CancellationToken)
  id: GetFeatureAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IFeaturesClient
  langs:
  - csharp
  - vb
  name: GetFeatureAsync(String, CancellationToken)
  nameWithType: IFeaturesClient.GetFeatureAsync(String, CancellationToken)
  fullName: Okta.Sdk.IFeaturesClient.GetFeatureAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IFeaturesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetFeatureAsync
    path: ../src/Okta.Sdk/Generated/IFeaturesClient.Generated.cs
    startLine: 29
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IFeature> GetFeatureAsync(string featureId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: featureId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IFeature}
      description: The <xref href="Okta.Sdk.IFeature" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetFeatureAsync(featureId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IFeature)
  overload: Okta.Sdk.IFeaturesClient.GetFeatureAsync*
- uid: Okta.Sdk.IFeaturesClient.ListFeatureDependencies(System.String)
  commentId: M:Okta.Sdk.IFeaturesClient.ListFeatureDependencies(System.String)
  id: ListFeatureDependencies(System.String)
  parent: Okta.Sdk.IFeaturesClient
  langs:
  - csharp
  - vb
  name: ListFeatureDependencies(String)
  nameWithType: IFeaturesClient.ListFeatureDependencies(String)
  fullName: Okta.Sdk.IFeaturesClient.ListFeatureDependencies(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IFeaturesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListFeatureDependencies
    path: ../src/Okta.Sdk/Generated/IFeaturesClient.Generated.cs
    startLine: 36
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: ICollectionClient<IFeature> ListFeatureDependencies(string featureId)
    parameters:
    - id: featureId
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IFeature}
      description: A collection of <xref href="Okta.Sdk.IFeature" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListFeatureDependencies(featureId As String) As ICollectionClient(Of IFeature)
  overload: Okta.Sdk.IFeaturesClient.ListFeatureDependencies*
- uid: Okta.Sdk.IFeaturesClient.ListFeatureDependents(System.String)
  commentId: M:Okta.Sdk.IFeaturesClient.ListFeatureDependents(System.String)
  id: ListFeatureDependents(System.String)
  parent: Okta.Sdk.IFeaturesClient
  langs:
  - csharp
  - vb
  name: ListFeatureDependents(String)
  nameWithType: IFeaturesClient.ListFeatureDependents(String)
  fullName: Okta.Sdk.IFeaturesClient.ListFeatureDependents(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IFeaturesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListFeatureDependents
    path: ../src/Okta.Sdk/Generated/IFeaturesClient.Generated.cs
    startLine: 43
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: ICollectionClient<IFeature> ListFeatureDependents(string featureId)
    parameters:
    - id: featureId
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IFeature}
      description: A collection of <xref href="Okta.Sdk.IFeature" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListFeatureDependents(featureId As String) As ICollectionClient(Of IFeature)
  overload: Okta.Sdk.IFeaturesClient.ListFeatureDependents*
- uid: Okta.Sdk.IFeaturesClient.UpdateFeatureLifecycleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IFeaturesClient.UpdateFeatureLifecycleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: UpdateFeatureLifecycleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IFeaturesClient
  langs:
  - csharp
  - vb
  name: UpdateFeatureLifecycleAsync(String, String, String, CancellationToken)
  nameWithType: IFeaturesClient.UpdateFeatureLifecycleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IFeaturesClient.UpdateFeatureLifecycleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IFeaturesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateFeatureLifecycleAsync
    path: ../src/Okta.Sdk/Generated/IFeaturesClient.Generated.cs
    startLine: 53
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IFeature> UpdateFeatureLifecycleAsync(string featureId, string lifecycle, string mode = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: featureId
      type: System.String
      description: ''
    - id: lifecycle
      type: System.String
      description: ''
    - id: mode
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IFeature}
      description: The <xref href="Okta.Sdk.IFeature" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdateFeatureLifecycleAsync(featureId As String, lifecycle As String, mode As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IFeature)
  overload: Okta.Sdk.IFeaturesClient.UpdateFeatureLifecycleAsync*
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IFeature
  commentId: T:Okta.Sdk.IFeature
  parent: Okta.Sdk
  name: IFeature
  nameWithType: IFeature
  fullName: Okta.Sdk.IFeature
- uid: Okta.Sdk.IFeaturesClient.ListFeatures*
  commentId: Overload:Okta.Sdk.IFeaturesClient.ListFeatures
  name: ListFeatures
  nameWithType: IFeaturesClient.ListFeatures
  fullName: Okta.Sdk.IFeaturesClient.ListFeatures
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IFeature}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IFeature}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IFeature>
  nameWithType: ICollectionClient<IFeature>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IFeature>
  nameWithType.vb: ICollectionClient(Of IFeature)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IFeature)
  name.vb: ICollectionClient(Of IFeature)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IFeature
    name: IFeature
    nameWithType: IFeature
    fullName: Okta.Sdk.IFeature
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IFeature
    name: IFeature
    nameWithType: IFeature
    fullName: Okta.Sdk.IFeature
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IFeaturesClient.GetFeatureAsync*
  commentId: Overload:Okta.Sdk.IFeaturesClient.GetFeatureAsync
  name: GetFeatureAsync
  nameWithType: IFeaturesClient.GetFeatureAsync
  fullName: Okta.Sdk.IFeaturesClient.GetFeatureAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.IFeature}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IFeature}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IFeature>
  nameWithType: Task<IFeature>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IFeature>
  nameWithType.vb: Task(Of IFeature)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IFeature)
  name.vb: Task(Of IFeature)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IFeature
    name: IFeature
    nameWithType: IFeature
    fullName: Okta.Sdk.IFeature
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IFeature
    name: IFeature
    nameWithType: IFeature
    fullName: Okta.Sdk.IFeature
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.IFeaturesClient.ListFeatureDependencies*
  commentId: Overload:Okta.Sdk.IFeaturesClient.ListFeatureDependencies
  name: ListFeatureDependencies
  nameWithType: IFeaturesClient.ListFeatureDependencies
  fullName: Okta.Sdk.IFeaturesClient.ListFeatureDependencies
- uid: Okta.Sdk.IFeaturesClient.ListFeatureDependents*
  commentId: Overload:Okta.Sdk.IFeaturesClient.ListFeatureDependents
  name: ListFeatureDependents
  nameWithType: IFeaturesClient.ListFeatureDependents
  fullName: Okta.Sdk.IFeaturesClient.ListFeatureDependents
- uid: Okta.Sdk.IFeaturesClient.UpdateFeatureLifecycleAsync*
  commentId: Overload:Okta.Sdk.IFeaturesClient.UpdateFeatureLifecycleAsync
  name: UpdateFeatureLifecycleAsync
  nameWithType: IFeaturesClient.UpdateFeatureLifecycleAsync
  fullName: Okta.Sdk.IFeaturesClient.UpdateFeatureLifecycleAsync
