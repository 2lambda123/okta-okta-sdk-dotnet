### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IOrgSetting
  commentId: T:Okta.Sdk.IOrgSetting
  id: IOrgSetting
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IOrgSetting.Address1
  - Okta.Sdk.IOrgSetting.Address2
  - Okta.Sdk.IOrgSetting.City
  - Okta.Sdk.IOrgSetting.CommunicationSettingsAsync(System.Threading.CancellationToken)
  - Okta.Sdk.IOrgSetting.CompanyName
  - Okta.Sdk.IOrgSetting.Country
  - Okta.Sdk.IOrgSetting.Created
  - Okta.Sdk.IOrgSetting.EndUserSupportHelpUrl
  - Okta.Sdk.IOrgSetting.ExpiresAt
  - Okta.Sdk.IOrgSetting.GetContactTypes
  - Okta.Sdk.IOrgSetting.GetOrgContactUserAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IOrgSetting.GetSupportSettingsAsync(System.Threading.CancellationToken)
  - Okta.Sdk.IOrgSetting.HideFooterAsync(System.Threading.CancellationToken)
  - Okta.Sdk.IOrgSetting.Id
  - Okta.Sdk.IOrgSetting.LastUpdated
  - Okta.Sdk.IOrgSetting.OrgPreferencesAsync(System.Threading.CancellationToken)
  - Okta.Sdk.IOrgSetting.PartialUpdateAsync(Okta.Sdk.IOrgSetting,System.Threading.CancellationToken)
  - Okta.Sdk.IOrgSetting.PhoneNumber
  - Okta.Sdk.IOrgSetting.PostalCode
  - Okta.Sdk.IOrgSetting.ShowFooterAsync(System.Threading.CancellationToken)
  - Okta.Sdk.IOrgSetting.State
  - Okta.Sdk.IOrgSetting.Status
  - Okta.Sdk.IOrgSetting.Subdomain
  - Okta.Sdk.IOrgSetting.SupportPhoneNumber
  - Okta.Sdk.IOrgSetting.UpdateOrgLogoAsync(System.IO.FileStream,System.Threading.CancellationToken)
  - Okta.Sdk.IOrgSetting.Website
  langs:
  - csharp
  - vb
  name: IOrgSetting
  nameWithType: IOrgSetting
  fullName: Okta.Sdk.IOrgSetting
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/IOrgSetting.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IOrgSetting
    path: ../src/Okta.Sdk/IOrgSetting.cs
    startLine: 12
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: Represents a OrgSetting resource in the Okta API.
  example: []
  syntax:
    content: 'public interface IOrgSetting : IResource'
    content.vb: >-
      Public Interface IOrgSetting

          Inherits IResource
  inheritedMembers:
  - Okta.Sdk.IResource.Item(System.String)
  - Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  - Okta.Sdk.IResource.GetData
  - Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  - Okta.Sdk.IResource.GetProperty``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IOrgSetting.Address1
  commentId: P:Okta.Sdk.IOrgSetting.Address1
  id: Address1
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: Address1
  nameWithType: IOrgSetting.Address1
  fullName: Okta.Sdk.IOrgSetting.Address1
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Address1
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 17
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Address1 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Address1 As String
  overload: Okta.Sdk.IOrgSetting.Address1*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IOrgSetting.Address2
  commentId: P:Okta.Sdk.IOrgSetting.Address2
  id: Address2
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: Address2
  nameWithType: IOrgSetting.Address2
  fullName: Okta.Sdk.IOrgSetting.Address2
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Address2
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Address2 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Address2 As String
  overload: Okta.Sdk.IOrgSetting.Address2*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IOrgSetting.City
  commentId: P:Okta.Sdk.IOrgSetting.City
  id: City
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: City
  nameWithType: IOrgSetting.City
  fullName: Okta.Sdk.IOrgSetting.City
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: City
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 21
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string City { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property City As String
  overload: Okta.Sdk.IOrgSetting.City*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IOrgSetting.CompanyName
  commentId: P:Okta.Sdk.IOrgSetting.CompanyName
  id: CompanyName
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: CompanyName
  nameWithType: IOrgSetting.CompanyName
  fullName: Okta.Sdk.IOrgSetting.CompanyName
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CompanyName
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 23
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string CompanyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property CompanyName As String
  overload: Okta.Sdk.IOrgSetting.CompanyName*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IOrgSetting.Country
  commentId: P:Okta.Sdk.IOrgSetting.Country
  id: Country
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: IOrgSetting.Country
  fullName: Okta.Sdk.IOrgSetting.Country
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Country
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 25
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Country { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Country As String
  overload: Okta.Sdk.IOrgSetting.Country*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IOrgSetting.Created
  commentId: P:Okta.Sdk.IOrgSetting.Created
  id: Created
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: IOrgSetting.Created
  fullName: Okta.Sdk.IOrgSetting.Created
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Created
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 27
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: DateTimeOffset? Created { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: ReadOnly Property Created As DateTimeOffset?
  overload: Okta.Sdk.IOrgSetting.Created*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IOrgSetting.EndUserSupportHelpUrl
  commentId: P:Okta.Sdk.IOrgSetting.EndUserSupportHelpUrl
  id: EndUserSupportHelpUrl
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: EndUserSupportHelpUrl
  nameWithType: IOrgSetting.EndUserSupportHelpUrl
  fullName: Okta.Sdk.IOrgSetting.EndUserSupportHelpUrl
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: EndUserSupportHelpUrl
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 29
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string EndUserSupportHelpUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property EndUserSupportHelpUrl As String
  overload: Okta.Sdk.IOrgSetting.EndUserSupportHelpUrl*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IOrgSetting.ExpiresAt
  commentId: P:Okta.Sdk.IOrgSetting.ExpiresAt
  id: ExpiresAt
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: ExpiresAt
  nameWithType: IOrgSetting.ExpiresAt
  fullName: Okta.Sdk.IOrgSetting.ExpiresAt
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ExpiresAt
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 31
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: DateTimeOffset? ExpiresAt { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: ReadOnly Property ExpiresAt As DateTimeOffset?
  overload: Okta.Sdk.IOrgSetting.ExpiresAt*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IOrgSetting.Id
  commentId: P:Okta.Sdk.IOrgSetting.Id
  id: Id
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IOrgSetting.Id
  fullName: Okta.Sdk.IOrgSetting.Id
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Id
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 33
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Okta.Sdk.IOrgSetting.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IOrgSetting.LastUpdated
  commentId: P:Okta.Sdk.IOrgSetting.LastUpdated
  id: LastUpdated
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: LastUpdated
  nameWithType: IOrgSetting.LastUpdated
  fullName: Okta.Sdk.IOrgSetting.LastUpdated
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: LastUpdated
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 35
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: DateTimeOffset? LastUpdated { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: ReadOnly Property LastUpdated As DateTimeOffset?
  overload: Okta.Sdk.IOrgSetting.LastUpdated*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IOrgSetting.PhoneNumber
  commentId: P:Okta.Sdk.IOrgSetting.PhoneNumber
  id: PhoneNumber
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: PhoneNumber
  nameWithType: IOrgSetting.PhoneNumber
  fullName: Okta.Sdk.IOrgSetting.PhoneNumber
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PhoneNumber
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 37
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string PhoneNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property PhoneNumber As String
  overload: Okta.Sdk.IOrgSetting.PhoneNumber*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IOrgSetting.PostalCode
  commentId: P:Okta.Sdk.IOrgSetting.PostalCode
  id: PostalCode
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: PostalCode
  nameWithType: IOrgSetting.PostalCode
  fullName: Okta.Sdk.IOrgSetting.PostalCode
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PostalCode
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 39
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string PostalCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property PostalCode As String
  overload: Okta.Sdk.IOrgSetting.PostalCode*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IOrgSetting.State
  commentId: P:Okta.Sdk.IOrgSetting.State
  id: State
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: State
  nameWithType: IOrgSetting.State
  fullName: Okta.Sdk.IOrgSetting.State
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: State
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 41
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string State { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property State As String
  overload: Okta.Sdk.IOrgSetting.State*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IOrgSetting.Status
  commentId: P:Okta.Sdk.IOrgSetting.Status
  id: Status
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: IOrgSetting.Status
  fullName: Okta.Sdk.IOrgSetting.Status
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Status
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 43
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Status { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Status As String
  overload: Okta.Sdk.IOrgSetting.Status*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IOrgSetting.Subdomain
  commentId: P:Okta.Sdk.IOrgSetting.Subdomain
  id: Subdomain
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: Subdomain
  nameWithType: IOrgSetting.Subdomain
  fullName: Okta.Sdk.IOrgSetting.Subdomain
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Subdomain
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 45
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Subdomain { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Subdomain As String
  overload: Okta.Sdk.IOrgSetting.Subdomain*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IOrgSetting.SupportPhoneNumber
  commentId: P:Okta.Sdk.IOrgSetting.SupportPhoneNumber
  id: SupportPhoneNumber
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: SupportPhoneNumber
  nameWithType: IOrgSetting.SupportPhoneNumber
  fullName: Okta.Sdk.IOrgSetting.SupportPhoneNumber
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: SupportPhoneNumber
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 47
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string SupportPhoneNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property SupportPhoneNumber As String
  overload: Okta.Sdk.IOrgSetting.SupportPhoneNumber*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IOrgSetting.Website
  commentId: P:Okta.Sdk.IOrgSetting.Website
  id: Website
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: Website
  nameWithType: IOrgSetting.Website
  fullName: Okta.Sdk.IOrgSetting.Website
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Website
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 49
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Website { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Website As String
  overload: Okta.Sdk.IOrgSetting.Website*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IOrgSetting.PartialUpdateAsync(Okta.Sdk.IOrgSetting,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOrgSetting.PartialUpdateAsync(Okta.Sdk.IOrgSetting,System.Threading.CancellationToken)
  id: PartialUpdateAsync(Okta.Sdk.IOrgSetting,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: PartialUpdateAsync(IOrgSetting, CancellationToken)
  nameWithType: IOrgSetting.PartialUpdateAsync(IOrgSetting, CancellationToken)
  fullName: Okta.Sdk.IOrgSetting.PartialUpdateAsync(Okta.Sdk.IOrgSetting, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PartialUpdateAsync
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 51
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IOrgSetting> PartialUpdateAsync(IOrgSetting orgSetting, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: orgSetting
      type: Okta.Sdk.IOrgSetting
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOrgSetting}
    content.vb: Function PartialUpdateAsync(orgSetting As IOrgSetting, cancellationToken As CancellationToken = Nothing) As Task(Of IOrgSetting)
  overload: Okta.Sdk.IOrgSetting.PartialUpdateAsync*
- uid: Okta.Sdk.IOrgSetting.GetContactTypes
  commentId: M:Okta.Sdk.IOrgSetting.GetContactTypes
  id: GetContactTypes
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: GetContactTypes()
  nameWithType: IOrgSetting.GetContactTypes()
  fullName: Okta.Sdk.IOrgSetting.GetContactTypes()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetContactTypes
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 54
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: ICollectionClient<IOrgContactTypeObj> GetContactTypes()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOrgContactTypeObj}
    content.vb: Function GetContactTypes As ICollectionClient(Of IOrgContactTypeObj)
  overload: Okta.Sdk.IOrgSetting.GetContactTypes*
- uid: Okta.Sdk.IOrgSetting.GetOrgContactUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOrgSetting.GetOrgContactUserAsync(System.String,System.Threading.CancellationToken)
  id: GetOrgContactUserAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: GetOrgContactUserAsync(String, CancellationToken)
  nameWithType: IOrgSetting.GetOrgContactUserAsync(String, CancellationToken)
  fullName: Okta.Sdk.IOrgSetting.GetOrgContactUserAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetOrgContactUserAsync
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 57
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IOrgContactUser> GetOrgContactUserAsync(string contactType, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: contactType
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOrgContactUser}
    content.vb: Function GetOrgContactUserAsync(contactType As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOrgContactUser)
  overload: Okta.Sdk.IOrgSetting.GetOrgContactUserAsync*
- uid: Okta.Sdk.IOrgSetting.GetSupportSettingsAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOrgSetting.GetSupportSettingsAsync(System.Threading.CancellationToken)
  id: GetSupportSettingsAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: GetSupportSettingsAsync(CancellationToken)
  nameWithType: IOrgSetting.GetSupportSettingsAsync(CancellationToken)
  fullName: Okta.Sdk.IOrgSetting.GetSupportSettingsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetSupportSettingsAsync
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 60
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IOrgOktaSupportSettingsObj> GetSupportSettingsAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOrgOktaSupportSettingsObj}
    content.vb: Function GetSupportSettingsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IOrgOktaSupportSettingsObj)
  overload: Okta.Sdk.IOrgSetting.GetSupportSettingsAsync*
- uid: Okta.Sdk.IOrgSetting.CommunicationSettingsAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOrgSetting.CommunicationSettingsAsync(System.Threading.CancellationToken)
  id: CommunicationSettingsAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: CommunicationSettingsAsync(CancellationToken)
  nameWithType: IOrgSetting.CommunicationSettingsAsync(CancellationToken)
  fullName: Okta.Sdk.IOrgSetting.CommunicationSettingsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CommunicationSettingsAsync
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 63
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IOrgOktaCommunicationSetting> CommunicationSettingsAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOrgOktaCommunicationSetting}
    content.vb: Function CommunicationSettingsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IOrgOktaCommunicationSetting)
  overload: Okta.Sdk.IOrgSetting.CommunicationSettingsAsync*
- uid: Okta.Sdk.IOrgSetting.OrgPreferencesAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOrgSetting.OrgPreferencesAsync(System.Threading.CancellationToken)
  id: OrgPreferencesAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: OrgPreferencesAsync(CancellationToken)
  nameWithType: IOrgSetting.OrgPreferencesAsync(CancellationToken)
  fullName: Okta.Sdk.IOrgSetting.OrgPreferencesAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: OrgPreferencesAsync
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 66
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IOrgPreferences> OrgPreferencesAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOrgPreferences}
    content.vb: Function OrgPreferencesAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IOrgPreferences)
  overload: Okta.Sdk.IOrgSetting.OrgPreferencesAsync*
- uid: Okta.Sdk.IOrgSetting.ShowFooterAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOrgSetting.ShowFooterAsync(System.Threading.CancellationToken)
  id: ShowFooterAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: ShowFooterAsync(CancellationToken)
  nameWithType: IOrgSetting.ShowFooterAsync(CancellationToken)
  fullName: Okta.Sdk.IOrgSetting.ShowFooterAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ShowFooterAsync
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 69
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IOrgPreferences> ShowFooterAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOrgPreferences}
    content.vb: Function ShowFooterAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IOrgPreferences)
  overload: Okta.Sdk.IOrgSetting.ShowFooterAsync*
- uid: Okta.Sdk.IOrgSetting.HideFooterAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOrgSetting.HideFooterAsync(System.Threading.CancellationToken)
  id: HideFooterAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: HideFooterAsync(CancellationToken)
  nameWithType: IOrgSetting.HideFooterAsync(CancellationToken)
  fullName: Okta.Sdk.IOrgSetting.HideFooterAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: HideFooterAsync
    path: ../src/Okta.Sdk/Generated/IOrgSetting.Generated.cs
    startLine: 72
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IOrgPreferences> HideFooterAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOrgPreferences}
    content.vb: Function HideFooterAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IOrgPreferences)
  overload: Okta.Sdk.IOrgSetting.HideFooterAsync*
- uid: Okta.Sdk.IOrgSetting.UpdateOrgLogoAsync(System.IO.FileStream,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOrgSetting.UpdateOrgLogoAsync(System.IO.FileStream,System.Threading.CancellationToken)
  id: UpdateOrgLogoAsync(System.IO.FileStream,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOrgSetting
  langs:
  - csharp
  - vb
  name: UpdateOrgLogoAsync(FileStream, CancellationToken)
  nameWithType: IOrgSetting.UpdateOrgLogoAsync(FileStream, CancellationToken)
  fullName: Okta.Sdk.IOrgSetting.UpdateOrgLogoAsync(System.IO.FileStream, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IOrgSetting.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateOrgLogoAsync
    path: ../src/Okta.Sdk/IOrgSetting.cs
    startLine: 20
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nUpdates an org logo.\n"
  example: []
  syntax:
    content: Task UpdateOrgLogoAsync(FileStream file, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: file
      type: System.IO.FileStream
      description: The file
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A task.
    content.vb: Function UpdateOrgLogoAsync(file As FileStream, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IOrgSetting.UpdateOrgLogoAsync*
references:
- uid: Okta.Sdk.IOrgSetting
  commentId: T:Okta.Sdk.IOrgSetting
  parent: Okta.Sdk
  name: IOrgSetting
  nameWithType: IOrgSetting
  fullName: Okta.Sdk.IOrgSetting
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IResource.Item(System.String)
  commentId: P:Okta.Sdk.IResource.Item(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: Item[String]
  nameWithType: IResource.Item[String]
  fullName: Okta.Sdk.IResource.Item[System.String]
  nameWithType.vb: IResource.Item(String)
  fullName.vb: Okta.Sdk.IResource.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetArrayProperty<T>(String)
  nameWithType: IResource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetArrayProperty<T>(System.String)
  nameWithType.vb: IResource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty<T>
    nameWithType: IResource.GetArrayProperty<T>
    fullName: Okta.Sdk.IResource.GetArrayProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty(Of T)
    nameWithType: IResource.GetArrayProperty(Of T)
    fullName: Okta.Sdk.IResource.GetArrayProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetData
  commentId: M:Okta.Sdk.IResource.GetData
  parent: Okta.Sdk.IResource
  name: GetData()
  nameWithType: IResource.GetData()
  fullName: Okta.Sdk.IResource.GetData()
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: IResource.SetProperty(String, Object)
  fullName: Okta.Sdk.IResource.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: IResource.GetProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetProperty<T>(System.String)
  nameWithType.vb: IResource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: IResource.GetProperty<T>
    fullName: Okta.Sdk.IResource.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: IResource.GetProperty(Of T)
    fullName: Okta.Sdk.IResource.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  parent: Okta.Sdk
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
- uid: Okta.Sdk.IOrgSetting.Address1*
  commentId: Overload:Okta.Sdk.IOrgSetting.Address1
  name: Address1
  nameWithType: IOrgSetting.Address1
  fullName: Okta.Sdk.IOrgSetting.Address1
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.IOrgSetting.Address2*
  commentId: Overload:Okta.Sdk.IOrgSetting.Address2
  name: Address2
  nameWithType: IOrgSetting.Address2
  fullName: Okta.Sdk.IOrgSetting.Address2
- uid: Okta.Sdk.IOrgSetting.City*
  commentId: Overload:Okta.Sdk.IOrgSetting.City
  name: City
  nameWithType: IOrgSetting.City
  fullName: Okta.Sdk.IOrgSetting.City
- uid: Okta.Sdk.IOrgSetting.CompanyName*
  commentId: Overload:Okta.Sdk.IOrgSetting.CompanyName
  name: CompanyName
  nameWithType: IOrgSetting.CompanyName
  fullName: Okta.Sdk.IOrgSetting.CompanyName
- uid: Okta.Sdk.IOrgSetting.Country*
  commentId: Overload:Okta.Sdk.IOrgSetting.Country
  name: Country
  nameWithType: IOrgSetting.Country
  fullName: Okta.Sdk.IOrgSetting.Country
- uid: Okta.Sdk.IOrgSetting.Created*
  commentId: Overload:Okta.Sdk.IOrgSetting.Created
  name: Created
  nameWithType: IOrgSetting.Created
  fullName: Okta.Sdk.IOrgSetting.Created
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOrgSetting.EndUserSupportHelpUrl*
  commentId: Overload:Okta.Sdk.IOrgSetting.EndUserSupportHelpUrl
  name: EndUserSupportHelpUrl
  nameWithType: IOrgSetting.EndUserSupportHelpUrl
  fullName: Okta.Sdk.IOrgSetting.EndUserSupportHelpUrl
- uid: Okta.Sdk.IOrgSetting.ExpiresAt*
  commentId: Overload:Okta.Sdk.IOrgSetting.ExpiresAt
  name: ExpiresAt
  nameWithType: IOrgSetting.ExpiresAt
  fullName: Okta.Sdk.IOrgSetting.ExpiresAt
- uid: Okta.Sdk.IOrgSetting.Id*
  commentId: Overload:Okta.Sdk.IOrgSetting.Id
  name: Id
  nameWithType: IOrgSetting.Id
  fullName: Okta.Sdk.IOrgSetting.Id
- uid: Okta.Sdk.IOrgSetting.LastUpdated*
  commentId: Overload:Okta.Sdk.IOrgSetting.LastUpdated
  name: LastUpdated
  nameWithType: IOrgSetting.LastUpdated
  fullName: Okta.Sdk.IOrgSetting.LastUpdated
- uid: Okta.Sdk.IOrgSetting.PhoneNumber*
  commentId: Overload:Okta.Sdk.IOrgSetting.PhoneNumber
  name: PhoneNumber
  nameWithType: IOrgSetting.PhoneNumber
  fullName: Okta.Sdk.IOrgSetting.PhoneNumber
- uid: Okta.Sdk.IOrgSetting.PostalCode*
  commentId: Overload:Okta.Sdk.IOrgSetting.PostalCode
  name: PostalCode
  nameWithType: IOrgSetting.PostalCode
  fullName: Okta.Sdk.IOrgSetting.PostalCode
- uid: Okta.Sdk.IOrgSetting.State*
  commentId: Overload:Okta.Sdk.IOrgSetting.State
  name: State
  nameWithType: IOrgSetting.State
  fullName: Okta.Sdk.IOrgSetting.State
- uid: Okta.Sdk.IOrgSetting.Status*
  commentId: Overload:Okta.Sdk.IOrgSetting.Status
  name: Status
  nameWithType: IOrgSetting.Status
  fullName: Okta.Sdk.IOrgSetting.Status
- uid: Okta.Sdk.IOrgSetting.Subdomain*
  commentId: Overload:Okta.Sdk.IOrgSetting.Subdomain
  name: Subdomain
  nameWithType: IOrgSetting.Subdomain
  fullName: Okta.Sdk.IOrgSetting.Subdomain
- uid: Okta.Sdk.IOrgSetting.SupportPhoneNumber*
  commentId: Overload:Okta.Sdk.IOrgSetting.SupportPhoneNumber
  name: SupportPhoneNumber
  nameWithType: IOrgSetting.SupportPhoneNumber
  fullName: Okta.Sdk.IOrgSetting.SupportPhoneNumber
- uid: Okta.Sdk.IOrgSetting.Website*
  commentId: Overload:Okta.Sdk.IOrgSetting.Website
  name: Website
  nameWithType: IOrgSetting.Website
  fullName: Okta.Sdk.IOrgSetting.Website
- uid: Okta.Sdk.IOrgSetting.PartialUpdateAsync*
  commentId: Overload:Okta.Sdk.IOrgSetting.PartialUpdateAsync
  name: PartialUpdateAsync
  nameWithType: IOrgSetting.PartialUpdateAsync
  fullName: Okta.Sdk.IOrgSetting.PartialUpdateAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOrgSetting}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOrgSetting}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOrgSetting>
  nameWithType: Task<IOrgSetting>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOrgSetting>
  nameWithType.vb: Task(Of IOrgSetting)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOrgSetting)
  name.vb: Task(Of IOrgSetting)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOrgSetting
    name: IOrgSetting
    nameWithType: IOrgSetting
    fullName: Okta.Sdk.IOrgSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOrgSetting
    name: IOrgSetting
    nameWithType: IOrgSetting
    fullName: Okta.Sdk.IOrgSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.IOrgSetting.GetContactTypes*
  commentId: Overload:Okta.Sdk.IOrgSetting.GetContactTypes
  name: GetContactTypes
  nameWithType: IOrgSetting.GetContactTypes
  fullName: Okta.Sdk.IOrgSetting.GetContactTypes
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOrgContactTypeObj}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOrgContactTypeObj}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOrgContactTypeObj>
  nameWithType: ICollectionClient<IOrgContactTypeObj>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOrgContactTypeObj>
  nameWithType.vb: ICollectionClient(Of IOrgContactTypeObj)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOrgContactTypeObj)
  name.vb: ICollectionClient(Of IOrgContactTypeObj)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOrgContactTypeObj
    name: IOrgContactTypeObj
    nameWithType: IOrgContactTypeObj
    fullName: Okta.Sdk.IOrgContactTypeObj
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOrgContactTypeObj
    name: IOrgContactTypeObj
    nameWithType: IOrgContactTypeObj
    fullName: Okta.Sdk.IOrgContactTypeObj
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOrgSetting.GetOrgContactUserAsync*
  commentId: Overload:Okta.Sdk.IOrgSetting.GetOrgContactUserAsync
  name: GetOrgContactUserAsync
  nameWithType: IOrgSetting.GetOrgContactUserAsync
  fullName: Okta.Sdk.IOrgSetting.GetOrgContactUserAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOrgContactUser}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOrgContactUser}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOrgContactUser>
  nameWithType: Task<IOrgContactUser>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOrgContactUser>
  nameWithType.vb: Task(Of IOrgContactUser)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOrgContactUser)
  name.vb: Task(Of IOrgContactUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOrgContactUser
    name: IOrgContactUser
    nameWithType: IOrgContactUser
    fullName: Okta.Sdk.IOrgContactUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOrgContactUser
    name: IOrgContactUser
    nameWithType: IOrgContactUser
    fullName: Okta.Sdk.IOrgContactUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOrgSetting.GetSupportSettingsAsync*
  commentId: Overload:Okta.Sdk.IOrgSetting.GetSupportSettingsAsync
  name: GetSupportSettingsAsync
  nameWithType: IOrgSetting.GetSupportSettingsAsync
  fullName: Okta.Sdk.IOrgSetting.GetSupportSettingsAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOrgOktaSupportSettingsObj}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOrgOktaSupportSettingsObj}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOrgOktaSupportSettingsObj>
  nameWithType: Task<IOrgOktaSupportSettingsObj>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOrgOktaSupportSettingsObj>
  nameWithType.vb: Task(Of IOrgOktaSupportSettingsObj)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOrgOktaSupportSettingsObj)
  name.vb: Task(Of IOrgOktaSupportSettingsObj)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOrgOktaSupportSettingsObj
    name: IOrgOktaSupportSettingsObj
    nameWithType: IOrgOktaSupportSettingsObj
    fullName: Okta.Sdk.IOrgOktaSupportSettingsObj
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOrgOktaSupportSettingsObj
    name: IOrgOktaSupportSettingsObj
    nameWithType: IOrgOktaSupportSettingsObj
    fullName: Okta.Sdk.IOrgOktaSupportSettingsObj
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOrgSetting.CommunicationSettingsAsync*
  commentId: Overload:Okta.Sdk.IOrgSetting.CommunicationSettingsAsync
  name: CommunicationSettingsAsync
  nameWithType: IOrgSetting.CommunicationSettingsAsync
  fullName: Okta.Sdk.IOrgSetting.CommunicationSettingsAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOrgOktaCommunicationSetting}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOrgOktaCommunicationSetting}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOrgOktaCommunicationSetting>
  nameWithType: Task<IOrgOktaCommunicationSetting>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOrgOktaCommunicationSetting>
  nameWithType.vb: Task(Of IOrgOktaCommunicationSetting)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOrgOktaCommunicationSetting)
  name.vb: Task(Of IOrgOktaCommunicationSetting)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOrgOktaCommunicationSetting
    name: IOrgOktaCommunicationSetting
    nameWithType: IOrgOktaCommunicationSetting
    fullName: Okta.Sdk.IOrgOktaCommunicationSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOrgOktaCommunicationSetting
    name: IOrgOktaCommunicationSetting
    nameWithType: IOrgOktaCommunicationSetting
    fullName: Okta.Sdk.IOrgOktaCommunicationSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOrgSetting.OrgPreferencesAsync*
  commentId: Overload:Okta.Sdk.IOrgSetting.OrgPreferencesAsync
  name: OrgPreferencesAsync
  nameWithType: IOrgSetting.OrgPreferencesAsync
  fullName: Okta.Sdk.IOrgSetting.OrgPreferencesAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOrgPreferences}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOrgPreferences}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOrgPreferences>
  nameWithType: Task<IOrgPreferences>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOrgPreferences>
  nameWithType.vb: Task(Of IOrgPreferences)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOrgPreferences)
  name.vb: Task(Of IOrgPreferences)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOrgPreferences
    name: IOrgPreferences
    nameWithType: IOrgPreferences
    fullName: Okta.Sdk.IOrgPreferences
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOrgPreferences
    name: IOrgPreferences
    nameWithType: IOrgPreferences
    fullName: Okta.Sdk.IOrgPreferences
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOrgSetting.ShowFooterAsync*
  commentId: Overload:Okta.Sdk.IOrgSetting.ShowFooterAsync
  name: ShowFooterAsync
  nameWithType: IOrgSetting.ShowFooterAsync
  fullName: Okta.Sdk.IOrgSetting.ShowFooterAsync
- uid: Okta.Sdk.IOrgSetting.HideFooterAsync*
  commentId: Overload:Okta.Sdk.IOrgSetting.HideFooterAsync
  name: HideFooterAsync
  nameWithType: IOrgSetting.HideFooterAsync
  fullName: Okta.Sdk.IOrgSetting.HideFooterAsync
- uid: Okta.Sdk.IOrgSetting.UpdateOrgLogoAsync*
  commentId: Overload:Okta.Sdk.IOrgSetting.UpdateOrgLogoAsync
  name: UpdateOrgLogoAsync
  nameWithType: IOrgSetting.UpdateOrgLogoAsync
  fullName: Okta.Sdk.IOrgSetting.UpdateOrgLogoAsync
- uid: System.IO.FileStream
  commentId: T:System.IO.FileStream
  parent: System.IO
  isExternal: true
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
