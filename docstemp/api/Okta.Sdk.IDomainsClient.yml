### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IDomainsClient
  commentId: T:Okta.Sdk.IDomainsClient
  id: IDomainsClient
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IDomainsClient.CreateCertificateAsync(Okta.Sdk.IDomainCertificate,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IDomainsClient.CreateDomainAsync(Okta.Sdk.IDomain,System.Threading.CancellationToken)
  - Okta.Sdk.IDomainsClient.DeleteDomainAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IDomainsClient.GetDomainAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IDomainsClient.ListDomainsAsync(System.Threading.CancellationToken)
  - Okta.Sdk.IDomainsClient.VerifyDomainAsync(System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IDomainsClient
  nameWithType: IDomainsClient
  fullName: Okta.Sdk.IDomainsClient
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomainsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IDomainsClient
    path: ../src/Okta.Sdk/Generated/IDomainsClient.Generated.cs
    startLine: 15
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: A client that works with Okta Domain resources.
  example: []
  syntax:
    content: public interface IDomainsClient
    content.vb: Public Interface IDomainsClient
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IDomainsClient.ListDomainsAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IDomainsClient.ListDomainsAsync(System.Threading.CancellationToken)
  id: ListDomainsAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IDomainsClient
  langs:
  - csharp
  - vb
  name: ListDomainsAsync(CancellationToken)
  nameWithType: IDomainsClient.ListDomainsAsync(CancellationToken)
  fullName: Okta.Sdk.IDomainsClient.ListDomainsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomainsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListDomainsAsync
    path: ../src/Okta.Sdk/Generated/IDomainsClient.Generated.cs
    startLine: 22
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nList all verified custom Domains for the org.\n"
  example: []
  syntax:
    content: Task<IDomainListResponse> ListDomainsAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IDomainListResponse}
      description: The <xref href="Okta.Sdk.IDomainListResponse" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function ListDomainsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IDomainListResponse)
  overload: Okta.Sdk.IDomainsClient.ListDomainsAsync*
- uid: Okta.Sdk.IDomainsClient.CreateDomainAsync(Okta.Sdk.IDomain,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IDomainsClient.CreateDomainAsync(Okta.Sdk.IDomain,System.Threading.CancellationToken)
  id: CreateDomainAsync(Okta.Sdk.IDomain,System.Threading.CancellationToken)
  parent: Okta.Sdk.IDomainsClient
  langs:
  - csharp
  - vb
  name: CreateDomainAsync(IDomain, CancellationToken)
  nameWithType: IDomainsClient.CreateDomainAsync(IDomain, CancellationToken)
  fullName: Okta.Sdk.IDomainsClient.CreateDomainAsync(Okta.Sdk.IDomain, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomainsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateDomainAsync
    path: ../src/Okta.Sdk/Generated/IDomainsClient.Generated.cs
    startLine: 30
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nCreates your domain.\n"
  example: []
  syntax:
    content: Task<IDomain> CreateDomainAsync(IDomain domain, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: domain
      type: Okta.Sdk.IDomain
      description: The <xref href="Okta.Sdk.IDomain" data-throw-if-not-resolved="false"></xref> resource.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IDomain}
      description: The <xref href="Okta.Sdk.IDomain" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateDomainAsync(domain As IDomain, cancellationToken As CancellationToken = Nothing) As Task(Of IDomain)
  overload: Okta.Sdk.IDomainsClient.CreateDomainAsync*
- uid: Okta.Sdk.IDomainsClient.DeleteDomainAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IDomainsClient.DeleteDomainAsync(System.String,System.Threading.CancellationToken)
  id: DeleteDomainAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IDomainsClient
  langs:
  - csharp
  - vb
  name: DeleteDomainAsync(String, CancellationToken)
  nameWithType: IDomainsClient.DeleteDomainAsync(String, CancellationToken)
  fullName: Okta.Sdk.IDomainsClient.DeleteDomainAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomainsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteDomainAsync
    path: ../src/Okta.Sdk/Generated/IDomainsClient.Generated.cs
    startLine: 38
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nDeletes a Domain by `id`.\n"
  example: []
  syntax:
    content: Task DeleteDomainAsync(string domainId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: domainId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeleteDomainAsync(domainId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IDomainsClient.DeleteDomainAsync*
- uid: Okta.Sdk.IDomainsClient.GetDomainAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IDomainsClient.GetDomainAsync(System.String,System.Threading.CancellationToken)
  id: GetDomainAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IDomainsClient
  langs:
  - csharp
  - vb
  name: GetDomainAsync(String, CancellationToken)
  nameWithType: IDomainsClient.GetDomainAsync(String, CancellationToken)
  fullName: Okta.Sdk.IDomainsClient.GetDomainAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomainsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetDomainAsync
    path: ../src/Okta.Sdk/Generated/IDomainsClient.Generated.cs
    startLine: 46
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nFetches a Domain by `id`.\n"
  example: []
  syntax:
    content: Task<IDomain> GetDomainAsync(string domainId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: domainId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IDomain}
      description: The <xref href="Okta.Sdk.IDomain" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetDomainAsync(domainId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IDomain)
  overload: Okta.Sdk.IDomainsClient.GetDomainAsync*
- uid: Okta.Sdk.IDomainsClient.CreateCertificateAsync(Okta.Sdk.IDomainCertificate,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IDomainsClient.CreateCertificateAsync(Okta.Sdk.IDomainCertificate,System.String,System.Threading.CancellationToken)
  id: CreateCertificateAsync(Okta.Sdk.IDomainCertificate,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IDomainsClient
  langs:
  - csharp
  - vb
  name: CreateCertificateAsync(IDomainCertificate, String, CancellationToken)
  nameWithType: IDomainsClient.CreateCertificateAsync(IDomainCertificate, String, CancellationToken)
  fullName: Okta.Sdk.IDomainsClient.CreateCertificateAsync(Okta.Sdk.IDomainCertificate, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomainsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateCertificateAsync
    path: ../src/Okta.Sdk/Generated/IDomainsClient.Generated.cs
    startLine: 55
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nCreates the Certificate for the Domain.\n"
  example: []
  syntax:
    content: Task CreateCertificateAsync(IDomainCertificate certificate, string domainId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: certificate
      type: Okta.Sdk.IDomainCertificate
      description: The <xref href="Okta.Sdk.IDomainCertificate" data-throw-if-not-resolved="false"></xref> resource.
    - id: domainId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function CreateCertificateAsync(certificate As IDomainCertificate, domainId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IDomainsClient.CreateCertificateAsync*
- uid: Okta.Sdk.IDomainsClient.VerifyDomainAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IDomainsClient.VerifyDomainAsync(System.String,System.Threading.CancellationToken)
  id: VerifyDomainAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IDomainsClient
  langs:
  - csharp
  - vb
  name: VerifyDomainAsync(String, CancellationToken)
  nameWithType: IDomainsClient.VerifyDomainAsync(String, CancellationToken)
  fullName: Okta.Sdk.IDomainsClient.VerifyDomainAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomainsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: VerifyDomainAsync
    path: ../src/Okta.Sdk/Generated/IDomainsClient.Generated.cs
    startLine: 63
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nVerifies the Domain by `id`.\n"
  example: []
  syntax:
    content: Task<IDomain> VerifyDomainAsync(string domainId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: domainId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IDomain}
      description: The <xref href="Okta.Sdk.IDomain" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function VerifyDomainAsync(domainId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IDomain)
  overload: Okta.Sdk.IDomainsClient.VerifyDomainAsync*
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IDomainListResponse
  commentId: T:Okta.Sdk.IDomainListResponse
  parent: Okta.Sdk
  name: IDomainListResponse
  nameWithType: IDomainListResponse
  fullName: Okta.Sdk.IDomainListResponse
- uid: Okta.Sdk.IDomainsClient.ListDomainsAsync*
  commentId: Overload:Okta.Sdk.IDomainsClient.ListDomainsAsync
  name: ListDomainsAsync
  nameWithType: IDomainsClient.ListDomainsAsync
  fullName: Okta.Sdk.IDomainsClient.ListDomainsAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.IDomainListResponse}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IDomainListResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IDomainListResponse>
  nameWithType: Task<IDomainListResponse>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IDomainListResponse>
  nameWithType.vb: Task(Of IDomainListResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IDomainListResponse)
  name.vb: Task(Of IDomainListResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IDomainListResponse
    name: IDomainListResponse
    nameWithType: IDomainListResponse
    fullName: Okta.Sdk.IDomainListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IDomainListResponse
    name: IDomainListResponse
    nameWithType: IDomainListResponse
    fullName: Okta.Sdk.IDomainListResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.IDomain
  commentId: T:Okta.Sdk.IDomain
  parent: Okta.Sdk
  name: IDomain
  nameWithType: IDomain
  fullName: Okta.Sdk.IDomain
- uid: Okta.Sdk.IDomainsClient.CreateDomainAsync*
  commentId: Overload:Okta.Sdk.IDomainsClient.CreateDomainAsync
  name: CreateDomainAsync
  nameWithType: IDomainsClient.CreateDomainAsync
  fullName: Okta.Sdk.IDomainsClient.CreateDomainAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IDomain}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IDomain}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IDomain>
  nameWithType: Task<IDomain>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IDomain>
  nameWithType.vb: Task(Of IDomain)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IDomain)
  name.vb: Task(Of IDomain)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IDomain
    name: IDomain
    nameWithType: IDomain
    fullName: Okta.Sdk.IDomain
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IDomain
    name: IDomain
    nameWithType: IDomain
    fullName: Okta.Sdk.IDomain
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IDomainsClient.DeleteDomainAsync*
  commentId: Overload:Okta.Sdk.IDomainsClient.DeleteDomainAsync
  name: DeleteDomainAsync
  nameWithType: IDomainsClient.DeleteDomainAsync
  fullName: Okta.Sdk.IDomainsClient.DeleteDomainAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.IDomainsClient.GetDomainAsync*
  commentId: Overload:Okta.Sdk.IDomainsClient.GetDomainAsync
  name: GetDomainAsync
  nameWithType: IDomainsClient.GetDomainAsync
  fullName: Okta.Sdk.IDomainsClient.GetDomainAsync
- uid: Okta.Sdk.IDomainCertificate
  commentId: T:Okta.Sdk.IDomainCertificate
  parent: Okta.Sdk
  name: IDomainCertificate
  nameWithType: IDomainCertificate
  fullName: Okta.Sdk.IDomainCertificate
- uid: Okta.Sdk.IDomainsClient.CreateCertificateAsync*
  commentId: Overload:Okta.Sdk.IDomainsClient.CreateCertificateAsync
  name: CreateCertificateAsync
  nameWithType: IDomainsClient.CreateCertificateAsync
  fullName: Okta.Sdk.IDomainsClient.CreateCertificateAsync
- uid: Okta.Sdk.IDomainsClient.VerifyDomainAsync*
  commentId: Overload:Okta.Sdk.IDomainsClient.VerifyDomainAsync
  name: VerifyDomainAsync
  nameWithType: IDomainsClient.VerifyDomainAsync
  fullName: Okta.Sdk.IDomainsClient.VerifyDomainAsync
