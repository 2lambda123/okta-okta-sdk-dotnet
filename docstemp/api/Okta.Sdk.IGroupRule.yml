### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IGroupRule
  commentId: T:Okta.Sdk.IGroupRule
  id: IGroupRule
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IGroupRule.Actions
  - Okta.Sdk.IGroupRule.ActivateAsync(System.Threading.CancellationToken)
  - Okta.Sdk.IGroupRule.Conditions
  - Okta.Sdk.IGroupRule.Created
  - Okta.Sdk.IGroupRule.DeactivateAsync(System.Threading.CancellationToken)
  - Okta.Sdk.IGroupRule.Id
  - Okta.Sdk.IGroupRule.LastUpdated
  - Okta.Sdk.IGroupRule.Name
  - Okta.Sdk.IGroupRule.Status
  - Okta.Sdk.IGroupRule.Type
  langs:
  - csharp
  - vb
  name: IGroupRule
  nameWithType: IGroupRule
  fullName: Okta.Sdk.IGroupRule
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/Generated/IGroupRule.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IGroupRule
    path: ../src/Okta.Sdk/Generated/IGroupRule.Generated.cs
    startLine: 15
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: Represents a GroupRule resource in the Okta API.
  example: []
  syntax:
    content: 'public interface IGroupRule : IResource'
    content.vb: >-
      Public Interface IGroupRule

          Inherits IResource
  inheritedMembers:
  - Okta.Sdk.IResource.Item(System.String)
  - Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  - Okta.Sdk.IResource.GetData
  - Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  - Okta.Sdk.IResource.GetProperty``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IGroupRule.Actions
  commentId: P:Okta.Sdk.IGroupRule.Actions
  id: Actions
  parent: Okta.Sdk.IGroupRule
  langs:
  - csharp
  - vb
  name: Actions
  nameWithType: IGroupRule.Actions
  fullName: Okta.Sdk.IGroupRule.Actions
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IGroupRule.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Actions
    path: ../src/Okta.Sdk/Generated/IGroupRule.Generated.cs
    startLine: 17
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IGroupRuleAction Actions { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IGroupRuleAction
    content.vb: Property Actions As IGroupRuleAction
  overload: Okta.Sdk.IGroupRule.Actions*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IGroupRule.Conditions
  commentId: P:Okta.Sdk.IGroupRule.Conditions
  id: Conditions
  parent: Okta.Sdk.IGroupRule
  langs:
  - csharp
  - vb
  name: Conditions
  nameWithType: IGroupRule.Conditions
  fullName: Okta.Sdk.IGroupRule.Conditions
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IGroupRule.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Conditions
    path: ../src/Okta.Sdk/Generated/IGroupRule.Generated.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IGroupRuleConditions Conditions { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IGroupRuleConditions
    content.vb: Property Conditions As IGroupRuleConditions
  overload: Okta.Sdk.IGroupRule.Conditions*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IGroupRule.Created
  commentId: P:Okta.Sdk.IGroupRule.Created
  id: Created
  parent: Okta.Sdk.IGroupRule
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: IGroupRule.Created
  fullName: Okta.Sdk.IGroupRule.Created
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IGroupRule.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Created
    path: ../src/Okta.Sdk/Generated/IGroupRule.Generated.cs
    startLine: 21
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: DateTimeOffset? Created { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: ReadOnly Property Created As DateTimeOffset?
  overload: Okta.Sdk.IGroupRule.Created*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IGroupRule.Id
  commentId: P:Okta.Sdk.IGroupRule.Id
  id: Id
  parent: Okta.Sdk.IGroupRule
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IGroupRule.Id
  fullName: Okta.Sdk.IGroupRule.Id
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IGroupRule.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Id
    path: ../src/Okta.Sdk/Generated/IGroupRule.Generated.cs
    startLine: 23
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Okta.Sdk.IGroupRule.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IGroupRule.LastUpdated
  commentId: P:Okta.Sdk.IGroupRule.LastUpdated
  id: LastUpdated
  parent: Okta.Sdk.IGroupRule
  langs:
  - csharp
  - vb
  name: LastUpdated
  nameWithType: IGroupRule.LastUpdated
  fullName: Okta.Sdk.IGroupRule.LastUpdated
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IGroupRule.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: LastUpdated
    path: ../src/Okta.Sdk/Generated/IGroupRule.Generated.cs
    startLine: 25
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: DateTimeOffset? LastUpdated { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: ReadOnly Property LastUpdated As DateTimeOffset?
  overload: Okta.Sdk.IGroupRule.LastUpdated*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IGroupRule.Name
  commentId: P:Okta.Sdk.IGroupRule.Name
  id: Name
  parent: Okta.Sdk.IGroupRule
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IGroupRule.Name
  fullName: Okta.Sdk.IGroupRule.Name
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IGroupRule.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Name
    path: ../src/Okta.Sdk/Generated/IGroupRule.Generated.cs
    startLine: 27
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Name As String
  overload: Okta.Sdk.IGroupRule.Name*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IGroupRule.Status
  commentId: P:Okta.Sdk.IGroupRule.Status
  id: Status
  parent: Okta.Sdk.IGroupRule
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: IGroupRule.Status
  fullName: Okta.Sdk.IGroupRule.Status
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IGroupRule.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Status
    path: ../src/Okta.Sdk/Generated/IGroupRule.Generated.cs
    startLine: 29
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: GroupRuleStatus Status { get; }
    parameters: []
    return:
      type: Okta.Sdk.GroupRuleStatus
    content.vb: ReadOnly Property Status As GroupRuleStatus
  overload: Okta.Sdk.IGroupRule.Status*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IGroupRule.Type
  commentId: P:Okta.Sdk.IGroupRule.Type
  id: Type
  parent: Okta.Sdk.IGroupRule
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IGroupRule.Type
  fullName: Okta.Sdk.IGroupRule.Type
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IGroupRule.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Type
    path: ../src/Okta.Sdk/Generated/IGroupRule.Generated.cs
    startLine: 31
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Type As String
  overload: Okta.Sdk.IGroupRule.Type*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IGroupRule.ActivateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupRule.ActivateAsync(System.Threading.CancellationToken)
  id: ActivateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupRule
  langs:
  - csharp
  - vb
  name: ActivateAsync(CancellationToken)
  nameWithType: IGroupRule.ActivateAsync(CancellationToken)
  fullName: Okta.Sdk.IGroupRule.ActivateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IGroupRule.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateAsync
    path: ../src/Okta.Sdk/Generated/IGroupRule.Generated.cs
    startLine: 33
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task ActivateAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ActivateAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IGroupRule.ActivateAsync*
- uid: Okta.Sdk.IGroupRule.DeactivateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupRule.DeactivateAsync(System.Threading.CancellationToken)
  id: DeactivateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupRule
  langs:
  - csharp
  - vb
  name: DeactivateAsync(CancellationToken)
  nameWithType: IGroupRule.DeactivateAsync(CancellationToken)
  fullName: Okta.Sdk.IGroupRule.DeactivateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IGroupRule.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateAsync
    path: ../src/Okta.Sdk/Generated/IGroupRule.Generated.cs
    startLine: 36
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task DeactivateAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeactivateAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IGroupRule.DeactivateAsync*
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IResource.Item(System.String)
  commentId: P:Okta.Sdk.IResource.Item(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: Item[String]
  nameWithType: IResource.Item[String]
  fullName: Okta.Sdk.IResource.Item[System.String]
  nameWithType.vb: IResource.Item(String)
  fullName.vb: Okta.Sdk.IResource.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetArrayProperty<T>(String)
  nameWithType: IResource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetArrayProperty<T>(System.String)
  nameWithType.vb: IResource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty<T>
    nameWithType: IResource.GetArrayProperty<T>
    fullName: Okta.Sdk.IResource.GetArrayProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty(Of T)
    nameWithType: IResource.GetArrayProperty(Of T)
    fullName: Okta.Sdk.IResource.GetArrayProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetData
  commentId: M:Okta.Sdk.IResource.GetData
  parent: Okta.Sdk.IResource
  name: GetData()
  nameWithType: IResource.GetData()
  fullName: Okta.Sdk.IResource.GetData()
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: IResource.SetProperty(String, Object)
  fullName: Okta.Sdk.IResource.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: IResource.GetProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetProperty<T>(System.String)
  nameWithType.vb: IResource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: IResource.GetProperty<T>
    fullName: Okta.Sdk.IResource.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: IResource.GetProperty(Of T)
    fullName: Okta.Sdk.IResource.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  parent: Okta.Sdk
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
- uid: Okta.Sdk.IGroupRule.Actions*
  commentId: Overload:Okta.Sdk.IGroupRule.Actions
  name: Actions
  nameWithType: IGroupRule.Actions
  fullName: Okta.Sdk.IGroupRule.Actions
- uid: Okta.Sdk.IGroupRuleAction
  commentId: T:Okta.Sdk.IGroupRuleAction
  parent: Okta.Sdk
  name: IGroupRuleAction
  nameWithType: IGroupRuleAction
  fullName: Okta.Sdk.IGroupRuleAction
- uid: Okta.Sdk.IGroupRule.Conditions*
  commentId: Overload:Okta.Sdk.IGroupRule.Conditions
  name: Conditions
  nameWithType: IGroupRule.Conditions
  fullName: Okta.Sdk.IGroupRule.Conditions
- uid: Okta.Sdk.IGroupRuleConditions
  commentId: T:Okta.Sdk.IGroupRuleConditions
  parent: Okta.Sdk
  name: IGroupRuleConditions
  nameWithType: IGroupRuleConditions
  fullName: Okta.Sdk.IGroupRuleConditions
- uid: Okta.Sdk.IGroupRule.Created*
  commentId: Overload:Okta.Sdk.IGroupRule.Created
  name: Created
  nameWithType: IGroupRule.Created
  fullName: Okta.Sdk.IGroupRule.Created
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.IGroupRule.Id*
  commentId: Overload:Okta.Sdk.IGroupRule.Id
  name: Id
  nameWithType: IGroupRule.Id
  fullName: Okta.Sdk.IGroupRule.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.IGroupRule.LastUpdated*
  commentId: Overload:Okta.Sdk.IGroupRule.LastUpdated
  name: LastUpdated
  nameWithType: IGroupRule.LastUpdated
  fullName: Okta.Sdk.IGroupRule.LastUpdated
- uid: Okta.Sdk.IGroupRule.Name*
  commentId: Overload:Okta.Sdk.IGroupRule.Name
  name: Name
  nameWithType: IGroupRule.Name
  fullName: Okta.Sdk.IGroupRule.Name
- uid: Okta.Sdk.IGroupRule.Status*
  commentId: Overload:Okta.Sdk.IGroupRule.Status
  name: Status
  nameWithType: IGroupRule.Status
  fullName: Okta.Sdk.IGroupRule.Status
- uid: Okta.Sdk.GroupRuleStatus
  commentId: T:Okta.Sdk.GroupRuleStatus
  parent: Okta.Sdk
  name: GroupRuleStatus
  nameWithType: GroupRuleStatus
  fullName: Okta.Sdk.GroupRuleStatus
- uid: Okta.Sdk.IGroupRule.Type*
  commentId: Overload:Okta.Sdk.IGroupRule.Type
  name: Type
  nameWithType: IGroupRule.Type
  fullName: Okta.Sdk.IGroupRule.Type
- uid: Okta.Sdk.IGroupRule.ActivateAsync*
  commentId: Overload:Okta.Sdk.IGroupRule.ActivateAsync
  name: ActivateAsync
  nameWithType: IGroupRule.ActivateAsync
  fullName: Okta.Sdk.IGroupRule.ActivateAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.IGroupRule.DeactivateAsync*
  commentId: Overload:Okta.Sdk.IGroupRule.DeactivateAsync
  name: DeactivateAsync
  nameWithType: IGroupRule.DeactivateAsync
  fullName: Okta.Sdk.IGroupRule.DeactivateAsync
