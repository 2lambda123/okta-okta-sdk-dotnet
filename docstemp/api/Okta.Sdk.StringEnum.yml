### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.StringEnum
  commentId: T:Okta.Sdk.StringEnum
  id: StringEnum
  parent: Okta.Sdk
  children:
  - Okta.Sdk.StringEnum.#ctor(System.String)
  - Okta.Sdk.StringEnum.CompareTo(System.Object)
  - Okta.Sdk.StringEnum.Create``1(System.String)
  - Okta.Sdk.StringEnum.Equals(System.Object)
  - Okta.Sdk.StringEnum.GetHashCode
  - Okta.Sdk.StringEnum.op_Equality(Okta.Sdk.StringEnum,Okta.Sdk.StringEnum)
  - Okta.Sdk.StringEnum.op_Implicit(Okta.Sdk.StringEnum)~System.String
  - Okta.Sdk.StringEnum.op_Inequality(Okta.Sdk.StringEnum,Okta.Sdk.StringEnum)
  - Okta.Sdk.StringEnum.ToString
  - Okta.Sdk.StringEnum.Value
  langs:
  - csharp
  - vb
  name: StringEnum
  nameWithType: StringEnum
  fullName: Okta.Sdk.StringEnum
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/StringEnum.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: StringEnum
    path: ../src/Okta.Sdk/StringEnum.cs
    startLine: 13
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRepresents an enumeration where the members are strings.\n"
  example: []
  syntax:
    content: 'public abstract class StringEnum : IComparable'
    content.vb: >-
      Public MustInherit Class StringEnum

          Implements IComparable
  inheritance:
  - System.Object
  derivedClasses:
  - Okta.Sdk.AllowedForEnum
  - Okta.Sdk.ApplicationCredentialsScheme
  - Okta.Sdk.ApplicationCredentialsSigningUse
  - Okta.Sdk.ApplicationSignOnMode
  - Okta.Sdk.AuthenticationProviderType
  - Okta.Sdk.AuthenticatorStatus
  - Okta.Sdk.AuthenticatorType
  - Okta.Sdk.AuthorizationServerCredentialsRotationMode
  - Okta.Sdk.AuthorizationServerCredentialsUse
  - Okta.Sdk.CatalogApplicationStatus
  - Okta.Sdk.ChangeEnum
  - Okta.Sdk.DnsRecordType
  - Okta.Sdk.DomainCertificateSourceType
  - Okta.Sdk.DomainCertificateType
  - Okta.Sdk.DomainValidationStatus
  - Okta.Sdk.EmailTemplateTouchPointVariant
  - Okta.Sdk.EnabledStatus
  - Okta.Sdk.EndUserDashboardTouchPointVariant
  - Okta.Sdk.ErrorPageTouchPointVariant
  - Okta.Sdk.EventHookChannelConfigAuthSchemeType
  - Okta.Sdk.FactorProvider
  - Okta.Sdk.FactorResultType
  - Okta.Sdk.FactorStatus
  - Okta.Sdk.FactorType
  - Okta.Sdk.FeatureStageState
  - Okta.Sdk.FeatureStageValue
  - Okta.Sdk.FeatureType
  - Okta.Sdk.FipsEnum
  - Okta.Sdk.GroupRuleStatus
  - Okta.Sdk.GroupType
  - Okta.Sdk.IframeEmbedScopeAllowedApps
  - Okta.Sdk.InlineHookStatus
  - Okta.Sdk.InlineHookType
  - Okta.Sdk.LinkedObjectDetailsType
  - Okta.Sdk.LogAuthenticationProvider
  - Okta.Sdk.LogCredentialProvider
  - Okta.Sdk.LogCredentialType
  - Okta.Sdk.LogSeverity
  - Okta.Sdk.NetworkZoneAddressType
  - Okta.Sdk.NetworkZoneStatus
  - Okta.Sdk.NetworkZoneType
  - Okta.Sdk.NetworkZoneUsage
  - Okta.Sdk.NotificationType
  - Okta.Sdk.OAuth2ScopeConsentGrantSource
  - Okta.Sdk.OAuth2ScopeConsentGrantStatus
  - Okta.Sdk.OAuthEndpointAuthenticationMethod
  - Okta.Sdk.OAuthGrantType
  - Okta.Sdk.OAuthResponseType
  - Okta.Sdk.OpenIdConnectApplicationConsentMethod
  - Okta.Sdk.OpenIdConnectApplicationIssuerMode
  - Okta.Sdk.OpenIdConnectApplicationType
  - Okta.Sdk.OpenIdConnectRefreshTokenRotationType
  - Okta.Sdk.OrgContactType
  - Okta.Sdk.OrgOktaSupportSetting
  - Okta.Sdk.PasswordCredentialHashAlgorithm
  - Okta.Sdk.PolicyRuleActionsEnrollSelf
  - Okta.Sdk.PolicySubjectMatchType
  - Okta.Sdk.PolicyType
  - Okta.Sdk.ProfileMappingPropertyPushStatus
  - Okta.Sdk.ProtocolRelayStateFormat
  - Okta.Sdk.ProvisioningConnectionAuthScheme
  - Okta.Sdk.ProvisioningConnectionStatus
  - Okta.Sdk.RequiredEnum
  - Okta.Sdk.RoleAssignmentType
  - Okta.Sdk.RoleStatus
  - Okta.Sdk.RoleType
  - Okta.Sdk.ScopeType
  - Okta.Sdk.SeedEnum
  - Okta.Sdk.SessionAuthenticationMethod
  - Okta.Sdk.SessionIdentityProviderType
  - Okta.Sdk.SessionStatus
  - Okta.Sdk.SignInPageTouchPointVariant
  - Okta.Sdk.SmsTemplateType
  - Okta.Sdk.SubscriptionStatus
  - Okta.Sdk.UserNextLogin
  - Okta.Sdk.UserSchemaAttributeMasterType
  - Okta.Sdk.UserSchemaAttributeScope
  - Okta.Sdk.UserSchemaAttributeType
  - Okta.Sdk.UserSchemaAttributeUnion
  - Okta.Sdk.UserStatus
  - Okta.Sdk.UserVerificationEnum
  implements:
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Okta.Sdk.StringEnum.#ctor(System.String)
  commentId: M:Okta.Sdk.StringEnum.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Okta.Sdk.StringEnum
  langs:
  - csharp
  - vb
  name: StringEnum(String)
  nameWithType: StringEnum.StringEnum(String)
  fullName: Okta.Sdk.StringEnum.StringEnum(System.String)
  type: Constructor
  source:
    remote:
      path: src/Okta.Sdk/StringEnum.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: .ctor
    path: ../src/Okta.Sdk/StringEnum.cs
    startLine: 28
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nInitializes a new instance of the <xref href=\"Okta.Sdk.StringEnum\" data-throw-if-not-resolved=\"false\"></xref> class given a string.\n"
  example: []
  syntax:
    content: public StringEnum(string value)
    parameters:
    - id: value
      type: System.String
      description: The enumeration value.
    content.vb: Public Sub New(value As String)
  overload: Okta.Sdk.StringEnum.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.StringEnum.Value
  commentId: P:Okta.Sdk.StringEnum.Value
  id: Value
  parent: Okta.Sdk.StringEnum
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: StringEnum.Value
  fullName: Okta.Sdk.StringEnum.Value
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/StringEnum.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Value
    path: ../src/Okta.Sdk/StringEnum.cs
    startLine: 37
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the value of this enumeration member.\n"
  example: []
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
      description: The enumeration value.
    content.vb: Public ReadOnly Property Value As String
  overload: Okta.Sdk.StringEnum.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.StringEnum.ToString
  commentId: M:Okta.Sdk.StringEnum.ToString
  id: ToString
  parent: Okta.Sdk.StringEnum
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: StringEnum.ToString()
  fullName: Okta.Sdk.StringEnum.ToString()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/StringEnum.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ToString
    path: ../src/Okta.Sdk/StringEnum.cs
    startLine: 40
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Okta.Sdk.StringEnum.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Okta.Sdk.StringEnum.op_Implicit(Okta.Sdk.StringEnum)~System.String
  commentId: M:Okta.Sdk.StringEnum.op_Implicit(Okta.Sdk.StringEnum)~System.String
  id: op_Implicit(Okta.Sdk.StringEnum)~System.String
  parent: Okta.Sdk.StringEnum
  langs:
  - csharp
  - vb
  name: Implicit(StringEnum to String)
  nameWithType: StringEnum.Implicit(StringEnum to String)
  fullName: Okta.Sdk.StringEnum.Implicit(Okta.Sdk.StringEnum to System.String)
  type: Operator
  source:
    remote:
      path: src/Okta.Sdk/StringEnum.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: op_Implicit
    path: ../src/Okta.Sdk/StringEnum.cs
    startLine: 47
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> value of a <xref href=\"Okta.Sdk.StringEnum\" data-throw-if-not-resolved=\"false\"></xref> member.\n"
  example: []
  syntax:
    content: public static implicit operator string (StringEnum enum)
    parameters:
    - id: enum
      type: Okta.Sdk.StringEnum
      description: The enumeration member.
    return:
      type: System.String
      description: The string value.
    content.vb: Public Shared Widening Operator CType(enum As StringEnum) As String
  overload: Okta.Sdk.StringEnum.op_Implicit*
  nameWithType.vb: StringEnum.Widening(StringEnum to String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Okta.Sdk.StringEnum.Widening(Okta.Sdk.StringEnum to System.String)
  name.vb: Widening(StringEnum to String)
- uid: Okta.Sdk.StringEnum.op_Equality(Okta.Sdk.StringEnum,Okta.Sdk.StringEnum)
  commentId: M:Okta.Sdk.StringEnum.op_Equality(Okta.Sdk.StringEnum,Okta.Sdk.StringEnum)
  id: op_Equality(Okta.Sdk.StringEnum,Okta.Sdk.StringEnum)
  parent: Okta.Sdk.StringEnum
  langs:
  - csharp
  - vb
  name: Equality(StringEnum, StringEnum)
  nameWithType: StringEnum.Equality(StringEnum, StringEnum)
  fullName: Okta.Sdk.StringEnum.Equality(Okta.Sdk.StringEnum, Okta.Sdk.StringEnum)
  type: Operator
  source:
    remote:
      path: src/Okta.Sdk/StringEnum.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: op_Equality
    path: ../src/Okta.Sdk/StringEnum.cs
    startLine: 55
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nCompares two <xref href=\"Okta.Sdk.StringEnum\" data-throw-if-not-resolved=\"false\"></xref> instances for value equality, ignoring case.\n"
  example: []
  syntax:
    content: public static bool operator ==(StringEnum x, StringEnum y)
    parameters:
    - id: x
      type: Okta.Sdk.StringEnum
      description: The left operand.
    - id: y
      type: Okta.Sdk.StringEnum
      description: The right operand.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the instances have equal values; <xref uid="langword_csharp_false" name="false" href=""></xref> otherwise.
    content.vb: Public Shared Operator =(x As StringEnum, y As StringEnum) As Boolean
  overload: Okta.Sdk.StringEnum.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Okta.Sdk.StringEnum.op_Inequality(Okta.Sdk.StringEnum,Okta.Sdk.StringEnum)
  commentId: M:Okta.Sdk.StringEnum.op_Inequality(Okta.Sdk.StringEnum,Okta.Sdk.StringEnum)
  id: op_Inequality(Okta.Sdk.StringEnum,Okta.Sdk.StringEnum)
  parent: Okta.Sdk.StringEnum
  langs:
  - csharp
  - vb
  name: Inequality(StringEnum, StringEnum)
  nameWithType: StringEnum.Inequality(StringEnum, StringEnum)
  fullName: Okta.Sdk.StringEnum.Inequality(Okta.Sdk.StringEnum, Okta.Sdk.StringEnum)
  type: Operator
  source:
    remote:
      path: src/Okta.Sdk/StringEnum.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: op_Inequality
    path: ../src/Okta.Sdk/StringEnum.cs
    startLine: 76
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nCompares two <xref href=\"Okta.Sdk.StringEnum\" data-throw-if-not-resolved=\"false\"></xref> instances for value inequality, ignoring case.\n"
  example: []
  syntax:
    content: public static bool operator !=(StringEnum x, StringEnum y)
    parameters:
    - id: x
      type: Okta.Sdk.StringEnum
      description: The left operand.
    - id: y
      type: Okta.Sdk.StringEnum
      description: The right operand.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the instances do not have equal values; <xref uid="langword_csharp_true" name="true" href=""></xref> otherwise.
    content.vb: Public Shared Operator <>(x As StringEnum, y As StringEnum) As Boolean
  overload: Okta.Sdk.StringEnum.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Okta.Sdk.StringEnum.Equals(System.Object)
  commentId: M:Okta.Sdk.StringEnum.Equals(System.Object)
  id: Equals(System.Object)
  parent: Okta.Sdk.StringEnum
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: StringEnum.Equals(Object)
  fullName: Okta.Sdk.StringEnum.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/StringEnum.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Equals
    path: ../src/Okta.Sdk/StringEnum.cs
    startLine: 79
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Okta.Sdk.StringEnum.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Okta.Sdk.StringEnum.GetHashCode
  commentId: M:Okta.Sdk.StringEnum.GetHashCode
  id: GetHashCode
  parent: Okta.Sdk.StringEnum
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: StringEnum.GetHashCode()
  fullName: Okta.Sdk.StringEnum.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/StringEnum.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetHashCode
    path: ../src/Okta.Sdk/StringEnum.cs
    startLine: 95
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Okta.Sdk.StringEnum.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Okta.Sdk.StringEnum.CompareTo(System.Object)
  commentId: M:Okta.Sdk.StringEnum.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Okta.Sdk.StringEnum
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: StringEnum.CompareTo(Object)
  fullName: Okta.Sdk.StringEnum.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/StringEnum.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CompareTo
    path: ../src/Okta.Sdk/StringEnum.cs
    startLine: 99
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public int CompareTo(object other)
    parameters:
    - id: other
      type: System.Object
      description: The object to compare to.
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As Object) As Integer
  overload: Okta.Sdk.StringEnum.CompareTo*
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.StringEnum.Create``1(System.String)
  commentId: M:Okta.Sdk.StringEnum.Create``1(System.String)
  id: Create``1(System.String)
  parent: Okta.Sdk.StringEnum
  langs:
  - csharp
  - vb
  name: Create<T>(String)
  nameWithType: StringEnum.Create<T>(String)
  fullName: Okta.Sdk.StringEnum.Create<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/StringEnum.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Create
    path: ../src/Okta.Sdk/StringEnum.cs
    startLine: 112
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nCreates a new <xref href=\"Okta.Sdk.StringEnum\" data-throw-if-not-resolved=\"false\"></xref> with the specified value.\n"
  remarks: "\nEquivalent to calling <code>new MyEnum(value)</code> if <code>MyEnum</code> inherits from <xref href=\"Okta.Sdk.StringEnum\" data-throw-if-not-resolved=\"false\"></xref>.\nUse <code>new</code> unless you don&apos;t know the exact enum type at compile time.\n"
  example: []
  syntax:
    content: public static T Create<T>(string item)
    parameters:
    - id: item
      type: System.String
      description: The enum value.
    typeParameters:
    - id: T
      description: The <xref href="Okta.Sdk.StringEnum" data-throw-if-not-resolved="false"></xref> type.
    return:
      type: '{T}'
      description: The created <xref href="Okta.Sdk.StringEnum" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Create(Of T)(item As String) As T
  overload: Okta.Sdk.StringEnum.Create*
  nameWithType.vb: StringEnum.Create(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Okta.Sdk.StringEnum.Create(Of T)(System.String)
  name.vb: Create(Of T)(String)
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.StringEnum
  commentId: T:Okta.Sdk.StringEnum
  parent: Okta.Sdk
  name: StringEnum
  nameWithType: StringEnum
  fullName: Okta.Sdk.StringEnum
- uid: Okta.Sdk.StringEnum.#ctor*
  commentId: Overload:Okta.Sdk.StringEnum.#ctor
  name: StringEnum
  nameWithType: StringEnum.StringEnum
  fullName: Okta.Sdk.StringEnum.StringEnum
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.StringEnum.Value*
  commentId: Overload:Okta.Sdk.StringEnum.Value
  name: Value
  nameWithType: StringEnum.Value
  fullName: Okta.Sdk.StringEnum.Value
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.StringEnum.ToString*
  commentId: Overload:Okta.Sdk.StringEnum.ToString
  name: ToString
  nameWithType: StringEnum.ToString
  fullName: Okta.Sdk.StringEnum.ToString
- uid: Okta.Sdk.StringEnum.op_Implicit*
  commentId: Overload:Okta.Sdk.StringEnum.op_Implicit
  name: Implicit
  nameWithType: StringEnum.Implicit
  fullName: Okta.Sdk.StringEnum.Implicit
  nameWithType.vb: StringEnum.Widening
  fullName.vb: Okta.Sdk.StringEnum.Widening
  name.vb: Widening
- uid: Okta.Sdk.StringEnum.op_Equality*
  commentId: Overload:Okta.Sdk.StringEnum.op_Equality
  name: Equality
  nameWithType: StringEnum.Equality
  fullName: Okta.Sdk.StringEnum.Equality
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Okta.Sdk.StringEnum.op_Inequality*
  commentId: Overload:Okta.Sdk.StringEnum.op_Inequality
  name: Inequality
  nameWithType: StringEnum.Inequality
  fullName: Okta.Sdk.StringEnum.Inequality
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.StringEnum.Equals*
  commentId: Overload:Okta.Sdk.StringEnum.Equals
  name: Equals
  nameWithType: StringEnum.Equals
  fullName: Okta.Sdk.StringEnum.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.StringEnum.GetHashCode*
  commentId: Overload:Okta.Sdk.StringEnum.GetHashCode
  name: GetHashCode
  nameWithType: StringEnum.GetHashCode
  fullName: Okta.Sdk.StringEnum.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Okta.Sdk.StringEnum.CompareTo*
  commentId: Overload:Okta.Sdk.StringEnum.CompareTo
  name: CompareTo
  nameWithType: StringEnum.CompareTo
  fullName: Okta.Sdk.StringEnum.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.StringEnum.Create*
  commentId: Overload:Okta.Sdk.StringEnum.Create
  name: Create
  nameWithType: StringEnum.Create
  fullName: Okta.Sdk.StringEnum.Create
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
