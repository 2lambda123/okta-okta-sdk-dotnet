### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IPoliciesClient
  commentId: T:Okta.Sdk.IPoliciesClient
  id: IPoliciesClient
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IPoliciesClient.ActivatePolicyAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.ActivatePolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync(Okta.Sdk.AddPasswordPolicyRuleOptions,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync(Okta.Sdk.AddSignOnPolicyRuleOptions,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync``1(Okta.Sdk.IPolicyRule,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.CreatePolicyAsync(Okta.Sdk.IPolicy,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.CreatePolicyAsync``1(Okta.Sdk.IPolicy,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.CreatePolicyRuleAsync(Okta.Sdk.IPolicyRule,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.DeactivatePolicyAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.DeactivatePolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.DeletePolicyAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.DeletePolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.GetPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.GetPolicyAsync``1(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.GetPolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.GetPolicyRuleAsync``1(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.ListPolicies(System.String,System.String,System.String)
  - Okta.Sdk.IPoliciesClient.ListPolicyRules(System.String)
  - Okta.Sdk.IPoliciesClient.UpdatePolicyAsync(Okta.Sdk.IPolicy,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.UpdatePolicyAsync``1(Okta.Sdk.IPolicy,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.UpdatePolicyAsync``1(Okta.Sdk.IPolicy,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.UpdatePolicyRuleAsync(Okta.Sdk.IPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IPoliciesClient.UpdatePolicyRuleAsync``1(Okta.Sdk.IPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IPoliciesClient
  nameWithType: IPoliciesClient
  fullName: Okta.Sdk.IPoliciesClient
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/IPoliciesClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IPoliciesClient
    path: ../src/Okta.Sdk/IPoliciesClient.cs
    startLine: 11
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: A client that works with Okta Policy resources.
  example: []
  syntax:
    content: public interface IPoliciesClient
    content.vb: Public Interface IPoliciesClient
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IPoliciesClient.ListPolicies(System.String,System.String,System.String)
  commentId: M:Okta.Sdk.IPoliciesClient.ListPolicies(System.String,System.String,System.String)
  id: ListPolicies(System.String,System.String,System.String)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: ListPolicies(String, String, String)
  nameWithType: IPoliciesClient.ListPolicies(String, String, String)
  fullName: Okta.Sdk.IPoliciesClient.ListPolicies(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListPolicies
    path: ../src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
    startLine: 24
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets all policies with the specified type.\n"
  example: []
  syntax:
    content: ICollectionClient<IPolicy> ListPolicies(string type, string status = null, string expand = "")
    parameters:
    - id: type
      type: System.String
      description: ''
    - id: status
      type: System.String
      description: ''
    - id: expand
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IPolicy}
      description: A collection of <xref href="Okta.Sdk.IPolicy" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListPolicies(type As String, status As String = Nothing, expand As String = "") As ICollectionClient(Of IPolicy)
  overload: Okta.Sdk.IPoliciesClient.ListPolicies*
- uid: Okta.Sdk.IPoliciesClient.CreatePolicyAsync(Okta.Sdk.IPolicy,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.CreatePolicyAsync(Okta.Sdk.IPolicy,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: CreatePolicyAsync(Okta.Sdk.IPolicy,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: CreatePolicyAsync(IPolicy, Nullable<Boolean>, CancellationToken)
  nameWithType: IPoliciesClient.CreatePolicyAsync(IPolicy, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.CreatePolicyAsync(Okta.Sdk.IPolicy, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreatePolicyAsync
    path: ../src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
    startLine: 33
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nCreates a policy.\n"
  example: []
  syntax:
    content: Task<IPolicy> CreatePolicyAsync(IPolicy policy, bool? activate = true, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policy
      type: Okta.Sdk.IPolicy
      description: The <xref href="Okta.Sdk.IPolicy" data-throw-if-not-resolved="false"></xref> resource.
    - id: activate
      type: System.Nullable{System.Boolean}
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IPolicy}
      description: The <xref href="Okta.Sdk.IPolicy" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreatePolicyAsync(policy As IPolicy, activate As Boolean? = True, cancellationToken As CancellationToken = Nothing) As Task(Of IPolicy)
  overload: Okta.Sdk.IPoliciesClient.CreatePolicyAsync*
  nameWithType.vb: IPoliciesClient.CreatePolicyAsync(IPolicy, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IPoliciesClient.CreatePolicyAsync(Okta.Sdk.IPolicy, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: CreatePolicyAsync(IPolicy, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.IPoliciesClient.DeletePolicyAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.DeletePolicyAsync(System.String,System.Threading.CancellationToken)
  id: DeletePolicyAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: DeletePolicyAsync(String, CancellationToken)
  nameWithType: IPoliciesClient.DeletePolicyAsync(String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.DeletePolicyAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeletePolicyAsync
    path: ../src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
    startLine: 41
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRemoves a policy.\n"
  example: []
  syntax:
    content: Task DeletePolicyAsync(string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeletePolicyAsync(policyId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IPoliciesClient.DeletePolicyAsync*
- uid: Okta.Sdk.IPoliciesClient.GetPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.GetPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: GetPolicyAsync(String, String, CancellationToken)
  nameWithType: IPoliciesClient.GetPolicyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.GetPolicyAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetPolicyAsync
    path: ../src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
    startLine: 50
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a policy.\n"
  example: []
  syntax:
    content: Task<IPolicy> GetPolicyAsync(string policyId, string expand = "", CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
      description: ''
    - id: expand
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IPolicy}
      description: The <xref href="Okta.Sdk.IPolicy" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetPolicyAsync(policyId As String, expand As String = "", cancellationToken As CancellationToken = Nothing) As Task(Of IPolicy)
  overload: Okta.Sdk.IPoliciesClient.GetPolicyAsync*
- uid: Okta.Sdk.IPoliciesClient.UpdatePolicyAsync(Okta.Sdk.IPolicy,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.UpdatePolicyAsync(Okta.Sdk.IPolicy,System.String,System.Threading.CancellationToken)
  id: UpdatePolicyAsync(Okta.Sdk.IPolicy,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: UpdatePolicyAsync(IPolicy, String, CancellationToken)
  nameWithType: IPoliciesClient.UpdatePolicyAsync(IPolicy, String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.UpdatePolicyAsync(Okta.Sdk.IPolicy, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdatePolicyAsync
    path: ../src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
    startLine: 59
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nUpdates a policy.\n"
  example: []
  syntax:
    content: Task<IPolicy> UpdatePolicyAsync(IPolicy policy, string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policy
      type: Okta.Sdk.IPolicy
      description: The <xref href="Okta.Sdk.IPolicy" data-throw-if-not-resolved="false"></xref> resource.
    - id: policyId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IPolicy}
      description: The <xref href="Okta.Sdk.IPolicy" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdatePolicyAsync(policy As IPolicy, policyId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPolicy)
  overload: Okta.Sdk.IPoliciesClient.UpdatePolicyAsync*
- uid: Okta.Sdk.IPoliciesClient.ActivatePolicyAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.ActivatePolicyAsync(System.String,System.Threading.CancellationToken)
  id: ActivatePolicyAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: ActivatePolicyAsync(String, CancellationToken)
  nameWithType: IPoliciesClient.ActivatePolicyAsync(String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.ActivatePolicyAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivatePolicyAsync
    path: ../src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
    startLine: 67
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nActivates a policy.\n"
  example: []
  syntax:
    content: Task ActivatePolicyAsync(string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function ActivatePolicyAsync(policyId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IPoliciesClient.ActivatePolicyAsync*
- uid: Okta.Sdk.IPoliciesClient.DeactivatePolicyAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.DeactivatePolicyAsync(System.String,System.Threading.CancellationToken)
  id: DeactivatePolicyAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: DeactivatePolicyAsync(String, CancellationToken)
  nameWithType: IPoliciesClient.DeactivatePolicyAsync(String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.DeactivatePolicyAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivatePolicyAsync
    path: ../src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
    startLine: 75
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nDeactivates a policy.\n"
  example: []
  syntax:
    content: Task DeactivatePolicyAsync(string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeactivatePolicyAsync(policyId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IPoliciesClient.DeactivatePolicyAsync*
- uid: Okta.Sdk.IPoliciesClient.ListPolicyRules(System.String)
  commentId: M:Okta.Sdk.IPoliciesClient.ListPolicyRules(System.String)
  id: ListPolicyRules(System.String)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: ListPolicyRules(String)
  nameWithType: IPoliciesClient.ListPolicyRules(String)
  fullName: Okta.Sdk.IPoliciesClient.ListPolicyRules(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListPolicyRules
    path: ../src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
    startLine: 82
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nEnumerates all policy rules.\n"
  example: []
  syntax:
    content: ICollectionClient<IPolicyRule> ListPolicyRules(string policyId)
    parameters:
    - id: policyId
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IPolicyRule}
      description: A collection of <xref href="Okta.Sdk.IPolicyRule" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListPolicyRules(policyId As String) As ICollectionClient(Of IPolicyRule)
  overload: Okta.Sdk.IPoliciesClient.ListPolicyRules*
- uid: Okta.Sdk.IPoliciesClient.CreatePolicyRuleAsync(Okta.Sdk.IPolicyRule,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.CreatePolicyRuleAsync(Okta.Sdk.IPolicyRule,System.String,System.Threading.CancellationToken)
  id: CreatePolicyRuleAsync(Okta.Sdk.IPolicyRule,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: CreatePolicyRuleAsync(IPolicyRule, String, CancellationToken)
  nameWithType: IPoliciesClient.CreatePolicyRuleAsync(IPolicyRule, String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.CreatePolicyRuleAsync(Okta.Sdk.IPolicyRule, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreatePolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
    startLine: 91
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nCreates a policy rule.\n"
  example: []
  syntax:
    content: Task<IPolicyRule> CreatePolicyRuleAsync(IPolicyRule policyRule, string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyRule
      type: Okta.Sdk.IPolicyRule
      description: The <xref href="Okta.Sdk.IPolicyRule" data-throw-if-not-resolved="false"></xref> resource.
    - id: policyId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IPolicyRule}
      description: The <xref href="Okta.Sdk.IPolicyRule" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreatePolicyRuleAsync(policyRule As IPolicyRule, policyId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPolicyRule)
  overload: Okta.Sdk.IPoliciesClient.CreatePolicyRuleAsync*
- uid: Okta.Sdk.IPoliciesClient.DeletePolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.DeletePolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeletePolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: DeletePolicyRuleAsync(String, String, CancellationToken)
  nameWithType: IPoliciesClient.DeletePolicyRuleAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.DeletePolicyRuleAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeletePolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
    startLine: 100
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRemoves a policy rule.\n"
  example: []
  syntax:
    content: Task DeletePolicyRuleAsync(string policyId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
      description: ''
    - id: ruleId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeletePolicyRuleAsync(policyId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IPoliciesClient.DeletePolicyRuleAsync*
- uid: Okta.Sdk.IPoliciesClient.GetPolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.GetPolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetPolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: GetPolicyRuleAsync(String, String, CancellationToken)
  nameWithType: IPoliciesClient.GetPolicyRuleAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.GetPolicyRuleAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetPolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
    startLine: 109
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a policy rule.\n"
  example: []
  syntax:
    content: Task<IPolicyRule> GetPolicyRuleAsync(string policyId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
      description: ''
    - id: ruleId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IPolicyRule}
      description: The <xref href="Okta.Sdk.IPolicyRule" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetPolicyRuleAsync(policyId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPolicyRule)
  overload: Okta.Sdk.IPoliciesClient.GetPolicyRuleAsync*
- uid: Okta.Sdk.IPoliciesClient.UpdatePolicyRuleAsync(Okta.Sdk.IPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.UpdatePolicyRuleAsync(Okta.Sdk.IPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  id: UpdatePolicyRuleAsync(Okta.Sdk.IPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: UpdatePolicyRuleAsync(IPolicyRule, String, String, CancellationToken)
  nameWithType: IPoliciesClient.UpdatePolicyRuleAsync(IPolicyRule, String, String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.UpdatePolicyRuleAsync(Okta.Sdk.IPolicyRule, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdatePolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
    startLine: 119
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nUpdates a policy rule.\n"
  example: []
  syntax:
    content: Task<IPolicyRule> UpdatePolicyRuleAsync(IPolicyRule policyRule, string policyId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyRule
      type: Okta.Sdk.IPolicyRule
      description: The <xref href="Okta.Sdk.IPolicyRule" data-throw-if-not-resolved="false"></xref> resource.
    - id: policyId
      type: System.String
      description: ''
    - id: ruleId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IPolicyRule}
      description: The <xref href="Okta.Sdk.IPolicyRule" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdatePolicyRuleAsync(policyRule As IPolicyRule, policyId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPolicyRule)
  overload: Okta.Sdk.IPoliciesClient.UpdatePolicyRuleAsync*
- uid: Okta.Sdk.IPoliciesClient.ActivatePolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.ActivatePolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  id: ActivatePolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: ActivatePolicyRuleAsync(String, String, CancellationToken)
  nameWithType: IPoliciesClient.ActivatePolicyRuleAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.ActivatePolicyRuleAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivatePolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
    startLine: 128
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nActivates a policy rule.\n"
  example: []
  syntax:
    content: Task ActivatePolicyRuleAsync(string policyId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
      description: ''
    - id: ruleId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function ActivatePolicyRuleAsync(policyId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IPoliciesClient.ActivatePolicyRuleAsync*
- uid: Okta.Sdk.IPoliciesClient.DeactivatePolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.DeactivatePolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeactivatePolicyRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: DeactivatePolicyRuleAsync(String, String, CancellationToken)
  nameWithType: IPoliciesClient.DeactivatePolicyRuleAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.DeactivatePolicyRuleAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivatePolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/IPoliciesClient.Generated.cs
    startLine: 137
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nDeactivates a policy rule.\n"
  example: []
  syntax:
    content: Task DeactivatePolicyRuleAsync(string policyId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
      description: ''
    - id: ruleId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeactivatePolicyRuleAsync(policyId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IPoliciesClient.DeactivatePolicyRuleAsync*
- uid: Okta.Sdk.IPoliciesClient.GetPolicyAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.GetPolicyAsync``1(System.String,System.Threading.CancellationToken)
  id: GetPolicyAsync``1(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: GetPolicyAsync<T>(String, CancellationToken)
  nameWithType: IPoliciesClient.GetPolicyAsync<T>(String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.GetPolicyAsync<T>(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IPoliciesClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetPolicyAsync
    path: ../src/Okta.Sdk/IPoliciesClient.cs
    startLine: 20
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a policy by id\n"
  example: []
  syntax:
    content: >-
      Task<T> GetPolicyAsync<T>(string policyId, CancellationToken cancellationToken = default(CancellationToken))

          where T : class, IPolicy
    parameters:
    - id: policyId
      type: System.String
      description: The policy id
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    typeParameters:
    - id: T
      description: The policy type
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The <xref href="Okta.Sdk.IPolicy" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetPolicyAsync(Of T As {Class, IPolicy})(policyId As String, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Okta.Sdk.IPoliciesClient.GetPolicyAsync*
  nameWithType.vb: IPoliciesClient.GetPolicyAsync(Of T)(String, CancellationToken)
  fullName.vb: Okta.Sdk.IPoliciesClient.GetPolicyAsync(Of T)(System.String, System.Threading.CancellationToken)
  name.vb: GetPolicyAsync(Of T)(String, CancellationToken)
- uid: Okta.Sdk.IPoliciesClient.CreatePolicyAsync``1(Okta.Sdk.IPolicy,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.CreatePolicyAsync``1(Okta.Sdk.IPolicy,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: CreatePolicyAsync``1(Okta.Sdk.IPolicy,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: CreatePolicyAsync<T>(IPolicy, Nullable<Boolean>, CancellationToken)
  nameWithType: IPoliciesClient.CreatePolicyAsync<T>(IPolicy, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.CreatePolicyAsync<T>(Okta.Sdk.IPolicy, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IPoliciesClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreatePolicyAsync
    path: ../src/Okta.Sdk/IPoliciesClient.cs
    startLine: 31
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nCreates a policy\n"
  example: []
  syntax:
    content: >-
      Task<T> CreatePolicyAsync<T>(IPolicy policy, bool? activate = true, CancellationToken cancellationToken = default(CancellationToken))

          where T : class, IPolicy
    parameters:
    - id: policy
      type: Okta.Sdk.IPolicy
      description: The <xref href="Okta.Sdk.IPolicy" data-throw-if-not-resolved="false"></xref> resource.
    - id: activate
      type: System.Nullable{System.Boolean}
      description: The activate flag
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The policy type
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The <xref href="Okta.Sdk.IPolicy" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreatePolicyAsync(Of T As {Class, IPolicy})(policy As IPolicy, activate As Boolean? = True, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Okta.Sdk.IPoliciesClient.CreatePolicyAsync*
  nameWithType.vb: IPoliciesClient.CreatePolicyAsync(Of T)(IPolicy, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IPoliciesClient.CreatePolicyAsync(Of T)(Okta.Sdk.IPolicy, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: CreatePolicyAsync(Of T)(IPolicy, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.IPoliciesClient.UpdatePolicyAsync``1(Okta.Sdk.IPolicy,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.UpdatePolicyAsync``1(Okta.Sdk.IPolicy,System.String,System.Threading.CancellationToken)
  id: UpdatePolicyAsync``1(Okta.Sdk.IPolicy,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: UpdatePolicyAsync<T>(IPolicy, String, CancellationToken)
  nameWithType: IPoliciesClient.UpdatePolicyAsync<T>(IPolicy, String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.UpdatePolicyAsync<T>(Okta.Sdk.IPolicy, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IPoliciesClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdatePolicyAsync
    path: ../src/Okta.Sdk/IPoliciesClient.cs
    startLine: 42
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nUpdates a policy\n"
  example: []
  syntax:
    content: >-
      Task<T> UpdatePolicyAsync<T>(IPolicy policy, string policyId, CancellationToken cancellationToken = default(CancellationToken))

          where T : class, IPolicy
    parameters:
    - id: policy
      type: Okta.Sdk.IPolicy
      description: The <xref href="Okta.Sdk.IPolicy" data-throw-if-not-resolved="false"></xref> resource.
    - id: policyId
      type: System.String
      description: The policy ID
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The policy type
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The <xref href="Okta.Sdk.IPolicy" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdatePolicyAsync(Of T As {Class, IPolicy})(policy As IPolicy, policyId As String, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Okta.Sdk.IPoliciesClient.UpdatePolicyAsync*
  nameWithType.vb: IPoliciesClient.UpdatePolicyAsync(Of T)(IPolicy, String, CancellationToken)
  fullName.vb: Okta.Sdk.IPoliciesClient.UpdatePolicyAsync(Of T)(Okta.Sdk.IPolicy, System.String, System.Threading.CancellationToken)
  name.vb: UpdatePolicyAsync(Of T)(IPolicy, String, CancellationToken)
- uid: Okta.Sdk.IPoliciesClient.UpdatePolicyAsync``1(Okta.Sdk.IPolicy,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.UpdatePolicyAsync``1(Okta.Sdk.IPolicy,System.Threading.CancellationToken)
  id: UpdatePolicyAsync``1(Okta.Sdk.IPolicy,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: UpdatePolicyAsync<T>(IPolicy, CancellationToken)
  nameWithType: IPoliciesClient.UpdatePolicyAsync<T>(IPolicy, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.UpdatePolicyAsync<T>(Okta.Sdk.IPolicy, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IPoliciesClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdatePolicyAsync
    path: ../src/Okta.Sdk/IPoliciesClient.cs
    startLine: 52
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nUpdates a policy\n"
  example: []
  syntax:
    content: >-
      Task<T> UpdatePolicyAsync<T>(IPolicy policy, CancellationToken cancellationToken = default(CancellationToken))

          where T : class, IPolicy
    parameters:
    - id: policy
      type: Okta.Sdk.IPolicy
      description: The <xref href="Okta.Sdk.IPolicy" data-throw-if-not-resolved="false"></xref> resource.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The policy type
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The <xref href="Okta.Sdk.IPolicy" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdatePolicyAsync(Of T As {Class, IPolicy})(policy As IPolicy, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Okta.Sdk.IPoliciesClient.UpdatePolicyAsync*
  nameWithType.vb: IPoliciesClient.UpdatePolicyAsync(Of T)(IPolicy, CancellationToken)
  fullName.vb: Okta.Sdk.IPoliciesClient.UpdatePolicyAsync(Of T)(Okta.Sdk.IPolicy, System.Threading.CancellationToken)
  name.vb: UpdatePolicyAsync(Of T)(IPolicy, CancellationToken)
- uid: Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync``1(Okta.Sdk.IPolicyRule,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync``1(Okta.Sdk.IPolicyRule,System.String,System.Threading.CancellationToken)
  id: AddPolicyRuleAsync``1(Okta.Sdk.IPolicyRule,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: AddPolicyRuleAsync<T>(IPolicyRule, String, CancellationToken)
  nameWithType: IPoliciesClient.AddPolicyRuleAsync<T>(IPolicyRule, String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync<T>(Okta.Sdk.IPolicyRule, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IPoliciesClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddPolicyRuleAsync
    path: ../src/Okta.Sdk/IPoliciesClient.cs
    startLine: 63
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nCreates a policy rule\n"
  example: []
  syntax:
    content: >-
      Task<T> AddPolicyRuleAsync<T>(IPolicyRule policyRule, string policyId, CancellationToken cancellationToken = default(CancellationToken))

          where T : class, IPolicyRule
    parameters:
    - id: policyRule
      type: Okta.Sdk.IPolicyRule
      description: The <xref href="Okta.Sdk.IPolicyRule" data-throw-if-not-resolved="false"></xref> resource.
    - id: policyId
      type: System.String
      description: The policy ID
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The policy Rule type
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The <xref href="Okta.Sdk.IPolicyRule" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function AddPolicyRuleAsync(Of T As {Class, IPolicyRule})(policyRule As IPolicyRule, policyId As String, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync*
  nameWithType.vb: IPoliciesClient.AddPolicyRuleAsync(Of T)(IPolicyRule, String, CancellationToken)
  fullName.vb: Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync(Of T)(Okta.Sdk.IPolicyRule, System.String, System.Threading.CancellationToken)
  name.vb: AddPolicyRuleAsync(Of T)(IPolicyRule, String, CancellationToken)
- uid: Okta.Sdk.IPoliciesClient.UpdatePolicyRuleAsync``1(Okta.Sdk.IPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.UpdatePolicyRuleAsync``1(Okta.Sdk.IPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  id: UpdatePolicyRuleAsync``1(Okta.Sdk.IPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: UpdatePolicyRuleAsync<T>(IPolicyRule, String, String, CancellationToken)
  nameWithType: IPoliciesClient.UpdatePolicyRuleAsync<T>(IPolicyRule, String, String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.UpdatePolicyRuleAsync<T>(Okta.Sdk.IPolicyRule, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IPoliciesClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdatePolicyRuleAsync
    path: ../src/Okta.Sdk/IPoliciesClient.cs
    startLine: 75
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nUpdates a policy rule\n"
  example: []
  syntax:
    content: >-
      Task<T> UpdatePolicyRuleAsync<T>(IPolicyRule policyRule, string policyId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))

          where T : class, IPolicyRule
    parameters:
    - id: policyRule
      type: Okta.Sdk.IPolicyRule
      description: The <xref href="Okta.Sdk.IPolicyRule" data-throw-if-not-resolved="false"></xref> resource.
    - id: policyId
      type: System.String
      description: The policy ID
    - id: ruleId
      type: System.String
      description: The rule ID
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The policy Rule type
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The <xref href="Okta.Sdk.IPolicyRule" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdatePolicyRuleAsync(Of T As {Class, IPolicyRule})(policyRule As IPolicyRule, policyId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Okta.Sdk.IPoliciesClient.UpdatePolicyRuleAsync*
  nameWithType.vb: IPoliciesClient.UpdatePolicyRuleAsync(Of T)(IPolicyRule, String, String, CancellationToken)
  fullName.vb: Okta.Sdk.IPoliciesClient.UpdatePolicyRuleAsync(Of T)(Okta.Sdk.IPolicyRule, System.String, System.String, System.Threading.CancellationToken)
  name.vb: UpdatePolicyRuleAsync(Of T)(IPolicyRule, String, String, CancellationToken)
- uid: Okta.Sdk.IPoliciesClient.GetPolicyRuleAsync``1(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.GetPolicyRuleAsync``1(System.String,System.String,System.Threading.CancellationToken)
  id: GetPolicyRuleAsync``1(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: GetPolicyRuleAsync<T>(String, String, CancellationToken)
  nameWithType: IPoliciesClient.GetPolicyRuleAsync<T>(String, String, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.GetPolicyRuleAsync<T>(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IPoliciesClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetPolicyRuleAsync
    path: ../src/Okta.Sdk/IPoliciesClient.cs
    startLine: 86
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a Policy Rule\n"
  example: []
  syntax:
    content: >-
      Task<T> GetPolicyRuleAsync<T>(string policyId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))

          where T : class, IPolicyRule
    parameters:
    - id: policyId
      type: System.String
      description: The policy ID
    - id: ruleId
      type: System.String
      description: The rule ID
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The policy Rule type
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The <xref href="Okta.Sdk.IPolicyRule" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetPolicyRuleAsync(Of T As {Class, IPolicyRule})(policyId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Okta.Sdk.IPoliciesClient.GetPolicyRuleAsync*
  nameWithType.vb: IPoliciesClient.GetPolicyRuleAsync(Of T)(String, String, CancellationToken)
  fullName.vb: Okta.Sdk.IPoliciesClient.GetPolicyRuleAsync(Of T)(System.String, System.String, System.Threading.CancellationToken)
  name.vb: GetPolicyRuleAsync(Of T)(String, String, CancellationToken)
- uid: Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync(Okta.Sdk.AddPasswordPolicyRuleOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync(Okta.Sdk.AddPasswordPolicyRuleOptions,System.Threading.CancellationToken)
  id: AddPolicyRuleAsync(Okta.Sdk.AddPasswordPolicyRuleOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: AddPolicyRuleAsync(AddPasswordPolicyRuleOptions, CancellationToken)
  nameWithType: IPoliciesClient.AddPolicyRuleAsync(AddPasswordPolicyRuleOptions, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync(Okta.Sdk.AddPasswordPolicyRuleOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IPoliciesClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddPolicyRuleAsync
    path: ../src/Okta.Sdk/IPoliciesClient.cs
    startLine: 95
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nCreates a password policy rule\n"
  example: []
  syntax:
    content: Task<IPasswordPolicyRule> AddPolicyRuleAsync(AddPasswordPolicyRuleOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: options
      type: Okta.Sdk.AddPasswordPolicyRuleOptions
      description: The password policy rule options. Instance of <xref href="Okta.Sdk.AddPasswordPolicyRuleOptions" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IPasswordPolicyRule}
      description: The <xref href="Okta.Sdk.IPasswordPolicyRule" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function AddPolicyRuleAsync(options As AddPasswordPolicyRuleOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IPasswordPolicyRule)
  overload: Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync*
- uid: Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync(Okta.Sdk.AddSignOnPolicyRuleOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync(Okta.Sdk.AddSignOnPolicyRuleOptions,System.Threading.CancellationToken)
  id: AddPolicyRuleAsync(Okta.Sdk.AddSignOnPolicyRuleOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IPoliciesClient
  langs:
  - csharp
  - vb
  name: AddPolicyRuleAsync(AddSignOnPolicyRuleOptions, CancellationToken)
  nameWithType: IPoliciesClient.AddPolicyRuleAsync(AddSignOnPolicyRuleOptions, CancellationToken)
  fullName: Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync(Okta.Sdk.AddSignOnPolicyRuleOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IPoliciesClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddPolicyRuleAsync
    path: ../src/Okta.Sdk/IPoliciesClient.cs
    startLine: 103
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nCreates a password policy rule\n"
  example: []
  syntax:
    content: Task<IOktaSignOnPolicyRule> AddPolicyRuleAsync(AddSignOnPolicyRuleOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: options
      type: Okta.Sdk.AddSignOnPolicyRuleOptions
      description: The sign on policy rule options. Instance of <xref href="Okta.Sdk.AddSignOnPolicyRuleOptions" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOktaSignOnPolicyRule}
      description: The <xref href="Okta.Sdk.IOktaSignOnPolicyRule" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function AddPolicyRuleAsync(options As AddSignOnPolicyRuleOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IOktaSignOnPolicyRule)
  overload: Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync*
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IPolicy
  commentId: T:Okta.Sdk.IPolicy
  parent: Okta.Sdk
  name: IPolicy
  nameWithType: IPolicy
  fullName: Okta.Sdk.IPolicy
- uid: Okta.Sdk.IPoliciesClient.ListPolicies*
  commentId: Overload:Okta.Sdk.IPoliciesClient.ListPolicies
  name: ListPolicies
  nameWithType: IPoliciesClient.ListPolicies
  fullName: Okta.Sdk.IPoliciesClient.ListPolicies
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IPolicy}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IPolicy}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IPolicy>
  nameWithType: ICollectionClient<IPolicy>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IPolicy>
  nameWithType.vb: ICollectionClient(Of IPolicy)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IPolicy)
  name.vb: ICollectionClient(Of IPolicy)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IPolicy
    name: IPolicy
    nameWithType: IPolicy
    fullName: Okta.Sdk.IPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IPolicy
    name: IPolicy
    nameWithType: IPolicy
    fullName: Okta.Sdk.IPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IPoliciesClient.CreatePolicyAsync*
  commentId: Overload:Okta.Sdk.IPoliciesClient.CreatePolicyAsync
  name: CreatePolicyAsync
  nameWithType: IPoliciesClient.CreatePolicyAsync
  fullName: Okta.Sdk.IPoliciesClient.CreatePolicyAsync
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.IPolicy}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IPolicy}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPolicy>
  nameWithType: Task<IPolicy>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IPolicy>
  nameWithType.vb: Task(Of IPolicy)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IPolicy)
  name.vb: Task(Of IPolicy)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IPolicy
    name: IPolicy
    nameWithType: IPolicy
    fullName: Okta.Sdk.IPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IPolicy
    name: IPolicy
    nameWithType: IPolicy
    fullName: Okta.Sdk.IPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.IPoliciesClient.DeletePolicyAsync*
  commentId: Overload:Okta.Sdk.IPoliciesClient.DeletePolicyAsync
  name: DeletePolicyAsync
  nameWithType: IPoliciesClient.DeletePolicyAsync
  fullName: Okta.Sdk.IPoliciesClient.DeletePolicyAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Okta.Sdk.IPoliciesClient.GetPolicyAsync*
  commentId: Overload:Okta.Sdk.IPoliciesClient.GetPolicyAsync
  name: GetPolicyAsync
  nameWithType: IPoliciesClient.GetPolicyAsync
  fullName: Okta.Sdk.IPoliciesClient.GetPolicyAsync
- uid: Okta.Sdk.IPoliciesClient.UpdatePolicyAsync*
  commentId: Overload:Okta.Sdk.IPoliciesClient.UpdatePolicyAsync
  name: UpdatePolicyAsync
  nameWithType: IPoliciesClient.UpdatePolicyAsync
  fullName: Okta.Sdk.IPoliciesClient.UpdatePolicyAsync
- uid: Okta.Sdk.IPoliciesClient.ActivatePolicyAsync*
  commentId: Overload:Okta.Sdk.IPoliciesClient.ActivatePolicyAsync
  name: ActivatePolicyAsync
  nameWithType: IPoliciesClient.ActivatePolicyAsync
  fullName: Okta.Sdk.IPoliciesClient.ActivatePolicyAsync
- uid: Okta.Sdk.IPoliciesClient.DeactivatePolicyAsync*
  commentId: Overload:Okta.Sdk.IPoliciesClient.DeactivatePolicyAsync
  name: DeactivatePolicyAsync
  nameWithType: IPoliciesClient.DeactivatePolicyAsync
  fullName: Okta.Sdk.IPoliciesClient.DeactivatePolicyAsync
- uid: Okta.Sdk.IPolicyRule
  commentId: T:Okta.Sdk.IPolicyRule
  parent: Okta.Sdk
  name: IPolicyRule
  nameWithType: IPolicyRule
  fullName: Okta.Sdk.IPolicyRule
- uid: Okta.Sdk.IPoliciesClient.ListPolicyRules*
  commentId: Overload:Okta.Sdk.IPoliciesClient.ListPolicyRules
  name: ListPolicyRules
  nameWithType: IPoliciesClient.ListPolicyRules
  fullName: Okta.Sdk.IPoliciesClient.ListPolicyRules
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IPolicyRule}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IPolicyRule}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IPolicyRule>
  nameWithType: ICollectionClient<IPolicyRule>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IPolicyRule>
  nameWithType.vb: ICollectionClient(Of IPolicyRule)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IPolicyRule)
  name.vb: ICollectionClient(Of IPolicyRule)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IPolicyRule
    name: IPolicyRule
    nameWithType: IPolicyRule
    fullName: Okta.Sdk.IPolicyRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IPolicyRule
    name: IPolicyRule
    nameWithType: IPolicyRule
    fullName: Okta.Sdk.IPolicyRule
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IPoliciesClient.CreatePolicyRuleAsync*
  commentId: Overload:Okta.Sdk.IPoliciesClient.CreatePolicyRuleAsync
  name: CreatePolicyRuleAsync
  nameWithType: IPoliciesClient.CreatePolicyRuleAsync
  fullName: Okta.Sdk.IPoliciesClient.CreatePolicyRuleAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IPolicyRule}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IPolicyRule}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPolicyRule>
  nameWithType: Task<IPolicyRule>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IPolicyRule>
  nameWithType.vb: Task(Of IPolicyRule)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IPolicyRule)
  name.vb: Task(Of IPolicyRule)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IPolicyRule
    name: IPolicyRule
    nameWithType: IPolicyRule
    fullName: Okta.Sdk.IPolicyRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IPolicyRule
    name: IPolicyRule
    nameWithType: IPolicyRule
    fullName: Okta.Sdk.IPolicyRule
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IPoliciesClient.DeletePolicyRuleAsync*
  commentId: Overload:Okta.Sdk.IPoliciesClient.DeletePolicyRuleAsync
  name: DeletePolicyRuleAsync
  nameWithType: IPoliciesClient.DeletePolicyRuleAsync
  fullName: Okta.Sdk.IPoliciesClient.DeletePolicyRuleAsync
- uid: Okta.Sdk.IPoliciesClient.GetPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.IPoliciesClient.GetPolicyRuleAsync
  name: GetPolicyRuleAsync
  nameWithType: IPoliciesClient.GetPolicyRuleAsync
  fullName: Okta.Sdk.IPoliciesClient.GetPolicyRuleAsync
- uid: Okta.Sdk.IPoliciesClient.UpdatePolicyRuleAsync*
  commentId: Overload:Okta.Sdk.IPoliciesClient.UpdatePolicyRuleAsync
  name: UpdatePolicyRuleAsync
  nameWithType: IPoliciesClient.UpdatePolicyRuleAsync
  fullName: Okta.Sdk.IPoliciesClient.UpdatePolicyRuleAsync
- uid: Okta.Sdk.IPoliciesClient.ActivatePolicyRuleAsync*
  commentId: Overload:Okta.Sdk.IPoliciesClient.ActivatePolicyRuleAsync
  name: ActivatePolicyRuleAsync
  nameWithType: IPoliciesClient.ActivatePolicyRuleAsync
  fullName: Okta.Sdk.IPoliciesClient.ActivatePolicyRuleAsync
- uid: Okta.Sdk.IPoliciesClient.DeactivatePolicyRuleAsync*
  commentId: Overload:Okta.Sdk.IPoliciesClient.DeactivatePolicyRuleAsync
  name: DeactivatePolicyRuleAsync
  nameWithType: IPoliciesClient.DeactivatePolicyRuleAsync
  fullName: Okta.Sdk.IPoliciesClient.DeactivatePolicyRuleAsync
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync
  name: AddPolicyRuleAsync
  nameWithType: IPoliciesClient.AddPolicyRuleAsync
  fullName: Okta.Sdk.IPoliciesClient.AddPolicyRuleAsync
- uid: Okta.Sdk.AddPasswordPolicyRuleOptions
  commentId: T:Okta.Sdk.AddPasswordPolicyRuleOptions
  parent: Okta.Sdk
  name: AddPasswordPolicyRuleOptions
  nameWithType: AddPasswordPolicyRuleOptions
  fullName: Okta.Sdk.AddPasswordPolicyRuleOptions
- uid: Okta.Sdk.IPasswordPolicyRule
  commentId: T:Okta.Sdk.IPasswordPolicyRule
  parent: Okta.Sdk
  name: IPasswordPolicyRule
  nameWithType: IPasswordPolicyRule
  fullName: Okta.Sdk.IPasswordPolicyRule
- uid: System.Threading.Tasks.Task{Okta.Sdk.IPasswordPolicyRule}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IPasswordPolicyRule}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPasswordPolicyRule>
  nameWithType: Task<IPasswordPolicyRule>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IPasswordPolicyRule>
  nameWithType.vb: Task(Of IPasswordPolicyRule)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IPasswordPolicyRule)
  name.vb: Task(Of IPasswordPolicyRule)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IPasswordPolicyRule
    name: IPasswordPolicyRule
    nameWithType: IPasswordPolicyRule
    fullName: Okta.Sdk.IPasswordPolicyRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IPasswordPolicyRule
    name: IPasswordPolicyRule
    nameWithType: IPasswordPolicyRule
    fullName: Okta.Sdk.IPasswordPolicyRule
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AddSignOnPolicyRuleOptions
  commentId: T:Okta.Sdk.AddSignOnPolicyRuleOptions
  parent: Okta.Sdk
  name: AddSignOnPolicyRuleOptions
  nameWithType: AddSignOnPolicyRuleOptions
  fullName: Okta.Sdk.AddSignOnPolicyRuleOptions
- uid: Okta.Sdk.IOktaSignOnPolicyRule
  commentId: T:Okta.Sdk.IOktaSignOnPolicyRule
  parent: Okta.Sdk
  name: IOktaSignOnPolicyRule
  nameWithType: IOktaSignOnPolicyRule
  fullName: Okta.Sdk.IOktaSignOnPolicyRule
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOktaSignOnPolicyRule}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOktaSignOnPolicyRule}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOktaSignOnPolicyRule>
  nameWithType: Task<IOktaSignOnPolicyRule>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOktaSignOnPolicyRule>
  nameWithType.vb: Task(Of IOktaSignOnPolicyRule)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOktaSignOnPolicyRule)
  name.vb: Task(Of IOktaSignOnPolicyRule)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOktaSignOnPolicyRule
    name: IOktaSignOnPolicyRule
    nameWithType: IOktaSignOnPolicyRule
    fullName: Okta.Sdk.IOktaSignOnPolicyRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOktaSignOnPolicyRule
    name: IOktaSignOnPolicyRule
    nameWithType: IOktaSignOnPolicyRule
    fullName: Okta.Sdk.IOktaSignOnPolicyRule
  - name: )
    nameWithType: )
    fullName: )
