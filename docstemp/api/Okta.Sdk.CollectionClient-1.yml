### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.CollectionClient`1
  commentId: T:Okta.Sdk.CollectionClient`1
  id: CollectionClient`1
  parent: Okta.Sdk
  children:
  - Okta.Sdk.CollectionClient`1.#ctor(Okta.Sdk.Internal.IDataStore,Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext)
  - Okta.Sdk.CollectionClient`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  - Okta.Sdk.CollectionClient`1.GetPagedEnumerator(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: CollectionClient<T>
  nameWithType: CollectionClient<T>
  fullName: Okta.Sdk.CollectionClient<T>
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/CollectionClient{T}.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CollectionClient
    path: ../src/Okta.Sdk/CollectionClient{T}.cs
    startLine: 13
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: 'public sealed class CollectionClient<T> : ICollectionClient<T>, IAsyncEnumerable<T> where T : IResource'
    typeParameters:
    - id: T
    content.vb: >-
      Public NotInheritable Class CollectionClient(Of T As IResource)

          Implements ICollectionClient(Of T), IAsyncEnumerable(Of T)
  inheritance:
  - System.Object
  implements:
  - Okta.Sdk.ICollectionClient{{T}}
  - System.Collections.Generic.IAsyncEnumerable{{T}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: CollectionClient(Of T)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Okta.Sdk.CollectionClient(Of T)
  name.vb: CollectionClient(Of T)
- uid: Okta.Sdk.CollectionClient`1.#ctor(Okta.Sdk.Internal.IDataStore,Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext)
  commentId: M:Okta.Sdk.CollectionClient`1.#ctor(Okta.Sdk.Internal.IDataStore,Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext)
  id: '#ctor(Okta.Sdk.Internal.IDataStore,Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext)'
  parent: Okta.Sdk.CollectionClient`1
  langs:
  - csharp
  - vb
  name: CollectionClient(IDataStore, HttpRequest, RequestContext)
  nameWithType: CollectionClient<T>.CollectionClient(IDataStore, HttpRequest, RequestContext)
  fullName: Okta.Sdk.CollectionClient<T>.CollectionClient(Okta.Sdk.Internal.IDataStore, Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext)
  type: Constructor
  source:
    remote:
      path: src/Okta.Sdk/CollectionClient{T}.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: .ctor
    path: ../src/Okta.Sdk/CollectionClient{T}.cs
    startLine: 26
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nInitializes a new instance of the <xref href=\"Okta.Sdk.CollectionClient%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CollectionClient(IDataStore dataStore, HttpRequest initialRequest, RequestContext requestContext)
    parameters:
    - id: dataStore
      type: Okta.Sdk.Internal.IDataStore
      description: The <xref href="Okta.Sdk.Internal.IDataStore?text=DataStore" data-throw-if-not-resolved="false"></xref>.
    - id: initialRequest
      type: Okta.Sdk.HttpRequest
      description: The initial HTTP request options.
    - id: requestContext
      type: Okta.Sdk.RequestContext
      description: The request context.
    content.vb: Public Sub New(dataStore As IDataStore, initialRequest As HttpRequest, requestContext As RequestContext)
  overload: Okta.Sdk.CollectionClient`1.#ctor*
  nameWithType.vb: CollectionClient(Of T).CollectionClient(IDataStore, HttpRequest, RequestContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.CollectionClient(Of T).CollectionClient(Okta.Sdk.Internal.IDataStore, Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext)
- uid: Okta.Sdk.CollectionClient`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.CollectionClient`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  id: GetAsyncEnumerator(System.Threading.CancellationToken)
  parent: Okta.Sdk.CollectionClient`1
  langs:
  - csharp
  - vb
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: CollectionClient<T>.GetAsyncEnumerator(CancellationToken)
  fullName: Okta.Sdk.CollectionClient<T>.GetAsyncEnumerator(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/CollectionClient{T}.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAsyncEnumerator
    path: ../src/Okta.Sdk/CollectionClient{T}.cs
    startLine: 37
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IAsyncEnumerator<T> GetAsyncEnumerator(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Collections.Generic.IAsyncEnumerator{{T}}
    content.vb: Public Function GetAsyncEnumerator(cancellationToken As CancellationToken = Nothing) As IAsyncEnumerator(Of T)
  overload: Okta.Sdk.CollectionClient`1.GetAsyncEnumerator*
  implements:
  - System.Collections.Generic.IAsyncEnumerable{{T}}.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: CollectionClient(Of T).GetAsyncEnumerator(CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.CollectionClient(Of T).GetAsyncEnumerator(System.Threading.CancellationToken)
- uid: Okta.Sdk.CollectionClient`1.GetPagedEnumerator(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.CollectionClient`1.GetPagedEnumerator(System.Threading.CancellationToken)
  id: GetPagedEnumerator(System.Threading.CancellationToken)
  parent: Okta.Sdk.CollectionClient`1
  langs:
  - csharp
  - vb
  name: GetPagedEnumerator(CancellationToken)
  nameWithType: CollectionClient<T>.GetPagedEnumerator(CancellationToken)
  fullName: Okta.Sdk.CollectionClient<T>.GetPagedEnumerator(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/CollectionClient{T}.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetPagedEnumerator
    path: ../src/Okta.Sdk/CollectionClient{T}.cs
    startLine: 41
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IPagedCollectionEnumerator<T> GetPagedEnumerator(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Okta.Sdk.IPagedCollectionEnumerator{{T}}
    content.vb: Public Function GetPagedEnumerator(cancellationToken As CancellationToken = Nothing) As IPagedCollectionEnumerator(Of T)
  overload: Okta.Sdk.CollectionClient`1.GetPagedEnumerator*
  implements:
  - Okta.Sdk.ICollectionClient{{T}}.GetPagedEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: CollectionClient(Of T).GetPagedEnumerator(CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.CollectionClient(Of T).GetPagedEnumerator(System.Threading.CancellationToken)
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Okta.Sdk.ICollectionClient{{T}}
  commentId: T:Okta.Sdk.ICollectionClient{`0}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable{{T}}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.CollectionClient`1
  commentId: T:Okta.Sdk.CollectionClient`1
  name: CollectionClient<T>
  nameWithType: CollectionClient<T>
  fullName: Okta.Sdk.CollectionClient<T>
  nameWithType.vb: CollectionClient(Of T)
  fullName.vb: Okta.Sdk.CollectionClient(Of T)
  name.vb: CollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.CollectionClient`1
    name: CollectionClient
    nameWithType: CollectionClient
    fullName: Okta.Sdk.CollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.CollectionClient`1
    name: CollectionClient
    nameWithType: CollectionClient
    fullName: Okta.Sdk.CollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Internal.IDataStore
  commentId: T:Okta.Sdk.Internal.IDataStore
  parent: Okta.Sdk.Internal
  name: IDataStore
  nameWithType: IDataStore
  fullName: Okta.Sdk.Internal.IDataStore
- uid: Okta.Sdk.CollectionClient`1.#ctor*
  commentId: Overload:Okta.Sdk.CollectionClient`1.#ctor
  name: CollectionClient
  nameWithType: CollectionClient<T>.CollectionClient
  fullName: Okta.Sdk.CollectionClient<T>.CollectionClient
  nameWithType.vb: CollectionClient(Of T).CollectionClient
  fullName.vb: Okta.Sdk.CollectionClient(Of T).CollectionClient
- uid: Okta.Sdk.HttpRequest
  commentId: T:Okta.Sdk.HttpRequest
  parent: Okta.Sdk
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Okta.Sdk.HttpRequest
- uid: Okta.Sdk.RequestContext
  commentId: T:Okta.Sdk.RequestContext
  parent: Okta.Sdk
  name: RequestContext
  nameWithType: RequestContext
  fullName: Okta.Sdk.RequestContext
- uid: Okta.Sdk.Internal
  commentId: N:Okta.Sdk.Internal
  name: Okta.Sdk.Internal
  nameWithType: Okta.Sdk.Internal
  fullName: Okta.Sdk.Internal
- uid: Okta.Sdk.CollectionClient`1.GetAsyncEnumerator*
  commentId: Overload:Okta.Sdk.CollectionClient`1.GetAsyncEnumerator
  name: GetAsyncEnumerator
  nameWithType: CollectionClient<T>.GetAsyncEnumerator
  fullName: Okta.Sdk.CollectionClient<T>.GetAsyncEnumerator
  nameWithType.vb: CollectionClient(Of T).GetAsyncEnumerator
  fullName.vb: Okta.Sdk.CollectionClient(Of T).GetAsyncEnumerator
- uid: System.Collections.Generic.IAsyncEnumerable{{T}}.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:System.Collections.Generic.IAsyncEnumerable{`0}.GetAsyncEnumerator(System.Threading.CancellationToken)
  parent: System.Collections.Generic.IAsyncEnumerable{{T}}
  definition: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator(CancellationToken)
  fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: IAsyncEnumerable(Of T).GetAsyncEnumerator(CancellationToken)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable(Of T).GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Collections.Generic.IAsyncEnumerator{{T}}
  commentId: T:System.Collections.Generic.IAsyncEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerator`1
  name: IAsyncEnumerator<T>
  nameWithType: IAsyncEnumerator<T>
  fullName: System.Collections.Generic.IAsyncEnumerator<T>
  nameWithType.vb: IAsyncEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerator(Of T)
  name.vb: IAsyncEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  isExternal: true
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator(CancellationToken)
  fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: IAsyncEnumerable(Of T).GetAsyncEnumerator(CancellationToken)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable(Of T).GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Collections.Generic.IAsyncEnumerator`1
  commentId: T:System.Collections.Generic.IAsyncEnumerator`1
  isExternal: true
  name: IAsyncEnumerator<T>
  nameWithType: IAsyncEnumerator<T>
  fullName: System.Collections.Generic.IAsyncEnumerator<T>
  nameWithType.vb: IAsyncEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerator(Of T)
  name.vb: IAsyncEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.CollectionClient`1.GetPagedEnumerator*
  commentId: Overload:Okta.Sdk.CollectionClient`1.GetPagedEnumerator
  name: GetPagedEnumerator
  nameWithType: CollectionClient<T>.GetPagedEnumerator
  fullName: Okta.Sdk.CollectionClient<T>.GetPagedEnumerator
  nameWithType.vb: CollectionClient(Of T).GetPagedEnumerator
  fullName.vb: Okta.Sdk.CollectionClient(Of T).GetPagedEnumerator
- uid: Okta.Sdk.ICollectionClient{{T}}.GetPagedEnumerator(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.ICollectionClient{`0}.GetPagedEnumerator(System.Threading.CancellationToken)
  parent: Okta.Sdk.ICollectionClient{{T}}
  definition: Okta.Sdk.ICollectionClient`1.GetPagedEnumerator(System.Threading.CancellationToken)
  name: GetPagedEnumerator(CancellationToken)
  nameWithType: ICollectionClient<T>.GetPagedEnumerator(CancellationToken)
  fullName: Okta.Sdk.ICollectionClient<T>.GetPagedEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: ICollectionClient(Of T).GetPagedEnumerator(CancellationToken)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T).GetPagedEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1.GetPagedEnumerator(System.Threading.CancellationToken)
    name: GetPagedEnumerator
    nameWithType: ICollectionClient<T>.GetPagedEnumerator
    fullName: Okta.Sdk.ICollectionClient<T>.GetPagedEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1.GetPagedEnumerator(System.Threading.CancellationToken)
    name: GetPagedEnumerator
    nameWithType: ICollectionClient(Of T).GetPagedEnumerator
    fullName: Okta.Sdk.ICollectionClient(Of T).GetPagedEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IPagedCollectionEnumerator{{T}}
  commentId: T:Okta.Sdk.IPagedCollectionEnumerator{`0}
  parent: Okta.Sdk
  definition: Okta.Sdk.IPagedCollectionEnumerator`1
  name: IPagedCollectionEnumerator<T>
  nameWithType: IPagedCollectionEnumerator<T>
  fullName: Okta.Sdk.IPagedCollectionEnumerator<T>
  nameWithType.vb: IPagedCollectionEnumerator(Of T)
  fullName.vb: Okta.Sdk.IPagedCollectionEnumerator(Of T)
  name.vb: IPagedCollectionEnumerator(Of T)
  spec.csharp:
  - uid: Okta.Sdk.IPagedCollectionEnumerator`1
    name: IPagedCollectionEnumerator
    nameWithType: IPagedCollectionEnumerator
    fullName: Okta.Sdk.IPagedCollectionEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.IPagedCollectionEnumerator`1
    name: IPagedCollectionEnumerator
    nameWithType: IPagedCollectionEnumerator
    fullName: Okta.Sdk.IPagedCollectionEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient`1.GetPagedEnumerator(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.ICollectionClient`1.GetPagedEnumerator(System.Threading.CancellationToken)
  isExternal: true
  name: GetPagedEnumerator(CancellationToken)
  nameWithType: ICollectionClient<T>.GetPagedEnumerator(CancellationToken)
  fullName: Okta.Sdk.ICollectionClient<T>.GetPagedEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: ICollectionClient(Of T).GetPagedEnumerator(CancellationToken)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T).GetPagedEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1.GetPagedEnumerator(System.Threading.CancellationToken)
    name: GetPagedEnumerator
    nameWithType: ICollectionClient<T>.GetPagedEnumerator
    fullName: Okta.Sdk.ICollectionClient<T>.GetPagedEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1.GetPagedEnumerator(System.Threading.CancellationToken)
    name: GetPagedEnumerator
    nameWithType: ICollectionClient(Of T).GetPagedEnumerator
    fullName: Okta.Sdk.ICollectionClient(Of T).GetPagedEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IPagedCollectionEnumerator`1
  commentId: T:Okta.Sdk.IPagedCollectionEnumerator`1
  name: IPagedCollectionEnumerator<T>
  nameWithType: IPagedCollectionEnumerator<T>
  fullName: Okta.Sdk.IPagedCollectionEnumerator<T>
  nameWithType.vb: IPagedCollectionEnumerator(Of T)
  fullName.vb: Okta.Sdk.IPagedCollectionEnumerator(Of T)
  name.vb: IPagedCollectionEnumerator(Of T)
  spec.csharp:
  - uid: Okta.Sdk.IPagedCollectionEnumerator`1
    name: IPagedCollectionEnumerator
    nameWithType: IPagedCollectionEnumerator
    fullName: Okta.Sdk.IPagedCollectionEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.IPagedCollectionEnumerator`1
    name: IPagedCollectionEnumerator
    nameWithType: IPagedCollectionEnumerator
    fullName: Okta.Sdk.IPagedCollectionEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
