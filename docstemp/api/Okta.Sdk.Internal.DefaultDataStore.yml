### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.Internal.DefaultDataStore
  commentId: T:Okta.Sdk.Internal.DefaultDataStore
  id: DefaultDataStore
  parent: Okta.Sdk.Internal
  children:
  - Okta.Sdk.Internal.DefaultDataStore.#ctor(Okta.Sdk.Internal.IRequestExecutor,Okta.Sdk.Internal.ISerializer,Okta.Sdk.Internal.ResourceFactory,Microsoft.Extensions.Logging.ILogger)
  - Okta.Sdk.Internal.DefaultDataStore.DeleteAsync(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  - Okta.Sdk.Internal.DefaultDataStore.GetArrayAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  - Okta.Sdk.Internal.DefaultDataStore.GetAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  - Okta.Sdk.Internal.DefaultDataStore.PostAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  - Okta.Sdk.Internal.DefaultDataStore.PutAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  - Okta.Sdk.Internal.DefaultDataStore.RequestExecutor
  - Okta.Sdk.Internal.DefaultDataStore.Serializer
  langs:
  - csharp
  - vb
  name: DefaultDataStore
  nameWithType: DefaultDataStore
  fullName: Okta.Sdk.Internal.DefaultDataStore
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/Internal/DefaultDataStore.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DefaultDataStore
    path: ../src/Okta.Sdk/Internal/DefaultDataStore.cs
    startLine: 17
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nThe default implementation of <xref href=\"Okta.Sdk.Internal.IDataStore\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public sealed class DefaultDataStore : IDataStore'
    content.vb: >-
      Public NotInheritable Class DefaultDataStore

          Implements IDataStore
  inheritance:
  - System.Object
  implements:
  - Okta.Sdk.Internal.IDataStore
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Okta.Sdk.Internal.DefaultDataStore.#ctor(Okta.Sdk.Internal.IRequestExecutor,Okta.Sdk.Internal.ISerializer,Okta.Sdk.Internal.ResourceFactory,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Okta.Sdk.Internal.DefaultDataStore.#ctor(Okta.Sdk.Internal.IRequestExecutor,Okta.Sdk.Internal.ISerializer,Okta.Sdk.Internal.ResourceFactory,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Okta.Sdk.Internal.IRequestExecutor,Okta.Sdk.Internal.ISerializer,Okta.Sdk.Internal.ResourceFactory,Microsoft.Extensions.Logging.ILogger)'
  parent: Okta.Sdk.Internal.DefaultDataStore
  langs:
  - csharp
  - vb
  name: DefaultDataStore(IRequestExecutor, ISerializer, ResourceFactory, ILogger)
  nameWithType: DefaultDataStore.DefaultDataStore(IRequestExecutor, ISerializer, ResourceFactory, ILogger)
  fullName: Okta.Sdk.Internal.DefaultDataStore.DefaultDataStore(Okta.Sdk.Internal.IRequestExecutor, Okta.Sdk.Internal.ISerializer, Okta.Sdk.Internal.ResourceFactory, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Okta.Sdk/Internal/DefaultDataStore.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: .ctor
    path: ../src/Okta.Sdk/Internal/DefaultDataStore.cs
    startLine: 32
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nInitializes a new instance of the <xref href=\"Okta.Sdk.Internal.DefaultDataStore\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DefaultDataStore(IRequestExecutor requestExecutor, ISerializer serializer, ResourceFactory resourceFactory, ILogger logger)
    parameters:
    - id: requestExecutor
      type: Okta.Sdk.Internal.IRequestExecutor
      description: The <xref href="Okta.Sdk.Internal.IRequestExecutor?text=RequestExecutor" data-throw-if-not-resolved="false"></xref> to use.
    - id: serializer
      type: Okta.Sdk.Internal.ISerializer
      description: The <xref href="Okta.Sdk.Internal.ISerializer?text=Serializer" data-throw-if-not-resolved="false"></xref> to use.
    - id: resourceFactory
      type: Okta.Sdk.Internal.ResourceFactory
      description: The <xref href="Okta.Sdk.Internal.ResourceFactory" data-throw-if-not-resolved="false"></xref>.
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logging interface.
    content.vb: Public Sub New(requestExecutor As IRequestExecutor, serializer As ISerializer, resourceFactory As ResourceFactory, logger As ILogger)
  overload: Okta.Sdk.Internal.DefaultDataStore.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Internal.DefaultDataStore.RequestExecutor
  commentId: P:Okta.Sdk.Internal.DefaultDataStore.RequestExecutor
  id: RequestExecutor
  parent: Okta.Sdk.Internal.DefaultDataStore
  langs:
  - csharp
  - vb
  name: RequestExecutor
  nameWithType: DefaultDataStore.RequestExecutor
  fullName: Okta.Sdk.Internal.DefaultDataStore.RequestExecutor
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Internal/DefaultDataStore.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RequestExecutor
    path: ../src/Okta.Sdk/Internal/DefaultDataStore.cs
    startLine: 46
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  example: []
  syntax:
    content: public IRequestExecutor RequestExecutor { get; }
    parameters: []
    return:
      type: Okta.Sdk.Internal.IRequestExecutor
    content.vb: Public ReadOnly Property RequestExecutor As IRequestExecutor
  overload: Okta.Sdk.Internal.DefaultDataStore.RequestExecutor*
  implements:
  - Okta.Sdk.Internal.IDataStore.RequestExecutor
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Internal.DefaultDataStore.Serializer
  commentId: P:Okta.Sdk.Internal.DefaultDataStore.Serializer
  id: Serializer
  parent: Okta.Sdk.Internal.DefaultDataStore
  langs:
  - csharp
  - vb
  name: Serializer
  nameWithType: DefaultDataStore.Serializer
  fullName: Okta.Sdk.Internal.DefaultDataStore.Serializer
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Internal/DefaultDataStore.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Serializer
    path: ../src/Okta.Sdk/Internal/DefaultDataStore.cs
    startLine: 49
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  example: []
  syntax:
    content: public ISerializer Serializer { get; }
    parameters: []
    return:
      type: Okta.Sdk.Internal.ISerializer
    content.vb: Public ReadOnly Property Serializer As ISerializer
  overload: Okta.Sdk.Internal.DefaultDataStore.Serializer*
  implements:
  - Okta.Sdk.Internal.IDataStore.Serializer
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Internal.DefaultDataStore.GetAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.DefaultDataStore.GetAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  id: GetAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.DefaultDataStore
  langs:
  - csharp
  - vb
  name: GetAsync<T>(HttpRequest, RequestContext, CancellationToken)
  nameWithType: DefaultDataStore.GetAsync<T>(HttpRequest, RequestContext, CancellationToken)
  fullName: Okta.Sdk.Internal.DefaultDataStore.GetAsync<T>(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/DefaultDataStore.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAsync
    path: ../src/Okta.Sdk/Internal/DefaultDataStore.cs
    startLine: 188
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  example: []
  syntax:
    content: >-
      public async Task<HttpResponse<T>> GetAsync<T>(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken)

          where T : Resource, new()
    parameters:
    - id: request
      type: Okta.Sdk.HttpRequest
    - id: requestContext
      type: Okta.Sdk.RequestContext
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{{T}}}
    content.vb: Public Function GetAsync(Of T As {Resource, New})(request As HttpRequest, requestContext As RequestContext, cancellationToken As CancellationToken) As Task(Of HttpResponse(Of T))
  overload: Okta.Sdk.Internal.DefaultDataStore.GetAsync*
  implements:
  - Okta.Sdk.Internal.IDataStore.GetAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  nameWithType.vb: DefaultDataStore.GetAsync(Of T)(HttpRequest, RequestContext, CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Internal.DefaultDataStore.GetAsync(Of T)(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(HttpRequest, RequestContext, CancellationToken)
- uid: Okta.Sdk.Internal.DefaultDataStore.GetArrayAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.DefaultDataStore.GetArrayAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  id: GetArrayAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.DefaultDataStore
  langs:
  - csharp
  - vb
  name: GetArrayAsync<T>(HttpRequest, RequestContext, CancellationToken)
  nameWithType: DefaultDataStore.GetArrayAsync<T>(HttpRequest, RequestContext, CancellationToken)
  fullName: Okta.Sdk.Internal.DefaultDataStore.GetArrayAsync<T>(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/DefaultDataStore.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetArrayAsync
    path: ../src/Okta.Sdk/Internal/DefaultDataStore.cs
    startLine: 207
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  example: []
  syntax:
    content: >-
      public async Task<HttpResponse<IEnumerable<T>>> GetArrayAsync<T>(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken)

          where T : IResource
    parameters:
    - id: request
      type: Okta.Sdk.HttpRequest
    - id: requestContext
      type: Okta.Sdk.RequestContext
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{System.Collections.Generic.IEnumerable{{T}}}}
    content.vb: Public Function GetArrayAsync(Of T As IResource)(request As HttpRequest, requestContext As RequestContext, cancellationToken As CancellationToken) As Task(Of HttpResponse(Of IEnumerable(Of T)))
  overload: Okta.Sdk.Internal.DefaultDataStore.GetArrayAsync*
  implements:
  - Okta.Sdk.Internal.IDataStore.GetArrayAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  nameWithType.vb: DefaultDataStore.GetArrayAsync(Of T)(HttpRequest, RequestContext, CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Internal.DefaultDataStore.GetArrayAsync(Of T)(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  name.vb: GetArrayAsync(Of T)(HttpRequest, RequestContext, CancellationToken)
- uid: Okta.Sdk.Internal.DefaultDataStore.PostAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.DefaultDataStore.PostAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  id: PostAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.DefaultDataStore
  langs:
  - csharp
  - vb
  name: PostAsync<TResponse>(HttpRequest, RequestContext, CancellationToken)
  nameWithType: DefaultDataStore.PostAsync<TResponse>(HttpRequest, RequestContext, CancellationToken)
  fullName: Okta.Sdk.Internal.DefaultDataStore.PostAsync<TResponse>(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/DefaultDataStore.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PostAsync
    path: ../src/Okta.Sdk/Internal/DefaultDataStore.cs
    startLine: 223
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  example: []
  syntax:
    content: >-
      public async Task<HttpResponse<TResponse>> PostAsync<TResponse>(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken)

          where TResponse : Resource, new()
    parameters:
    - id: request
      type: Okta.Sdk.HttpRequest
    - id: requestContext
      type: Okta.Sdk.RequestContext
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TResponse
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{{TResponse}}}
    content.vb: Public Function PostAsync(Of TResponse As {Resource, New})(request As HttpRequest, requestContext As RequestContext, cancellationToken As CancellationToken) As Task(Of HttpResponse(Of TResponse))
  overload: Okta.Sdk.Internal.DefaultDataStore.PostAsync*
  implements:
  - Okta.Sdk.Internal.IDataStore.PostAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  nameWithType.vb: DefaultDataStore.PostAsync(Of TResponse)(HttpRequest, RequestContext, CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Internal.DefaultDataStore.PostAsync(Of TResponse)(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  name.vb: PostAsync(Of TResponse)(HttpRequest, RequestContext, CancellationToken)
- uid: Okta.Sdk.Internal.DefaultDataStore.PutAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.DefaultDataStore.PutAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  id: PutAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.DefaultDataStore
  langs:
  - csharp
  - vb
  name: PutAsync<TResponse>(HttpRequest, RequestContext, CancellationToken)
  nameWithType: DefaultDataStore.PutAsync<TResponse>(HttpRequest, RequestContext, CancellationToken)
  fullName: Okta.Sdk.Internal.DefaultDataStore.PutAsync<TResponse>(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/DefaultDataStore.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PutAsync
    path: ../src/Okta.Sdk/Internal/DefaultDataStore.cs
    startLine: 240
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  example: []
  syntax:
    content: >-
      public async Task<HttpResponse<TResponse>> PutAsync<TResponse>(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken)

          where TResponse : Resource, new()
    parameters:
    - id: request
      type: Okta.Sdk.HttpRequest
    - id: requestContext
      type: Okta.Sdk.RequestContext
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TResponse
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{{TResponse}}}
    content.vb: Public Function PutAsync(Of TResponse As {Resource, New})(request As HttpRequest, requestContext As RequestContext, cancellationToken As CancellationToken) As Task(Of HttpResponse(Of TResponse))
  overload: Okta.Sdk.Internal.DefaultDataStore.PutAsync*
  implements:
  - Okta.Sdk.Internal.IDataStore.PutAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  nameWithType.vb: DefaultDataStore.PutAsync(Of TResponse)(HttpRequest, RequestContext, CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Internal.DefaultDataStore.PutAsync(Of TResponse)(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  name.vb: PutAsync(Of TResponse)(HttpRequest, RequestContext, CancellationToken)
- uid: Okta.Sdk.Internal.DefaultDataStore.DeleteAsync(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.DefaultDataStore.DeleteAsync(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  id: DeleteAsync(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.DefaultDataStore
  langs:
  - csharp
  - vb
  name: DeleteAsync(HttpRequest, RequestContext, CancellationToken)
  nameWithType: DefaultDataStore.DeleteAsync(HttpRequest, RequestContext, CancellationToken)
  fullName: Okta.Sdk.Internal.DefaultDataStore.DeleteAsync(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/DefaultDataStore.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteAsync
    path: ../src/Okta.Sdk/Internal/DefaultDataStore.cs
    startLine: 257
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  example: []
  syntax:
    content: public async Task<HttpResponse> DeleteAsync(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: Okta.Sdk.HttpRequest
    - id: requestContext
      type: Okta.Sdk.RequestContext
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse}
    content.vb: Public Function DeleteAsync(request As HttpRequest, requestContext As RequestContext, cancellationToken As CancellationToken) As Task(Of HttpResponse)
  overload: Okta.Sdk.Internal.DefaultDataStore.DeleteAsync*
  implements:
  - Okta.Sdk.Internal.IDataStore.DeleteAsync(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk.Internal.IDataStore
  commentId: T:Okta.Sdk.Internal.IDataStore
  parent: Okta.Sdk.Internal
  name: IDataStore
  nameWithType: IDataStore
  fullName: Okta.Sdk.Internal.IDataStore
- uid: Okta.Sdk.Internal
  commentId: N:Okta.Sdk.Internal
  name: Okta.Sdk.Internal
  nameWithType: Okta.Sdk.Internal
  fullName: Okta.Sdk.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.Internal.DefaultDataStore
  commentId: T:Okta.Sdk.Internal.DefaultDataStore
  name: DefaultDataStore
  nameWithType: DefaultDataStore
  fullName: Okta.Sdk.Internal.DefaultDataStore
- uid: Okta.Sdk.Internal.IRequestExecutor
  commentId: T:Okta.Sdk.Internal.IRequestExecutor
  parent: Okta.Sdk.Internal
  name: IRequestExecutor
  nameWithType: IRequestExecutor
  fullName: Okta.Sdk.Internal.IRequestExecutor
- uid: Okta.Sdk.Internal.ISerializer
  commentId: T:Okta.Sdk.Internal.ISerializer
  parent: Okta.Sdk.Internal
  name: ISerializer
  nameWithType: ISerializer
  fullName: Okta.Sdk.Internal.ISerializer
- uid: Okta.Sdk.Internal.ResourceFactory
  commentId: T:Okta.Sdk.Internal.ResourceFactory
  parent: Okta.Sdk.Internal
  name: ResourceFactory
  nameWithType: ResourceFactory
  fullName: Okta.Sdk.Internal.ResourceFactory
- uid: Okta.Sdk.Internal.DefaultDataStore.#ctor*
  commentId: Overload:Okta.Sdk.Internal.DefaultDataStore.#ctor
  name: DefaultDataStore
  nameWithType: DefaultDataStore.DefaultDataStore
  fullName: Okta.Sdk.Internal.DefaultDataStore.DefaultDataStore
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Okta.Sdk.Internal.DefaultDataStore.RequestExecutor*
  commentId: Overload:Okta.Sdk.Internal.DefaultDataStore.RequestExecutor
  name: RequestExecutor
  nameWithType: DefaultDataStore.RequestExecutor
  fullName: Okta.Sdk.Internal.DefaultDataStore.RequestExecutor
- uid: Okta.Sdk.Internal.IDataStore.RequestExecutor
  commentId: P:Okta.Sdk.Internal.IDataStore.RequestExecutor
  parent: Okta.Sdk.Internal.IDataStore
  name: RequestExecutor
  nameWithType: IDataStore.RequestExecutor
  fullName: Okta.Sdk.Internal.IDataStore.RequestExecutor
- uid: Okta.Sdk.Internal.DefaultDataStore.Serializer*
  commentId: Overload:Okta.Sdk.Internal.DefaultDataStore.Serializer
  name: Serializer
  nameWithType: DefaultDataStore.Serializer
  fullName: Okta.Sdk.Internal.DefaultDataStore.Serializer
- uid: Okta.Sdk.Internal.IDataStore.Serializer
  commentId: P:Okta.Sdk.Internal.IDataStore.Serializer
  parent: Okta.Sdk.Internal.IDataStore
  name: Serializer
  nameWithType: IDataStore.Serializer
  fullName: Okta.Sdk.Internal.IDataStore.Serializer
- uid: Okta.Sdk.Internal.DefaultDataStore.GetAsync*
  commentId: Overload:Okta.Sdk.Internal.DefaultDataStore.GetAsync
  name: GetAsync
  nameWithType: DefaultDataStore.GetAsync
  fullName: Okta.Sdk.Internal.DefaultDataStore.GetAsync
- uid: Okta.Sdk.Internal.IDataStore.GetAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.IDataStore.GetAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.IDataStore
  isExternal: true
  name: GetAsync<T>(HttpRequest, RequestContext, CancellationToken)
  nameWithType: IDataStore.GetAsync<T>(HttpRequest, RequestContext, CancellationToken)
  fullName: Okta.Sdk.Internal.IDataStore.GetAsync<T>(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  nameWithType.vb: IDataStore.GetAsync(Of T)(HttpRequest, RequestContext, CancellationToken)
  fullName.vb: Okta.Sdk.Internal.IDataStore.GetAsync(Of T)(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(HttpRequest, RequestContext, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.Internal.IDataStore.GetAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
    name: GetAsync<T>
    nameWithType: IDataStore.GetAsync<T>
    fullName: Okta.Sdk.Internal.IDataStore.GetAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Internal.IDataStore.GetAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
    name: GetAsync(Of T)
    nameWithType: IDataStore.GetAsync(Of T)
    fullName: Okta.Sdk.Internal.IDataStore.GetAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.HttpRequest
  commentId: T:Okta.Sdk.HttpRequest
  parent: Okta.Sdk
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Okta.Sdk.HttpRequest
- uid: Okta.Sdk.RequestContext
  commentId: T:Okta.Sdk.RequestContext
  parent: Okta.Sdk
  name: RequestContext
  nameWithType: RequestContext
  fullName: Okta.Sdk.RequestContext
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{{T}}}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HttpResponse<T>>
  nameWithType: Task<HttpResponse<T>>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.HttpResponse<T>>
  nameWithType.vb: Task(Of HttpResponse(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.HttpResponse(Of T))
  name.vb: Task(Of HttpResponse(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.HttpResponse`1
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: Okta.Sdk.HttpResponse
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.HttpResponse`1
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: Okta.Sdk.HttpResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.Internal.DefaultDataStore.GetArrayAsync*
  commentId: Overload:Okta.Sdk.Internal.DefaultDataStore.GetArrayAsync
  name: GetArrayAsync
  nameWithType: DefaultDataStore.GetArrayAsync
  fullName: Okta.Sdk.Internal.DefaultDataStore.GetArrayAsync
- uid: Okta.Sdk.Internal.IDataStore.GetArrayAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.IDataStore.GetArrayAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.IDataStore
  isExternal: true
  name: GetArrayAsync<T>(HttpRequest, RequestContext, CancellationToken)
  nameWithType: IDataStore.GetArrayAsync<T>(HttpRequest, RequestContext, CancellationToken)
  fullName: Okta.Sdk.Internal.IDataStore.GetArrayAsync<T>(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  nameWithType.vb: IDataStore.GetArrayAsync(Of T)(HttpRequest, RequestContext, CancellationToken)
  fullName.vb: Okta.Sdk.Internal.IDataStore.GetArrayAsync(Of T)(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  name.vb: GetArrayAsync(Of T)(HttpRequest, RequestContext, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.Internal.IDataStore.GetArrayAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
    name: GetArrayAsync<T>
    nameWithType: IDataStore.GetArrayAsync<T>
    fullName: Okta.Sdk.Internal.IDataStore.GetArrayAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Internal.IDataStore.GetArrayAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
    name: GetArrayAsync(Of T)
    nameWithType: IDataStore.GetArrayAsync(Of T)
    fullName: Okta.Sdk.Internal.IDataStore.GetArrayAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{System.Collections.Generic.IEnumerable{{T}}}}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{System.Collections.Generic.IEnumerable{``0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HttpResponse<IEnumerable<T>>>
  nameWithType: Task<HttpResponse<IEnumerable<T>>>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.HttpResponse<System.Collections.Generic.IEnumerable<T>>>
  nameWithType.vb: Task(Of HttpResponse(Of IEnumerable(Of T)))
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.HttpResponse(Of System.Collections.Generic.IEnumerable(Of T)))
  name.vb: Task(Of HttpResponse(Of IEnumerable(Of T)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.HttpResponse`1
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: Okta.Sdk.HttpResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.HttpResponse`1
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: Okta.Sdk.HttpResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Internal.DefaultDataStore.PostAsync*
  commentId: Overload:Okta.Sdk.Internal.DefaultDataStore.PostAsync
  name: PostAsync
  nameWithType: DefaultDataStore.PostAsync
  fullName: Okta.Sdk.Internal.DefaultDataStore.PostAsync
- uid: Okta.Sdk.Internal.IDataStore.PostAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.IDataStore.PostAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.IDataStore
  isExternal: true
  name: PostAsync<TResponse>(HttpRequest, RequestContext, CancellationToken)
  nameWithType: IDataStore.PostAsync<TResponse>(HttpRequest, RequestContext, CancellationToken)
  fullName: Okta.Sdk.Internal.IDataStore.PostAsync<TResponse>(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  nameWithType.vb: IDataStore.PostAsync(Of TResponse)(HttpRequest, RequestContext, CancellationToken)
  fullName.vb: Okta.Sdk.Internal.IDataStore.PostAsync(Of TResponse)(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  name.vb: PostAsync(Of TResponse)(HttpRequest, RequestContext, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.Internal.IDataStore.PostAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
    name: PostAsync<TResponse>
    nameWithType: IDataStore.PostAsync<TResponse>
    fullName: Okta.Sdk.Internal.IDataStore.PostAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Internal.IDataStore.PostAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
    name: PostAsync(Of TResponse)
    nameWithType: IDataStore.PostAsync(Of TResponse)
    fullName: Okta.Sdk.Internal.IDataStore.PostAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{{TResponse}}}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HttpResponse<TResponse>>
  nameWithType: Task<HttpResponse<TResponse>>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.HttpResponse<TResponse>>
  nameWithType.vb: Task(Of HttpResponse(Of TResponse))
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.HttpResponse(Of TResponse))
  name.vb: Task(Of HttpResponse(Of TResponse))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.HttpResponse`1
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: Okta.Sdk.HttpResponse
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.HttpResponse`1
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: Okta.Sdk.HttpResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Internal.DefaultDataStore.PutAsync*
  commentId: Overload:Okta.Sdk.Internal.DefaultDataStore.PutAsync
  name: PutAsync
  nameWithType: DefaultDataStore.PutAsync
  fullName: Okta.Sdk.Internal.DefaultDataStore.PutAsync
- uid: Okta.Sdk.Internal.IDataStore.PutAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.IDataStore.PutAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.IDataStore
  isExternal: true
  name: PutAsync<TResponse>(HttpRequest, RequestContext, CancellationToken)
  nameWithType: IDataStore.PutAsync<TResponse>(HttpRequest, RequestContext, CancellationToken)
  fullName: Okta.Sdk.Internal.IDataStore.PutAsync<TResponse>(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  nameWithType.vb: IDataStore.PutAsync(Of TResponse)(HttpRequest, RequestContext, CancellationToken)
  fullName.vb: Okta.Sdk.Internal.IDataStore.PutAsync(Of TResponse)(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  name.vb: PutAsync(Of TResponse)(HttpRequest, RequestContext, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.Internal.IDataStore.PutAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
    name: PutAsync<TResponse>
    nameWithType: IDataStore.PutAsync<TResponse>
    fullName: Okta.Sdk.Internal.IDataStore.PutAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Internal.IDataStore.PutAsync``1(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
    name: PutAsync(Of TResponse)
    nameWithType: IDataStore.PutAsync(Of TResponse)
    fullName: Okta.Sdk.Internal.IDataStore.PutAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Internal.DefaultDataStore.DeleteAsync*
  commentId: Overload:Okta.Sdk.Internal.DefaultDataStore.DeleteAsync
  name: DeleteAsync
  nameWithType: DefaultDataStore.DeleteAsync
  fullName: Okta.Sdk.Internal.DefaultDataStore.DeleteAsync
- uid: Okta.Sdk.Internal.IDataStore.DeleteAsync(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.IDataStore.DeleteAsync(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.IDataStore
  isExternal: true
  name: DeleteAsync(HttpRequest, RequestContext, CancellationToken)
  nameWithType: IDataStore.DeleteAsync(HttpRequest, RequestContext, CancellationToken)
  fullName: Okta.Sdk.Internal.IDataStore.DeleteAsync(Okta.Sdk.HttpRequest, Okta.Sdk.RequestContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.Internal.IDataStore.DeleteAsync(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IDataStore.DeleteAsync
    fullName: Okta.Sdk.Internal.IDataStore.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Internal.IDataStore.DeleteAsync(Okta.Sdk.HttpRequest,Okta.Sdk.RequestContext,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IDataStore.DeleteAsync
    fullName: Okta.Sdk.Internal.IDataStore.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.HttpResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HttpResponse>
  nameWithType: Task<HttpResponse>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.HttpResponse>
  nameWithType.vb: Task(Of HttpResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.HttpResponse)
  name.vb: Task(Of HttpResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.HttpResponse
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: Okta.Sdk.HttpResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.HttpResponse
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: Okta.Sdk.HttpResponse
  - name: )
    nameWithType: )
    fullName: )
