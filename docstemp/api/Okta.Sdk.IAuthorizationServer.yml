### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IAuthorizationServer
  commentId: T:Okta.Sdk.IAuthorizationServer
  id: IAuthorizationServer
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IAuthorizationServer.ActivateAsync(System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.Audiences
  - Okta.Sdk.IAuthorizationServer.Created
  - Okta.Sdk.IAuthorizationServer.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.CreatePolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.Credentials
  - Okta.Sdk.IAuthorizationServer.DeactivateAsync(System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.DeleteOAuth2ClaimAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.DeleteOAuth2ScopeAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.DeletePolicyAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.Description
  - Okta.Sdk.IAuthorizationServer.GetOAuth2ClaimAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.GetOAuth2ScopeAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.GetPolicyAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.GetRefreshTokenForClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.Id
  - Okta.Sdk.IAuthorizationServer.Issuer
  - Okta.Sdk.IAuthorizationServer.IssuerMode
  - Okta.Sdk.IAuthorizationServer.LastUpdated
  - Okta.Sdk.IAuthorizationServer.ListKeys
  - Okta.Sdk.IAuthorizationServer.ListOAuth2Claims
  - Okta.Sdk.IAuthorizationServer.ListOAuth2Clients
  - Okta.Sdk.IAuthorizationServer.ListOAuth2Scopes(System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.IAuthorizationServer.ListPolicies
  - Okta.Sdk.IAuthorizationServer.ListRefreshTokensForClient(System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.IAuthorizationServer.Name
  - Okta.Sdk.IAuthorizationServer.RevokeRefreshTokenForClientAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.RevokeRefreshTokensForClientAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.RotateKeys(Okta.Sdk.IJwkUse)
  - Okta.Sdk.IAuthorizationServer.Status
  - Okta.Sdk.IAuthorizationServer.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServer.UpdatePolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IAuthorizationServer
  nameWithType: IAuthorizationServer
  fullName: Okta.Sdk.IAuthorizationServer
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IAuthorizationServer
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 15
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: Represents a AuthorizationServer resource in the Okta API.
  example: []
  syntax:
    content: 'public interface IAuthorizationServer : IResource'
    content.vb: >-
      Public Interface IAuthorizationServer

          Inherits IResource
  inheritedMembers:
  - Okta.Sdk.IResource.Item(System.String)
  - Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  - Okta.Sdk.IResource.GetData
  - Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  - Okta.Sdk.IResource.GetProperty``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IAuthorizationServer.Audiences
  commentId: P:Okta.Sdk.IAuthorizationServer.Audiences
  id: Audiences
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: Audiences
  nameWithType: IAuthorizationServer.Audiences
  fullName: Okta.Sdk.IAuthorizationServer.Audiences
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Audiences
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 17
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IList<string> Audiences { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Property Audiences As IList(Of String)
  overload: Okta.Sdk.IAuthorizationServer.Audiences*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IAuthorizationServer.Created
  commentId: P:Okta.Sdk.IAuthorizationServer.Created
  id: Created
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: IAuthorizationServer.Created
  fullName: Okta.Sdk.IAuthorizationServer.Created
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Created
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: DateTimeOffset? Created { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: ReadOnly Property Created As DateTimeOffset?
  overload: Okta.Sdk.IAuthorizationServer.Created*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IAuthorizationServer.Credentials
  commentId: P:Okta.Sdk.IAuthorizationServer.Credentials
  id: Credentials
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: IAuthorizationServer.Credentials
  fullName: Okta.Sdk.IAuthorizationServer.Credentials
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Credentials
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 21
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IAuthorizationServerCredentials Credentials { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IAuthorizationServerCredentials
    content.vb: Property Credentials As IAuthorizationServerCredentials
  overload: Okta.Sdk.IAuthorizationServer.Credentials*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IAuthorizationServer.Description
  commentId: P:Okta.Sdk.IAuthorizationServer.Description
  id: Description
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: IAuthorizationServer.Description
  fullName: Okta.Sdk.IAuthorizationServer.Description
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Description
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 23
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Description As String
  overload: Okta.Sdk.IAuthorizationServer.Description*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IAuthorizationServer.Id
  commentId: P:Okta.Sdk.IAuthorizationServer.Id
  id: Id
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IAuthorizationServer.Id
  fullName: Okta.Sdk.IAuthorizationServer.Id
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Id
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 25
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Okta.Sdk.IAuthorizationServer.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IAuthorizationServer.Issuer
  commentId: P:Okta.Sdk.IAuthorizationServer.Issuer
  id: Issuer
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: Issuer
  nameWithType: IAuthorizationServer.Issuer
  fullName: Okta.Sdk.IAuthorizationServer.Issuer
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Issuer
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 27
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Issuer { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Issuer As String
  overload: Okta.Sdk.IAuthorizationServer.Issuer*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IAuthorizationServer.IssuerMode
  commentId: P:Okta.Sdk.IAuthorizationServer.IssuerMode
  id: IssuerMode
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: IssuerMode
  nameWithType: IAuthorizationServer.IssuerMode
  fullName: Okta.Sdk.IAuthorizationServer.IssuerMode
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IssuerMode
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 29
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string IssuerMode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property IssuerMode As String
  overload: Okta.Sdk.IAuthorizationServer.IssuerMode*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IAuthorizationServer.LastUpdated
  commentId: P:Okta.Sdk.IAuthorizationServer.LastUpdated
  id: LastUpdated
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: LastUpdated
  nameWithType: IAuthorizationServer.LastUpdated
  fullName: Okta.Sdk.IAuthorizationServer.LastUpdated
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: LastUpdated
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 31
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: DateTimeOffset? LastUpdated { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: ReadOnly Property LastUpdated As DateTimeOffset?
  overload: Okta.Sdk.IAuthorizationServer.LastUpdated*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IAuthorizationServer.Name
  commentId: P:Okta.Sdk.IAuthorizationServer.Name
  id: Name
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IAuthorizationServer.Name
  fullName: Okta.Sdk.IAuthorizationServer.Name
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Name
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 33
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Name As String
  overload: Okta.Sdk.IAuthorizationServer.Name*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IAuthorizationServer.Status
  commentId: P:Okta.Sdk.IAuthorizationServer.Status
  id: Status
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: IAuthorizationServer.Status
  fullName: Okta.Sdk.IAuthorizationServer.Status
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Status
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 35
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Status { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Status As String
  overload: Okta.Sdk.IAuthorizationServer.Status*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IAuthorizationServer.ListOAuth2Claims
  commentId: M:Okta.Sdk.IAuthorizationServer.ListOAuth2Claims
  id: ListOAuth2Claims
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: ListOAuth2Claims()
  nameWithType: IAuthorizationServer.ListOAuth2Claims()
  fullName: Okta.Sdk.IAuthorizationServer.ListOAuth2Claims()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListOAuth2Claims
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 37
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: ICollectionClient<IOAuth2Claim> ListOAuth2Claims()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Claim}
    content.vb: Function ListOAuth2Claims As ICollectionClient(Of IOAuth2Claim)
  overload: Okta.Sdk.IAuthorizationServer.ListOAuth2Claims*
- uid: Okta.Sdk.IAuthorizationServer.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.Threading.CancellationToken)
  id: CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: CreateOAuth2ClaimAsync(IOAuth2Claim, CancellationToken)
  nameWithType: IAuthorizationServer.CreateOAuth2ClaimAsync(IOAuth2Claim, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateOAuth2ClaimAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 40
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IOAuth2Claim> CreateOAuth2ClaimAsync(IOAuth2Claim oAuth2Claim, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oAuth2Claim
      type: Okta.Sdk.IOAuth2Claim
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
    content.vb: Function CreateOAuth2ClaimAsync(oAuth2Claim As IOAuth2Claim, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Claim)
  overload: Okta.Sdk.IAuthorizationServer.CreateOAuth2ClaimAsync*
- uid: Okta.Sdk.IAuthorizationServer.DeleteOAuth2ClaimAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.DeleteOAuth2ClaimAsync(System.String,System.Threading.CancellationToken)
  id: DeleteOAuth2ClaimAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: DeleteOAuth2ClaimAsync(String, CancellationToken)
  nameWithType: IAuthorizationServer.DeleteOAuth2ClaimAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.DeleteOAuth2ClaimAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteOAuth2ClaimAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 43
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task DeleteOAuth2ClaimAsync(string claimId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: claimId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteOAuth2ClaimAsync(claimId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServer.DeleteOAuth2ClaimAsync*
- uid: Okta.Sdk.IAuthorizationServer.GetOAuth2ClaimAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.GetOAuth2ClaimAsync(System.String,System.Threading.CancellationToken)
  id: GetOAuth2ClaimAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: GetOAuth2ClaimAsync(String, CancellationToken)
  nameWithType: IAuthorizationServer.GetOAuth2ClaimAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.GetOAuth2ClaimAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetOAuth2ClaimAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 46
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IOAuth2Claim> GetOAuth2ClaimAsync(string claimId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: claimId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
    content.vb: Function GetOAuth2ClaimAsync(claimId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Claim)
  overload: Okta.Sdk.IAuthorizationServer.GetOAuth2ClaimAsync*
- uid: Okta.Sdk.IAuthorizationServer.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  id: UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: UpdateOAuth2ClaimAsync(IOAuth2Claim, String, CancellationToken)
  nameWithType: IAuthorizationServer.UpdateOAuth2ClaimAsync(IOAuth2Claim, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateOAuth2ClaimAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 49
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IOAuth2Claim> UpdateOAuth2ClaimAsync(IOAuth2Claim oAuth2Claim, string claimId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oAuth2Claim
      type: Okta.Sdk.IOAuth2Claim
    - id: claimId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
    content.vb: Function UpdateOAuth2ClaimAsync(oAuth2Claim As IOAuth2Claim, claimId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Claim)
  overload: Okta.Sdk.IAuthorizationServer.UpdateOAuth2ClaimAsync*
- uid: Okta.Sdk.IAuthorizationServer.ListOAuth2Clients
  commentId: M:Okta.Sdk.IAuthorizationServer.ListOAuth2Clients
  id: ListOAuth2Clients
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: ListOAuth2Clients()
  nameWithType: IAuthorizationServer.ListOAuth2Clients()
  fullName: Okta.Sdk.IAuthorizationServer.ListOAuth2Clients()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListOAuth2Clients
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 52
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: ICollectionClient<IOAuth2Client> ListOAuth2Clients()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
    content.vb: Function ListOAuth2Clients As ICollectionClient(Of IOAuth2Client)
  overload: Okta.Sdk.IAuthorizationServer.ListOAuth2Clients*
- uid: Okta.Sdk.IAuthorizationServer.RevokeRefreshTokensForClientAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.RevokeRefreshTokensForClientAsync(System.String,System.Threading.CancellationToken)
  id: RevokeRefreshTokensForClientAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: RevokeRefreshTokensForClientAsync(String, CancellationToken)
  nameWithType: IAuthorizationServer.RevokeRefreshTokensForClientAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.RevokeRefreshTokensForClientAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeRefreshTokensForClientAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 55
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task RevokeRefreshTokensForClientAsync(string clientId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: clientId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RevokeRefreshTokensForClientAsync(clientId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServer.RevokeRefreshTokensForClientAsync*
- uid: Okta.Sdk.IAuthorizationServer.ListRefreshTokensForClient(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IAuthorizationServer.ListRefreshTokensForClient(System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListRefreshTokensForClient(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: ListRefreshTokensForClient(String, String, String, Nullable<Int32>)
  nameWithType: IAuthorizationServer.ListRefreshTokensForClient(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IAuthorizationServer.ListRefreshTokensForClient(System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListRefreshTokensForClient
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 58
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: ICollectionClient<IOAuth2RefreshToken> ListRefreshTokensForClient(string clientId, string expand = null, string after = null, int? limit = -1)
    parameters:
    - id: clientId
      type: System.String
    - id: expand
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
    content.vb: Function ListRefreshTokensForClient(clientId As String, expand As String = Nothing, after As String = Nothing, limit As Integer? = -1) As ICollectionClient(Of IOAuth2RefreshToken)
  overload: Okta.Sdk.IAuthorizationServer.ListRefreshTokensForClient*
  nameWithType.vb: IAuthorizationServer.ListRefreshTokensForClient(String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IAuthorizationServer.ListRefreshTokensForClient(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListRefreshTokensForClient(String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.IAuthorizationServer.GetRefreshTokenForClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.GetRefreshTokenForClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetRefreshTokenForClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: GetRefreshTokenForClientAsync(String, String, String, CancellationToken)
  nameWithType: IAuthorizationServer.GetRefreshTokenForClientAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.GetRefreshTokenForClientAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetRefreshTokenForClientAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 61
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IOAuth2RefreshToken> GetRefreshTokenForClientAsync(string clientId, string tokenId, string expand = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: clientId
      type: System.String
    - id: tokenId
      type: System.String
    - id: expand
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
    content.vb: Function GetRefreshTokenForClientAsync(clientId As String, tokenId As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2RefreshToken)
  overload: Okta.Sdk.IAuthorizationServer.GetRefreshTokenForClientAsync*
- uid: Okta.Sdk.IAuthorizationServer.RevokeRefreshTokenForClientAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.RevokeRefreshTokenForClientAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RevokeRefreshTokenForClientAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: RevokeRefreshTokenForClientAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServer.RevokeRefreshTokenForClientAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.RevokeRefreshTokenForClientAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeRefreshTokenForClientAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 64
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task RevokeRefreshTokenForClientAsync(string clientId, string tokenId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: clientId
      type: System.String
    - id: tokenId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RevokeRefreshTokenForClientAsync(clientId As String, tokenId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServer.RevokeRefreshTokenForClientAsync*
- uid: Okta.Sdk.IAuthorizationServer.ListKeys
  commentId: M:Okta.Sdk.IAuthorizationServer.ListKeys
  id: ListKeys
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: ListKeys()
  nameWithType: IAuthorizationServer.ListKeys()
  fullName: Okta.Sdk.IAuthorizationServer.ListKeys()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListKeys
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 67
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: ICollectionClient<IJsonWebKey> ListKeys()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
    content.vb: Function ListKeys As ICollectionClient(Of IJsonWebKey)
  overload: Okta.Sdk.IAuthorizationServer.ListKeys*
- uid: Okta.Sdk.IAuthorizationServer.RotateKeys(Okta.Sdk.IJwkUse)
  commentId: M:Okta.Sdk.IAuthorizationServer.RotateKeys(Okta.Sdk.IJwkUse)
  id: RotateKeys(Okta.Sdk.IJwkUse)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: RotateKeys(IJwkUse)
  nameWithType: IAuthorizationServer.RotateKeys(IJwkUse)
  fullName: Okta.Sdk.IAuthorizationServer.RotateKeys(Okta.Sdk.IJwkUse)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RotateKeys
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 70
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: ICollectionClient<IJsonWebKey> RotateKeys(IJwkUse use)
    parameters:
    - id: use
      type: Okta.Sdk.IJwkUse
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
    content.vb: Function RotateKeys(use As IJwkUse) As ICollectionClient(Of IJsonWebKey)
  overload: Okta.Sdk.IAuthorizationServer.RotateKeys*
- uid: Okta.Sdk.IAuthorizationServer.ActivateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.ActivateAsync(System.Threading.CancellationToken)
  id: ActivateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: ActivateAsync(CancellationToken)
  nameWithType: IAuthorizationServer.ActivateAsync(CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.ActivateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 73
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task ActivateAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ActivateAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServer.ActivateAsync*
- uid: Okta.Sdk.IAuthorizationServer.DeactivateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.DeactivateAsync(System.Threading.CancellationToken)
  id: DeactivateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: DeactivateAsync(CancellationToken)
  nameWithType: IAuthorizationServer.DeactivateAsync(CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.DeactivateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 76
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task DeactivateAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeactivateAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServer.DeactivateAsync*
- uid: Okta.Sdk.IAuthorizationServer.ListPolicies
  commentId: M:Okta.Sdk.IAuthorizationServer.ListPolicies
  id: ListPolicies
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: ListPolicies()
  nameWithType: IAuthorizationServer.ListPolicies()
  fullName: Okta.Sdk.IAuthorizationServer.ListPolicies()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListPolicies
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 79
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: ICollectionClient<IAuthorizationServerPolicy> ListPolicies()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicy}
    content.vb: Function ListPolicies As ICollectionClient(Of IAuthorizationServerPolicy)
  overload: Okta.Sdk.IAuthorizationServer.ListPolicies*
- uid: Okta.Sdk.IAuthorizationServer.CreatePolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.CreatePolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.Threading.CancellationToken)
  id: CreatePolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: CreatePolicyAsync(IAuthorizationServerPolicy, CancellationToken)
  nameWithType: IAuthorizationServer.CreatePolicyAsync(IAuthorizationServerPolicy, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.CreatePolicyAsync(Okta.Sdk.IAuthorizationServerPolicy, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreatePolicyAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 82
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IAuthorizationServerPolicy> CreatePolicyAsync(IAuthorizationServerPolicy policy, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policy
      type: Okta.Sdk.IAuthorizationServerPolicy
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
    content.vb: Function CreatePolicyAsync(policy As IAuthorizationServerPolicy, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicy)
  overload: Okta.Sdk.IAuthorizationServer.CreatePolicyAsync*
- uid: Okta.Sdk.IAuthorizationServer.DeletePolicyAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.DeletePolicyAsync(System.String,System.Threading.CancellationToken)
  id: DeletePolicyAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: DeletePolicyAsync(String, CancellationToken)
  nameWithType: IAuthorizationServer.DeletePolicyAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.DeletePolicyAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeletePolicyAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 85
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task DeletePolicyAsync(string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeletePolicyAsync(policyId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServer.DeletePolicyAsync*
- uid: Okta.Sdk.IAuthorizationServer.GetPolicyAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.GetPolicyAsync(System.String,System.Threading.CancellationToken)
  id: GetPolicyAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: GetPolicyAsync(String, CancellationToken)
  nameWithType: IAuthorizationServer.GetPolicyAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.GetPolicyAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetPolicyAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 88
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IAuthorizationServerPolicy> GetPolicyAsync(string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
    content.vb: Function GetPolicyAsync(policyId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicy)
  overload: Okta.Sdk.IAuthorizationServer.GetPolicyAsync*
- uid: Okta.Sdk.IAuthorizationServer.UpdatePolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.UpdatePolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  id: UpdatePolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: UpdatePolicyAsync(IAuthorizationServerPolicy, String, CancellationToken)
  nameWithType: IAuthorizationServer.UpdatePolicyAsync(IAuthorizationServerPolicy, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.UpdatePolicyAsync(Okta.Sdk.IAuthorizationServerPolicy, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdatePolicyAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 91
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IAuthorizationServerPolicy> UpdatePolicyAsync(IAuthorizationServerPolicy policy, string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policy
      type: Okta.Sdk.IAuthorizationServerPolicy
    - id: policyId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
    content.vb: Function UpdatePolicyAsync(policy As IAuthorizationServerPolicy, policyId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicy)
  overload: Okta.Sdk.IAuthorizationServer.UpdatePolicyAsync*
- uid: Okta.Sdk.IAuthorizationServer.ListOAuth2Scopes(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IAuthorizationServer.ListOAuth2Scopes(System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListOAuth2Scopes(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: ListOAuth2Scopes(String, String, String, Nullable<Int32>)
  nameWithType: IAuthorizationServer.ListOAuth2Scopes(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IAuthorizationServer.ListOAuth2Scopes(System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListOAuth2Scopes
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 94
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: ICollectionClient<IOAuth2Scope> ListOAuth2Scopes(string q = null, string filter = null, string cursor = null, int? limit = -1)
    parameters:
    - id: q
      type: System.String
    - id: filter
      type: System.String
    - id: cursor
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Scope}
    content.vb: Function ListOAuth2Scopes(q As String = Nothing, filter As String = Nothing, cursor As String = Nothing, limit As Integer? = -1) As ICollectionClient(Of IOAuth2Scope)
  overload: Okta.Sdk.IAuthorizationServer.ListOAuth2Scopes*
  nameWithType.vb: IAuthorizationServer.ListOAuth2Scopes(String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IAuthorizationServer.ListOAuth2Scopes(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListOAuth2Scopes(String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.IAuthorizationServer.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.Threading.CancellationToken)
  id: CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: CreateOAuth2ScopeAsync(IOAuth2Scope, CancellationToken)
  nameWithType: IAuthorizationServer.CreateOAuth2ScopeAsync(IOAuth2Scope, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateOAuth2ScopeAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 97
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IOAuth2Scope> CreateOAuth2ScopeAsync(IOAuth2Scope oAuth2Scope, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oAuth2Scope
      type: Okta.Sdk.IOAuth2Scope
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
    content.vb: Function CreateOAuth2ScopeAsync(oAuth2Scope As IOAuth2Scope, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Scope)
  overload: Okta.Sdk.IAuthorizationServer.CreateOAuth2ScopeAsync*
- uid: Okta.Sdk.IAuthorizationServer.DeleteOAuth2ScopeAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.DeleteOAuth2ScopeAsync(System.String,System.Threading.CancellationToken)
  id: DeleteOAuth2ScopeAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: DeleteOAuth2ScopeAsync(String, CancellationToken)
  nameWithType: IAuthorizationServer.DeleteOAuth2ScopeAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.DeleteOAuth2ScopeAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteOAuth2ScopeAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 100
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task DeleteOAuth2ScopeAsync(string scopeId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: scopeId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteOAuth2ScopeAsync(scopeId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServer.DeleteOAuth2ScopeAsync*
- uid: Okta.Sdk.IAuthorizationServer.GetOAuth2ScopeAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.GetOAuth2ScopeAsync(System.String,System.Threading.CancellationToken)
  id: GetOAuth2ScopeAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: GetOAuth2ScopeAsync(String, CancellationToken)
  nameWithType: IAuthorizationServer.GetOAuth2ScopeAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.GetOAuth2ScopeAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetOAuth2ScopeAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 103
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IOAuth2Scope> GetOAuth2ScopeAsync(string scopeId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: scopeId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
    content.vb: Function GetOAuth2ScopeAsync(scopeId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Scope)
  overload: Okta.Sdk.IAuthorizationServer.GetOAuth2ScopeAsync*
- uid: Okta.Sdk.IAuthorizationServer.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServer.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  id: UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServer
  langs:
  - csharp
  - vb
  name: UpdateOAuth2ScopeAsync(IOAuth2Scope, String, CancellationToken)
  nameWithType: IAuthorizationServer.UpdateOAuth2ScopeAsync(IOAuth2Scope, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServer.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateOAuth2ScopeAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServer.Generated.cs
    startLine: 106
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<IOAuth2Scope> UpdateOAuth2ScopeAsync(IOAuth2Scope oAuth2Scope, string scopeId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oAuth2Scope
      type: Okta.Sdk.IOAuth2Scope
    - id: scopeId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
    content.vb: Function UpdateOAuth2ScopeAsync(oAuth2Scope As IOAuth2Scope, scopeId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Scope)
  overload: Okta.Sdk.IAuthorizationServer.UpdateOAuth2ScopeAsync*
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IResource.Item(System.String)
  commentId: P:Okta.Sdk.IResource.Item(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: Item[String]
  nameWithType: IResource.Item[String]
  fullName: Okta.Sdk.IResource.Item[System.String]
  nameWithType.vb: IResource.Item(String)
  fullName.vb: Okta.Sdk.IResource.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetArrayProperty<T>(String)
  nameWithType: IResource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetArrayProperty<T>(System.String)
  nameWithType.vb: IResource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty<T>
    nameWithType: IResource.GetArrayProperty<T>
    fullName: Okta.Sdk.IResource.GetArrayProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty(Of T)
    nameWithType: IResource.GetArrayProperty(Of T)
    fullName: Okta.Sdk.IResource.GetArrayProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetData
  commentId: M:Okta.Sdk.IResource.GetData
  parent: Okta.Sdk.IResource
  name: GetData()
  nameWithType: IResource.GetData()
  fullName: Okta.Sdk.IResource.GetData()
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: IResource.SetProperty(String, Object)
  fullName: Okta.Sdk.IResource.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: IResource.GetProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetProperty<T>(System.String)
  nameWithType.vb: IResource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: IResource.GetProperty<T>
    fullName: Okta.Sdk.IResource.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: IResource.GetProperty(Of T)
    fullName: Okta.Sdk.IResource.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  parent: Okta.Sdk
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
- uid: Okta.Sdk.IAuthorizationServer.Audiences*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.Audiences
  name: Audiences
  nameWithType: IAuthorizationServer.Audiences
  fullName: Okta.Sdk.IAuthorizationServer.Audiences
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.IAuthorizationServer.Created*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.Created
  name: Created
  nameWithType: IAuthorizationServer.Created
  fullName: Okta.Sdk.IAuthorizationServer.Created
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.IAuthorizationServer.Credentials*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.Credentials
  name: Credentials
  nameWithType: IAuthorizationServer.Credentials
  fullName: Okta.Sdk.IAuthorizationServer.Credentials
- uid: Okta.Sdk.IAuthorizationServerCredentials
  commentId: T:Okta.Sdk.IAuthorizationServerCredentials
  parent: Okta.Sdk
  name: IAuthorizationServerCredentials
  nameWithType: IAuthorizationServerCredentials
  fullName: Okta.Sdk.IAuthorizationServerCredentials
- uid: Okta.Sdk.IAuthorizationServer.Description*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.Description
  name: Description
  nameWithType: IAuthorizationServer.Description
  fullName: Okta.Sdk.IAuthorizationServer.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.IAuthorizationServer.Id*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.Id
  name: Id
  nameWithType: IAuthorizationServer.Id
  fullName: Okta.Sdk.IAuthorizationServer.Id
- uid: Okta.Sdk.IAuthorizationServer.Issuer*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.Issuer
  name: Issuer
  nameWithType: IAuthorizationServer.Issuer
  fullName: Okta.Sdk.IAuthorizationServer.Issuer
- uid: Okta.Sdk.IAuthorizationServer.IssuerMode*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.IssuerMode
  name: IssuerMode
  nameWithType: IAuthorizationServer.IssuerMode
  fullName: Okta.Sdk.IAuthorizationServer.IssuerMode
- uid: Okta.Sdk.IAuthorizationServer.LastUpdated*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.LastUpdated
  name: LastUpdated
  nameWithType: IAuthorizationServer.LastUpdated
  fullName: Okta.Sdk.IAuthorizationServer.LastUpdated
- uid: Okta.Sdk.IAuthorizationServer.Name*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.Name
  name: Name
  nameWithType: IAuthorizationServer.Name
  fullName: Okta.Sdk.IAuthorizationServer.Name
- uid: Okta.Sdk.IAuthorizationServer.Status*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.Status
  name: Status
  nameWithType: IAuthorizationServer.Status
  fullName: Okta.Sdk.IAuthorizationServer.Status
- uid: Okta.Sdk.IAuthorizationServer.ListOAuth2Claims*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.ListOAuth2Claims
  name: ListOAuth2Claims
  nameWithType: IAuthorizationServer.ListOAuth2Claims
  fullName: Okta.Sdk.IAuthorizationServer.ListOAuth2Claims
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Claim}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Claim}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2Claim>
  nameWithType: ICollectionClient<IOAuth2Claim>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2Claim>
  nameWithType.vb: ICollectionClient(Of IOAuth2Claim)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2Claim)
  name.vb: ICollectionClient(Of IOAuth2Claim)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServer.CreateOAuth2ClaimAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.CreateOAuth2ClaimAsync
  name: CreateOAuth2ClaimAsync
  nameWithType: IAuthorizationServer.CreateOAuth2ClaimAsync
  fullName: Okta.Sdk.IAuthorizationServer.CreateOAuth2ClaimAsync
- uid: Okta.Sdk.IOAuth2Claim
  commentId: T:Okta.Sdk.IOAuth2Claim
  parent: Okta.Sdk
  name: IOAuth2Claim
  nameWithType: IOAuth2Claim
  fullName: Okta.Sdk.IOAuth2Claim
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2Claim>
  nameWithType: Task<IOAuth2Claim>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2Claim>
  nameWithType.vb: Task(Of IOAuth2Claim)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2Claim)
  name.vb: Task(Of IOAuth2Claim)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.IAuthorizationServer.DeleteOAuth2ClaimAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.DeleteOAuth2ClaimAsync
  name: DeleteOAuth2ClaimAsync
  nameWithType: IAuthorizationServer.DeleteOAuth2ClaimAsync
  fullName: Okta.Sdk.IAuthorizationServer.DeleteOAuth2ClaimAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Okta.Sdk.IAuthorizationServer.GetOAuth2ClaimAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.GetOAuth2ClaimAsync
  name: GetOAuth2ClaimAsync
  nameWithType: IAuthorizationServer.GetOAuth2ClaimAsync
  fullName: Okta.Sdk.IAuthorizationServer.GetOAuth2ClaimAsync
- uid: Okta.Sdk.IAuthorizationServer.UpdateOAuth2ClaimAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.UpdateOAuth2ClaimAsync
  name: UpdateOAuth2ClaimAsync
  nameWithType: IAuthorizationServer.UpdateOAuth2ClaimAsync
  fullName: Okta.Sdk.IAuthorizationServer.UpdateOAuth2ClaimAsync
- uid: Okta.Sdk.IAuthorizationServer.ListOAuth2Clients*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.ListOAuth2Clients
  name: ListOAuth2Clients
  nameWithType: IAuthorizationServer.ListOAuth2Clients
  fullName: Okta.Sdk.IAuthorizationServer.ListOAuth2Clients
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2Client>
  nameWithType: ICollectionClient<IOAuth2Client>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2Client>
  nameWithType.vb: ICollectionClient(Of IOAuth2Client)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2Client)
  name.vb: ICollectionClient(Of IOAuth2Client)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Client
    name: IOAuth2Client
    nameWithType: IOAuth2Client
    fullName: Okta.Sdk.IOAuth2Client
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Client
    name: IOAuth2Client
    nameWithType: IOAuth2Client
    fullName: Okta.Sdk.IOAuth2Client
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServer.RevokeRefreshTokensForClientAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.RevokeRefreshTokensForClientAsync
  name: RevokeRefreshTokensForClientAsync
  nameWithType: IAuthorizationServer.RevokeRefreshTokensForClientAsync
  fullName: Okta.Sdk.IAuthorizationServer.RevokeRefreshTokensForClientAsync
- uid: Okta.Sdk.IAuthorizationServer.ListRefreshTokensForClient*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.ListRefreshTokensForClient
  name: ListRefreshTokensForClient
  nameWithType: IAuthorizationServer.ListRefreshTokensForClient
  fullName: Okta.Sdk.IAuthorizationServer.ListRefreshTokensForClient
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2RefreshToken>
  nameWithType: ICollectionClient<IOAuth2RefreshToken>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2RefreshToken>
  nameWithType.vb: ICollectionClient(Of IOAuth2RefreshToken)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2RefreshToken)
  name.vb: ICollectionClient(Of IOAuth2RefreshToken)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServer.GetRefreshTokenForClientAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.GetRefreshTokenForClientAsync
  name: GetRefreshTokenForClientAsync
  nameWithType: IAuthorizationServer.GetRefreshTokenForClientAsync
  fullName: Okta.Sdk.IAuthorizationServer.GetRefreshTokenForClientAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2RefreshToken>
  nameWithType: Task<IOAuth2RefreshToken>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2RefreshToken>
  nameWithType.vb: Task(Of IOAuth2RefreshToken)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2RefreshToken)
  name.vb: Task(Of IOAuth2RefreshToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServer.RevokeRefreshTokenForClientAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.RevokeRefreshTokenForClientAsync
  name: RevokeRefreshTokenForClientAsync
  nameWithType: IAuthorizationServer.RevokeRefreshTokenForClientAsync
  fullName: Okta.Sdk.IAuthorizationServer.RevokeRefreshTokenForClientAsync
- uid: Okta.Sdk.IAuthorizationServer.ListKeys*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.ListKeys
  name: ListKeys
  nameWithType: IAuthorizationServer.ListKeys
  fullName: Okta.Sdk.IAuthorizationServer.ListKeys
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IJsonWebKey>
  nameWithType: ICollectionClient<IJsonWebKey>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IJsonWebKey>
  nameWithType.vb: ICollectionClient(Of IJsonWebKey)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IJsonWebKey)
  name.vb: ICollectionClient(Of IJsonWebKey)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServer.RotateKeys*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.RotateKeys
  name: RotateKeys
  nameWithType: IAuthorizationServer.RotateKeys
  fullName: Okta.Sdk.IAuthorizationServer.RotateKeys
- uid: Okta.Sdk.IJwkUse
  commentId: T:Okta.Sdk.IJwkUse
  parent: Okta.Sdk
  name: IJwkUse
  nameWithType: IJwkUse
  fullName: Okta.Sdk.IJwkUse
- uid: Okta.Sdk.IAuthorizationServer.ActivateAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.ActivateAsync
  name: ActivateAsync
  nameWithType: IAuthorizationServer.ActivateAsync
  fullName: Okta.Sdk.IAuthorizationServer.ActivateAsync
- uid: Okta.Sdk.IAuthorizationServer.DeactivateAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.DeactivateAsync
  name: DeactivateAsync
  nameWithType: IAuthorizationServer.DeactivateAsync
  fullName: Okta.Sdk.IAuthorizationServer.DeactivateAsync
- uid: Okta.Sdk.IAuthorizationServer.ListPolicies*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.ListPolicies
  name: ListPolicies
  nameWithType: IAuthorizationServer.ListPolicies
  fullName: Okta.Sdk.IAuthorizationServer.ListPolicies
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicy}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicy}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IAuthorizationServerPolicy>
  nameWithType: ICollectionClient<IAuthorizationServerPolicy>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IAuthorizationServerPolicy>
  nameWithType.vb: ICollectionClient(Of IAuthorizationServerPolicy)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IAuthorizationServerPolicy)
  name.vb: ICollectionClient(Of IAuthorizationServerPolicy)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServer.CreatePolicyAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.CreatePolicyAsync
  name: CreatePolicyAsync
  nameWithType: IAuthorizationServer.CreatePolicyAsync
  fullName: Okta.Sdk.IAuthorizationServer.CreatePolicyAsync
- uid: Okta.Sdk.IAuthorizationServerPolicy
  commentId: T:Okta.Sdk.IAuthorizationServerPolicy
  parent: Okta.Sdk
  name: IAuthorizationServerPolicy
  nameWithType: IAuthorizationServerPolicy
  fullName: Okta.Sdk.IAuthorizationServerPolicy
- uid: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IAuthorizationServerPolicy>
  nameWithType: Task<IAuthorizationServerPolicy>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IAuthorizationServerPolicy>
  nameWithType.vb: Task(Of IAuthorizationServerPolicy)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IAuthorizationServerPolicy)
  name.vb: Task(Of IAuthorizationServerPolicy)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServer.DeletePolicyAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.DeletePolicyAsync
  name: DeletePolicyAsync
  nameWithType: IAuthorizationServer.DeletePolicyAsync
  fullName: Okta.Sdk.IAuthorizationServer.DeletePolicyAsync
- uid: Okta.Sdk.IAuthorizationServer.GetPolicyAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.GetPolicyAsync
  name: GetPolicyAsync
  nameWithType: IAuthorizationServer.GetPolicyAsync
  fullName: Okta.Sdk.IAuthorizationServer.GetPolicyAsync
- uid: Okta.Sdk.IAuthorizationServer.UpdatePolicyAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.UpdatePolicyAsync
  name: UpdatePolicyAsync
  nameWithType: IAuthorizationServer.UpdatePolicyAsync
  fullName: Okta.Sdk.IAuthorizationServer.UpdatePolicyAsync
- uid: Okta.Sdk.IAuthorizationServer.ListOAuth2Scopes*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.ListOAuth2Scopes
  name: ListOAuth2Scopes
  nameWithType: IAuthorizationServer.ListOAuth2Scopes
  fullName: Okta.Sdk.IAuthorizationServer.ListOAuth2Scopes
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Scope}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Scope}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2Scope>
  nameWithType: ICollectionClient<IOAuth2Scope>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2Scope>
  nameWithType.vb: ICollectionClient(Of IOAuth2Scope)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2Scope)
  name.vb: ICollectionClient(Of IOAuth2Scope)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServer.CreateOAuth2ScopeAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.CreateOAuth2ScopeAsync
  name: CreateOAuth2ScopeAsync
  nameWithType: IAuthorizationServer.CreateOAuth2ScopeAsync
  fullName: Okta.Sdk.IAuthorizationServer.CreateOAuth2ScopeAsync
- uid: Okta.Sdk.IOAuth2Scope
  commentId: T:Okta.Sdk.IOAuth2Scope
  parent: Okta.Sdk
  name: IOAuth2Scope
  nameWithType: IOAuth2Scope
  fullName: Okta.Sdk.IOAuth2Scope
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2Scope>
  nameWithType: Task<IOAuth2Scope>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2Scope>
  nameWithType.vb: Task(Of IOAuth2Scope)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2Scope)
  name.vb: Task(Of IOAuth2Scope)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServer.DeleteOAuth2ScopeAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.DeleteOAuth2ScopeAsync
  name: DeleteOAuth2ScopeAsync
  nameWithType: IAuthorizationServer.DeleteOAuth2ScopeAsync
  fullName: Okta.Sdk.IAuthorizationServer.DeleteOAuth2ScopeAsync
- uid: Okta.Sdk.IAuthorizationServer.GetOAuth2ScopeAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.GetOAuth2ScopeAsync
  name: GetOAuth2ScopeAsync
  nameWithType: IAuthorizationServer.GetOAuth2ScopeAsync
  fullName: Okta.Sdk.IAuthorizationServer.GetOAuth2ScopeAsync
- uid: Okta.Sdk.IAuthorizationServer.UpdateOAuth2ScopeAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServer.UpdateOAuth2ScopeAsync
  name: UpdateOAuth2ScopeAsync
  nameWithType: IAuthorizationServer.UpdateOAuth2ScopeAsync
  fullName: Okta.Sdk.IAuthorizationServer.UpdateOAuth2ScopeAsync
