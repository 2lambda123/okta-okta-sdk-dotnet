### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.Internal.DefaultSerializer
  commentId: T:Okta.Sdk.Internal.DefaultSerializer
  id: DefaultSerializer
  parent: Okta.Sdk.Internal
  children:
  - Okta.Sdk.Internal.DefaultSerializer.#ctor(Newtonsoft.Json.JsonSerializerSettings)
  - Okta.Sdk.Internal.DefaultSerializer.Deserialize(System.String)
  - Okta.Sdk.Internal.DefaultSerializer.DeserializeArray(System.String)
  - Okta.Sdk.Internal.DefaultSerializer.Serialize(System.Object)
  langs:
  - csharp
  - vb
  name: DefaultSerializer
  nameWithType: DefaultSerializer
  fullName: Okta.Sdk.Internal.DefaultSerializer
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/Internal/DefaultSerializer.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DefaultSerializer
    path: ../src/Okta.Sdk/Internal/DefaultSerializer.cs
    startLine: 17
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nThe default implementation of <xref href=\"Okta.Sdk.Internal.ISerializer\" data-throw-if-not-resolved=\"false\"></xref> that uses JSON.NET.\n"
  example: []
  syntax:
    content: 'public sealed class DefaultSerializer : ISerializer'
    content.vb: >-
      Public NotInheritable Class DefaultSerializer

          Implements ISerializer
  inheritance:
  - System.Object
  implements:
  - Okta.Sdk.Internal.ISerializer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Okta.Sdk.Internal.DefaultSerializer.#ctor(Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:Okta.Sdk.Internal.DefaultSerializer.#ctor(Newtonsoft.Json.JsonSerializerSettings)
  id: '#ctor(Newtonsoft.Json.JsonSerializerSettings)'
  parent: Okta.Sdk.Internal.DefaultSerializer
  langs:
  - csharp
  - vb
  name: DefaultSerializer(JsonSerializerSettings)
  nameWithType: DefaultSerializer.DefaultSerializer(JsonSerializerSettings)
  fullName: Okta.Sdk.Internal.DefaultSerializer.DefaultSerializer(Newtonsoft.Json.JsonSerializerSettings)
  type: Constructor
  source:
    remote:
      path: src/Okta.Sdk/Internal/DefaultSerializer.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: .ctor
    path: ../src/Okta.Sdk/Internal/DefaultSerializer.cs
    startLine: 26
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nInitializes a new instance of the <xref href=\"Okta.Sdk.Internal.DefaultSerializer\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DefaultSerializer(JsonSerializerSettings settings = null)
    parameters:
    - id: settings
      type: Newtonsoft.Json.JsonSerializerSettings
      description: settings to customize how JSON is serialized.
    content.vb: Public Sub New(settings As JsonSerializerSettings = Nothing)
  overload: Okta.Sdk.Internal.DefaultSerializer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Internal.DefaultSerializer.Deserialize(System.String)
  commentId: M:Okta.Sdk.Internal.DefaultSerializer.Deserialize(System.String)
  id: Deserialize(System.String)
  parent: Okta.Sdk.Internal.DefaultSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(String)
  nameWithType: DefaultSerializer.Deserialize(String)
  fullName: Okta.Sdk.Internal.DefaultSerializer.Deserialize(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/DefaultSerializer.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Deserialize
    path: ../src/Okta.Sdk/Internal/DefaultSerializer.cs
    startLine: 49
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  example: []
  syntax:
    content: public IDictionary<string, object> Deserialize(string json)
    parameters:
    - id: json
      type: System.String
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Function Deserialize(json As String) As IDictionary(Of String, Object)
  overload: Okta.Sdk.Internal.DefaultSerializer.Deserialize*
  implements:
  - Okta.Sdk.Internal.ISerializer.Deserialize(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Internal.DefaultSerializer.DeserializeArray(System.String)
  commentId: M:Okta.Sdk.Internal.DefaultSerializer.DeserializeArray(System.String)
  id: DeserializeArray(System.String)
  parent: Okta.Sdk.Internal.DefaultSerializer
  langs:
  - csharp
  - vb
  name: DeserializeArray(String)
  nameWithType: DefaultSerializer.DeserializeArray(String)
  fullName: Okta.Sdk.Internal.DefaultSerializer.DeserializeArray(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/DefaultSerializer.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeserializeArray
    path: ../src/Okta.Sdk/Internal/DefaultSerializer.cs
    startLine: 53
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  example: []
  syntax:
    content: public IEnumerable<IDictionary<string, object>> DeserializeArray(string json)
    parameters:
    - id: json
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}}
    content.vb: Public Function DeserializeArray(json As String) As IEnumerable(Of IDictionary(Of String, Object))
  overload: Okta.Sdk.Internal.DefaultSerializer.DeserializeArray*
  implements:
  - Okta.Sdk.Internal.ISerializer.DeserializeArray(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Internal.DefaultSerializer.Serialize(System.Object)
  commentId: M:Okta.Sdk.Internal.DefaultSerializer.Serialize(System.Object)
  id: Serialize(System.Object)
  parent: Okta.Sdk.Internal.DefaultSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Object)
  nameWithType: DefaultSerializer.Serialize(Object)
  fullName: Okta.Sdk.Internal.DefaultSerializer.Serialize(System.Object)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/DefaultSerializer.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Serialize
    path: ../src/Okta.Sdk/Internal/DefaultSerializer.cs
    startLine: 57
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  example: []
  syntax:
    content: public string Serialize(object model)
    parameters:
    - id: model
      type: System.Object
    return:
      type: System.String
    content.vb: Public Function Serialize(model As Object) As String
  overload: Okta.Sdk.Internal.DefaultSerializer.Serialize*
  implements:
  - Okta.Sdk.Internal.ISerializer.Serialize(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk.Internal.ISerializer
  commentId: T:Okta.Sdk.Internal.ISerializer
  parent: Okta.Sdk.Internal
  name: ISerializer
  nameWithType: ISerializer
  fullName: Okta.Sdk.Internal.ISerializer
- uid: Okta.Sdk.Internal
  commentId: N:Okta.Sdk.Internal
  name: Okta.Sdk.Internal
  nameWithType: Okta.Sdk.Internal
  fullName: Okta.Sdk.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.Internal.DefaultSerializer
  commentId: T:Okta.Sdk.Internal.DefaultSerializer
  name: DefaultSerializer
  nameWithType: DefaultSerializer
  fullName: Okta.Sdk.Internal.DefaultSerializer
- uid: Okta.Sdk.Internal.DefaultSerializer.#ctor*
  commentId: Overload:Okta.Sdk.Internal.DefaultSerializer.#ctor
  name: DefaultSerializer
  nameWithType: DefaultSerializer.DefaultSerializer
  fullName: Okta.Sdk.Internal.DefaultSerializer.DefaultSerializer
- uid: Newtonsoft.Json.JsonSerializerSettings
  commentId: T:Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: Okta.Sdk.Internal.DefaultSerializer.Deserialize*
  commentId: Overload:Okta.Sdk.Internal.DefaultSerializer.Deserialize
  name: Deserialize
  nameWithType: DefaultSerializer.Deserialize
  fullName: Okta.Sdk.Internal.DefaultSerializer.Deserialize
- uid: Okta.Sdk.Internal.ISerializer.Deserialize(System.String)
  commentId: M:Okta.Sdk.Internal.ISerializer.Deserialize(System.String)
  parent: Okta.Sdk.Internal.ISerializer
  isExternal: true
  name: Deserialize(String)
  nameWithType: ISerializer.Deserialize(String)
  fullName: Okta.Sdk.Internal.ISerializer.Deserialize(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Internal.ISerializer.Deserialize(System.String)
    name: Deserialize
    nameWithType: ISerializer.Deserialize
    fullName: Okta.Sdk.Internal.ISerializer.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Internal.ISerializer.Deserialize(System.String)
    name: Deserialize
    nameWithType: ISerializer.Deserialize
    fullName: Okta.Sdk.Internal.ISerializer.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.Internal.DefaultSerializer.DeserializeArray*
  commentId: Overload:Okta.Sdk.Internal.DefaultSerializer.DeserializeArray
  name: DeserializeArray
  nameWithType: DefaultSerializer.DeserializeArray
  fullName: Okta.Sdk.Internal.DefaultSerializer.DeserializeArray
- uid: Okta.Sdk.Internal.ISerializer.DeserializeArray(System.String)
  commentId: M:Okta.Sdk.Internal.ISerializer.DeserializeArray(System.String)
  parent: Okta.Sdk.Internal.ISerializer
  isExternal: true
  name: DeserializeArray(String)
  nameWithType: ISerializer.DeserializeArray(String)
  fullName: Okta.Sdk.Internal.ISerializer.DeserializeArray(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Internal.ISerializer.DeserializeArray(System.String)
    name: DeserializeArray
    nameWithType: ISerializer.DeserializeArray
    fullName: Okta.Sdk.Internal.ISerializer.DeserializeArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Internal.ISerializer.DeserializeArray(System.String)
    name: DeserializeArray
    nameWithType: ISerializer.DeserializeArray
    fullName: Okta.Sdk.Internal.ISerializer.DeserializeArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IDictionary<String, Object>>
  nameWithType: IEnumerable<IDictionary<String, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.IDictionary<System.String, System.Object>>
  nameWithType.vb: IEnumerable(Of IDictionary(Of String, Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: IEnumerable(Of IDictionary(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Internal.DefaultSerializer.Serialize*
  commentId: Overload:Okta.Sdk.Internal.DefaultSerializer.Serialize
  name: Serialize
  nameWithType: DefaultSerializer.Serialize
  fullName: Okta.Sdk.Internal.DefaultSerializer.Serialize
- uid: Okta.Sdk.Internal.ISerializer.Serialize(System.Object)
  commentId: M:Okta.Sdk.Internal.ISerializer.Serialize(System.Object)
  parent: Okta.Sdk.Internal.ISerializer
  isExternal: true
  name: Serialize(Object)
  nameWithType: ISerializer.Serialize(Object)
  fullName: Okta.Sdk.Internal.ISerializer.Serialize(System.Object)
  spec.csharp:
  - uid: Okta.Sdk.Internal.ISerializer.Serialize(System.Object)
    name: Serialize
    nameWithType: ISerializer.Serialize
    fullName: Okta.Sdk.Internal.ISerializer.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Internal.ISerializer.Serialize(System.Object)
    name: Serialize
    nameWithType: ISerializer.Serialize
    fullName: Okta.Sdk.Internal.ISerializer.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
