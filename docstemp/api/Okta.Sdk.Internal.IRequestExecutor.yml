### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.Internal.IRequestExecutor
  commentId: T:Okta.Sdk.Internal.IRequestExecutor
  id: IRequestExecutor
  parent: Okta.Sdk.Internal
  children:
  - Okta.Sdk.Internal.IRequestExecutor.DeleteAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)
  - Okta.Sdk.Internal.IRequestExecutor.ExecuteRequestAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.Internal.IRequestExecutor.GetAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)
  - Okta.Sdk.Internal.IRequestExecutor.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.Internal.IRequestExecutor.PostAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Internal.IRequestExecutor.PutAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IRequestExecutor
  nameWithType: IRequestExecutor
  fullName: Okta.Sdk.Internal.IRequestExecutor
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/Internal/IRequestExecutor.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IRequestExecutor
    path: ../src/Okta.Sdk/Internal/IRequestExecutor.cs
    startLine: 14
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nA low-level abstraction over HTTP that executes requests and returns responses.\n"
  example: []
  syntax:
    content: public interface IRequestExecutor
    content.vb: Public Interface IRequestExecutor
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.Internal.IRequestExecutor.ExecuteRequestAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.IRequestExecutor.ExecuteRequestAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  id: ExecuteRequestAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.IRequestExecutor
  langs:
  - csharp
  - vb
  name: ExecuteRequestAsync(HttpRequest, CancellationToken)
  nameWithType: IRequestExecutor.ExecuteRequestAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.Internal.IRequestExecutor.ExecuteRequestAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/IRequestExecutor.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ExecuteRequestAsync
    path: ../src/Okta.Sdk/Internal/IRequestExecutor.cs
    startLine: 22
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nExecute the specified request.\n"
  example: []
  syntax:
    content: Task<HttpResponse<string>> ExecuteRequestAsync(HttpRequest request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: Okta.Sdk.HttpRequest
      description: The request to execute.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{System.String}}
      description: The HTTP response.
    content.vb: Function ExecuteRequestAsync(request As HttpRequest, cancellationToken As CancellationToken) As Task(Of HttpResponse(Of String))
  overload: Okta.Sdk.Internal.IRequestExecutor.ExecuteRequestAsync*
- uid: Okta.Sdk.Internal.IRequestExecutor.GetAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.IRequestExecutor.GetAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)
  id: GetAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.IRequestExecutor
  langs:
  - csharp
  - vb
  name: GetAsync(String, IEnumerable<KeyValuePair<String, String>>, CancellationToken)
  nameWithType: IRequestExecutor.GetAsync(String, IEnumerable<KeyValuePair<String, String>>, CancellationToken)
  fullName: Okta.Sdk.Internal.IRequestExecutor.GetAsync(System.String, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/IRequestExecutor.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAsync
    path: ../src/Okta.Sdk/Internal/IRequestExecutor.cs
    startLine: 31
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nSends a GET request to the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">href</code>.\n"
  example: []
  syntax:
    content: Task<HttpResponse<string>> GetAsync(string href, IEnumerable<KeyValuePair<string, string>> headers, CancellationToken cancellationToken)
    parameters:
    - id: href
      type: System.String
      description: The request URL.
    - id: headers
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: The HTTP headers to add to the request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{System.String}}
      description: The HTTP response.
    content.vb: Function GetAsync(href As String, headers As IEnumerable(Of KeyValuePair(Of String, String)), cancellationToken As CancellationToken) As Task(Of HttpResponse(Of String))
  overload: Okta.Sdk.Internal.IRequestExecutor.GetAsync*
  nameWithType.vb: IRequestExecutor.GetAsync(String, IEnumerable(Of KeyValuePair(Of String, String)), CancellationToken)
  fullName.vb: Okta.Sdk.Internal.IRequestExecutor.GetAsync(System.String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.Threading.CancellationToken)
  name.vb: GetAsync(String, IEnumerable(Of KeyValuePair(Of String, String)), CancellationToken)
- uid: Okta.Sdk.Internal.IRequestExecutor.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.IRequestExecutor.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  id: PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.IRequestExecutor
  langs:
  - csharp
  - vb
  name: PostAsync(HttpRequest, CancellationToken)
  nameWithType: IRequestExecutor.PostAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.Internal.IRequestExecutor.PostAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/IRequestExecutor.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PostAsync
    path: ../src/Okta.Sdk/Internal/IRequestExecutor.cs
    startLine: 39
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nSends the specified POST request.\n"
  example: []
  syntax:
    content: Task<HttpResponse<string>> PostAsync(HttpRequest request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: Okta.Sdk.HttpRequest
      description: The request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{System.String}}
      description: The HTTP response.
    content.vb: Function PostAsync(request As HttpRequest, cancellationToken As CancellationToken) As Task(Of HttpResponse(Of String))
  overload: Okta.Sdk.Internal.IRequestExecutor.PostAsync*
- uid: Okta.Sdk.Internal.IRequestExecutor.PostAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.IRequestExecutor.PostAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.Threading.CancellationToken)
  id: PostAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.IRequestExecutor
  langs:
  - csharp
  - vb
  name: PostAsync(String, IEnumerable<KeyValuePair<String, String>>, String, CancellationToken)
  nameWithType: IRequestExecutor.PostAsync(String, IEnumerable<KeyValuePair<String, String>>, String, CancellationToken)
  fullName: Okta.Sdk.Internal.IRequestExecutor.PostAsync(System.String, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/IRequestExecutor.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PostAsync
    path: ../src/Okta.Sdk/Internal/IRequestExecutor.cs
    startLine: 49
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nSends a POST request to the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">href</code>.\n"
  example: []
  syntax:
    content: Task<HttpResponse<string>> PostAsync(string href, IEnumerable<KeyValuePair<string, string>> headers, string body, CancellationToken cancellationToken)
    parameters:
    - id: href
      type: System.String
      description: The request URL.
    - id: headers
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: The HTTP headers to add to the request.
    - id: body
      type: System.String
      description: The serialized request body.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{System.String}}
      description: The HTTP response.
    content.vb: Function PostAsync(href As String, headers As IEnumerable(Of KeyValuePair(Of String, String)), body As String, cancellationToken As CancellationToken) As Task(Of HttpResponse(Of String))
  overload: Okta.Sdk.Internal.IRequestExecutor.PostAsync*
  nameWithType.vb: IRequestExecutor.PostAsync(String, IEnumerable(Of KeyValuePair(Of String, String)), String, CancellationToken)
  fullName.vb: Okta.Sdk.Internal.IRequestExecutor.PostAsync(System.String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.String, System.Threading.CancellationToken)
  name.vb: PostAsync(String, IEnumerable(Of KeyValuePair(Of String, String)), String, CancellationToken)
- uid: Okta.Sdk.Internal.IRequestExecutor.PutAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.IRequestExecutor.PutAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.Threading.CancellationToken)
  id: PutAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.IRequestExecutor
  langs:
  - csharp
  - vb
  name: PutAsync(String, IEnumerable<KeyValuePair<String, String>>, String, CancellationToken)
  nameWithType: IRequestExecutor.PutAsync(String, IEnumerable<KeyValuePair<String, String>>, String, CancellationToken)
  fullName: Okta.Sdk.Internal.IRequestExecutor.PutAsync(System.String, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/IRequestExecutor.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PutAsync
    path: ../src/Okta.Sdk/Internal/IRequestExecutor.cs
    startLine: 59
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nSends a PUT request to the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">href</code>.\n"
  example: []
  syntax:
    content: Task<HttpResponse<string>> PutAsync(string href, IEnumerable<KeyValuePair<string, string>> headers, string body, CancellationToken cancellationToken)
    parameters:
    - id: href
      type: System.String
      description: The request URL.
    - id: headers
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: The HTTP headers to add to the request.
    - id: body
      type: System.String
      description: The serialized request body.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{System.String}}
      description: The HTTP response.
    content.vb: Function PutAsync(href As String, headers As IEnumerable(Of KeyValuePair(Of String, String)), body As String, cancellationToken As CancellationToken) As Task(Of HttpResponse(Of String))
  overload: Okta.Sdk.Internal.IRequestExecutor.PutAsync*
  nameWithType.vb: IRequestExecutor.PutAsync(String, IEnumerable(Of KeyValuePair(Of String, String)), String, CancellationToken)
  fullName.vb: Okta.Sdk.Internal.IRequestExecutor.PutAsync(System.String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.String, System.Threading.CancellationToken)
  name.vb: PutAsync(String, IEnumerable(Of KeyValuePair(Of String, String)), String, CancellationToken)
- uid: Okta.Sdk.Internal.IRequestExecutor.DeleteAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Internal.IRequestExecutor.DeleteAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)
  id: DeleteAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)
  parent: Okta.Sdk.Internal.IRequestExecutor
  langs:
  - csharp
  - vb
  name: DeleteAsync(String, IEnumerable<KeyValuePair<String, String>>, CancellationToken)
  nameWithType: IRequestExecutor.DeleteAsync(String, IEnumerable<KeyValuePair<String, String>>, CancellationToken)
  fullName: Okta.Sdk.Internal.IRequestExecutor.DeleteAsync(System.String, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/IRequestExecutor.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteAsync
    path: ../src/Okta.Sdk/Internal/IRequestExecutor.cs
    startLine: 68
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nSends a DELETE request to the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">href</code>.\n"
  example: []
  syntax:
    content: Task<HttpResponse<string>> DeleteAsync(string href, IEnumerable<KeyValuePair<string, string>> headers, CancellationToken cancellationToken)
    parameters:
    - id: href
      type: System.String
      description: The request URL.
    - id: headers
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: The HTTP headers to add to the request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{System.String}}
      description: The HTTP response.
    content.vb: Function DeleteAsync(href As String, headers As IEnumerable(Of KeyValuePair(Of String, String)), cancellationToken As CancellationToken) As Task(Of HttpResponse(Of String))
  overload: Okta.Sdk.Internal.IRequestExecutor.DeleteAsync*
  nameWithType.vb: IRequestExecutor.DeleteAsync(String, IEnumerable(Of KeyValuePair(Of String, String)), CancellationToken)
  fullName.vb: Okta.Sdk.Internal.IRequestExecutor.DeleteAsync(System.String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.Threading.CancellationToken)
  name.vb: DeleteAsync(String, IEnumerable(Of KeyValuePair(Of String, String)), CancellationToken)
references:
- uid: Okta.Sdk.Internal
  commentId: N:Okta.Sdk.Internal
  name: Okta.Sdk.Internal
  nameWithType: Okta.Sdk.Internal
  fullName: Okta.Sdk.Internal
- uid: Okta.Sdk.Internal.IRequestExecutor.ExecuteRequestAsync*
  commentId: Overload:Okta.Sdk.Internal.IRequestExecutor.ExecuteRequestAsync
  name: ExecuteRequestAsync
  nameWithType: IRequestExecutor.ExecuteRequestAsync
  fullName: Okta.Sdk.Internal.IRequestExecutor.ExecuteRequestAsync
- uid: Okta.Sdk.HttpRequest
  commentId: T:Okta.Sdk.HttpRequest
  parent: Okta.Sdk
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Okta.Sdk.HttpRequest
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{System.String}}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.HttpResponse{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HttpResponse<String>>
  nameWithType: Task<HttpResponse<String>>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.HttpResponse<System.String>>
  nameWithType.vb: Task(Of HttpResponse(Of String))
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.HttpResponse(Of System.String))
  name.vb: Task(Of HttpResponse(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.HttpResponse`1
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: Okta.Sdk.HttpResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.HttpResponse`1
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: Okta.Sdk.HttpResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.Internal.IRequestExecutor.GetAsync*
  commentId: Overload:Okta.Sdk.Internal.IRequestExecutor.GetAsync
  name: GetAsync
  nameWithType: IRequestExecutor.GetAsync
  fullName: Okta.Sdk.Internal.IRequestExecutor.GetAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.Internal.IRequestExecutor.PostAsync*
  commentId: Overload:Okta.Sdk.Internal.IRequestExecutor.PostAsync
  name: PostAsync
  nameWithType: IRequestExecutor.PostAsync
  fullName: Okta.Sdk.Internal.IRequestExecutor.PostAsync
- uid: Okta.Sdk.Internal.IRequestExecutor.PutAsync*
  commentId: Overload:Okta.Sdk.Internal.IRequestExecutor.PutAsync
  name: PutAsync
  nameWithType: IRequestExecutor.PutAsync
  fullName: Okta.Sdk.Internal.IRequestExecutor.PutAsync
- uid: Okta.Sdk.Internal.IRequestExecutor.DeleteAsync*
  commentId: Overload:Okta.Sdk.Internal.IRequestExecutor.DeleteAsync
  name: DeleteAsync
  nameWithType: IRequestExecutor.DeleteAsync
  fullName: Okta.Sdk.Internal.IRequestExecutor.DeleteAsync
