### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IAuthorizationServersClient
  commentId: T:Okta.Sdk.IAuthorizationServersClient
  id: IAuthorizationServersClient
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys(System.String)
  - Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies(System.String)
  - Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules(System.String,System.String)
  - Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers(System.String,System.String,System.String)
  - Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims(System.String)
  - Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(System.String)
  - Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse,System.String)
  - Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IAuthorizationServersClient
  nameWithType: IAuthorizationServersClient
  fullName: Okta.Sdk.IAuthorizationServersClient
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IAuthorizationServersClient
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 15
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: A client that works with Okta AuthorizationServer resources.
  example: []
  syntax:
    content: public interface IAuthorizationServersClient
    content.vb: Public Interface IAuthorizationServersClient
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers(System.String,System.String,System.String)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers(System.String,System.String,System.String)
  id: ListAuthorizationServers(System.String,System.String,System.String)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListAuthorizationServers(String, String, String)
  nameWithType: IAuthorizationServersClient.ListAuthorizationServers(String, String, String)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListAuthorizationServers
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 24
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: ICollectionClient<IAuthorizationServer> ListAuthorizationServers(string q = null, string limit = null, string after = null)
    parameters:
    - id: q
      type: System.String
      description: ''
    - id: limit
      type: System.String
      description: ''
    - id: after
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServer}
      description: A collection of <xref href="Okta.Sdk.IAuthorizationServer" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListAuthorizationServers(q As String = Nothing, limit As String = Nothing, after As String = Nothing) As ICollectionClient(Of IAuthorizationServer)
  overload: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers*
- uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.Threading.CancellationToken)
  id: CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: CreateAuthorizationServerAsync(IAuthorizationServer, CancellationToken)
  nameWithType: IAuthorizationServersClient.CreateAuthorizationServerAsync(IAuthorizationServer, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateAuthorizationServerAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 32
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IAuthorizationServer> CreateAuthorizationServerAsync(IAuthorizationServer authorizationServer, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authorizationServer
      type: Okta.Sdk.IAuthorizationServer
      description: The <xref href="Okta.Sdk.IAuthorizationServer" data-throw-if-not-resolved="false"></xref> resource.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServer}
      description: The <xref href="Okta.Sdk.IAuthorizationServer" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateAuthorizationServerAsync(authorizationServer As IAuthorizationServer, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServer)
  overload: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  id: DeleteAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeleteAuthorizationServerAsync(String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteAuthorizationServerAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 40
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task DeleteAuthorizationServerAsync(string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeleteAuthorizationServerAsync(authServerId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  id: GetAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: GetAuthorizationServerAsync(String, CancellationToken)
  nameWithType: IAuthorizationServersClient.GetAuthorizationServerAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAuthorizationServerAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 48
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IAuthorizationServer> GetAuthorizationServerAsync(string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServer}
      description: The <xref href="Okta.Sdk.IAuthorizationServer" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetAuthorizationServerAsync(authServerId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServer)
  overload: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.String,System.Threading.CancellationToken)
  id: UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: UpdateAuthorizationServerAsync(IAuthorizationServer, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerAsync(IAuthorizationServer, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateAuthorizationServerAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 57
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IAuthorizationServer> UpdateAuthorizationServerAsync(IAuthorizationServer authorizationServer, string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authorizationServer
      type: Okta.Sdk.IAuthorizationServer
      description: The <xref href="Okta.Sdk.IAuthorizationServer" data-throw-if-not-resolved="false"></xref> resource.
    - id: authServerId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServer}
      description: The <xref href="Okta.Sdk.IAuthorizationServer" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdateAuthorizationServerAsync(authorizationServer As IAuthorizationServer, authServerId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServer)
  overload: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims(System.String)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims(System.String)
  id: ListOAuth2Claims(System.String)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListOAuth2Claims(String)
  nameWithType: IAuthorizationServersClient.ListOAuth2Claims(String)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListOAuth2Claims
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 64
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: ICollectionClient<IOAuth2Claim> ListOAuth2Claims(string authServerId)
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Claim}
      description: A collection of <xref href="Okta.Sdk.IOAuth2Claim" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListOAuth2Claims(authServerId As String) As ICollectionClient(Of IOAuth2Claim)
  overload: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims*
- uid: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  id: CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: CreateOAuth2ClaimAsync(IOAuth2Claim, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.CreateOAuth2ClaimAsync(IOAuth2Claim, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateOAuth2ClaimAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 73
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IOAuth2Claim> CreateOAuth2ClaimAsync(IOAuth2Claim oAuth2Claim, string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oAuth2Claim
      type: Okta.Sdk.IOAuth2Claim
      description: The <xref href="Okta.Sdk.IOAuth2Claim" data-throw-if-not-resolved="false"></xref> resource.
    - id: authServerId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
      description: The <xref href="Okta.Sdk.IOAuth2Claim" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateOAuth2ClaimAsync(oAuth2Claim As IOAuth2Claim, authServerId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Claim)
  overload: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeleteOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeleteOAuth2ClaimAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeleteOAuth2ClaimAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteOAuth2ClaimAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 82
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task DeleteOAuth2ClaimAsync(string authServerId, string claimId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: claimId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeleteOAuth2ClaimAsync(authServerId As String, claimId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: GetOAuth2ClaimAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.GetOAuth2ClaimAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetOAuth2ClaimAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 91
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IOAuth2Claim> GetOAuth2ClaimAsync(string authServerId, string claimId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: claimId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
      description: The <xref href="Okta.Sdk.IOAuth2Claim" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetOAuth2ClaimAsync(authServerId As String, claimId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Claim)
  overload: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.String,System.Threading.CancellationToken)
  id: UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: UpdateOAuth2ClaimAsync(IOAuth2Claim, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.UpdateOAuth2ClaimAsync(IOAuth2Claim, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateOAuth2ClaimAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 101
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IOAuth2Claim> UpdateOAuth2ClaimAsync(IOAuth2Claim oAuth2Claim, string authServerId, string claimId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oAuth2Claim
      type: Okta.Sdk.IOAuth2Claim
      description: The <xref href="Okta.Sdk.IOAuth2Claim" data-throw-if-not-resolved="false"></xref> resource.
    - id: authServerId
      type: System.String
      description: ''
    - id: claimId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
      description: The <xref href="Okta.Sdk.IOAuth2Claim" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdateOAuth2ClaimAsync(oAuth2Claim As IOAuth2Claim, authServerId As String, claimId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Claim)
  overload: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(System.String)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(System.String)
  id: ListOAuth2ClientsForAuthorizationServer(System.String)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListOAuth2ClientsForAuthorizationServer(String)
  nameWithType: IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(String)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListOAuth2ClientsForAuthorizationServer
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 108
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: ICollectionClient<IOAuth2Client> ListOAuth2ClientsForAuthorizationServer(string authServerId)
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
      description: A collection of <xref href="Okta.Sdk.IOAuth2Client" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListOAuth2ClientsForAuthorizationServer(authServerId As String) As ICollectionClient(Of IOAuth2Client)
  overload: Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer*
- uid: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: RevokeRefreshTokensForAuthorizationServerAndClientAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeRefreshTokensForAuthorizationServerAndClientAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 117
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task RevokeRefreshTokensForAuthorizationServerAndClientAsync(string authServerId, string clientId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: clientId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function RevokeRefreshTokensForAuthorizationServerAndClientAsync(authServerId As String, clientId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListRefreshTokensForAuthorizationServerAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListRefreshTokensForAuthorizationServerAndClient(String, String, String, String, Nullable<Int32>)
  nameWithType: IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(String, String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListRefreshTokensForAuthorizationServerAndClient
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 128
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: ICollectionClient<IOAuth2RefreshToken> ListRefreshTokensForAuthorizationServerAndClient(string authServerId, string clientId, string expand = null, string after = null, int? limit = -1)
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: clientId
      type: System.String
      description: ''
    - id: expand
      type: System.String
      description: ''
    - id: after
      type: System.String
      description: ''
    - id: limit
      type: System.Nullable{System.Int32}
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
      description: A collection of <xref href="Okta.Sdk.IOAuth2RefreshToken" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListRefreshTokensForAuthorizationServerAndClient(authServerId As String, clientId As String, expand As String = Nothing, after As String = Nothing, limit As Integer? = -1) As ICollectionClient(Of IOAuth2RefreshToken)
  overload: Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient*
  nameWithType.vb: IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(String, String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListRefreshTokensForAuthorizationServerAndClient(String, String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: RevokeRefreshTokenForAuthorizationServerAndClientAsync(String, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeRefreshTokenForAuthorizationServerAndClientAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 138
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task RevokeRefreshTokenForAuthorizationServerAndClientAsync(string authServerId, string clientId, string tokenId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: clientId
      type: System.String
      description: ''
    - id: tokenId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function RevokeRefreshTokenForAuthorizationServerAndClientAsync(authServerId As String, clientId As String, tokenId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: GetRefreshTokenForAuthorizationServerAndClientAsync(String, String, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(String, String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetRefreshTokenForAuthorizationServerAndClientAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 149
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IOAuth2RefreshToken> GetRefreshTokenForAuthorizationServerAndClientAsync(string authServerId, string clientId, string tokenId, string expand = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: clientId
      type: System.String
      description: ''
    - id: tokenId
      type: System.String
      description: ''
    - id: expand
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
      description: The <xref href="Okta.Sdk.IOAuth2RefreshToken" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetRefreshTokenForAuthorizationServerAndClientAsync(authServerId As String, clientId As String, tokenId As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2RefreshToken)
  overload: Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys(System.String)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys(System.String)
  id: ListAuthorizationServerKeys(System.String)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListAuthorizationServerKeys(String)
  nameWithType: IAuthorizationServersClient.ListAuthorizationServerKeys(String)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListAuthorizationServerKeys
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 156
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: ICollectionClient<IJsonWebKey> ListAuthorizationServerKeys(string authServerId)
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
      description: A collection of <xref href="Okta.Sdk.IJsonWebKey" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListAuthorizationServerKeys(authServerId As String) As ICollectionClient(Of IJsonWebKey)
  overload: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys*
- uid: Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse,System.String)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse,System.String)
  id: RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse,System.String)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: RotateAuthorizationServerKeys(IJwkUse, String)
  nameWithType: IAuthorizationServersClient.RotateAuthorizationServerKeys(IJwkUse, String)
  fullName: Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RotateAuthorizationServerKeys
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 164
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: ICollectionClient<IJsonWebKey> RotateAuthorizationServerKeys(IJwkUse use, string authServerId)
    parameters:
    - id: use
      type: Okta.Sdk.IJwkUse
      description: The <xref href="Okta.Sdk.IJwkUse" data-throw-if-not-resolved="false"></xref> resource.
    - id: authServerId
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
      description: A collection of <xref href="Okta.Sdk.IJsonWebKey" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function RotateAuthorizationServerKeys(use As IJwkUse, authServerId As String) As ICollectionClient(Of IJsonWebKey)
  overload: Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys*
- uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  id: ActivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ActivateAuthorizationServerAsync(String, CancellationToken)
  nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateAuthorizationServerAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 172
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task ActivateAuthorizationServerAsync(string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function ActivateAuthorizationServerAsync(authServerId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  id: DeactivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeactivateAuthorizationServerAsync(String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateAuthorizationServerAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 180
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task DeactivateAuthorizationServerAsync(string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeactivateAuthorizationServerAsync(authServerId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies(System.String)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies(System.String)
  id: ListAuthorizationServerPolicies(System.String)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListAuthorizationServerPolicies(String)
  nameWithType: IAuthorizationServersClient.ListAuthorizationServerPolicies(String)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListAuthorizationServerPolicies
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 187
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: ICollectionClient<IAuthorizationServerPolicy> ListAuthorizationServerPolicies(string authServerId)
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicy}
      description: A collection of <xref href="Okta.Sdk.IAuthorizationServerPolicy" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListAuthorizationServerPolicies(authServerId As String) As ICollectionClient(Of IAuthorizationServerPolicy)
  overload: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies*
- uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  id: CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: CreateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateAuthorizationServerPolicyAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 196
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IAuthorizationServerPolicy> CreateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy policy, string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policy
      type: Okta.Sdk.IAuthorizationServerPolicy
      description: The <xref href="Okta.Sdk.IAuthorizationServerPolicy" data-throw-if-not-resolved="false"></xref> resource.
    - id: authServerId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
      description: The <xref href="Okta.Sdk.IAuthorizationServerPolicy" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateAuthorizationServerPolicyAsync(policy As IAuthorizationServerPolicy, authServerId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicy)
  overload: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeleteAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeleteAuthorizationServerPolicyAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteAuthorizationServerPolicyAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 205
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task DeleteAuthorizationServerPolicyAsync(string authServerId, string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: policyId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeleteAuthorizationServerPolicyAsync(authServerId As String, policyId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: GetAuthorizationServerPolicyAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.GetAuthorizationServerPolicyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAuthorizationServerPolicyAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 214
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IAuthorizationServerPolicy> GetAuthorizationServerPolicyAsync(string authServerId, string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: policyId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
      description: The <xref href="Okta.Sdk.IAuthorizationServerPolicy" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetAuthorizationServerPolicyAsync(authServerId As String, policyId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicy)
  overload: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.String,System.Threading.CancellationToken)
  id: UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: UpdateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateAuthorizationServerPolicyAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 224
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IAuthorizationServerPolicy> UpdateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy policy, string authServerId, string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policy
      type: Okta.Sdk.IAuthorizationServerPolicy
      description: The <xref href="Okta.Sdk.IAuthorizationServerPolicy" data-throw-if-not-resolved="false"></xref> resource.
    - id: authServerId
      type: System.String
      description: ''
    - id: policyId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
      description: The <xref href="Okta.Sdk.IAuthorizationServerPolicy" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdateAuthorizationServerPolicyAsync(policy As IAuthorizationServerPolicy, authServerId As String, policyId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicy)
  overload: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  id: ActivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ActivateAuthorizationServerPolicyAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateAuthorizationServerPolicyAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 233
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nActivate Authorization Server Policy\n"
  example: []
  syntax:
    content: Task ActivateAuthorizationServerPolicyAsync(string authServerId, string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: policyId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function ActivateAuthorizationServerPolicyAsync(authServerId As String, policyId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeactivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeactivateAuthorizationServerPolicyAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateAuthorizationServerPolicyAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 242
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nDeactivate Authorization Server Policy\n"
  example: []
  syntax:
    content: Task DeactivateAuthorizationServerPolicyAsync(string authServerId, string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: policyId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeactivateAuthorizationServerPolicyAsync(authServerId As String, policyId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules(System.String,System.String)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules(System.String,System.String)
  id: ListAuthorizationServerPolicyRules(System.String,System.String)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListAuthorizationServerPolicyRules(String, String)
  nameWithType: IAuthorizationServersClient.ListAuthorizationServerPolicyRules(String, String)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListAuthorizationServerPolicyRules
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 250
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nEnumerates all policy rules for the specified Custom Authorization Server and Policy.\n"
  example: []
  syntax:
    content: ICollectionClient<IAuthorizationServerPolicyRule> ListAuthorizationServerPolicyRules(string policyId, string authServerId)
    parameters:
    - id: policyId
      type: System.String
      description: ''
    - id: authServerId
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicyRule}
      description: A collection of <xref href="Okta.Sdk.IAuthorizationServerPolicyRule" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListAuthorizationServerPolicyRules(policyId As String, authServerId As String) As ICollectionClient(Of IAuthorizationServerPolicyRule)
  overload: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules*
- uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  id: CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: CreateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateAuthorizationServerPolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 260
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nCreates a policy rule for the specified Custom Authorization Server and Policy.\n"
  example: []
  syntax:
    content: Task<IAuthorizationServerPolicyRule> CreateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule policyRule, string policyId, string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyRule
      type: Okta.Sdk.IAuthorizationServerPolicyRule
      description: The <xref href="Okta.Sdk.IAuthorizationServerPolicyRule" data-throw-if-not-resolved="false"></xref> resource.
    - id: policyId
      type: System.String
      description: ''
    - id: authServerId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicyRule}
      description: The <xref href="Okta.Sdk.IAuthorizationServerPolicyRule" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateAuthorizationServerPolicyRuleAsync(policyRule As IAuthorizationServerPolicyRule, policyId As String, authServerId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicyRule)
  overload: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeleteAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteAuthorizationServerPolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 270
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nDeletes a Policy Rule defined in the specified Custom Authorization Server and Policy.\n"
  example: []
  syntax:
    content: Task DeleteAuthorizationServerPolicyRuleAsync(string policyId, string authServerId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
      description: ''
    - id: authServerId
      type: System.String
      description: ''
    - id: ruleId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeleteAuthorizationServerPolicyRuleAsync(policyId As String, authServerId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: GetAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAuthorizationServerPolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 280
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nReturns a Policy Rule by ID that is defined in the specified Custom Authorization Server and Policy.\n"
  example: []
  syntax:
    content: Task<IAuthorizationServerPolicyRule> GetAuthorizationServerPolicyRuleAsync(string policyId, string authServerId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
      description: ''
    - id: authServerId
      type: System.String
      description: ''
    - id: ruleId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicyRule}
      description: The <xref href="Okta.Sdk.IAuthorizationServerPolicyRule" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetAuthorizationServerPolicyRuleAsync(policyId As String, authServerId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicyRule)
  overload: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: UpdateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule, String, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule, String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateAuthorizationServerPolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 291
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nUpdates the configuration of the Policy Rule defined in the specified Custom Authorization Server and Policy.\n"
  example: []
  syntax:
    content: Task<IAuthorizationServerPolicyRule> UpdateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule policyRule, string policyId, string authServerId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyRule
      type: Okta.Sdk.IAuthorizationServerPolicyRule
      description: The <xref href="Okta.Sdk.IAuthorizationServerPolicyRule" data-throw-if-not-resolved="false"></xref> resource.
    - id: policyId
      type: System.String
      description: ''
    - id: authServerId
      type: System.String
      description: ''
    - id: ruleId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicyRule}
      description: The <xref href="Okta.Sdk.IAuthorizationServerPolicyRule" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdateAuthorizationServerPolicyRuleAsync(policyRule As IAuthorizationServerPolicyRule, policyId As String, authServerId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicyRule)
  overload: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: ActivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ActivateAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateAuthorizationServerPolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 301
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nActivate Authorization Server Policy Rule\n"
  example: []
  syntax:
    content: Task ActivateAuthorizationServerPolicyRuleAsync(string authServerId, string policyId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: policyId
      type: System.String
      description: ''
    - id: ruleId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function ActivateAuthorizationServerPolicyRuleAsync(authServerId As String, policyId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: DeactivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeactivateAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateAuthorizationServerPolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 311
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nDeactivate Authorization Server Policy Rule\n"
  example: []
  syntax:
    content: Task DeactivateAuthorizationServerPolicyRuleAsync(string authServerId, string policyId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: policyId
      type: System.String
      description: ''
    - id: ruleId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeactivateAuthorizationServerPolicyRuleAsync(authServerId As String, policyId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListOAuth2Scopes(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListOAuth2Scopes(String, String, String, String, Nullable<Int32>)
  nameWithType: IAuthorizationServersClient.ListOAuth2Scopes(String, String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListOAuth2Scopes
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 322
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: ICollectionClient<IOAuth2Scope> ListOAuth2Scopes(string authServerId, string q = null, string filter = null, string cursor = null, int? limit = -1)
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: q
      type: System.String
      description: ''
    - id: filter
      type: System.String
      description: ''
    - id: cursor
      type: System.String
      description: ''
    - id: limit
      type: System.Nullable{System.Int32}
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Scope}
      description: A collection of <xref href="Okta.Sdk.IOAuth2Scope" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListOAuth2Scopes(authServerId As String, q As String = Nothing, filter As String = Nothing, cursor As String = Nothing, limit As Integer? = -1) As ICollectionClient(Of IOAuth2Scope)
  overload: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes*
  nameWithType.vb: IAuthorizationServersClient.ListOAuth2Scopes(String, String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListOAuth2Scopes(String, String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  id: CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: CreateOAuth2ScopeAsync(IOAuth2Scope, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.CreateOAuth2ScopeAsync(IOAuth2Scope, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateOAuth2ScopeAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 331
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IOAuth2Scope> CreateOAuth2ScopeAsync(IOAuth2Scope oAuth2Scope, string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oAuth2Scope
      type: Okta.Sdk.IOAuth2Scope
      description: The <xref href="Okta.Sdk.IOAuth2Scope" data-throw-if-not-resolved="false"></xref> resource.
    - id: authServerId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
      description: The <xref href="Okta.Sdk.IOAuth2Scope" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateOAuth2ScopeAsync(oAuth2Scope As IOAuth2Scope, authServerId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Scope)
  overload: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeleteOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeleteOAuth2ScopeAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeleteOAuth2ScopeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteOAuth2ScopeAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 340
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task DeleteOAuth2ScopeAsync(string authServerId, string scopeId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: scopeId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeleteOAuth2ScopeAsync(authServerId As String, scopeId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: GetOAuth2ScopeAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.GetOAuth2ScopeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetOAuth2ScopeAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 349
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IOAuth2Scope> GetOAuth2ScopeAsync(string authServerId, string scopeId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
      description: ''
    - id: scopeId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
      description: The <xref href="Okta.Sdk.IOAuth2Scope" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetOAuth2ScopeAsync(authServerId As String, scopeId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Scope)
  overload: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync*
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.String,System.Threading.CancellationToken)
  id: UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  langs:
  - csharp
  - vb
  name: UpdateOAuth2ScopeAsync(IOAuth2Scope, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.UpdateOAuth2ScopeAsync(IOAuth2Scope, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateOAuth2ScopeAsync
    path: ../src/Okta.Sdk/Generated/IAuthorizationServersClient.Generated.cs
    startLine: 359
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IOAuth2Scope> UpdateOAuth2ScopeAsync(IOAuth2Scope oAuth2Scope, string authServerId, string scopeId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oAuth2Scope
      type: Okta.Sdk.IOAuth2Scope
      description: The <xref href="Okta.Sdk.IOAuth2Scope" data-throw-if-not-resolved="false"></xref> resource.
    - id: authServerId
      type: System.String
      description: ''
    - id: scopeId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
      description: The <xref href="Okta.Sdk.IOAuth2Scope" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdateOAuth2ScopeAsync(oAuth2Scope As IOAuth2Scope, authServerId As String, scopeId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Scope)
  overload: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync*
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IAuthorizationServer
  commentId: T:Okta.Sdk.IAuthorizationServer
  parent: Okta.Sdk
  name: IAuthorizationServer
  nameWithType: IAuthorizationServer
  fullName: Okta.Sdk.IAuthorizationServer
- uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers
  name: ListAuthorizationServers
  nameWithType: IAuthorizationServersClient.ListAuthorizationServers
  fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServer}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServer}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IAuthorizationServer>
  nameWithType: ICollectionClient<IAuthorizationServer>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IAuthorizationServer>
  nameWithType.vb: ICollectionClient(Of IAuthorizationServer)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IAuthorizationServer)
  name.vb: ICollectionClient(Of IAuthorizationServer)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAuthorizationServer
    name: IAuthorizationServer
    nameWithType: IAuthorizationServer
    fullName: Okta.Sdk.IAuthorizationServer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAuthorizationServer
    name: IAuthorizationServer
    nameWithType: IAuthorizationServer
    fullName: Okta.Sdk.IAuthorizationServer
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync
  name: CreateAuthorizationServerAsync
  nameWithType: IAuthorizationServersClient.CreateAuthorizationServerAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServer}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServer}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IAuthorizationServer>
  nameWithType: Task<IAuthorizationServer>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IAuthorizationServer>
  nameWithType.vb: Task(Of IAuthorizationServer)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IAuthorizationServer)
  name.vb: Task(Of IAuthorizationServer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAuthorizationServer
    name: IAuthorizationServer
    nameWithType: IAuthorizationServer
    fullName: Okta.Sdk.IAuthorizationServer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAuthorizationServer
    name: IAuthorizationServer
    nameWithType: IAuthorizationServer
    fullName: Okta.Sdk.IAuthorizationServer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync
  name: DeleteAuthorizationServerAsync
  nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync
  name: GetAuthorizationServerAsync
  nameWithType: IAuthorizationServersClient.GetAuthorizationServerAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync
  name: UpdateAuthorizationServerAsync
  nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync
- uid: Okta.Sdk.IOAuth2Claim
  commentId: T:Okta.Sdk.IOAuth2Claim
  parent: Okta.Sdk
  name: IOAuth2Claim
  nameWithType: IOAuth2Claim
  fullName: Okta.Sdk.IOAuth2Claim
- uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims
  name: ListOAuth2Claims
  nameWithType: IAuthorizationServersClient.ListOAuth2Claims
  fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Claim}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Claim}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2Claim>
  nameWithType: ICollectionClient<IOAuth2Claim>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2Claim>
  nameWithType.vb: ICollectionClient(Of IOAuth2Claim)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2Claim)
  name.vb: ICollectionClient(Of IOAuth2Claim)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync
  name: CreateOAuth2ClaimAsync
  nameWithType: IAuthorizationServersClient.CreateOAuth2ClaimAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2Claim>
  nameWithType: Task<IOAuth2Claim>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2Claim>
  nameWithType.vb: Task(Of IOAuth2Claim)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2Claim)
  name.vb: Task(Of IOAuth2Claim)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync
  name: DeleteOAuth2ClaimAsync
  nameWithType: IAuthorizationServersClient.DeleteOAuth2ClaimAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync
- uid: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync
  name: GetOAuth2ClaimAsync
  nameWithType: IAuthorizationServersClient.GetOAuth2ClaimAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync
  name: UpdateOAuth2ClaimAsync
  nameWithType: IAuthorizationServersClient.UpdateOAuth2ClaimAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync
- uid: Okta.Sdk.IOAuth2Client
  commentId: T:Okta.Sdk.IOAuth2Client
  parent: Okta.Sdk
  name: IOAuth2Client
  nameWithType: IOAuth2Client
  fullName: Okta.Sdk.IOAuth2Client
- uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer
  name: ListOAuth2ClientsForAuthorizationServer
  nameWithType: IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer
  fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2Client>
  nameWithType: ICollectionClient<IOAuth2Client>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2Client>
  nameWithType.vb: ICollectionClient(Of IOAuth2Client)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2Client)
  name.vb: ICollectionClient(Of IOAuth2Client)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Client
    name: IOAuth2Client
    nameWithType: IOAuth2Client
    fullName: Okta.Sdk.IOAuth2Client
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Client
    name: IOAuth2Client
    nameWithType: IOAuth2Client
    fullName: Okta.Sdk.IOAuth2Client
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync
  name: RevokeRefreshTokensForAuthorizationServerAndClientAsync
  nameWithType: IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync
- uid: Okta.Sdk.IOAuth2RefreshToken
  commentId: T:Okta.Sdk.IOAuth2RefreshToken
  parent: Okta.Sdk
  name: IOAuth2RefreshToken
  nameWithType: IOAuth2RefreshToken
  fullName: Okta.Sdk.IOAuth2RefreshToken
- uid: Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient
  name: ListRefreshTokensForAuthorizationServerAndClient
  nameWithType: IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient
  fullName: Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2RefreshToken>
  nameWithType: ICollectionClient<IOAuth2RefreshToken>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2RefreshToken>
  nameWithType.vb: ICollectionClient(Of IOAuth2RefreshToken)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2RefreshToken)
  name.vb: ICollectionClient(Of IOAuth2RefreshToken)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync
  name: RevokeRefreshTokenForAuthorizationServerAndClientAsync
  nameWithType: IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync
- uid: Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync
  name: GetRefreshTokenForAuthorizationServerAndClientAsync
  nameWithType: IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2RefreshToken>
  nameWithType: Task<IOAuth2RefreshToken>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2RefreshToken>
  nameWithType.vb: Task(Of IOAuth2RefreshToken)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2RefreshToken)
  name.vb: Task(Of IOAuth2RefreshToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IJsonWebKey
  commentId: T:Okta.Sdk.IJsonWebKey
  parent: Okta.Sdk
  name: IJsonWebKey
  nameWithType: IJsonWebKey
  fullName: Okta.Sdk.IJsonWebKey
- uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys
  name: ListAuthorizationServerKeys
  nameWithType: IAuthorizationServersClient.ListAuthorizationServerKeys
  fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IJsonWebKey>
  nameWithType: ICollectionClient<IJsonWebKey>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IJsonWebKey>
  nameWithType.vb: ICollectionClient(Of IJsonWebKey)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IJsonWebKey)
  name.vb: ICollectionClient(Of IJsonWebKey)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IJwkUse
  commentId: T:Okta.Sdk.IJwkUse
  parent: Okta.Sdk
  name: IJwkUse
  nameWithType: IJwkUse
  fullName: Okta.Sdk.IJwkUse
- uid: Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys
  name: RotateAuthorizationServerKeys
  nameWithType: IAuthorizationServersClient.RotateAuthorizationServerKeys
  fullName: Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys
- uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync
  name: ActivateAuthorizationServerAsync
  nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync
- uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync
  name: DeactivateAuthorizationServerAsync
  nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync
- uid: Okta.Sdk.IAuthorizationServerPolicy
  commentId: T:Okta.Sdk.IAuthorizationServerPolicy
  parent: Okta.Sdk
  name: IAuthorizationServerPolicy
  nameWithType: IAuthorizationServerPolicy
  fullName: Okta.Sdk.IAuthorizationServerPolicy
- uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies
  name: ListAuthorizationServerPolicies
  nameWithType: IAuthorizationServersClient.ListAuthorizationServerPolicies
  fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicy}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicy}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IAuthorizationServerPolicy>
  nameWithType: ICollectionClient<IAuthorizationServerPolicy>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IAuthorizationServerPolicy>
  nameWithType.vb: ICollectionClient(Of IAuthorizationServerPolicy)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IAuthorizationServerPolicy)
  name.vb: ICollectionClient(Of IAuthorizationServerPolicy)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync
  name: CreateAuthorizationServerPolicyAsync
  nameWithType: IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IAuthorizationServerPolicy>
  nameWithType: Task<IAuthorizationServerPolicy>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IAuthorizationServerPolicy>
  nameWithType.vb: Task(Of IAuthorizationServerPolicy)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IAuthorizationServerPolicy)
  name.vb: Task(Of IAuthorizationServerPolicy)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync
  name: DeleteAuthorizationServerPolicyAsync
  nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync
- uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync
  name: GetAuthorizationServerPolicyAsync
  nameWithType: IAuthorizationServersClient.GetAuthorizationServerPolicyAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync
  name: UpdateAuthorizationServerPolicyAsync
  nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync
- uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync
  name: ActivateAuthorizationServerPolicyAsync
  nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync
- uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync
  name: DeactivateAuthorizationServerPolicyAsync
  nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync
- uid: Okta.Sdk.IAuthorizationServerPolicyRule
  commentId: T:Okta.Sdk.IAuthorizationServerPolicyRule
  parent: Okta.Sdk
  name: IAuthorizationServerPolicyRule
  nameWithType: IAuthorizationServerPolicyRule
  fullName: Okta.Sdk.IAuthorizationServerPolicyRule
- uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules
  name: ListAuthorizationServerPolicyRules
  nameWithType: IAuthorizationServersClient.ListAuthorizationServerPolicyRules
  fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicyRule}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicyRule}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IAuthorizationServerPolicyRule>
  nameWithType: ICollectionClient<IAuthorizationServerPolicyRule>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IAuthorizationServerPolicyRule>
  nameWithType.vb: ICollectionClient(Of IAuthorizationServerPolicyRule)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IAuthorizationServerPolicyRule)
  name.vb: ICollectionClient(Of IAuthorizationServerPolicyRule)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAuthorizationServerPolicyRule
    name: IAuthorizationServerPolicyRule
    nameWithType: IAuthorizationServerPolicyRule
    fullName: Okta.Sdk.IAuthorizationServerPolicyRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAuthorizationServerPolicyRule
    name: IAuthorizationServerPolicyRule
    nameWithType: IAuthorizationServerPolicyRule
    fullName: Okta.Sdk.IAuthorizationServerPolicyRule
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync
  name: CreateAuthorizationServerPolicyRuleAsync
  nameWithType: IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicyRule}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicyRule}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IAuthorizationServerPolicyRule>
  nameWithType: Task<IAuthorizationServerPolicyRule>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IAuthorizationServerPolicyRule>
  nameWithType.vb: Task(Of IAuthorizationServerPolicyRule)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IAuthorizationServerPolicyRule)
  name.vb: Task(Of IAuthorizationServerPolicyRule)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAuthorizationServerPolicyRule
    name: IAuthorizationServerPolicyRule
    nameWithType: IAuthorizationServerPolicyRule
    fullName: Okta.Sdk.IAuthorizationServerPolicyRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAuthorizationServerPolicyRule
    name: IAuthorizationServerPolicyRule
    nameWithType: IAuthorizationServerPolicyRule
    fullName: Okta.Sdk.IAuthorizationServerPolicyRule
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync
  name: DeleteAuthorizationServerPolicyRuleAsync
  nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync
- uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync
  name: GetAuthorizationServerPolicyRuleAsync
  nameWithType: IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync
  name: UpdateAuthorizationServerPolicyRuleAsync
  nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync
- uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync
  name: ActivateAuthorizationServerPolicyRuleAsync
  nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync
- uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync
  name: DeactivateAuthorizationServerPolicyRuleAsync
  nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync
- uid: Okta.Sdk.IOAuth2Scope
  commentId: T:Okta.Sdk.IOAuth2Scope
  parent: Okta.Sdk
  name: IOAuth2Scope
  nameWithType: IOAuth2Scope
  fullName: Okta.Sdk.IOAuth2Scope
- uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes
  name: ListOAuth2Scopes
  nameWithType: IAuthorizationServersClient.ListOAuth2Scopes
  fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Scope}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Scope}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2Scope>
  nameWithType: ICollectionClient<IOAuth2Scope>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2Scope>
  nameWithType.vb: ICollectionClient(Of IOAuth2Scope)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2Scope)
  name.vb: ICollectionClient(Of IOAuth2Scope)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync
  name: CreateOAuth2ScopeAsync
  nameWithType: IAuthorizationServersClient.CreateOAuth2ScopeAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2Scope>
  nameWithType: Task<IOAuth2Scope>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2Scope>
  nameWithType.vb: Task(Of IOAuth2Scope)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2Scope)
  name.vb: Task(Of IOAuth2Scope)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync
  name: DeleteOAuth2ScopeAsync
  nameWithType: IAuthorizationServersClient.DeleteOAuth2ScopeAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync
- uid: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync
  name: GetOAuth2ScopeAsync
  nameWithType: IAuthorizationServersClient.GetOAuth2ScopeAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync*
  commentId: Overload:Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync
  name: UpdateOAuth2ScopeAsync
  nameWithType: IAuthorizationServersClient.UpdateOAuth2ScopeAsync
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync
