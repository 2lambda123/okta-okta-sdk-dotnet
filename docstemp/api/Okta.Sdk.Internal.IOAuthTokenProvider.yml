### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.Internal.IOAuthTokenProvider
  commentId: T:Okta.Sdk.Internal.IOAuthTokenProvider
  id: IOAuthTokenProvider
  parent: Okta.Sdk.Internal
  children:
  - Okta.Sdk.Internal.IOAuthTokenProvider.GetAccessTokenAsync(System.Boolean)
  langs:
  - csharp
  - vb
  name: IOAuthTokenProvider
  nameWithType: IOAuthTokenProvider
  fullName: Okta.Sdk.Internal.IOAuthTokenProvider
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/Internal/IOAuthTokenProvider.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IOAuthTokenProvider
    path: ../src/Okta.Sdk/Internal/IOAuthTokenProvider.cs
    startLine: 12
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nInterface for OAuth token providers.\n"
  example: []
  syntax:
    content: public interface IOAuthTokenProvider
    content.vb: Public Interface IOAuthTokenProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.Internal.IOAuthTokenProvider.GetAccessTokenAsync(System.Boolean)
  commentId: M:Okta.Sdk.Internal.IOAuthTokenProvider.GetAccessTokenAsync(System.Boolean)
  id: GetAccessTokenAsync(System.Boolean)
  parent: Okta.Sdk.Internal.IOAuthTokenProvider
  langs:
  - csharp
  - vb
  name: GetAccessTokenAsync(Boolean)
  nameWithType: IOAuthTokenProvider.GetAccessTokenAsync(Boolean)
  fullName: Okta.Sdk.Internal.IOAuthTokenProvider.GetAccessTokenAsync(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Internal/IOAuthTokenProvider.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAccessTokenAsync
    path: ../src/Okta.Sdk/Internal/IOAuthTokenProvider.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Internal
  summary: "\nGets an access token.\n"
  example: []
  syntax:
    content: Task<string> GetAccessTokenAsync(bool forceRenew = false)
    parameters:
    - id: forceRenew
      type: System.Boolean
      description: The flag to indicate if the access token should be renewed.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The access token.
    content.vb: Function GetAccessTokenAsync(forceRenew As Boolean = False) As Task(Of String)
  overload: Okta.Sdk.Internal.IOAuthTokenProvider.GetAccessTokenAsync*
references:
- uid: Okta.Sdk.Internal
  commentId: N:Okta.Sdk.Internal
  name: Okta.Sdk.Internal
  nameWithType: Okta.Sdk.Internal
  fullName: Okta.Sdk.Internal
- uid: Okta.Sdk.Internal.IOAuthTokenProvider.GetAccessTokenAsync*
  commentId: Overload:Okta.Sdk.Internal.IOAuthTokenProvider.GetAccessTokenAsync
  name: GetAccessTokenAsync
  nameWithType: IOAuthTokenProvider.GetAccessTokenAsync
  fullName: Okta.Sdk.Internal.IOAuthTokenProvider.GetAccessTokenAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
