### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.User
  commentId: T:Okta.Sdk.User
  id: User
  parent: Okta.Sdk
  children:
  - Okta.Sdk.User.ActivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.User.Activated
  - Okta.Sdk.User.AddAllAppsAsTargetAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddCallFactorOptions,System.Threading.CancellationToken)
  - Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddCustomHotpFactorOptions,System.Threading.CancellationToken)
  - Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddEmailFactorOptions,System.Threading.CancellationToken)
  - Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddHardwareFactorOptions,System.Threading.CancellationToken)
  - Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddPushFactorOptions,System.Threading.CancellationToken)
  - Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddSecurityQuestionFactorOptions,System.Threading.CancellationToken)
  - Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddSmsFactorOptions,System.Threading.CancellationToken)
  - Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddTokenFactorOptions,System.Threading.CancellationToken)
  - Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddTotpFactorOptions,System.Threading.CancellationToken)
  - Okta.Sdk.User.AddGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.AddToGroupAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.AppLinks
  - Okta.Sdk.User.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.User.ChangePasswordAsync(Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
  - Okta.Sdk.User.ChangeRecoveryQuestionAsync(Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
  - Okta.Sdk.User.ClearSessionsAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.User.Created
  - Okta.Sdk.User.Credentials
  - Okta.Sdk.User.DeactivateAsync
  - Okta.Sdk.User.DeactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.User.DeactivateAsync(System.Threading.CancellationToken)
  - Okta.Sdk.User.DeactivateOrDeleteAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.User.DeleteFactorAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.EnrollFactorAsync(Okta.Sdk.IUserFactor,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.User.ExpirePasswordAndGetTemporaryPasswordAsync(System.Threading.CancellationToken)
  - Okta.Sdk.User.ExpirePasswordAsync(System.Threading.CancellationToken)
  - Okta.Sdk.User.Factors
  - Okta.Sdk.User.ForgotPasswordGenerateOneTimeTokenAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.User.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.User.GetFactorAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.GetLinkedObjects(System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.User.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.GetRoleAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.Groups
  - Okta.Sdk.User.Id
  - Okta.Sdk.User.LastLogin
  - Okta.Sdk.User.LastUpdated
  - Okta.Sdk.User.ListAssignedRoles(System.String)
  - Okta.Sdk.User.ListClients
  - Okta.Sdk.User.ListFactors
  - Okta.Sdk.User.ListGrants(System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.User.ListGroupTargets(System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.User.ListIdentityProviders
  - Okta.Sdk.User.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.User.ListSupportedFactors
  - Okta.Sdk.User.ListSupportedSecurityQuestions
  - Okta.Sdk.User.PasswordChanged
  - Okta.Sdk.User.Profile
  - Okta.Sdk.User.ReactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.User.RemoveFromGroupAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.RemoveGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.RemoveLinkedObjectAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.RemoveRoleAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.ResetFactorsAsync(System.Threading.CancellationToken)
  - Okta.Sdk.User.ResetPasswordAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.User.RevokeGrantAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.RevokeGrantsAsync(System.Threading.CancellationToken)
  - Okta.Sdk.User.RevokeGrantsForUserAndClientAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.RevokeTokenForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.RevokeTokensForUserAndClientAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.Roles
  - Okta.Sdk.User.SetLinkedObjectAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.User.Status
  - Okta.Sdk.User.StatusChanged
  - Okta.Sdk.User.SuspendAsync(System.Threading.CancellationToken)
  - Okta.Sdk.User.TransitioningToStatus
  - Okta.Sdk.User.Type
  - Okta.Sdk.User.UnlockAsync(System.Threading.CancellationToken)
  - Okta.Sdk.User.UnsuspendAsync(System.Threading.CancellationToken)
  - Okta.Sdk.User.UpdateAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: User
  nameWithType: User
  fullName: Okta.Sdk.User
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: User
    path: ../src/Okta.Sdk/User.cs
    startLine: 15
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRepresents a User resource in the Okta API.\n"
  example: []
  syntax:
    content: 'public sealed class User : Resource, IUser, IResource'
    content.vb: >-
      Public NotInheritable Class User

          Inherits Resource

          Implements IUser, IResource
  inheritance:
  - System.Object
  - Okta.Sdk.Resource
  implements:
  - Okta.Sdk.IUser
  - Okta.Sdk.IResource
  inheritedMembers:
  - Okta.Sdk.Resource.GetClient
  - Okta.Sdk.Resource.GetData
  - Okta.Sdk.Resource.Item(System.String)
  - Okta.Sdk.Resource.GetProperty``1(System.String)
  - Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  - Okta.Sdk.Resource.GetStringProperty(System.String)
  - Okta.Sdk.Resource.GetBooleanProperty(System.String)
  - Okta.Sdk.Resource.GetIntegerProperty(System.String)
  - Okta.Sdk.Resource.GetLongProperty(System.String)
  - Okta.Sdk.Resource.GetDoubleProperty(System.String)
  - Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  - Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  - Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  - Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Okta.Sdk.User.Activated
  commentId: P:Okta.Sdk.User.Activated
  id: Activated
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: Activated
  nameWithType: User.Activated
  fullName: Okta.Sdk.User.Activated
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Activated
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public DateTimeOffset? Activated { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public ReadOnly Property Activated As DateTimeOffset?
  overload: Okta.Sdk.User.Activated*
  implements:
  - Okta.Sdk.IUser.Activated
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.User.Created
  commentId: P:Okta.Sdk.User.Created
  id: Created
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: User.Created
  fullName: Okta.Sdk.User.Created
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Created
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 22
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public DateTimeOffset? Created { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public ReadOnly Property Created As DateTimeOffset?
  overload: Okta.Sdk.User.Created*
  implements:
  - Okta.Sdk.IUser.Created
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.User.Credentials
  commentId: P:Okta.Sdk.User.Credentials
  id: Credentials
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: User.Credentials
  fullName: Okta.Sdk.User.Credentials
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Credentials
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 25
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IUserCredentials Credentials { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IUserCredentials
    content.vb: Public Property Credentials As IUserCredentials
  overload: Okta.Sdk.User.Credentials*
  implements:
  - Okta.Sdk.IUser.Credentials
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.Id
  commentId: P:Okta.Sdk.User.Id
  id: Id
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: User.Id
  fullName: Okta.Sdk.User.Id
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Id
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 32
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Id As String
  overload: Okta.Sdk.User.Id*
  implements:
  - Okta.Sdk.IUser.Id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.User.LastLogin
  commentId: P:Okta.Sdk.User.LastLogin
  id: LastLogin
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: LastLogin
  nameWithType: User.LastLogin
  fullName: Okta.Sdk.User.LastLogin
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: LastLogin
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 35
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public DateTimeOffset? LastLogin { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public ReadOnly Property LastLogin As DateTimeOffset?
  overload: Okta.Sdk.User.LastLogin*
  implements:
  - Okta.Sdk.IUser.LastLogin
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.User.LastUpdated
  commentId: P:Okta.Sdk.User.LastUpdated
  id: LastUpdated
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: LastUpdated
  nameWithType: User.LastUpdated
  fullName: Okta.Sdk.User.LastUpdated
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: LastUpdated
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 38
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public DateTimeOffset? LastUpdated { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public ReadOnly Property LastUpdated As DateTimeOffset?
  overload: Okta.Sdk.User.LastUpdated*
  implements:
  - Okta.Sdk.IUser.LastUpdated
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.User.PasswordChanged
  commentId: P:Okta.Sdk.User.PasswordChanged
  id: PasswordChanged
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: PasswordChanged
  nameWithType: User.PasswordChanged
  fullName: Okta.Sdk.User.PasswordChanged
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PasswordChanged
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 41
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public DateTimeOffset? PasswordChanged { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public ReadOnly Property PasswordChanged As DateTimeOffset?
  overload: Okta.Sdk.User.PasswordChanged*
  implements:
  - Okta.Sdk.IUser.PasswordChanged
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.User.Profile
  commentId: P:Okta.Sdk.User.Profile
  id: Profile
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: Profile
  nameWithType: User.Profile
  fullName: Okta.Sdk.User.Profile
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Profile
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 44
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IUserProfile Profile { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IUserProfile
    content.vb: Public Property Profile As IUserProfile
  overload: Okta.Sdk.User.Profile*
  implements:
  - Okta.Sdk.IUser.Profile
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.Status
  commentId: P:Okta.Sdk.User.Status
  id: Status
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: User.Status
  fullName: Okta.Sdk.User.Status
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Status
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 51
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public UserStatus Status { get; }
    parameters: []
    return:
      type: Okta.Sdk.UserStatus
    content.vb: Public ReadOnly Property Status As UserStatus
  overload: Okta.Sdk.User.Status*
  implements:
  - Okta.Sdk.IUser.Status
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.User.StatusChanged
  commentId: P:Okta.Sdk.User.StatusChanged
  id: StatusChanged
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: StatusChanged
  nameWithType: User.StatusChanged
  fullName: Okta.Sdk.User.StatusChanged
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: StatusChanged
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 54
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public DateTimeOffset? StatusChanged { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public ReadOnly Property StatusChanged As DateTimeOffset?
  overload: Okta.Sdk.User.StatusChanged*
  implements:
  - Okta.Sdk.IUser.StatusChanged
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.User.TransitioningToStatus
  commentId: P:Okta.Sdk.User.TransitioningToStatus
  id: TransitioningToStatus
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: TransitioningToStatus
  nameWithType: User.TransitioningToStatus
  fullName: Okta.Sdk.User.TransitioningToStatus
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: TransitioningToStatus
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 57
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public UserStatus TransitioningToStatus { get; }
    parameters: []
    return:
      type: Okta.Sdk.UserStatus
    content.vb: Public ReadOnly Property TransitioningToStatus As UserStatus
  overload: Okta.Sdk.User.TransitioningToStatus*
  implements:
  - Okta.Sdk.IUser.TransitioningToStatus
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.User.Type
  commentId: P:Okta.Sdk.User.Type
  id: Type
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: User.Type
  fullName: Okta.Sdk.User.Type
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Type
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 60
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IUserType Type { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IUserType
    content.vb: Public Property Type As IUserType
  overload: Okta.Sdk.User.Type*
  implements:
  - Okta.Sdk.IUser.Type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ForgotPasswordSetNewPasswordAsync(IUserCredentials, Nullable<Boolean>, CancellationToken)
  nameWithType: User.ForgotPasswordSetNewPasswordAsync(IUserCredentials, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.User.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ForgotPasswordSetNewPasswordAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 67
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IForgotPasswordResponse> ForgotPasswordSetNewPasswordAsync(IUserCredentials user, bool? sendEmail = true, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: user
      type: Okta.Sdk.IUserCredentials
    - id: sendEmail
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IForgotPasswordResponse}
    content.vb: Public Function ForgotPasswordSetNewPasswordAsync(user As IUserCredentials, sendEmail As Boolean? = True, cancellationToken As CancellationToken = Nothing) As Task(Of IForgotPasswordResponse)
  overload: Okta.Sdk.User.ForgotPasswordSetNewPasswordAsync*
  implements:
  - Okta.Sdk.IUser.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: User.ForgotPasswordSetNewPasswordAsync(IUserCredentials, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ForgotPasswordSetNewPasswordAsync(IUserCredentials, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.User.ForgotPasswordGenerateOneTimeTokenAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.ForgotPasswordGenerateOneTimeTokenAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: ForgotPasswordGenerateOneTimeTokenAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ForgotPasswordGenerateOneTimeTokenAsync(Nullable<Boolean>, CancellationToken)
  nameWithType: User.ForgotPasswordGenerateOneTimeTokenAsync(Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.User.ForgotPasswordGenerateOneTimeTokenAsync(System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ForgotPasswordGenerateOneTimeTokenAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 72
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IForgotPasswordResponse> ForgotPasswordGenerateOneTimeTokenAsync(bool? sendEmail = true, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: sendEmail
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IForgotPasswordResponse}
    content.vb: Public Function ForgotPasswordGenerateOneTimeTokenAsync(sendEmail As Boolean? = True, cancellationToken As CancellationToken = Nothing) As Task(Of IForgotPasswordResponse)
  overload: Okta.Sdk.User.ForgotPasswordGenerateOneTimeTokenAsync*
  implements:
  - Okta.Sdk.IUser.ForgotPasswordGenerateOneTimeTokenAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: User.ForgotPasswordGenerateOneTimeTokenAsync(Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.ForgotPasswordGenerateOneTimeTokenAsync(System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ForgotPasswordGenerateOneTimeTokenAsync(Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.User.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: AssignRoleAsync(IAssignRoleRequest, Nullable<Boolean>, CancellationToken)
  nameWithType: User.AssignRoleAsync(IAssignRoleRequest, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.User.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AssignRoleAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 77
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IRole> AssignRoleAsync(IAssignRoleRequest assignRoleRequest, bool? disableNotifications = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: assignRoleRequest
      type: Okta.Sdk.IAssignRoleRequest
    - id: disableNotifications
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IRole}
    content.vb: Public Function AssignRoleAsync(assignRoleRequest As IAssignRoleRequest, disableNotifications As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IRole)
  overload: Okta.Sdk.User.AssignRoleAsync*
  implements:
  - Okta.Sdk.IUser.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: User.AssignRoleAsync(IAssignRoleRequest, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: AssignRoleAsync(IAssignRoleRequest, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.User.GetRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.GetRoleAsync(System.String,System.Threading.CancellationToken)
  id: GetRoleAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: GetRoleAsync(String, CancellationToken)
  nameWithType: User.GetRoleAsync(String, CancellationToken)
  fullName: Okta.Sdk.User.GetRoleAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetRoleAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 82
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IRole> GetRoleAsync(string roleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: roleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IRole}
    content.vb: Public Function GetRoleAsync(roleId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IRole)
  overload: Okta.Sdk.User.GetRoleAsync*
  implements:
  - Okta.Sdk.IUser.GetRoleAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.RemoveRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.RemoveRoleAsync(System.String,System.Threading.CancellationToken)
  id: RemoveRoleAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: RemoveRoleAsync(String, CancellationToken)
  nameWithType: User.RemoveRoleAsync(String, CancellationToken)
  fullName: Okta.Sdk.User.RemoveRoleAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveRoleAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 87
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task RemoveRoleAsync(string roleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: roleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveRoleAsync(roleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.RemoveRoleAsync*
  implements:
  - Okta.Sdk.IUser.RemoveRoleAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.ListGroupTargets(System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.User.ListGroupTargets(System.String,System.String,System.Nullable{System.Int32})
  id: ListGroupTargets(System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ListGroupTargets(String, String, Nullable<Int32>)
  nameWithType: User.ListGroupTargets(String, String, Nullable<Int32>)
  fullName: Okta.Sdk.User.ListGroupTargets(System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListGroupTargets
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 92
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IGroup> ListGroupTargets(string roleId, string after = null, int? limit = 20)
    parameters:
    - id: roleId
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IGroup}
    content.vb: Public Function ListGroupTargets(roleId As String, after As String = Nothing, limit As Integer? = 20) As ICollectionClient(Of IGroup)
  overload: Okta.Sdk.User.ListGroupTargets*
  implements:
  - Okta.Sdk.IUser.ListGroupTargets(System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: User.ListGroupTargets(String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.ListGroupTargets(System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListGroupTargets(String, String, Nullable(Of Int32))
- uid: Okta.Sdk.User.RemoveGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.RemoveGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RemoveGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: RemoveGroupTargetAsync(String, String, CancellationToken)
  nameWithType: User.RemoveGroupTargetAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.User.RemoveGroupTargetAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveGroupTargetAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 97
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task RemoveGroupTargetAsync(string roleId, string groupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: roleId
      type: System.String
    - id: groupId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveGroupTargetAsync(roleId As String, groupId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.RemoveGroupTargetAsync*
  implements:
  - Okta.Sdk.IUser.RemoveGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.AddGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.AddGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  id: AddGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: AddGroupTargetAsync(String, String, CancellationToken)
  nameWithType: User.AddGroupTargetAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.User.AddGroupTargetAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddGroupTargetAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 102
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task AddGroupTargetAsync(string roleId, string groupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: roleId
      type: System.String
    - id: groupId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddGroupTargetAsync(roleId As String, groupId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.AddGroupTargetAsync*
  implements:
  - Okta.Sdk.IUser.AddGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.ListAssignedRoles(System.String)
  commentId: M:Okta.Sdk.User.ListAssignedRoles(System.String)
  id: ListAssignedRoles(System.String)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ListAssignedRoles(String)
  nameWithType: User.ListAssignedRoles(String)
  fullName: Okta.Sdk.User.ListAssignedRoles(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListAssignedRoles
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 107
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IRole> ListAssignedRoles(string expand = null)
    parameters:
    - id: expand
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IRole}
    content.vb: Public Function ListAssignedRoles(expand As String = Nothing) As ICollectionClient(Of IRole)
  overload: Okta.Sdk.User.ListAssignedRoles*
  implements:
  - Okta.Sdk.IUser.ListAssignedRoles(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.AddAllAppsAsTargetAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.AddAllAppsAsTargetAsync(System.String,System.Threading.CancellationToken)
  id: AddAllAppsAsTargetAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: AddAllAppsAsTargetAsync(String, CancellationToken)
  nameWithType: User.AddAllAppsAsTargetAsync(String, CancellationToken)
  fullName: Okta.Sdk.User.AddAllAppsAsTargetAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddAllAppsAsTargetAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 112
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task AddAllAppsAsTargetAsync(string roleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: roleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddAllAppsAsTargetAsync(roleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.AddAllAppsAsTargetAsync*
  implements:
  - Okta.Sdk.IUser.AddAllAppsAsTargetAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.ListGrants(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.User.ListGrants(System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListGrants(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ListGrants(String, String, String, Nullable<Int32>)
  nameWithType: User.ListGrants(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.User.ListGrants(System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListGrants
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 117
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IOAuth2ScopeConsentGrant> ListGrants(string scopeId = null, string expand = null, string after = null, int? limit = 20)
    parameters:
    - id: scopeId
      type: System.String
    - id: expand
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2ScopeConsentGrant}
    content.vb: Public Function ListGrants(scopeId As String = Nothing, expand As String = Nothing, after As String = Nothing, limit As Integer? = 20) As ICollectionClient(Of IOAuth2ScopeConsentGrant)
  overload: Okta.Sdk.User.ListGrants*
  implements:
  - Okta.Sdk.IUser.ListGrants(System.String,System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: User.ListGrants(String, String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.ListGrants(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListGrants(String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.User.RevokeGrantsAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.RevokeGrantsAsync(System.Threading.CancellationToken)
  id: RevokeGrantsAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: RevokeGrantsAsync(CancellationToken)
  nameWithType: User.RevokeGrantsAsync(CancellationToken)
  fullName: Okta.Sdk.User.RevokeGrantsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeGrantsAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 122
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task RevokeGrantsAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeGrantsAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.RevokeGrantsAsync*
  implements:
  - Okta.Sdk.IUser.RevokeGrantsAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.RevokeGrantAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.RevokeGrantAsync(System.String,System.Threading.CancellationToken)
  id: RevokeGrantAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: RevokeGrantAsync(String, CancellationToken)
  nameWithType: User.RevokeGrantAsync(String, CancellationToken)
  fullName: Okta.Sdk.User.RevokeGrantAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeGrantAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 127
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task RevokeGrantAsync(string grantId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: grantId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeGrantAsync(grantId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.RevokeGrantAsync*
  implements:
  - Okta.Sdk.IUser.RevokeGrantAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.RevokeGrantsForUserAndClientAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.RevokeGrantsForUserAndClientAsync(System.String,System.Threading.CancellationToken)
  id: RevokeGrantsForUserAndClientAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: RevokeGrantsForUserAndClientAsync(String, CancellationToken)
  nameWithType: User.RevokeGrantsForUserAndClientAsync(String, CancellationToken)
  fullName: Okta.Sdk.User.RevokeGrantsForUserAndClientAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeGrantsForUserAndClientAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 132
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task RevokeGrantsForUserAndClientAsync(string clientId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: clientId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeGrantsForUserAndClientAsync(clientId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.RevokeGrantsForUserAndClientAsync*
  implements:
  - Okta.Sdk.IUser.RevokeGrantsForUserAndClientAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.User.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ListRefreshTokensForUserAndClient(String, String, String, Nullable<Int32>)
  nameWithType: User.ListRefreshTokensForUserAndClient(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.User.ListRefreshTokensForUserAndClient(System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListRefreshTokensForUserAndClient
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 137
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IOAuth2RefreshToken> ListRefreshTokensForUserAndClient(string clientId, string expand = null, string after = null, int? limit = 20)
    parameters:
    - id: clientId
      type: System.String
    - id: expand
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
    content.vb: Public Function ListRefreshTokensForUserAndClient(clientId As String, expand As String = Nothing, after As String = Nothing, limit As Integer? = 20) As ICollectionClient(Of IOAuth2RefreshToken)
  overload: Okta.Sdk.User.ListRefreshTokensForUserAndClient*
  implements:
  - Okta.Sdk.IUser.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: User.ListRefreshTokensForUserAndClient(String, String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.ListRefreshTokensForUserAndClient(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListRefreshTokensForUserAndClient(String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.User.RevokeTokenForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.RevokeTokenForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RevokeTokenForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: RevokeTokenForUserAndClientAsync(String, String, CancellationToken)
  nameWithType: User.RevokeTokenForUserAndClientAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.User.RevokeTokenForUserAndClientAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeTokenForUserAndClientAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 142
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task RevokeTokenForUserAndClientAsync(string clientId, string tokenId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: clientId
      type: System.String
    - id: tokenId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeTokenForUserAndClientAsync(clientId As String, tokenId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.RevokeTokenForUserAndClientAsync*
  implements:
  - Okta.Sdk.IUser.RevokeTokenForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  id: GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: GetRefreshTokenForUserAndClientAsync(String, String, String, Nullable<Int32>, String, CancellationToken)
  nameWithType: User.GetRefreshTokenForUserAndClientAsync(String, String, String, Nullable<Int32>, String, CancellationToken)
  fullName: Okta.Sdk.User.GetRefreshTokenForUserAndClientAsync(System.String, System.String, System.String, System.Nullable<System.Int32>, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetRefreshTokenForUserAndClientAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 147
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IOAuth2RefreshToken> GetRefreshTokenForUserAndClientAsync(string clientId, string tokenId, string expand = null, int? limit = 20, string after = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: clientId
      type: System.String
    - id: tokenId
      type: System.String
    - id: expand
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    - id: after
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
    content.vb: Public Function GetRefreshTokenForUserAndClientAsync(clientId As String, tokenId As String, expand As String = Nothing, limit As Integer? = 20, after As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2RefreshToken)
  overload: Okta.Sdk.User.GetRefreshTokenForUserAndClientAsync*
  implements:
  - Okta.Sdk.IUser.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  nameWithType.vb: User.GetRefreshTokenForUserAndClientAsync(String, String, String, Nullable(Of Int32), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.GetRefreshTokenForUserAndClientAsync(System.String, System.String, System.String, System.Nullable(Of System.Int32), System.String, System.Threading.CancellationToken)
  name.vb: GetRefreshTokenForUserAndClientAsync(String, String, String, Nullable(Of Int32), String, CancellationToken)
- uid: Okta.Sdk.User.RevokeTokensForUserAndClientAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.RevokeTokensForUserAndClientAsync(System.String,System.Threading.CancellationToken)
  id: RevokeTokensForUserAndClientAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: RevokeTokensForUserAndClientAsync(String, CancellationToken)
  nameWithType: User.RevokeTokensForUserAndClientAsync(String, CancellationToken)
  fullName: Okta.Sdk.User.RevokeTokensForUserAndClientAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeTokensForUserAndClientAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 152
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task RevokeTokensForUserAndClientAsync(string clientId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: clientId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeTokensForUserAndClientAsync(clientId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.RevokeTokensForUserAndClientAsync*
  implements:
  - Okta.Sdk.IUser.RevokeTokensForUserAndClientAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.ListClients
  commentId: M:Okta.Sdk.User.ListClients
  id: ListClients
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ListClients()
  nameWithType: User.ListClients()
  fullName: Okta.Sdk.User.ListClients()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListClients
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 157
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IOAuth2Client> ListClients()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
    content.vb: Public Function ListClients As ICollectionClient(Of IOAuth2Client)
  overload: Okta.Sdk.User.ListClients*
  implements:
  - Okta.Sdk.IUser.ListClients
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.ActivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.ActivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: ActivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ActivateAsync(Nullable<Boolean>, CancellationToken)
  nameWithType: User.ActivateAsync(Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.User.ActivateAsync(System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 162
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserActivationToken> ActivateAsync(bool? sendEmail = true, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: sendEmail
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserActivationToken}
    content.vb: Public Function ActivateAsync(sendEmail As Boolean? = True, cancellationToken As CancellationToken = Nothing) As Task(Of IUserActivationToken)
  overload: Okta.Sdk.User.ActivateAsync*
  implements:
  - Okta.Sdk.IUser.ActivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: User.ActivateAsync(Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.ActivateAsync(System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ActivateAsync(Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.User.ReactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.ReactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: ReactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ReactivateAsync(Nullable<Boolean>, CancellationToken)
  nameWithType: User.ReactivateAsync(Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.User.ReactivateAsync(System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ReactivateAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 167
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserActivationToken> ReactivateAsync(bool? sendEmail = false, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: sendEmail
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserActivationToken}
    content.vb: Public Function ReactivateAsync(sendEmail As Boolean? = False, cancellationToken As CancellationToken = Nothing) As Task(Of IUserActivationToken)
  overload: Okta.Sdk.User.ReactivateAsync*
  implements:
  - Okta.Sdk.IUser.ReactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: User.ReactivateAsync(Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.ReactivateAsync(System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ReactivateAsync(Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.User.DeactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.DeactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: DeactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: DeactivateAsync(Nullable<Boolean>, CancellationToken)
  nameWithType: User.DeactivateAsync(Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.User.DeactivateAsync(System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 172
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task DeactivateAsync(bool? sendEmail = false, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: sendEmail
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeactivateAsync(sendEmail As Boolean? = False, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.DeactivateAsync*
  implements:
  - Okta.Sdk.IUser.DeactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: User.DeactivateAsync(Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.DeactivateAsync(System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: DeactivateAsync(Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.User.SuspendAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.SuspendAsync(System.Threading.CancellationToken)
  id: SuspendAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: SuspendAsync(CancellationToken)
  nameWithType: User.SuspendAsync(CancellationToken)
  fullName: Okta.Sdk.User.SuspendAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: SuspendAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 177
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task SuspendAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SuspendAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.SuspendAsync*
  implements:
  - Okta.Sdk.IUser.SuspendAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.UnsuspendAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.UnsuspendAsync(System.Threading.CancellationToken)
  id: UnsuspendAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: UnsuspendAsync(CancellationToken)
  nameWithType: User.UnsuspendAsync(CancellationToken)
  fullName: Okta.Sdk.User.UnsuspendAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UnsuspendAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 182
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task UnsuspendAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UnsuspendAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.UnsuspendAsync*
  implements:
  - Okta.Sdk.IUser.UnsuspendAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.ExpirePasswordAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.ExpirePasswordAsync(System.Threading.CancellationToken)
  id: ExpirePasswordAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ExpirePasswordAsync(CancellationToken)
  nameWithType: User.ExpirePasswordAsync(CancellationToken)
  fullName: Okta.Sdk.User.ExpirePasswordAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ExpirePasswordAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 187
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUser> ExpirePasswordAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUser}
    content.vb: Public Function ExpirePasswordAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IUser)
  overload: Okta.Sdk.User.ExpirePasswordAsync*
  implements:
  - Okta.Sdk.IUser.ExpirePasswordAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.ExpirePasswordAndGetTemporaryPasswordAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.ExpirePasswordAndGetTemporaryPasswordAsync(System.Threading.CancellationToken)
  id: ExpirePasswordAndGetTemporaryPasswordAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ExpirePasswordAndGetTemporaryPasswordAsync(CancellationToken)
  nameWithType: User.ExpirePasswordAndGetTemporaryPasswordAsync(CancellationToken)
  fullName: Okta.Sdk.User.ExpirePasswordAndGetTemporaryPasswordAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ExpirePasswordAndGetTemporaryPasswordAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 192
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<ITempPassword> ExpirePasswordAndGetTemporaryPasswordAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.ITempPassword}
    content.vb: Public Function ExpirePasswordAndGetTemporaryPasswordAsync(cancellationToken As CancellationToken = Nothing) As Task(Of ITempPassword)
  overload: Okta.Sdk.User.ExpirePasswordAndGetTemporaryPasswordAsync*
  implements:
  - Okta.Sdk.IUser.ExpirePasswordAndGetTemporaryPasswordAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.UnlockAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.UnlockAsync(System.Threading.CancellationToken)
  id: UnlockAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: UnlockAsync(CancellationToken)
  nameWithType: User.UnlockAsync(CancellationToken)
  fullName: Okta.Sdk.User.UnlockAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UnlockAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 197
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task UnlockAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UnlockAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.UnlockAsync*
  implements:
  - Okta.Sdk.IUser.UnlockAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.ResetFactorsAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.ResetFactorsAsync(System.Threading.CancellationToken)
  id: ResetFactorsAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ResetFactorsAsync(CancellationToken)
  nameWithType: User.ResetFactorsAsync(CancellationToken)
  fullName: Okta.Sdk.User.ResetFactorsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ResetFactorsAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 202
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task ResetFactorsAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ResetFactorsAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.ResetFactorsAsync*
  implements:
  - Okta.Sdk.IUser.ResetFactorsAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.DeleteFactorAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.DeleteFactorAsync(System.String,System.Threading.CancellationToken)
  id: DeleteFactorAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: DeleteFactorAsync(String, CancellationToken)
  nameWithType: User.DeleteFactorAsync(String, CancellationToken)
  fullName: Okta.Sdk.User.DeleteFactorAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteFactorAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 207
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task DeleteFactorAsync(string factorId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: factorId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteFactorAsync(factorId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.DeleteFactorAsync*
  implements:
  - Okta.Sdk.IUser.DeleteFactorAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.AddToGroupAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.AddToGroupAsync(System.String,System.Threading.CancellationToken)
  id: AddToGroupAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: AddToGroupAsync(String, CancellationToken)
  nameWithType: User.AddToGroupAsync(String, CancellationToken)
  fullName: Okta.Sdk.User.AddToGroupAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddToGroupAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 212
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task AddToGroupAsync(string groupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddToGroupAsync(groupId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.AddToGroupAsync*
  implements:
  - Okta.Sdk.IUser.AddToGroupAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.EnrollFactorAsync(Okta.Sdk.IUserFactor,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.EnrollFactorAsync(Okta.Sdk.IUserFactor,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: EnrollFactorAsync(Okta.Sdk.IUserFactor,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: EnrollFactorAsync(IUserFactor, Nullable<Boolean>, String, Nullable<Int32>, Nullable<Boolean>, CancellationToken)
  nameWithType: User.EnrollFactorAsync(IUserFactor, Nullable<Boolean>, String, Nullable<Int32>, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.User.EnrollFactorAsync(Okta.Sdk.IUserFactor, System.Nullable<System.Boolean>, System.String, System.Nullable<System.Int32>, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: EnrollFactorAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 217
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserFactor> EnrollFactorAsync(IUserFactor body, bool? updatePhone = false, string templateId = null, int? tokenLifetimeSeconds = 300, bool? activate = false, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: body
      type: Okta.Sdk.IUserFactor
    - id: updatePhone
      type: System.Nullable{System.Boolean}
    - id: templateId
      type: System.String
    - id: tokenLifetimeSeconds
      type: System.Nullable{System.Int32}
    - id: activate
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserFactor}
    content.vb: Public Function EnrollFactorAsync(body As IUserFactor, updatePhone As Boolean? = False, templateId As String = Nothing, tokenLifetimeSeconds As Integer? = 300, activate As Boolean? = False, cancellationToken As CancellationToken = Nothing) As Task(Of IUserFactor)
  overload: Okta.Sdk.User.EnrollFactorAsync*
  implements:
  - Okta.Sdk.IUser.EnrollFactorAsync(Okta.Sdk.IUserFactor,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: User.EnrollFactorAsync(IUserFactor, Nullable(Of Boolean), String, Nullable(Of Int32), Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.EnrollFactorAsync(Okta.Sdk.IUserFactor, System.Nullable(Of System.Boolean), System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: EnrollFactorAsync(IUserFactor, Nullable(Of Boolean), String, Nullable(Of Int32), Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.User.ListSupportedFactors
  commentId: M:Okta.Sdk.User.ListSupportedFactors
  id: ListSupportedFactors
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ListSupportedFactors()
  nameWithType: User.ListSupportedFactors()
  fullName: Okta.Sdk.User.ListSupportedFactors()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListSupportedFactors
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 222
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IUserFactor> ListSupportedFactors()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IUserFactor}
    content.vb: Public Function ListSupportedFactors As ICollectionClient(Of IUserFactor)
  overload: Okta.Sdk.User.ListSupportedFactors*
  implements:
  - Okta.Sdk.IUser.ListSupportedFactors
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.ListFactors
  commentId: M:Okta.Sdk.User.ListFactors
  id: ListFactors
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ListFactors()
  nameWithType: User.ListFactors()
  fullName: Okta.Sdk.User.ListFactors()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListFactors
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 227
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IUserFactor> ListFactors()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IUserFactor}
    content.vb: Public Function ListFactors As ICollectionClient(Of IUserFactor)
  overload: Okta.Sdk.User.ListFactors*
  implements:
  - Okta.Sdk.IUser.ListFactors
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.ListSupportedSecurityQuestions
  commentId: M:Okta.Sdk.User.ListSupportedSecurityQuestions
  id: ListSupportedSecurityQuestions
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ListSupportedSecurityQuestions()
  nameWithType: User.ListSupportedSecurityQuestions()
  fullName: Okta.Sdk.User.ListSupportedSecurityQuestions()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListSupportedSecurityQuestions
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 232
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<ISecurityQuestion> ListSupportedSecurityQuestions()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.ISecurityQuestion}
    content.vb: Public Function ListSupportedSecurityQuestions As ICollectionClient(Of ISecurityQuestion)
  overload: Okta.Sdk.User.ListSupportedSecurityQuestions*
  implements:
  - Okta.Sdk.IUser.ListSupportedSecurityQuestions
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.GetFactorAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.GetFactorAsync(System.String,System.Threading.CancellationToken)
  id: GetFactorAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: GetFactorAsync(String, CancellationToken)
  nameWithType: User.GetFactorAsync(String, CancellationToken)
  fullName: Okta.Sdk.User.GetFactorAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetFactorAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 237
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserFactor> GetFactorAsync(string factorId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: factorId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserFactor}
    content.vb: Public Function GetFactorAsync(factorId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IUserFactor)
  overload: Okta.Sdk.User.GetFactorAsync*
  implements:
  - Okta.Sdk.IUser.GetFactorAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.SetLinkedObjectAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.SetLinkedObjectAsync(System.String,System.String,System.Threading.CancellationToken)
  id: SetLinkedObjectAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: SetLinkedObjectAsync(String, String, CancellationToken)
  nameWithType: User.SetLinkedObjectAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.User.SetLinkedObjectAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: SetLinkedObjectAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 242
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task SetLinkedObjectAsync(string primaryRelationshipName, string primaryUserId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: primaryRelationshipName
      type: System.String
    - id: primaryUserId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetLinkedObjectAsync(primaryRelationshipName As String, primaryUserId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.SetLinkedObjectAsync*
  implements:
  - Okta.Sdk.IUser.SetLinkedObjectAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.ListIdentityProviders
  commentId: M:Okta.Sdk.User.ListIdentityProviders
  id: ListIdentityProviders
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ListIdentityProviders()
  nameWithType: User.ListIdentityProviders()
  fullName: Okta.Sdk.User.ListIdentityProviders()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListIdentityProviders
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 247
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IIdentityProvider> ListIdentityProviders()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IIdentityProvider}
    content.vb: Public Function ListIdentityProviders As ICollectionClient(Of IIdentityProvider)
  overload: Okta.Sdk.User.ListIdentityProviders*
  implements:
  - Okta.Sdk.IUser.ListIdentityProviders
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.GetLinkedObjects(System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.User.GetLinkedObjects(System.String,System.String,System.Nullable{System.Int32})
  id: GetLinkedObjects(System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: GetLinkedObjects(String, String, Nullable<Int32>)
  nameWithType: User.GetLinkedObjects(String, String, Nullable<Int32>)
  fullName: Okta.Sdk.User.GetLinkedObjects(System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetLinkedObjects
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 252
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IResponseLinks> GetLinkedObjects(string relationshipName, string after = null, int? limit = -1)
    parameters:
    - id: relationshipName
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IResponseLinks}
    content.vb: Public Function GetLinkedObjects(relationshipName As String, after As String = Nothing, limit As Integer? = -1) As ICollectionClient(Of IResponseLinks)
  overload: Okta.Sdk.User.GetLinkedObjects*
  implements:
  - Okta.Sdk.IUser.GetLinkedObjects(System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: User.GetLinkedObjects(String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.GetLinkedObjects(System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: GetLinkedObjects(String, String, Nullable(Of Int32))
- uid: Okta.Sdk.User.ClearSessionsAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.ClearSessionsAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: ClearSessionsAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ClearSessionsAsync(Nullable<Boolean>, CancellationToken)
  nameWithType: User.ClearSessionsAsync(Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.User.ClearSessionsAsync(System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ClearSessionsAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 257
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task ClearSessionsAsync(bool? oauthTokens = false, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oauthTokens
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ClearSessionsAsync(oauthTokens As Boolean? = False, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.ClearSessionsAsync*
  implements:
  - Okta.Sdk.IUser.ClearSessionsAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: User.ClearSessionsAsync(Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.ClearSessionsAsync(System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ClearSessionsAsync(Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.User.RemoveLinkedObjectAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.RemoveLinkedObjectAsync(System.String,System.Threading.CancellationToken)
  id: RemoveLinkedObjectAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: RemoveLinkedObjectAsync(String, CancellationToken)
  nameWithType: User.RemoveLinkedObjectAsync(String, CancellationToken)
  fullName: Okta.Sdk.User.RemoveLinkedObjectAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/User.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveLinkedObjectAsync
    path: ../src/Okta.Sdk/Generated/User.Generated.cs
    startLine: 262
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task RemoveLinkedObjectAsync(string relationshipName, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: relationshipName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveLinkedObjectAsync(relationshipName As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.RemoveLinkedObjectAsync*
  implements:
  - Okta.Sdk.IUser.RemoveLinkedObjectAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.AppLinks
  commentId: P:Okta.Sdk.User.AppLinks
  id: AppLinks
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: AppLinks
  nameWithType: User.AppLinks
  fullName: Okta.Sdk.User.AppLinks
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AppLinks
    path: ../src/Okta.Sdk/User.cs
    startLine: 18
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IAsyncEnumerable<IAppLink> AppLinks { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IAppLink}
    content.vb: Public ReadOnly Property AppLinks As IAsyncEnumerable(Of IAppLink)
  overload: Okta.Sdk.User.AppLinks*
  implements:
  - Okta.Sdk.IUser.AppLinks
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.User.Roles
  commentId: P:Okta.Sdk.User.Roles
  id: Roles
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: User.Roles
  fullName: Okta.Sdk.User.Roles
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Roles
    path: ../src/Okta.Sdk/User.cs
    startLine: 22
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IAsyncEnumerable<IRole> Roles { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IRole}
    content.vb: Public ReadOnly Property Roles As IAsyncEnumerable(Of IRole)
  overload: Okta.Sdk.User.Roles*
  implements:
  - Okta.Sdk.IUser.Roles
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.User.Groups
  commentId: P:Okta.Sdk.User.Groups
  id: Groups
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: Groups
  nameWithType: User.Groups
  fullName: Okta.Sdk.User.Groups
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Groups
    path: ../src/Okta.Sdk/User.cs
    startLine: 26
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IAsyncEnumerable<IGroup> Groups { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IGroup}
    content.vb: Public ReadOnly Property Groups As IAsyncEnumerable(Of IGroup)
  overload: Okta.Sdk.User.Groups*
  implements:
  - Okta.Sdk.IUser.Groups
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.User.Factors
  commentId: P:Okta.Sdk.User.Factors
  id: Factors
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: Factors
  nameWithType: User.Factors
  fullName: Okta.Sdk.User.Factors
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Factors
    path: ../src/Okta.Sdk/User.cs
    startLine: 30
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IAsyncEnumerable<IUserFactor> Factors { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IUserFactor}
    content.vb: Public ReadOnly Property Factors As IAsyncEnumerable(Of IUserFactor)
  overload: Okta.Sdk.User.Factors*
  implements:
  - Okta.Sdk.IUser.Factors
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.User.ChangePasswordAsync(Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.ChangePasswordAsync(Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
  id: ChangePasswordAsync(Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ChangePasswordAsync(ChangePasswordOptions, CancellationToken)
  nameWithType: User.ChangePasswordAsync(ChangePasswordOptions, CancellationToken)
  fullName: Okta.Sdk.User.ChangePasswordAsync(Okta.Sdk.ChangePasswordOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ChangePasswordAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 34
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserCredentials> ChangePasswordAsync(ChangePasswordOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: options
      type: Okta.Sdk.ChangePasswordOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserCredentials}
    content.vb: Public Function ChangePasswordAsync(options As ChangePasswordOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUserCredentials)
  overload: Okta.Sdk.User.ChangePasswordAsync*
  implements:
  - Okta.Sdk.IUser.ChangePasswordAsync(Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.ResetPasswordAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.ResetPasswordAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: ResetPasswordAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ResetPasswordAsync(Nullable<Boolean>, CancellationToken)
  nameWithType: User.ResetPasswordAsync(Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.User.ResetPasswordAsync(System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ResetPasswordAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 38
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IResetPasswordToken> ResetPasswordAsync(bool? sendEmail = true, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: sendEmail
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IResetPasswordToken}
    content.vb: Public Function ResetPasswordAsync(sendEmail As Boolean? = True, cancellationToken As CancellationToken = Nothing) As Task(Of IResetPasswordToken)
  overload: Okta.Sdk.User.ResetPasswordAsync*
  implements:
  - Okta.Sdk.IUser.ResetPasswordAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: User.ResetPasswordAsync(Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.ResetPasswordAsync(System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ResetPasswordAsync(Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.User.DeactivateOrDeleteAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.DeactivateOrDeleteAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: DeactivateOrDeleteAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: DeactivateOrDeleteAsync(Nullable<Boolean>, CancellationToken)
  nameWithType: User.DeactivateOrDeleteAsync(Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.User.DeactivateOrDeleteAsync(System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateOrDeleteAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 42
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task DeactivateOrDeleteAsync(bool? sendEmail = false, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: sendEmail
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeactivateOrDeleteAsync(sendEmail As Boolean? = False, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.DeactivateOrDeleteAsync*
  implements:
  - Okta.Sdk.IUser.DeactivateOrDeleteAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: User.DeactivateOrDeleteAsync(Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.User.DeactivateOrDeleteAsync(System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: DeactivateOrDeleteAsync(Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.User.ChangeRecoveryQuestionAsync(Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.ChangeRecoveryQuestionAsync(Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
  id: ChangeRecoveryQuestionAsync(Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: ChangeRecoveryQuestionAsync(ChangeRecoveryQuestionOptions, CancellationToken)
  nameWithType: User.ChangeRecoveryQuestionAsync(ChangeRecoveryQuestionOptions, CancellationToken)
  fullName: Okta.Sdk.User.ChangeRecoveryQuestionAsync(Okta.Sdk.ChangeRecoveryQuestionOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ChangeRecoveryQuestionAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 46
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task ChangeRecoveryQuestionAsync(ChangeRecoveryQuestionOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: options
      type: Okta.Sdk.ChangeRecoveryQuestionOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ChangeRecoveryQuestionAsync(options As ChangeRecoveryQuestionOptions, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.ChangeRecoveryQuestionAsync*
  implements:
  - Okta.Sdk.IUser.ChangeRecoveryQuestionAsync(Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.RemoveFromGroupAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.RemoveFromGroupAsync(System.String,System.Threading.CancellationToken)
  id: RemoveFromGroupAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: RemoveFromGroupAsync(String, CancellationToken)
  nameWithType: User.RemoveFromGroupAsync(String, CancellationToken)
  fullName: Okta.Sdk.User.RemoveFromGroupAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveFromGroupAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 50
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task RemoveFromGroupAsync(string groupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveFromGroupAsync(groupId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.RemoveFromGroupAsync*
  implements:
  - Okta.Sdk.IUser.RemoveFromGroupAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.UpdateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.UpdateAsync(System.Threading.CancellationToken)
  id: UpdateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: UpdateAsync(CancellationToken)
  nameWithType: User.UpdateAsync(CancellationToken)
  fullName: Okta.Sdk.User.UpdateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 54
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUser> UpdateAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUser}
    content.vb: Public Function UpdateAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IUser)
  overload: Okta.Sdk.User.UpdateAsync*
  implements:
  - Okta.Sdk.IUser.UpdateAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddSecurityQuestionFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddSecurityQuestionFactorOptions,System.Threading.CancellationToken)
  id: AddFactorAsync(Okta.Sdk.AddSecurityQuestionFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: AddFactorAsync(AddSecurityQuestionFactorOptions, CancellationToken)
  nameWithType: User.AddFactorAsync(AddSecurityQuestionFactorOptions, CancellationToken)
  fullName: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddSecurityQuestionFactorOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddFactorAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 58
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserFactor> AddFactorAsync(AddSecurityQuestionFactorOptions securityQuestionFactorOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: securityQuestionFactorOptions
      type: Okta.Sdk.AddSecurityQuestionFactorOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserFactor}
    content.vb: Public Function AddFactorAsync(securityQuestionFactorOptions As AddSecurityQuestionFactorOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUserFactor)
  overload: Okta.Sdk.User.AddFactorAsync*
  implements:
  - Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddSecurityQuestionFactorOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddCallFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddCallFactorOptions,System.Threading.CancellationToken)
  id: AddFactorAsync(Okta.Sdk.AddCallFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: AddFactorAsync(AddCallFactorOptions, CancellationToken)
  nameWithType: User.AddFactorAsync(AddCallFactorOptions, CancellationToken)
  fullName: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddCallFactorOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddFactorAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 62
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserFactor> AddFactorAsync(AddCallFactorOptions callFactorOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: callFactorOptions
      type: Okta.Sdk.AddCallFactorOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserFactor}
    content.vb: Public Function AddFactorAsync(callFactorOptions As AddCallFactorOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUserFactor)
  overload: Okta.Sdk.User.AddFactorAsync*
  implements:
  - Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddCallFactorOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddEmailFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddEmailFactorOptions,System.Threading.CancellationToken)
  id: AddFactorAsync(Okta.Sdk.AddEmailFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: AddFactorAsync(AddEmailFactorOptions, CancellationToken)
  nameWithType: User.AddFactorAsync(AddEmailFactorOptions, CancellationToken)
  fullName: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddEmailFactorOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddFactorAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 66
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserFactor> AddFactorAsync(AddEmailFactorOptions emailFactorOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: emailFactorOptions
      type: Okta.Sdk.AddEmailFactorOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserFactor}
    content.vb: Public Function AddFactorAsync(emailFactorOptions As AddEmailFactorOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUserFactor)
  overload: Okta.Sdk.User.AddFactorAsync*
  implements:
  - Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddEmailFactorOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddHardwareFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddHardwareFactorOptions,System.Threading.CancellationToken)
  id: AddFactorAsync(Okta.Sdk.AddHardwareFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: AddFactorAsync(AddHardwareFactorOptions, CancellationToken)
  nameWithType: User.AddFactorAsync(AddHardwareFactorOptions, CancellationToken)
  fullName: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddHardwareFactorOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddFactorAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 70
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserFactor> AddFactorAsync(AddHardwareFactorOptions hardwareFactorOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: hardwareFactorOptions
      type: Okta.Sdk.AddHardwareFactorOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserFactor}
    content.vb: Public Function AddFactorAsync(hardwareFactorOptions As AddHardwareFactorOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUserFactor)
  overload: Okta.Sdk.User.AddFactorAsync*
  implements:
  - Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddHardwareFactorOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddPushFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddPushFactorOptions,System.Threading.CancellationToken)
  id: AddFactorAsync(Okta.Sdk.AddPushFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: AddFactorAsync(AddPushFactorOptions, CancellationToken)
  nameWithType: User.AddFactorAsync(AddPushFactorOptions, CancellationToken)
  fullName: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddPushFactorOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddFactorAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 74
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserFactor> AddFactorAsync(AddPushFactorOptions pushFactorOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: pushFactorOptions
      type: Okta.Sdk.AddPushFactorOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserFactor}
    content.vb: Public Function AddFactorAsync(pushFactorOptions As AddPushFactorOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUserFactor)
  overload: Okta.Sdk.User.AddFactorAsync*
  implements:
  - Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddPushFactorOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddSmsFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddSmsFactorOptions,System.Threading.CancellationToken)
  id: AddFactorAsync(Okta.Sdk.AddSmsFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: AddFactorAsync(AddSmsFactorOptions, CancellationToken)
  nameWithType: User.AddFactorAsync(AddSmsFactorOptions, CancellationToken)
  fullName: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddSmsFactorOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddFactorAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 78
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserFactor> AddFactorAsync(AddSmsFactorOptions smsFactorOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: smsFactorOptions
      type: Okta.Sdk.AddSmsFactorOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserFactor}
    content.vb: Public Function AddFactorAsync(smsFactorOptions As AddSmsFactorOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUserFactor)
  overload: Okta.Sdk.User.AddFactorAsync*
  implements:
  - Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddSmsFactorOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddTokenFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddTokenFactorOptions,System.Threading.CancellationToken)
  id: AddFactorAsync(Okta.Sdk.AddTokenFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: AddFactorAsync(AddTokenFactorOptions, CancellationToken)
  nameWithType: User.AddFactorAsync(AddTokenFactorOptions, CancellationToken)
  fullName: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddTokenFactorOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddFactorAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 82
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserFactor> AddFactorAsync(AddTokenFactorOptions tokenFactorOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: tokenFactorOptions
      type: Okta.Sdk.AddTokenFactorOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserFactor}
    content.vb: Public Function AddFactorAsync(tokenFactorOptions As AddTokenFactorOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUserFactor)
  overload: Okta.Sdk.User.AddFactorAsync*
  implements:
  - Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddTokenFactorOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddTotpFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddTotpFactorOptions,System.Threading.CancellationToken)
  id: AddFactorAsync(Okta.Sdk.AddTotpFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: AddFactorAsync(AddTotpFactorOptions, CancellationToken)
  nameWithType: User.AddFactorAsync(AddTotpFactorOptions, CancellationToken)
  fullName: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddTotpFactorOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddFactorAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 86
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserFactor> AddFactorAsync(AddTotpFactorOptions totpFactorOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: totpFactorOptions
      type: Okta.Sdk.AddTotpFactorOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserFactor}
    content.vb: Public Function AddFactorAsync(totpFactorOptions As AddTotpFactorOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUserFactor)
  overload: Okta.Sdk.User.AddFactorAsync*
  implements:
  - Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddTotpFactorOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddCustomHotpFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddCustomHotpFactorOptions,System.Threading.CancellationToken)
  id: AddFactorAsync(Okta.Sdk.AddCustomHotpFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: AddFactorAsync(AddCustomHotpFactorOptions, CancellationToken)
  nameWithType: User.AddFactorAsync(AddCustomHotpFactorOptions, CancellationToken)
  fullName: Okta.Sdk.User.AddFactorAsync(Okta.Sdk.AddCustomHotpFactorOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddFactorAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 90
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserFactor> AddFactorAsync(AddCustomHotpFactorOptions hotpFactorOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: hotpFactorOptions
      type: Okta.Sdk.AddCustomHotpFactorOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserFactor}
    content.vb: Public Function AddFactorAsync(hotpFactorOptions As AddCustomHotpFactorOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUserFactor)
  overload: Okta.Sdk.User.AddFactorAsync*
  implements:
  - Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddCustomHotpFactorOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.DeactivateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.User.DeactivateAsync(System.Threading.CancellationToken)
  id: DeactivateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: DeactivateAsync(CancellationToken)
  nameWithType: User.DeactivateAsync(CancellationToken)
  fullName: Okta.Sdk.User.DeactivateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 94
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task DeactivateAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeactivateAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.User.DeactivateAsync*
  implements:
  - Okta.Sdk.IUser.DeactivateAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.User.DeactivateAsync
  commentId: M:Okta.Sdk.User.DeactivateAsync
  id: DeactivateAsync
  parent: Okta.Sdk.User
  langs:
  - csharp
  - vb
  name: DeactivateAsync()
  nameWithType: User.DeactivateAsync()
  fullName: Okta.Sdk.User.DeactivateAsync()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/User.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateAsync
    path: ../src/Okta.Sdk/User.cs
    startLine: 98
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task DeactivateAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeactivateAsync As Task
  overload: Okta.Sdk.User.DeactivateAsync*
  implements:
  - Okta.Sdk.IUser.DeactivateAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Okta.Sdk.Resource
  commentId: T:Okta.Sdk.Resource
  parent: Okta.Sdk
  name: Resource
  nameWithType: Resource
  fullName: Okta.Sdk.Resource
- uid: Okta.Sdk.IUser
  commentId: T:Okta.Sdk.IUser
  parent: Okta.Sdk
  name: IUser
  nameWithType: IUser
  fullName: Okta.Sdk.IUser
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  parent: Okta.Sdk
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
- uid: Okta.Sdk.Resource.GetClient
  commentId: M:Okta.Sdk.Resource.GetClient
  parent: Okta.Sdk.Resource
  name: GetClient()
  nameWithType: Resource.GetClient()
  fullName: Okta.Sdk.Resource.GetClient()
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetClient
    name: GetClient
    nameWithType: Resource.GetClient
    fullName: Okta.Sdk.Resource.GetClient
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetClient
    name: GetClient
    nameWithType: Resource.GetClient
    fullName: Okta.Sdk.Resource.GetClient
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetData
  commentId: M:Okta.Sdk.Resource.GetData
  parent: Okta.Sdk.Resource
  name: GetData()
  nameWithType: Resource.GetData()
  fullName: Okta.Sdk.Resource.GetData()
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetData
    name: GetData
    nameWithType: Resource.GetData
    fullName: Okta.Sdk.Resource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetData
    name: GetData
    nameWithType: Resource.GetData
    fullName: Okta.Sdk.Resource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.Item(System.String)
  commentId: P:Okta.Sdk.Resource.Item(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: Item[String]
  nameWithType: Resource.Item[String]
  fullName: Okta.Sdk.Resource.Item[System.String]
  nameWithType.vb: Resource.Item(String)
  fullName.vb: Okta.Sdk.Resource.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.Item(System.String)
    name: Item
    nameWithType: Resource.Item
    fullName: Okta.Sdk.Resource.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Okta.Sdk.Resource.Item(System.String)
    name: Item
    nameWithType: Resource.Item
    fullName: Okta.Sdk.Resource.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: Resource.GetProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetProperty<T>(System.String)
  nameWithType.vb: Resource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: Resource.GetProperty<T>
    fullName: Okta.Sdk.Resource.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: Resource.GetProperty(Of T)
    fullName: Okta.Sdk.Resource.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: Resource.SetProperty(String, Object)
  fullName: Okta.Sdk.Resource.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: Resource.SetProperty
    fullName: Okta.Sdk.Resource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: Resource.SetProperty
    fullName: Okta.Sdk.Resource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetStringProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetStringProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetStringProperty(String)
  nameWithType: Resource.GetStringProperty(String)
  fullName: Okta.Sdk.Resource.GetStringProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetStringProperty(System.String)
    name: GetStringProperty
    nameWithType: Resource.GetStringProperty
    fullName: Okta.Sdk.Resource.GetStringProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetStringProperty(System.String)
    name: GetStringProperty
    nameWithType: Resource.GetStringProperty
    fullName: Okta.Sdk.Resource.GetStringProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetBooleanProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetBooleanProperty(String)
  nameWithType: Resource.GetBooleanProperty(String)
  fullName: Okta.Sdk.Resource.GetBooleanProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
    name: GetBooleanProperty
    nameWithType: Resource.GetBooleanProperty
    fullName: Okta.Sdk.Resource.GetBooleanProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
    name: GetBooleanProperty
    nameWithType: Resource.GetBooleanProperty
    fullName: Okta.Sdk.Resource.GetBooleanProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetIntegerProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetIntegerProperty(String)
  nameWithType: Resource.GetIntegerProperty(String)
  fullName: Okta.Sdk.Resource.GetIntegerProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
    name: GetIntegerProperty
    nameWithType: Resource.GetIntegerProperty
    fullName: Okta.Sdk.Resource.GetIntegerProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
    name: GetIntegerProperty
    nameWithType: Resource.GetIntegerProperty
    fullName: Okta.Sdk.Resource.GetIntegerProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetLongProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetLongProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetLongProperty(String)
  nameWithType: Resource.GetLongProperty(String)
  fullName: Okta.Sdk.Resource.GetLongProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetLongProperty(System.String)
    name: GetLongProperty
    nameWithType: Resource.GetLongProperty
    fullName: Okta.Sdk.Resource.GetLongProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetLongProperty(System.String)
    name: GetLongProperty
    nameWithType: Resource.GetLongProperty
    fullName: Okta.Sdk.Resource.GetLongProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetDoubleProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetDoubleProperty(String)
  nameWithType: Resource.GetDoubleProperty(String)
  fullName: Okta.Sdk.Resource.GetDoubleProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
    name: GetDoubleProperty
    nameWithType: Resource.GetDoubleProperty
    fullName: Okta.Sdk.Resource.GetDoubleProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
    name: GetDoubleProperty
    nameWithType: Resource.GetDoubleProperty
    fullName: Okta.Sdk.Resource.GetDoubleProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetDateTimeProperty(String)
  nameWithType: Resource.GetDateTimeProperty(String)
  fullName: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
    name: GetDateTimeProperty
    nameWithType: Resource.GetDateTimeProperty
    fullName: Okta.Sdk.Resource.GetDateTimeProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
    name: GetDateTimeProperty
    nameWithType: Resource.GetDateTimeProperty
    fullName: Okta.Sdk.Resource.GetDateTimeProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetArrayProperty<T>(String)
  nameWithType: Resource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetArrayProperty<T>(System.String)
  nameWithType.vb: Resource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
    name: GetArrayProperty<T>
    nameWithType: Resource.GetArrayProperty<T>
    fullName: Okta.Sdk.Resource.GetArrayProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
    name: GetArrayProperty(Of T)
    nameWithType: Resource.GetArrayProperty(Of T)
    fullName: Okta.Sdk.Resource.GetArrayProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetEnumProperty<TEnum>(String)
  nameWithType: Resource.GetEnumProperty<TEnum>(String)
  fullName: Okta.Sdk.Resource.GetEnumProperty<TEnum>(System.String)
  nameWithType.vb: Resource.GetEnumProperty(Of TEnum)(String)
  fullName.vb: Okta.Sdk.Resource.GetEnumProperty(Of TEnum)(System.String)
  name.vb: GetEnumProperty(Of TEnum)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
    name: GetEnumProperty<TEnum>
    nameWithType: Resource.GetEnumProperty<TEnum>
    fullName: Okta.Sdk.Resource.GetEnumProperty<TEnum>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
    name: GetEnumProperty(Of TEnum)
    nameWithType: Resource.GetEnumProperty(Of TEnum)
    fullName: Okta.Sdk.Resource.GetEnumProperty(Of TEnum)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetResourceProperty<T>(String)
  nameWithType: Resource.GetResourceProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetResourceProperty<T>(System.String)
  nameWithType.vb: Resource.GetResourceProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetResourceProperty(Of T)(System.String)
  name.vb: GetResourceProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
    name: GetResourceProperty<T>
    nameWithType: Resource.GetResourceProperty<T>
    fullName: Okta.Sdk.Resource.GetResourceProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
    name: GetResourceProperty(Of T)
    nameWithType: Resource.GetResourceProperty(Of T)
    fullName: Okta.Sdk.Resource.GetResourceProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.User.Activated*
  commentId: Overload:Okta.Sdk.User.Activated
  name: Activated
  nameWithType: User.Activated
  fullName: Okta.Sdk.User.Activated
- uid: Okta.Sdk.IUser.Activated
  commentId: P:Okta.Sdk.IUser.Activated
  parent: Okta.Sdk.IUser
  name: Activated
  nameWithType: IUser.Activated
  fullName: Okta.Sdk.IUser.Activated
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.Created*
  commentId: Overload:Okta.Sdk.User.Created
  name: Created
  nameWithType: User.Created
  fullName: Okta.Sdk.User.Created
- uid: Okta.Sdk.IUser.Created
  commentId: P:Okta.Sdk.IUser.Created
  parent: Okta.Sdk.IUser
  name: Created
  nameWithType: IUser.Created
  fullName: Okta.Sdk.IUser.Created
- uid: Okta.Sdk.User.Credentials*
  commentId: Overload:Okta.Sdk.User.Credentials
  name: Credentials
  nameWithType: User.Credentials
  fullName: Okta.Sdk.User.Credentials
- uid: Okta.Sdk.IUser.Credentials
  commentId: P:Okta.Sdk.IUser.Credentials
  parent: Okta.Sdk.IUser
  name: Credentials
  nameWithType: IUser.Credentials
  fullName: Okta.Sdk.IUser.Credentials
- uid: Okta.Sdk.IUserCredentials
  commentId: T:Okta.Sdk.IUserCredentials
  parent: Okta.Sdk
  name: IUserCredentials
  nameWithType: IUserCredentials
  fullName: Okta.Sdk.IUserCredentials
- uid: Okta.Sdk.User.Id*
  commentId: Overload:Okta.Sdk.User.Id
  name: Id
  nameWithType: User.Id
  fullName: Okta.Sdk.User.Id
- uid: Okta.Sdk.IUser.Id
  commentId: P:Okta.Sdk.IUser.Id
  parent: Okta.Sdk.IUser
  name: Id
  nameWithType: IUser.Id
  fullName: Okta.Sdk.IUser.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.User.LastLogin*
  commentId: Overload:Okta.Sdk.User.LastLogin
  name: LastLogin
  nameWithType: User.LastLogin
  fullName: Okta.Sdk.User.LastLogin
- uid: Okta.Sdk.IUser.LastLogin
  commentId: P:Okta.Sdk.IUser.LastLogin
  parent: Okta.Sdk.IUser
  name: LastLogin
  nameWithType: IUser.LastLogin
  fullName: Okta.Sdk.IUser.LastLogin
- uid: Okta.Sdk.User.LastUpdated*
  commentId: Overload:Okta.Sdk.User.LastUpdated
  name: LastUpdated
  nameWithType: User.LastUpdated
  fullName: Okta.Sdk.User.LastUpdated
- uid: Okta.Sdk.IUser.LastUpdated
  commentId: P:Okta.Sdk.IUser.LastUpdated
  parent: Okta.Sdk.IUser
  name: LastUpdated
  nameWithType: IUser.LastUpdated
  fullName: Okta.Sdk.IUser.LastUpdated
- uid: Okta.Sdk.User.PasswordChanged*
  commentId: Overload:Okta.Sdk.User.PasswordChanged
  name: PasswordChanged
  nameWithType: User.PasswordChanged
  fullName: Okta.Sdk.User.PasswordChanged
- uid: Okta.Sdk.IUser.PasswordChanged
  commentId: P:Okta.Sdk.IUser.PasswordChanged
  parent: Okta.Sdk.IUser
  name: PasswordChanged
  nameWithType: IUser.PasswordChanged
  fullName: Okta.Sdk.IUser.PasswordChanged
- uid: Okta.Sdk.User.Profile*
  commentId: Overload:Okta.Sdk.User.Profile
  name: Profile
  nameWithType: User.Profile
  fullName: Okta.Sdk.User.Profile
- uid: Okta.Sdk.IUser.Profile
  commentId: P:Okta.Sdk.IUser.Profile
  parent: Okta.Sdk.IUser
  name: Profile
  nameWithType: IUser.Profile
  fullName: Okta.Sdk.IUser.Profile
- uid: Okta.Sdk.IUserProfile
  commentId: T:Okta.Sdk.IUserProfile
  parent: Okta.Sdk
  name: IUserProfile
  nameWithType: IUserProfile
  fullName: Okta.Sdk.IUserProfile
- uid: Okta.Sdk.User.Status*
  commentId: Overload:Okta.Sdk.User.Status
  name: Status
  nameWithType: User.Status
  fullName: Okta.Sdk.User.Status
- uid: Okta.Sdk.IUser.Status
  commentId: P:Okta.Sdk.IUser.Status
  parent: Okta.Sdk.IUser
  name: Status
  nameWithType: IUser.Status
  fullName: Okta.Sdk.IUser.Status
- uid: Okta.Sdk.UserStatus
  commentId: T:Okta.Sdk.UserStatus
  parent: Okta.Sdk
  name: UserStatus
  nameWithType: UserStatus
  fullName: Okta.Sdk.UserStatus
- uid: Okta.Sdk.User.StatusChanged*
  commentId: Overload:Okta.Sdk.User.StatusChanged
  name: StatusChanged
  nameWithType: User.StatusChanged
  fullName: Okta.Sdk.User.StatusChanged
- uid: Okta.Sdk.IUser.StatusChanged
  commentId: P:Okta.Sdk.IUser.StatusChanged
  parent: Okta.Sdk.IUser
  name: StatusChanged
  nameWithType: IUser.StatusChanged
  fullName: Okta.Sdk.IUser.StatusChanged
- uid: Okta.Sdk.User.TransitioningToStatus*
  commentId: Overload:Okta.Sdk.User.TransitioningToStatus
  name: TransitioningToStatus
  nameWithType: User.TransitioningToStatus
  fullName: Okta.Sdk.User.TransitioningToStatus
- uid: Okta.Sdk.IUser.TransitioningToStatus
  commentId: P:Okta.Sdk.IUser.TransitioningToStatus
  parent: Okta.Sdk.IUser
  name: TransitioningToStatus
  nameWithType: IUser.TransitioningToStatus
  fullName: Okta.Sdk.IUser.TransitioningToStatus
- uid: Okta.Sdk.User.Type*
  commentId: Overload:Okta.Sdk.User.Type
  name: Type
  nameWithType: User.Type
  fullName: Okta.Sdk.User.Type
- uid: Okta.Sdk.IUser.Type
  commentId: P:Okta.Sdk.IUser.Type
  parent: Okta.Sdk.IUser
  name: Type
  nameWithType: IUser.Type
  fullName: Okta.Sdk.IUser.Type
- uid: Okta.Sdk.IUserType
  commentId: T:Okta.Sdk.IUserType
  parent: Okta.Sdk
  name: IUserType
  nameWithType: IUserType
  fullName: Okta.Sdk.IUserType
- uid: Okta.Sdk.User.ForgotPasswordSetNewPasswordAsync*
  commentId: Overload:Okta.Sdk.User.ForgotPasswordSetNewPasswordAsync
  name: ForgotPasswordSetNewPasswordAsync
  nameWithType: User.ForgotPasswordSetNewPasswordAsync
  fullName: Okta.Sdk.User.ForgotPasswordSetNewPasswordAsync
- uid: Okta.Sdk.IUser.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ForgotPasswordSetNewPasswordAsync(IUserCredentials, Nullable<Boolean>, CancellationToken)
  nameWithType: IUser.ForgotPasswordSetNewPasswordAsync(IUserCredentials, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUser.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUser.ForgotPasswordSetNewPasswordAsync(IUserCredentials, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUser.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ForgotPasswordSetNewPasswordAsync(IUserCredentials, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ForgotPasswordSetNewPasswordAsync
    nameWithType: IUser.ForgotPasswordSetNewPasswordAsync
    fullName: Okta.Sdk.IUser.ForgotPasswordSetNewPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IUserCredentials
    name: IUserCredentials
    nameWithType: IUserCredentials
    fullName: Okta.Sdk.IUserCredentials
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ForgotPasswordSetNewPasswordAsync
    nameWithType: IUser.ForgotPasswordSetNewPasswordAsync
    fullName: Okta.Sdk.IUser.ForgotPasswordSetNewPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IUserCredentials
    name: IUserCredentials
    nameWithType: IUserCredentials
    fullName: Okta.Sdk.IUserCredentials
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.IForgotPasswordResponse}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IForgotPasswordResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IForgotPasswordResponse>
  nameWithType: Task<IForgotPasswordResponse>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IForgotPasswordResponse>
  nameWithType.vb: Task(Of IForgotPasswordResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IForgotPasswordResponse)
  name.vb: Task(Of IForgotPasswordResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IForgotPasswordResponse
    name: IForgotPasswordResponse
    nameWithType: IForgotPasswordResponse
    fullName: Okta.Sdk.IForgotPasswordResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IForgotPasswordResponse
    name: IForgotPasswordResponse
    nameWithType: IForgotPasswordResponse
    fullName: Okta.Sdk.IForgotPasswordResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.User.ForgotPasswordGenerateOneTimeTokenAsync*
  commentId: Overload:Okta.Sdk.User.ForgotPasswordGenerateOneTimeTokenAsync
  name: ForgotPasswordGenerateOneTimeTokenAsync
  nameWithType: User.ForgotPasswordGenerateOneTimeTokenAsync
  fullName: Okta.Sdk.User.ForgotPasswordGenerateOneTimeTokenAsync
- uid: Okta.Sdk.IUser.ForgotPasswordGenerateOneTimeTokenAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.ForgotPasswordGenerateOneTimeTokenAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ForgotPasswordGenerateOneTimeTokenAsync(Nullable<Boolean>, CancellationToken)
  nameWithType: IUser.ForgotPasswordGenerateOneTimeTokenAsync(Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUser.ForgotPasswordGenerateOneTimeTokenAsync(System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUser.ForgotPasswordGenerateOneTimeTokenAsync(Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUser.ForgotPasswordGenerateOneTimeTokenAsync(System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ForgotPasswordGenerateOneTimeTokenAsync(Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.ForgotPasswordGenerateOneTimeTokenAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ForgotPasswordGenerateOneTimeTokenAsync
    nameWithType: IUser.ForgotPasswordGenerateOneTimeTokenAsync
    fullName: Okta.Sdk.IUser.ForgotPasswordGenerateOneTimeTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ForgotPasswordGenerateOneTimeTokenAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ForgotPasswordGenerateOneTimeTokenAsync
    nameWithType: IUser.ForgotPasswordGenerateOneTimeTokenAsync
    fullName: Okta.Sdk.IUser.ForgotPasswordGenerateOneTimeTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.AssignRoleAsync*
  commentId: Overload:Okta.Sdk.User.AssignRoleAsync
  name: AssignRoleAsync
  nameWithType: User.AssignRoleAsync
  fullName: Okta.Sdk.User.AssignRoleAsync
- uid: Okta.Sdk.IUser.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: AssignRoleAsync(IAssignRoleRequest, Nullable<Boolean>, CancellationToken)
  nameWithType: IUser.AssignRoleAsync(IAssignRoleRequest, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUser.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUser.AssignRoleAsync(IAssignRoleRequest, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUser.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: AssignRoleAsync(IAssignRoleRequest, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: AssignRoleAsync
    nameWithType: IUser.AssignRoleAsync
    fullName: Okta.Sdk.IUser.AssignRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAssignRoleRequest
    name: IAssignRoleRequest
    nameWithType: IAssignRoleRequest
    fullName: Okta.Sdk.IAssignRoleRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: AssignRoleAsync
    nameWithType: IUser.AssignRoleAsync
    fullName: Okta.Sdk.IUser.AssignRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAssignRoleRequest
    name: IAssignRoleRequest
    nameWithType: IAssignRoleRequest
    fullName: Okta.Sdk.IAssignRoleRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAssignRoleRequest
  commentId: T:Okta.Sdk.IAssignRoleRequest
  parent: Okta.Sdk
  name: IAssignRoleRequest
  nameWithType: IAssignRoleRequest
  fullName: Okta.Sdk.IAssignRoleRequest
- uid: System.Threading.Tasks.Task{Okta.Sdk.IRole}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IRole}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IRole>
  nameWithType: Task<IRole>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IRole>
  nameWithType.vb: Task(Of IRole)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IRole)
  name.vb: Task(Of IRole)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.GetRoleAsync*
  commentId: Overload:Okta.Sdk.User.GetRoleAsync
  name: GetRoleAsync
  nameWithType: User.GetRoleAsync
  fullName: Okta.Sdk.User.GetRoleAsync
- uid: Okta.Sdk.IUser.GetRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.GetRoleAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: GetRoleAsync(String, CancellationToken)
  nameWithType: IUser.GetRoleAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUser.GetRoleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.GetRoleAsync(System.String,System.Threading.CancellationToken)
    name: GetRoleAsync
    nameWithType: IUser.GetRoleAsync
    fullName: Okta.Sdk.IUser.GetRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.GetRoleAsync(System.String,System.Threading.CancellationToken)
    name: GetRoleAsync
    nameWithType: IUser.GetRoleAsync
    fullName: Okta.Sdk.IUser.GetRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.RemoveRoleAsync*
  commentId: Overload:Okta.Sdk.User.RemoveRoleAsync
  name: RemoveRoleAsync
  nameWithType: User.RemoveRoleAsync
  fullName: Okta.Sdk.User.RemoveRoleAsync
- uid: Okta.Sdk.IUser.RemoveRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.RemoveRoleAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: RemoveRoleAsync(String, CancellationToken)
  nameWithType: IUser.RemoveRoleAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUser.RemoveRoleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.RemoveRoleAsync(System.String,System.Threading.CancellationToken)
    name: RemoveRoleAsync
    nameWithType: IUser.RemoveRoleAsync
    fullName: Okta.Sdk.IUser.RemoveRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.RemoveRoleAsync(System.String,System.Threading.CancellationToken)
    name: RemoveRoleAsync
    nameWithType: IUser.RemoveRoleAsync
    fullName: Okta.Sdk.IUser.RemoveRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Okta.Sdk.User.ListGroupTargets*
  commentId: Overload:Okta.Sdk.User.ListGroupTargets
  name: ListGroupTargets
  nameWithType: User.ListGroupTargets
  fullName: Okta.Sdk.User.ListGroupTargets
- uid: Okta.Sdk.IUser.ListGroupTargets(System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IUser.ListGroupTargets(System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ListGroupTargets(String, String, Nullable<Int32>)
  nameWithType: IUser.ListGroupTargets(String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IUser.ListGroupTargets(System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IUser.ListGroupTargets(String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IUser.ListGroupTargets(System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListGroupTargets(String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IUser.ListGroupTargets(System.String,System.String,System.Nullable{System.Int32})
    name: ListGroupTargets
    nameWithType: IUser.ListGroupTargets
    fullName: Okta.Sdk.IUser.ListGroupTargets
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ListGroupTargets(System.String,System.String,System.Nullable{System.Int32})
    name: ListGroupTargets
    nameWithType: IUser.ListGroupTargets
    fullName: Okta.Sdk.IUser.ListGroupTargets
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IGroup}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IGroup}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IGroup>
  nameWithType: ICollectionClient<IGroup>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IGroup>
  nameWithType.vb: ICollectionClient(Of IGroup)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IGroup)
  name.vb: ICollectionClient(Of IGroup)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.RemoveGroupTargetAsync*
  commentId: Overload:Okta.Sdk.User.RemoveGroupTargetAsync
  name: RemoveGroupTargetAsync
  nameWithType: User.RemoveGroupTargetAsync
  fullName: Okta.Sdk.User.RemoveGroupTargetAsync
- uid: Okta.Sdk.IUser.RemoveGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.RemoveGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: RemoveGroupTargetAsync(String, String, CancellationToken)
  nameWithType: IUser.RemoveGroupTargetAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IUser.RemoveGroupTargetAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.RemoveGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RemoveGroupTargetAsync
    nameWithType: IUser.RemoveGroupTargetAsync
    fullName: Okta.Sdk.IUser.RemoveGroupTargetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.RemoveGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RemoveGroupTargetAsync
    nameWithType: IUser.RemoveGroupTargetAsync
    fullName: Okta.Sdk.IUser.RemoveGroupTargetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.AddGroupTargetAsync*
  commentId: Overload:Okta.Sdk.User.AddGroupTargetAsync
  name: AddGroupTargetAsync
  nameWithType: User.AddGroupTargetAsync
  fullName: Okta.Sdk.User.AddGroupTargetAsync
- uid: Okta.Sdk.IUser.AddGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.AddGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: AddGroupTargetAsync(String, String, CancellationToken)
  nameWithType: IUser.AddGroupTargetAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IUser.AddGroupTargetAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.AddGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
    name: AddGroupTargetAsync
    nameWithType: IUser.AddGroupTargetAsync
    fullName: Okta.Sdk.IUser.AddGroupTargetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.AddGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
    name: AddGroupTargetAsync
    nameWithType: IUser.AddGroupTargetAsync
    fullName: Okta.Sdk.IUser.AddGroupTargetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ListAssignedRoles*
  commentId: Overload:Okta.Sdk.User.ListAssignedRoles
  name: ListAssignedRoles
  nameWithType: User.ListAssignedRoles
  fullName: Okta.Sdk.User.ListAssignedRoles
- uid: Okta.Sdk.IUser.ListAssignedRoles(System.String)
  commentId: M:Okta.Sdk.IUser.ListAssignedRoles(System.String)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ListAssignedRoles(String)
  nameWithType: IUser.ListAssignedRoles(String)
  fullName: Okta.Sdk.IUser.ListAssignedRoles(System.String)
  spec.csharp:
  - uid: Okta.Sdk.IUser.ListAssignedRoles(System.String)
    name: ListAssignedRoles
    nameWithType: IUser.ListAssignedRoles
    fullName: Okta.Sdk.IUser.ListAssignedRoles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ListAssignedRoles(System.String)
    name: ListAssignedRoles
    nameWithType: IUser.ListAssignedRoles
    fullName: Okta.Sdk.IUser.ListAssignedRoles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IRole}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IRole}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IRole>
  nameWithType: ICollectionClient<IRole>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IRole>
  nameWithType.vb: ICollectionClient(Of IRole)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IRole)
  name.vb: ICollectionClient(Of IRole)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.AddAllAppsAsTargetAsync*
  commentId: Overload:Okta.Sdk.User.AddAllAppsAsTargetAsync
  name: AddAllAppsAsTargetAsync
  nameWithType: User.AddAllAppsAsTargetAsync
  fullName: Okta.Sdk.User.AddAllAppsAsTargetAsync
- uid: Okta.Sdk.IUser.AddAllAppsAsTargetAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.AddAllAppsAsTargetAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: AddAllAppsAsTargetAsync(String, CancellationToken)
  nameWithType: IUser.AddAllAppsAsTargetAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUser.AddAllAppsAsTargetAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.AddAllAppsAsTargetAsync(System.String,System.Threading.CancellationToken)
    name: AddAllAppsAsTargetAsync
    nameWithType: IUser.AddAllAppsAsTargetAsync
    fullName: Okta.Sdk.IUser.AddAllAppsAsTargetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.AddAllAppsAsTargetAsync(System.String,System.Threading.CancellationToken)
    name: AddAllAppsAsTargetAsync
    nameWithType: IUser.AddAllAppsAsTargetAsync
    fullName: Okta.Sdk.IUser.AddAllAppsAsTargetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ListGrants*
  commentId: Overload:Okta.Sdk.User.ListGrants
  name: ListGrants
  nameWithType: User.ListGrants
  fullName: Okta.Sdk.User.ListGrants
- uid: Okta.Sdk.IUser.ListGrants(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IUser.ListGrants(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ListGrants(String, String, String, Nullable<Int32>)
  nameWithType: IUser.ListGrants(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IUser.ListGrants(System.String, System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IUser.ListGrants(String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IUser.ListGrants(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListGrants(String, String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IUser.ListGrants(System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListGrants
    nameWithType: IUser.ListGrants
    fullName: Okta.Sdk.IUser.ListGrants
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ListGrants(System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListGrants
    nameWithType: IUser.ListGrants
    fullName: Okta.Sdk.IUser.ListGrants
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2ScopeConsentGrant}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2ScopeConsentGrant}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2ScopeConsentGrant>
  nameWithType: ICollectionClient<IOAuth2ScopeConsentGrant>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2ScopeConsentGrant>
  nameWithType.vb: ICollectionClient(Of IOAuth2ScopeConsentGrant)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2ScopeConsentGrant)
  name.vb: ICollectionClient(Of IOAuth2ScopeConsentGrant)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.RevokeGrantsAsync*
  commentId: Overload:Okta.Sdk.User.RevokeGrantsAsync
  name: RevokeGrantsAsync
  nameWithType: User.RevokeGrantsAsync
  fullName: Okta.Sdk.User.RevokeGrantsAsync
- uid: Okta.Sdk.IUser.RevokeGrantsAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.RevokeGrantsAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: RevokeGrantsAsync(CancellationToken)
  nameWithType: IUser.RevokeGrantsAsync(CancellationToken)
  fullName: Okta.Sdk.IUser.RevokeGrantsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.RevokeGrantsAsync(System.Threading.CancellationToken)
    name: RevokeGrantsAsync
    nameWithType: IUser.RevokeGrantsAsync
    fullName: Okta.Sdk.IUser.RevokeGrantsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.RevokeGrantsAsync(System.Threading.CancellationToken)
    name: RevokeGrantsAsync
    nameWithType: IUser.RevokeGrantsAsync
    fullName: Okta.Sdk.IUser.RevokeGrantsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.RevokeGrantAsync*
  commentId: Overload:Okta.Sdk.User.RevokeGrantAsync
  name: RevokeGrantAsync
  nameWithType: User.RevokeGrantAsync
  fullName: Okta.Sdk.User.RevokeGrantAsync
- uid: Okta.Sdk.IUser.RevokeGrantAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.RevokeGrantAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: RevokeGrantAsync(String, CancellationToken)
  nameWithType: IUser.RevokeGrantAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUser.RevokeGrantAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.RevokeGrantAsync(System.String,System.Threading.CancellationToken)
    name: RevokeGrantAsync
    nameWithType: IUser.RevokeGrantAsync
    fullName: Okta.Sdk.IUser.RevokeGrantAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.RevokeGrantAsync(System.String,System.Threading.CancellationToken)
    name: RevokeGrantAsync
    nameWithType: IUser.RevokeGrantAsync
    fullName: Okta.Sdk.IUser.RevokeGrantAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.RevokeGrantsForUserAndClientAsync*
  commentId: Overload:Okta.Sdk.User.RevokeGrantsForUserAndClientAsync
  name: RevokeGrantsForUserAndClientAsync
  nameWithType: User.RevokeGrantsForUserAndClientAsync
  fullName: Okta.Sdk.User.RevokeGrantsForUserAndClientAsync
- uid: Okta.Sdk.IUser.RevokeGrantsForUserAndClientAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.RevokeGrantsForUserAndClientAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: RevokeGrantsForUserAndClientAsync(String, CancellationToken)
  nameWithType: IUser.RevokeGrantsForUserAndClientAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUser.RevokeGrantsForUserAndClientAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.RevokeGrantsForUserAndClientAsync(System.String,System.Threading.CancellationToken)
    name: RevokeGrantsForUserAndClientAsync
    nameWithType: IUser.RevokeGrantsForUserAndClientAsync
    fullName: Okta.Sdk.IUser.RevokeGrantsForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.RevokeGrantsForUserAndClientAsync(System.String,System.Threading.CancellationToken)
    name: RevokeGrantsForUserAndClientAsync
    nameWithType: IUser.RevokeGrantsForUserAndClientAsync
    fullName: Okta.Sdk.IUser.RevokeGrantsForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ListRefreshTokensForUserAndClient*
  commentId: Overload:Okta.Sdk.User.ListRefreshTokensForUserAndClient
  name: ListRefreshTokensForUserAndClient
  nameWithType: User.ListRefreshTokensForUserAndClient
  fullName: Okta.Sdk.User.ListRefreshTokensForUserAndClient
- uid: Okta.Sdk.IUser.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IUser.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ListRefreshTokensForUserAndClient(String, String, String, Nullable<Int32>)
  nameWithType: IUser.ListRefreshTokensForUserAndClient(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IUser.ListRefreshTokensForUserAndClient(System.String, System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IUser.ListRefreshTokensForUserAndClient(String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IUser.ListRefreshTokensForUserAndClient(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListRefreshTokensForUserAndClient(String, String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IUser.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListRefreshTokensForUserAndClient
    nameWithType: IUser.ListRefreshTokensForUserAndClient
    fullName: Okta.Sdk.IUser.ListRefreshTokensForUserAndClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListRefreshTokensForUserAndClient
    nameWithType: IUser.ListRefreshTokensForUserAndClient
    fullName: Okta.Sdk.IUser.ListRefreshTokensForUserAndClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2RefreshToken>
  nameWithType: ICollectionClient<IOAuth2RefreshToken>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2RefreshToken>
  nameWithType.vb: ICollectionClient(Of IOAuth2RefreshToken)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2RefreshToken)
  name.vb: ICollectionClient(Of IOAuth2RefreshToken)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.RevokeTokenForUserAndClientAsync*
  commentId: Overload:Okta.Sdk.User.RevokeTokenForUserAndClientAsync
  name: RevokeTokenForUserAndClientAsync
  nameWithType: User.RevokeTokenForUserAndClientAsync
  fullName: Okta.Sdk.User.RevokeTokenForUserAndClientAsync
- uid: Okta.Sdk.IUser.RevokeTokenForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.RevokeTokenForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: RevokeTokenForUserAndClientAsync(String, String, CancellationToken)
  nameWithType: IUser.RevokeTokenForUserAndClientAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IUser.RevokeTokenForUserAndClientAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.RevokeTokenForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RevokeTokenForUserAndClientAsync
    nameWithType: IUser.RevokeTokenForUserAndClientAsync
    fullName: Okta.Sdk.IUser.RevokeTokenForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.RevokeTokenForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RevokeTokenForUserAndClientAsync
    nameWithType: IUser.RevokeTokenForUserAndClientAsync
    fullName: Okta.Sdk.IUser.RevokeTokenForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.GetRefreshTokenForUserAndClientAsync*
  commentId: Overload:Okta.Sdk.User.GetRefreshTokenForUserAndClientAsync
  name: GetRefreshTokenForUserAndClientAsync
  nameWithType: User.GetRefreshTokenForUserAndClientAsync
  fullName: Okta.Sdk.User.GetRefreshTokenForUserAndClientAsync
- uid: Okta.Sdk.IUser.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: GetRefreshTokenForUserAndClientAsync(String, String, String, Nullable<Int32>, String, CancellationToken)
  nameWithType: IUser.GetRefreshTokenForUserAndClientAsync(String, String, String, Nullable<Int32>, String, CancellationToken)
  fullName: Okta.Sdk.IUser.GetRefreshTokenForUserAndClientAsync(System.String, System.String, System.String, System.Nullable<System.Int32>, System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUser.GetRefreshTokenForUserAndClientAsync(String, String, String, Nullable(Of Int32), String, CancellationToken)
  fullName.vb: Okta.Sdk.IUser.GetRefreshTokenForUserAndClientAsync(System.String, System.String, System.String, System.Nullable(Of System.Int32), System.String, System.Threading.CancellationToken)
  name.vb: GetRefreshTokenForUserAndClientAsync(String, String, String, Nullable(Of Int32), String, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
    name: GetRefreshTokenForUserAndClientAsync
    nameWithType: IUser.GetRefreshTokenForUserAndClientAsync
    fullName: Okta.Sdk.IUser.GetRefreshTokenForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
    name: GetRefreshTokenForUserAndClientAsync
    nameWithType: IUser.GetRefreshTokenForUserAndClientAsync
    fullName: Okta.Sdk.IUser.GetRefreshTokenForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2RefreshToken>
  nameWithType: Task<IOAuth2RefreshToken>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2RefreshToken>
  nameWithType.vb: Task(Of IOAuth2RefreshToken)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2RefreshToken)
  name.vb: Task(Of IOAuth2RefreshToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.RevokeTokensForUserAndClientAsync*
  commentId: Overload:Okta.Sdk.User.RevokeTokensForUserAndClientAsync
  name: RevokeTokensForUserAndClientAsync
  nameWithType: User.RevokeTokensForUserAndClientAsync
  fullName: Okta.Sdk.User.RevokeTokensForUserAndClientAsync
- uid: Okta.Sdk.IUser.RevokeTokensForUserAndClientAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.RevokeTokensForUserAndClientAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: RevokeTokensForUserAndClientAsync(String, CancellationToken)
  nameWithType: IUser.RevokeTokensForUserAndClientAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUser.RevokeTokensForUserAndClientAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.RevokeTokensForUserAndClientAsync(System.String,System.Threading.CancellationToken)
    name: RevokeTokensForUserAndClientAsync
    nameWithType: IUser.RevokeTokensForUserAndClientAsync
    fullName: Okta.Sdk.IUser.RevokeTokensForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.RevokeTokensForUserAndClientAsync(System.String,System.Threading.CancellationToken)
    name: RevokeTokensForUserAndClientAsync
    nameWithType: IUser.RevokeTokensForUserAndClientAsync
    fullName: Okta.Sdk.IUser.RevokeTokensForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ListClients*
  commentId: Overload:Okta.Sdk.User.ListClients
  name: ListClients
  nameWithType: User.ListClients
  fullName: Okta.Sdk.User.ListClients
- uid: Okta.Sdk.IUser.ListClients
  commentId: M:Okta.Sdk.IUser.ListClients
  parent: Okta.Sdk.IUser
  name: ListClients()
  nameWithType: IUser.ListClients()
  fullName: Okta.Sdk.IUser.ListClients()
  spec.csharp:
  - uid: Okta.Sdk.IUser.ListClients
    name: ListClients
    nameWithType: IUser.ListClients
    fullName: Okta.Sdk.IUser.ListClients
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ListClients
    name: ListClients
    nameWithType: IUser.ListClients
    fullName: Okta.Sdk.IUser.ListClients
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2Client>
  nameWithType: ICollectionClient<IOAuth2Client>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2Client>
  nameWithType.vb: ICollectionClient(Of IOAuth2Client)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2Client)
  name.vb: ICollectionClient(Of IOAuth2Client)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Client
    name: IOAuth2Client
    nameWithType: IOAuth2Client
    fullName: Okta.Sdk.IOAuth2Client
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Client
    name: IOAuth2Client
    nameWithType: IOAuth2Client
    fullName: Okta.Sdk.IOAuth2Client
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ActivateAsync*
  commentId: Overload:Okta.Sdk.User.ActivateAsync
  name: ActivateAsync
  nameWithType: User.ActivateAsync
  fullName: Okta.Sdk.User.ActivateAsync
- uid: Okta.Sdk.IUser.ActivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.ActivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ActivateAsync(Nullable<Boolean>, CancellationToken)
  nameWithType: IUser.ActivateAsync(Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUser.ActivateAsync(System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUser.ActivateAsync(Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUser.ActivateAsync(System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ActivateAsync(Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.ActivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ActivateAsync
    nameWithType: IUser.ActivateAsync
    fullName: Okta.Sdk.IUser.ActivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ActivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ActivateAsync
    nameWithType: IUser.ActivateAsync
    fullName: Okta.Sdk.IUser.ActivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IUserActivationToken}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IUserActivationToken}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IUserActivationToken>
  nameWithType: Task<IUserActivationToken>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IUserActivationToken>
  nameWithType.vb: Task(Of IUserActivationToken)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IUserActivationToken)
  name.vb: Task(Of IUserActivationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUserActivationToken
    name: IUserActivationToken
    nameWithType: IUserActivationToken
    fullName: Okta.Sdk.IUserActivationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUserActivationToken
    name: IUserActivationToken
    nameWithType: IUserActivationToken
    fullName: Okta.Sdk.IUserActivationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ReactivateAsync*
  commentId: Overload:Okta.Sdk.User.ReactivateAsync
  name: ReactivateAsync
  nameWithType: User.ReactivateAsync
  fullName: Okta.Sdk.User.ReactivateAsync
- uid: Okta.Sdk.IUser.ReactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.ReactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ReactivateAsync(Nullable<Boolean>, CancellationToken)
  nameWithType: IUser.ReactivateAsync(Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUser.ReactivateAsync(System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUser.ReactivateAsync(Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUser.ReactivateAsync(System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ReactivateAsync(Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.ReactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ReactivateAsync
    nameWithType: IUser.ReactivateAsync
    fullName: Okta.Sdk.IUser.ReactivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ReactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ReactivateAsync
    nameWithType: IUser.ReactivateAsync
    fullName: Okta.Sdk.IUser.ReactivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.DeactivateAsync*
  commentId: Overload:Okta.Sdk.User.DeactivateAsync
  name: DeactivateAsync
  nameWithType: User.DeactivateAsync
  fullName: Okta.Sdk.User.DeactivateAsync
- uid: Okta.Sdk.IUser.DeactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.DeactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: DeactivateAsync(Nullable<Boolean>, CancellationToken)
  nameWithType: IUser.DeactivateAsync(Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUser.DeactivateAsync(System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUser.DeactivateAsync(Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUser.DeactivateAsync(System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: DeactivateAsync(Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.DeactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: DeactivateAsync
    nameWithType: IUser.DeactivateAsync
    fullName: Okta.Sdk.IUser.DeactivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.DeactivateAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: DeactivateAsync
    nameWithType: IUser.DeactivateAsync
    fullName: Okta.Sdk.IUser.DeactivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.SuspendAsync*
  commentId: Overload:Okta.Sdk.User.SuspendAsync
  name: SuspendAsync
  nameWithType: User.SuspendAsync
  fullName: Okta.Sdk.User.SuspendAsync
- uid: Okta.Sdk.IUser.SuspendAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.SuspendAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: SuspendAsync(CancellationToken)
  nameWithType: IUser.SuspendAsync(CancellationToken)
  fullName: Okta.Sdk.IUser.SuspendAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.SuspendAsync(System.Threading.CancellationToken)
    name: SuspendAsync
    nameWithType: IUser.SuspendAsync
    fullName: Okta.Sdk.IUser.SuspendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.SuspendAsync(System.Threading.CancellationToken)
    name: SuspendAsync
    nameWithType: IUser.SuspendAsync
    fullName: Okta.Sdk.IUser.SuspendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.UnsuspendAsync*
  commentId: Overload:Okta.Sdk.User.UnsuspendAsync
  name: UnsuspendAsync
  nameWithType: User.UnsuspendAsync
  fullName: Okta.Sdk.User.UnsuspendAsync
- uid: Okta.Sdk.IUser.UnsuspendAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.UnsuspendAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: UnsuspendAsync(CancellationToken)
  nameWithType: IUser.UnsuspendAsync(CancellationToken)
  fullName: Okta.Sdk.IUser.UnsuspendAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.UnsuspendAsync(System.Threading.CancellationToken)
    name: UnsuspendAsync
    nameWithType: IUser.UnsuspendAsync
    fullName: Okta.Sdk.IUser.UnsuspendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.UnsuspendAsync(System.Threading.CancellationToken)
    name: UnsuspendAsync
    nameWithType: IUser.UnsuspendAsync
    fullName: Okta.Sdk.IUser.UnsuspendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ExpirePasswordAsync*
  commentId: Overload:Okta.Sdk.User.ExpirePasswordAsync
  name: ExpirePasswordAsync
  nameWithType: User.ExpirePasswordAsync
  fullName: Okta.Sdk.User.ExpirePasswordAsync
- uid: Okta.Sdk.IUser.ExpirePasswordAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.ExpirePasswordAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ExpirePasswordAsync(CancellationToken)
  nameWithType: IUser.ExpirePasswordAsync(CancellationToken)
  fullName: Okta.Sdk.IUser.ExpirePasswordAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.ExpirePasswordAsync(System.Threading.CancellationToken)
    name: ExpirePasswordAsync
    nameWithType: IUser.ExpirePasswordAsync
    fullName: Okta.Sdk.IUser.ExpirePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ExpirePasswordAsync(System.Threading.CancellationToken)
    name: ExpirePasswordAsync
    nameWithType: IUser.ExpirePasswordAsync
    fullName: Okta.Sdk.IUser.ExpirePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IUser}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IUser}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IUser>
  nameWithType: Task<IUser>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IUser>
  nameWithType.vb: Task(Of IUser)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IUser)
  name.vb: Task(Of IUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ExpirePasswordAndGetTemporaryPasswordAsync*
  commentId: Overload:Okta.Sdk.User.ExpirePasswordAndGetTemporaryPasswordAsync
  name: ExpirePasswordAndGetTemporaryPasswordAsync
  nameWithType: User.ExpirePasswordAndGetTemporaryPasswordAsync
  fullName: Okta.Sdk.User.ExpirePasswordAndGetTemporaryPasswordAsync
- uid: Okta.Sdk.IUser.ExpirePasswordAndGetTemporaryPasswordAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.ExpirePasswordAndGetTemporaryPasswordAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ExpirePasswordAndGetTemporaryPasswordAsync(CancellationToken)
  nameWithType: IUser.ExpirePasswordAndGetTemporaryPasswordAsync(CancellationToken)
  fullName: Okta.Sdk.IUser.ExpirePasswordAndGetTemporaryPasswordAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.ExpirePasswordAndGetTemporaryPasswordAsync(System.Threading.CancellationToken)
    name: ExpirePasswordAndGetTemporaryPasswordAsync
    nameWithType: IUser.ExpirePasswordAndGetTemporaryPasswordAsync
    fullName: Okta.Sdk.IUser.ExpirePasswordAndGetTemporaryPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ExpirePasswordAndGetTemporaryPasswordAsync(System.Threading.CancellationToken)
    name: ExpirePasswordAndGetTemporaryPasswordAsync
    nameWithType: IUser.ExpirePasswordAndGetTemporaryPasswordAsync
    fullName: Okta.Sdk.IUser.ExpirePasswordAndGetTemporaryPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.ITempPassword}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.ITempPassword}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ITempPassword>
  nameWithType: Task<ITempPassword>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.ITempPassword>
  nameWithType.vb: Task(Of ITempPassword)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.ITempPassword)
  name.vb: Task(Of ITempPassword)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.ITempPassword
    name: ITempPassword
    nameWithType: ITempPassword
    fullName: Okta.Sdk.ITempPassword
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.ITempPassword
    name: ITempPassword
    nameWithType: ITempPassword
    fullName: Okta.Sdk.ITempPassword
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.UnlockAsync*
  commentId: Overload:Okta.Sdk.User.UnlockAsync
  name: UnlockAsync
  nameWithType: User.UnlockAsync
  fullName: Okta.Sdk.User.UnlockAsync
- uid: Okta.Sdk.IUser.UnlockAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.UnlockAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: UnlockAsync(CancellationToken)
  nameWithType: IUser.UnlockAsync(CancellationToken)
  fullName: Okta.Sdk.IUser.UnlockAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.UnlockAsync(System.Threading.CancellationToken)
    name: UnlockAsync
    nameWithType: IUser.UnlockAsync
    fullName: Okta.Sdk.IUser.UnlockAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.UnlockAsync(System.Threading.CancellationToken)
    name: UnlockAsync
    nameWithType: IUser.UnlockAsync
    fullName: Okta.Sdk.IUser.UnlockAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ResetFactorsAsync*
  commentId: Overload:Okta.Sdk.User.ResetFactorsAsync
  name: ResetFactorsAsync
  nameWithType: User.ResetFactorsAsync
  fullName: Okta.Sdk.User.ResetFactorsAsync
- uid: Okta.Sdk.IUser.ResetFactorsAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.ResetFactorsAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ResetFactorsAsync(CancellationToken)
  nameWithType: IUser.ResetFactorsAsync(CancellationToken)
  fullName: Okta.Sdk.IUser.ResetFactorsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.ResetFactorsAsync(System.Threading.CancellationToken)
    name: ResetFactorsAsync
    nameWithType: IUser.ResetFactorsAsync
    fullName: Okta.Sdk.IUser.ResetFactorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ResetFactorsAsync(System.Threading.CancellationToken)
    name: ResetFactorsAsync
    nameWithType: IUser.ResetFactorsAsync
    fullName: Okta.Sdk.IUser.ResetFactorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.DeleteFactorAsync*
  commentId: Overload:Okta.Sdk.User.DeleteFactorAsync
  name: DeleteFactorAsync
  nameWithType: User.DeleteFactorAsync
  fullName: Okta.Sdk.User.DeleteFactorAsync
- uid: Okta.Sdk.IUser.DeleteFactorAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.DeleteFactorAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: DeleteFactorAsync(String, CancellationToken)
  nameWithType: IUser.DeleteFactorAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUser.DeleteFactorAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.DeleteFactorAsync(System.String,System.Threading.CancellationToken)
    name: DeleteFactorAsync
    nameWithType: IUser.DeleteFactorAsync
    fullName: Okta.Sdk.IUser.DeleteFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.DeleteFactorAsync(System.String,System.Threading.CancellationToken)
    name: DeleteFactorAsync
    nameWithType: IUser.DeleteFactorAsync
    fullName: Okta.Sdk.IUser.DeleteFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.AddToGroupAsync*
  commentId: Overload:Okta.Sdk.User.AddToGroupAsync
  name: AddToGroupAsync
  nameWithType: User.AddToGroupAsync
  fullName: Okta.Sdk.User.AddToGroupAsync
- uid: Okta.Sdk.IUser.AddToGroupAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.AddToGroupAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: AddToGroupAsync(String, CancellationToken)
  nameWithType: IUser.AddToGroupAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUser.AddToGroupAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.AddToGroupAsync(System.String,System.Threading.CancellationToken)
    name: AddToGroupAsync
    nameWithType: IUser.AddToGroupAsync
    fullName: Okta.Sdk.IUser.AddToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.AddToGroupAsync(System.String,System.Threading.CancellationToken)
    name: AddToGroupAsync
    nameWithType: IUser.AddToGroupAsync
    fullName: Okta.Sdk.IUser.AddToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.EnrollFactorAsync*
  commentId: Overload:Okta.Sdk.User.EnrollFactorAsync
  name: EnrollFactorAsync
  nameWithType: User.EnrollFactorAsync
  fullName: Okta.Sdk.User.EnrollFactorAsync
- uid: Okta.Sdk.IUser.EnrollFactorAsync(Okta.Sdk.IUserFactor,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.EnrollFactorAsync(Okta.Sdk.IUserFactor,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: EnrollFactorAsync(IUserFactor, Nullable<Boolean>, String, Nullable<Int32>, Nullable<Boolean>, CancellationToken)
  nameWithType: IUser.EnrollFactorAsync(IUserFactor, Nullable<Boolean>, String, Nullable<Int32>, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUser.EnrollFactorAsync(Okta.Sdk.IUserFactor, System.Nullable<System.Boolean>, System.String, System.Nullable<System.Int32>, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUser.EnrollFactorAsync(IUserFactor, Nullable(Of Boolean), String, Nullable(Of Int32), Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUser.EnrollFactorAsync(Okta.Sdk.IUserFactor, System.Nullable(Of System.Boolean), System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: EnrollFactorAsync(IUserFactor, Nullable(Of Boolean), String, Nullable(Of Int32), Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.EnrollFactorAsync(Okta.Sdk.IUserFactor,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: EnrollFactorAsync
    nameWithType: IUser.EnrollFactorAsync
    fullName: Okta.Sdk.IUser.EnrollFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IUserFactor
    name: IUserFactor
    nameWithType: IUserFactor
    fullName: Okta.Sdk.IUserFactor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.EnrollFactorAsync(Okta.Sdk.IUserFactor,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: EnrollFactorAsync
    nameWithType: IUser.EnrollFactorAsync
    fullName: Okta.Sdk.IUser.EnrollFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IUserFactor
    name: IUserFactor
    nameWithType: IUserFactor
    fullName: Okta.Sdk.IUserFactor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IUserFactor
  commentId: T:Okta.Sdk.IUserFactor
  parent: Okta.Sdk
  name: IUserFactor
  nameWithType: IUserFactor
  fullName: Okta.Sdk.IUserFactor
- uid: System.Threading.Tasks.Task{Okta.Sdk.IUserFactor}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IUserFactor}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IUserFactor>
  nameWithType: Task<IUserFactor>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IUserFactor>
  nameWithType.vb: Task(Of IUserFactor)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IUserFactor)
  name.vb: Task(Of IUserFactor)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUserFactor
    name: IUserFactor
    nameWithType: IUserFactor
    fullName: Okta.Sdk.IUserFactor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUserFactor
    name: IUserFactor
    nameWithType: IUserFactor
    fullName: Okta.Sdk.IUserFactor
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ListSupportedFactors*
  commentId: Overload:Okta.Sdk.User.ListSupportedFactors
  name: ListSupportedFactors
  nameWithType: User.ListSupportedFactors
  fullName: Okta.Sdk.User.ListSupportedFactors
- uid: Okta.Sdk.IUser.ListSupportedFactors
  commentId: M:Okta.Sdk.IUser.ListSupportedFactors
  parent: Okta.Sdk.IUser
  name: ListSupportedFactors()
  nameWithType: IUser.ListSupportedFactors()
  fullName: Okta.Sdk.IUser.ListSupportedFactors()
  spec.csharp:
  - uid: Okta.Sdk.IUser.ListSupportedFactors
    name: ListSupportedFactors
    nameWithType: IUser.ListSupportedFactors
    fullName: Okta.Sdk.IUser.ListSupportedFactors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ListSupportedFactors
    name: ListSupportedFactors
    nameWithType: IUser.ListSupportedFactors
    fullName: Okta.Sdk.IUser.ListSupportedFactors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IUserFactor}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IUserFactor}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IUserFactor>
  nameWithType: ICollectionClient<IUserFactor>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IUserFactor>
  nameWithType.vb: ICollectionClient(Of IUserFactor)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IUserFactor)
  name.vb: ICollectionClient(Of IUserFactor)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUserFactor
    name: IUserFactor
    nameWithType: IUserFactor
    fullName: Okta.Sdk.IUserFactor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUserFactor
    name: IUserFactor
    nameWithType: IUserFactor
    fullName: Okta.Sdk.IUserFactor
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ListFactors*
  commentId: Overload:Okta.Sdk.User.ListFactors
  name: ListFactors
  nameWithType: User.ListFactors
  fullName: Okta.Sdk.User.ListFactors
- uid: Okta.Sdk.IUser.ListFactors
  commentId: M:Okta.Sdk.IUser.ListFactors
  parent: Okta.Sdk.IUser
  name: ListFactors()
  nameWithType: IUser.ListFactors()
  fullName: Okta.Sdk.IUser.ListFactors()
  spec.csharp:
  - uid: Okta.Sdk.IUser.ListFactors
    name: ListFactors
    nameWithType: IUser.ListFactors
    fullName: Okta.Sdk.IUser.ListFactors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ListFactors
    name: ListFactors
    nameWithType: IUser.ListFactors
    fullName: Okta.Sdk.IUser.ListFactors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ListSupportedSecurityQuestions*
  commentId: Overload:Okta.Sdk.User.ListSupportedSecurityQuestions
  name: ListSupportedSecurityQuestions
  nameWithType: User.ListSupportedSecurityQuestions
  fullName: Okta.Sdk.User.ListSupportedSecurityQuestions
- uid: Okta.Sdk.IUser.ListSupportedSecurityQuestions
  commentId: M:Okta.Sdk.IUser.ListSupportedSecurityQuestions
  parent: Okta.Sdk.IUser
  name: ListSupportedSecurityQuestions()
  nameWithType: IUser.ListSupportedSecurityQuestions()
  fullName: Okta.Sdk.IUser.ListSupportedSecurityQuestions()
  spec.csharp:
  - uid: Okta.Sdk.IUser.ListSupportedSecurityQuestions
    name: ListSupportedSecurityQuestions
    nameWithType: IUser.ListSupportedSecurityQuestions
    fullName: Okta.Sdk.IUser.ListSupportedSecurityQuestions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ListSupportedSecurityQuestions
    name: ListSupportedSecurityQuestions
    nameWithType: IUser.ListSupportedSecurityQuestions
    fullName: Okta.Sdk.IUser.ListSupportedSecurityQuestions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.ISecurityQuestion}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.ISecurityQuestion}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<ISecurityQuestion>
  nameWithType: ICollectionClient<ISecurityQuestion>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.ISecurityQuestion>
  nameWithType.vb: ICollectionClient(Of ISecurityQuestion)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.ISecurityQuestion)
  name.vb: ICollectionClient(Of ISecurityQuestion)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.ISecurityQuestion
    name: ISecurityQuestion
    nameWithType: ISecurityQuestion
    fullName: Okta.Sdk.ISecurityQuestion
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.ISecurityQuestion
    name: ISecurityQuestion
    nameWithType: ISecurityQuestion
    fullName: Okta.Sdk.ISecurityQuestion
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.GetFactorAsync*
  commentId: Overload:Okta.Sdk.User.GetFactorAsync
  name: GetFactorAsync
  nameWithType: User.GetFactorAsync
  fullName: Okta.Sdk.User.GetFactorAsync
- uid: Okta.Sdk.IUser.GetFactorAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.GetFactorAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: GetFactorAsync(String, CancellationToken)
  nameWithType: IUser.GetFactorAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUser.GetFactorAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.GetFactorAsync(System.String,System.Threading.CancellationToken)
    name: GetFactorAsync
    nameWithType: IUser.GetFactorAsync
    fullName: Okta.Sdk.IUser.GetFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.GetFactorAsync(System.String,System.Threading.CancellationToken)
    name: GetFactorAsync
    nameWithType: IUser.GetFactorAsync
    fullName: Okta.Sdk.IUser.GetFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.SetLinkedObjectAsync*
  commentId: Overload:Okta.Sdk.User.SetLinkedObjectAsync
  name: SetLinkedObjectAsync
  nameWithType: User.SetLinkedObjectAsync
  fullName: Okta.Sdk.User.SetLinkedObjectAsync
- uid: Okta.Sdk.IUser.SetLinkedObjectAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.SetLinkedObjectAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: SetLinkedObjectAsync(String, String, CancellationToken)
  nameWithType: IUser.SetLinkedObjectAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IUser.SetLinkedObjectAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.SetLinkedObjectAsync(System.String,System.String,System.Threading.CancellationToken)
    name: SetLinkedObjectAsync
    nameWithType: IUser.SetLinkedObjectAsync
    fullName: Okta.Sdk.IUser.SetLinkedObjectAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.SetLinkedObjectAsync(System.String,System.String,System.Threading.CancellationToken)
    name: SetLinkedObjectAsync
    nameWithType: IUser.SetLinkedObjectAsync
    fullName: Okta.Sdk.IUser.SetLinkedObjectAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ListIdentityProviders*
  commentId: Overload:Okta.Sdk.User.ListIdentityProviders
  name: ListIdentityProviders
  nameWithType: User.ListIdentityProviders
  fullName: Okta.Sdk.User.ListIdentityProviders
- uid: Okta.Sdk.IUser.ListIdentityProviders
  commentId: M:Okta.Sdk.IUser.ListIdentityProviders
  parent: Okta.Sdk.IUser
  name: ListIdentityProviders()
  nameWithType: IUser.ListIdentityProviders()
  fullName: Okta.Sdk.IUser.ListIdentityProviders()
  spec.csharp:
  - uid: Okta.Sdk.IUser.ListIdentityProviders
    name: ListIdentityProviders
    nameWithType: IUser.ListIdentityProviders
    fullName: Okta.Sdk.IUser.ListIdentityProviders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ListIdentityProviders
    name: ListIdentityProviders
    nameWithType: IUser.ListIdentityProviders
    fullName: Okta.Sdk.IUser.ListIdentityProviders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IIdentityProvider}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IIdentityProvider}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IIdentityProvider>
  nameWithType: ICollectionClient<IIdentityProvider>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IIdentityProvider>
  nameWithType.vb: ICollectionClient(Of IIdentityProvider)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IIdentityProvider)
  name.vb: ICollectionClient(Of IIdentityProvider)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IIdentityProvider
    name: IIdentityProvider
    nameWithType: IIdentityProvider
    fullName: Okta.Sdk.IIdentityProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IIdentityProvider
    name: IIdentityProvider
    nameWithType: IIdentityProvider
    fullName: Okta.Sdk.IIdentityProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.GetLinkedObjects*
  commentId: Overload:Okta.Sdk.User.GetLinkedObjects
  name: GetLinkedObjects
  nameWithType: User.GetLinkedObjects
  fullName: Okta.Sdk.User.GetLinkedObjects
- uid: Okta.Sdk.IUser.GetLinkedObjects(System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IUser.GetLinkedObjects(System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IUser
  isExternal: true
  name: GetLinkedObjects(String, String, Nullable<Int32>)
  nameWithType: IUser.GetLinkedObjects(String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IUser.GetLinkedObjects(System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IUser.GetLinkedObjects(String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IUser.GetLinkedObjects(System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: GetLinkedObjects(String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IUser.GetLinkedObjects(System.String,System.String,System.Nullable{System.Int32})
    name: GetLinkedObjects
    nameWithType: IUser.GetLinkedObjects
    fullName: Okta.Sdk.IUser.GetLinkedObjects
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.GetLinkedObjects(System.String,System.String,System.Nullable{System.Int32})
    name: GetLinkedObjects
    nameWithType: IUser.GetLinkedObjects
    fullName: Okta.Sdk.IUser.GetLinkedObjects
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IResponseLinks}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IResponseLinks}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IResponseLinks>
  nameWithType: ICollectionClient<IResponseLinks>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IResponseLinks>
  nameWithType.vb: ICollectionClient(Of IResponseLinks)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IResponseLinks)
  name.vb: ICollectionClient(Of IResponseLinks)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IResponseLinks
    name: IResponseLinks
    nameWithType: IResponseLinks
    fullName: Okta.Sdk.IResponseLinks
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IResponseLinks
    name: IResponseLinks
    nameWithType: IResponseLinks
    fullName: Okta.Sdk.IResponseLinks
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ClearSessionsAsync*
  commentId: Overload:Okta.Sdk.User.ClearSessionsAsync
  name: ClearSessionsAsync
  nameWithType: User.ClearSessionsAsync
  fullName: Okta.Sdk.User.ClearSessionsAsync
- uid: Okta.Sdk.IUser.ClearSessionsAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.ClearSessionsAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ClearSessionsAsync(Nullable<Boolean>, CancellationToken)
  nameWithType: IUser.ClearSessionsAsync(Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUser.ClearSessionsAsync(System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUser.ClearSessionsAsync(Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUser.ClearSessionsAsync(System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ClearSessionsAsync(Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.ClearSessionsAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ClearSessionsAsync
    nameWithType: IUser.ClearSessionsAsync
    fullName: Okta.Sdk.IUser.ClearSessionsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ClearSessionsAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ClearSessionsAsync
    nameWithType: IUser.ClearSessionsAsync
    fullName: Okta.Sdk.IUser.ClearSessionsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.RemoveLinkedObjectAsync*
  commentId: Overload:Okta.Sdk.User.RemoveLinkedObjectAsync
  name: RemoveLinkedObjectAsync
  nameWithType: User.RemoveLinkedObjectAsync
  fullName: Okta.Sdk.User.RemoveLinkedObjectAsync
- uid: Okta.Sdk.IUser.RemoveLinkedObjectAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.RemoveLinkedObjectAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: RemoveLinkedObjectAsync(String, CancellationToken)
  nameWithType: IUser.RemoveLinkedObjectAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUser.RemoveLinkedObjectAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.RemoveLinkedObjectAsync(System.String,System.Threading.CancellationToken)
    name: RemoveLinkedObjectAsync
    nameWithType: IUser.RemoveLinkedObjectAsync
    fullName: Okta.Sdk.IUser.RemoveLinkedObjectAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.RemoveLinkedObjectAsync(System.String,System.Threading.CancellationToken)
    name: RemoveLinkedObjectAsync
    nameWithType: IUser.RemoveLinkedObjectAsync
    fullName: Okta.Sdk.IUser.RemoveLinkedObjectAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.AppLinks*
  commentId: Overload:Okta.Sdk.User.AppLinks
  name: AppLinks
  nameWithType: User.AppLinks
  fullName: Okta.Sdk.User.AppLinks
- uid: Okta.Sdk.IUser.AppLinks
  commentId: P:Okta.Sdk.IUser.AppLinks
  parent: Okta.Sdk.IUser
  name: AppLinks
  nameWithType: IUser.AppLinks
  fullName: Okta.Sdk.IUser.AppLinks
- uid: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IAppLink}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IAppLink}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<IAppLink>
  nameWithType: IAsyncEnumerable<IAppLink>
  fullName: System.Collections.Generic.IAsyncEnumerable<Okta.Sdk.IAppLink>
  nameWithType.vb: IAsyncEnumerable(Of IAppLink)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Okta.Sdk.IAppLink)
  name.vb: IAsyncEnumerable(Of IAppLink)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAppLink
    name: IAppLink
    nameWithType: IAppLink
    fullName: Okta.Sdk.IAppLink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAppLink
    name: IAppLink
    nameWithType: IAppLink
    fullName: Okta.Sdk.IAppLink
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.User.Roles*
  commentId: Overload:Okta.Sdk.User.Roles
  name: Roles
  nameWithType: User.Roles
  fullName: Okta.Sdk.User.Roles
- uid: Okta.Sdk.IUser.Roles
  commentId: P:Okta.Sdk.IUser.Roles
  parent: Okta.Sdk.IUser
  name: Roles
  nameWithType: IUser.Roles
  fullName: Okta.Sdk.IUser.Roles
- uid: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IRole}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IRole}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<IRole>
  nameWithType: IAsyncEnumerable<IRole>
  fullName: System.Collections.Generic.IAsyncEnumerable<Okta.Sdk.IRole>
  nameWithType.vb: IAsyncEnumerable(Of IRole)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Okta.Sdk.IRole)
  name.vb: IAsyncEnumerable(Of IRole)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.Groups*
  commentId: Overload:Okta.Sdk.User.Groups
  name: Groups
  nameWithType: User.Groups
  fullName: Okta.Sdk.User.Groups
- uid: Okta.Sdk.IUser.Groups
  commentId: P:Okta.Sdk.IUser.Groups
  parent: Okta.Sdk.IUser
  name: Groups
  nameWithType: IUser.Groups
  fullName: Okta.Sdk.IUser.Groups
- uid: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IGroup}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<IGroup>
  nameWithType: IAsyncEnumerable<IGroup>
  fullName: System.Collections.Generic.IAsyncEnumerable<Okta.Sdk.IGroup>
  nameWithType.vb: IAsyncEnumerable(Of IGroup)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Okta.Sdk.IGroup)
  name.vb: IAsyncEnumerable(Of IGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.Factors*
  commentId: Overload:Okta.Sdk.User.Factors
  name: Factors
  nameWithType: User.Factors
  fullName: Okta.Sdk.User.Factors
- uid: Okta.Sdk.IUser.Factors
  commentId: P:Okta.Sdk.IUser.Factors
  parent: Okta.Sdk.IUser
  name: Factors
  nameWithType: IUser.Factors
  fullName: Okta.Sdk.IUser.Factors
- uid: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IUserFactor}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IUserFactor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<IUserFactor>
  nameWithType: IAsyncEnumerable<IUserFactor>
  fullName: System.Collections.Generic.IAsyncEnumerable<Okta.Sdk.IUserFactor>
  nameWithType.vb: IAsyncEnumerable(Of IUserFactor)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Okta.Sdk.IUserFactor)
  name.vb: IAsyncEnumerable(Of IUserFactor)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUserFactor
    name: IUserFactor
    nameWithType: IUserFactor
    fullName: Okta.Sdk.IUserFactor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUserFactor
    name: IUserFactor
    nameWithType: IUserFactor
    fullName: Okta.Sdk.IUserFactor
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ChangePasswordAsync*
  commentId: Overload:Okta.Sdk.User.ChangePasswordAsync
  name: ChangePasswordAsync
  nameWithType: User.ChangePasswordAsync
  fullName: Okta.Sdk.User.ChangePasswordAsync
- uid: Okta.Sdk.IUser.ChangePasswordAsync(Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.ChangePasswordAsync(Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ChangePasswordAsync(ChangePasswordOptions, CancellationToken)
  nameWithType: IUser.ChangePasswordAsync(ChangePasswordOptions, CancellationToken)
  fullName: Okta.Sdk.IUser.ChangePasswordAsync(Okta.Sdk.ChangePasswordOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.ChangePasswordAsync(Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
    name: ChangePasswordAsync
    nameWithType: IUser.ChangePasswordAsync
    fullName: Okta.Sdk.IUser.ChangePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.ChangePasswordOptions
    name: ChangePasswordOptions
    nameWithType: ChangePasswordOptions
    fullName: Okta.Sdk.ChangePasswordOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ChangePasswordAsync(Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
    name: ChangePasswordAsync
    nameWithType: IUser.ChangePasswordAsync
    fullName: Okta.Sdk.IUser.ChangePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.ChangePasswordOptions
    name: ChangePasswordOptions
    nameWithType: ChangePasswordOptions
    fullName: Okta.Sdk.ChangePasswordOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ChangePasswordOptions
  commentId: T:Okta.Sdk.ChangePasswordOptions
  parent: Okta.Sdk
  name: ChangePasswordOptions
  nameWithType: ChangePasswordOptions
  fullName: Okta.Sdk.ChangePasswordOptions
- uid: System.Threading.Tasks.Task{Okta.Sdk.IUserCredentials}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IUserCredentials}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IUserCredentials>
  nameWithType: Task<IUserCredentials>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IUserCredentials>
  nameWithType.vb: Task(Of IUserCredentials)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IUserCredentials)
  name.vb: Task(Of IUserCredentials)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUserCredentials
    name: IUserCredentials
    nameWithType: IUserCredentials
    fullName: Okta.Sdk.IUserCredentials
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUserCredentials
    name: IUserCredentials
    nameWithType: IUserCredentials
    fullName: Okta.Sdk.IUserCredentials
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ResetPasswordAsync*
  commentId: Overload:Okta.Sdk.User.ResetPasswordAsync
  name: ResetPasswordAsync
  nameWithType: User.ResetPasswordAsync
  fullName: Okta.Sdk.User.ResetPasswordAsync
- uid: Okta.Sdk.IUser.ResetPasswordAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.ResetPasswordAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ResetPasswordAsync(Nullable<Boolean>, CancellationToken)
  nameWithType: IUser.ResetPasswordAsync(Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUser.ResetPasswordAsync(System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUser.ResetPasswordAsync(Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUser.ResetPasswordAsync(System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ResetPasswordAsync(Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.ResetPasswordAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ResetPasswordAsync
    nameWithType: IUser.ResetPasswordAsync
    fullName: Okta.Sdk.IUser.ResetPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ResetPasswordAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ResetPasswordAsync
    nameWithType: IUser.ResetPasswordAsync
    fullName: Okta.Sdk.IUser.ResetPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IResetPasswordToken}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IResetPasswordToken}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IResetPasswordToken>
  nameWithType: Task<IResetPasswordToken>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IResetPasswordToken>
  nameWithType.vb: Task(Of IResetPasswordToken)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IResetPasswordToken)
  name.vb: Task(Of IResetPasswordToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IResetPasswordToken
    name: IResetPasswordToken
    nameWithType: IResetPasswordToken
    fullName: Okta.Sdk.IResetPasswordToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IResetPasswordToken
    name: IResetPasswordToken
    nameWithType: IResetPasswordToken
    fullName: Okta.Sdk.IResetPasswordToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.DeactivateOrDeleteAsync*
  commentId: Overload:Okta.Sdk.User.DeactivateOrDeleteAsync
  name: DeactivateOrDeleteAsync
  nameWithType: User.DeactivateOrDeleteAsync
  fullName: Okta.Sdk.User.DeactivateOrDeleteAsync
- uid: Okta.Sdk.IUser.DeactivateOrDeleteAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.DeactivateOrDeleteAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: DeactivateOrDeleteAsync(Nullable<Boolean>, CancellationToken)
  nameWithType: IUser.DeactivateOrDeleteAsync(Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUser.DeactivateOrDeleteAsync(System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUser.DeactivateOrDeleteAsync(Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUser.DeactivateOrDeleteAsync(System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: DeactivateOrDeleteAsync(Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.DeactivateOrDeleteAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: DeactivateOrDeleteAsync
    nameWithType: IUser.DeactivateOrDeleteAsync
    fullName: Okta.Sdk.IUser.DeactivateOrDeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.DeactivateOrDeleteAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: DeactivateOrDeleteAsync
    nameWithType: IUser.DeactivateOrDeleteAsync
    fullName: Okta.Sdk.IUser.DeactivateOrDeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.ChangeRecoveryQuestionAsync*
  commentId: Overload:Okta.Sdk.User.ChangeRecoveryQuestionAsync
  name: ChangeRecoveryQuestionAsync
  nameWithType: User.ChangeRecoveryQuestionAsync
  fullName: Okta.Sdk.User.ChangeRecoveryQuestionAsync
- uid: Okta.Sdk.IUser.ChangeRecoveryQuestionAsync(Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.ChangeRecoveryQuestionAsync(Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: ChangeRecoveryQuestionAsync(ChangeRecoveryQuestionOptions, CancellationToken)
  nameWithType: IUser.ChangeRecoveryQuestionAsync(ChangeRecoveryQuestionOptions, CancellationToken)
  fullName: Okta.Sdk.IUser.ChangeRecoveryQuestionAsync(Okta.Sdk.ChangeRecoveryQuestionOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.ChangeRecoveryQuestionAsync(Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
    name: ChangeRecoveryQuestionAsync
    nameWithType: IUser.ChangeRecoveryQuestionAsync
    fullName: Okta.Sdk.IUser.ChangeRecoveryQuestionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.ChangeRecoveryQuestionOptions
    name: ChangeRecoveryQuestionOptions
    nameWithType: ChangeRecoveryQuestionOptions
    fullName: Okta.Sdk.ChangeRecoveryQuestionOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.ChangeRecoveryQuestionAsync(Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
    name: ChangeRecoveryQuestionAsync
    nameWithType: IUser.ChangeRecoveryQuestionAsync
    fullName: Okta.Sdk.IUser.ChangeRecoveryQuestionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.ChangeRecoveryQuestionOptions
    name: ChangeRecoveryQuestionOptions
    nameWithType: ChangeRecoveryQuestionOptions
    fullName: Okta.Sdk.ChangeRecoveryQuestionOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ChangeRecoveryQuestionOptions
  commentId: T:Okta.Sdk.ChangeRecoveryQuestionOptions
  parent: Okta.Sdk
  name: ChangeRecoveryQuestionOptions
  nameWithType: ChangeRecoveryQuestionOptions
  fullName: Okta.Sdk.ChangeRecoveryQuestionOptions
- uid: Okta.Sdk.User.RemoveFromGroupAsync*
  commentId: Overload:Okta.Sdk.User.RemoveFromGroupAsync
  name: RemoveFromGroupAsync
  nameWithType: User.RemoveFromGroupAsync
  fullName: Okta.Sdk.User.RemoveFromGroupAsync
- uid: Okta.Sdk.IUser.RemoveFromGroupAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.RemoveFromGroupAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: RemoveFromGroupAsync(String, CancellationToken)
  nameWithType: IUser.RemoveFromGroupAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUser.RemoveFromGroupAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.RemoveFromGroupAsync(System.String,System.Threading.CancellationToken)
    name: RemoveFromGroupAsync
    nameWithType: IUser.RemoveFromGroupAsync
    fullName: Okta.Sdk.IUser.RemoveFromGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.RemoveFromGroupAsync(System.String,System.Threading.CancellationToken)
    name: RemoveFromGroupAsync
    nameWithType: IUser.RemoveFromGroupAsync
    fullName: Okta.Sdk.IUser.RemoveFromGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.UpdateAsync*
  commentId: Overload:Okta.Sdk.User.UpdateAsync
  name: UpdateAsync
  nameWithType: User.UpdateAsync
  fullName: Okta.Sdk.User.UpdateAsync
- uid: Okta.Sdk.IUser.UpdateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.UpdateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: UpdateAsync(CancellationToken)
  nameWithType: IUser.UpdateAsync(CancellationToken)
  fullName: Okta.Sdk.IUser.UpdateAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.UpdateAsync(System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: IUser.UpdateAsync
    fullName: Okta.Sdk.IUser.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.UpdateAsync(System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: IUser.UpdateAsync
    fullName: Okta.Sdk.IUser.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.User.AddFactorAsync*
  commentId: Overload:Okta.Sdk.User.AddFactorAsync
  name: AddFactorAsync
  nameWithType: User.AddFactorAsync
  fullName: Okta.Sdk.User.AddFactorAsync
- uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddSecurityQuestionFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddSecurityQuestionFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: AddFactorAsync(AddSecurityQuestionFactorOptions, CancellationToken)
  nameWithType: IUser.AddFactorAsync(AddSecurityQuestionFactorOptions, CancellationToken)
  fullName: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddSecurityQuestionFactorOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddSecurityQuestionFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddSecurityQuestionFactorOptions
    name: AddSecurityQuestionFactorOptions
    nameWithType: AddSecurityQuestionFactorOptions
    fullName: Okta.Sdk.AddSecurityQuestionFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddSecurityQuestionFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddSecurityQuestionFactorOptions
    name: AddSecurityQuestionFactorOptions
    nameWithType: AddSecurityQuestionFactorOptions
    fullName: Okta.Sdk.AddSecurityQuestionFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AddSecurityQuestionFactorOptions
  commentId: T:Okta.Sdk.AddSecurityQuestionFactorOptions
  parent: Okta.Sdk
  name: AddSecurityQuestionFactorOptions
  nameWithType: AddSecurityQuestionFactorOptions
  fullName: Okta.Sdk.AddSecurityQuestionFactorOptions
- uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddCallFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddCallFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: AddFactorAsync(AddCallFactorOptions, CancellationToken)
  nameWithType: IUser.AddFactorAsync(AddCallFactorOptions, CancellationToken)
  fullName: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddCallFactorOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddCallFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddCallFactorOptions
    name: AddCallFactorOptions
    nameWithType: AddCallFactorOptions
    fullName: Okta.Sdk.AddCallFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddCallFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddCallFactorOptions
    name: AddCallFactorOptions
    nameWithType: AddCallFactorOptions
    fullName: Okta.Sdk.AddCallFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AddCallFactorOptions
  commentId: T:Okta.Sdk.AddCallFactorOptions
  parent: Okta.Sdk
  name: AddCallFactorOptions
  nameWithType: AddCallFactorOptions
  fullName: Okta.Sdk.AddCallFactorOptions
- uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddEmailFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddEmailFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: AddFactorAsync(AddEmailFactorOptions, CancellationToken)
  nameWithType: IUser.AddFactorAsync(AddEmailFactorOptions, CancellationToken)
  fullName: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddEmailFactorOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddEmailFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddEmailFactorOptions
    name: AddEmailFactorOptions
    nameWithType: AddEmailFactorOptions
    fullName: Okta.Sdk.AddEmailFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddEmailFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddEmailFactorOptions
    name: AddEmailFactorOptions
    nameWithType: AddEmailFactorOptions
    fullName: Okta.Sdk.AddEmailFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AddEmailFactorOptions
  commentId: T:Okta.Sdk.AddEmailFactorOptions
  parent: Okta.Sdk
  name: AddEmailFactorOptions
  nameWithType: AddEmailFactorOptions
  fullName: Okta.Sdk.AddEmailFactorOptions
- uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddHardwareFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddHardwareFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: AddFactorAsync(AddHardwareFactorOptions, CancellationToken)
  nameWithType: IUser.AddFactorAsync(AddHardwareFactorOptions, CancellationToken)
  fullName: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddHardwareFactorOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddHardwareFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddHardwareFactorOptions
    name: AddHardwareFactorOptions
    nameWithType: AddHardwareFactorOptions
    fullName: Okta.Sdk.AddHardwareFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddHardwareFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddHardwareFactorOptions
    name: AddHardwareFactorOptions
    nameWithType: AddHardwareFactorOptions
    fullName: Okta.Sdk.AddHardwareFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AddHardwareFactorOptions
  commentId: T:Okta.Sdk.AddHardwareFactorOptions
  parent: Okta.Sdk
  name: AddHardwareFactorOptions
  nameWithType: AddHardwareFactorOptions
  fullName: Okta.Sdk.AddHardwareFactorOptions
- uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddPushFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddPushFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: AddFactorAsync(AddPushFactorOptions, CancellationToken)
  nameWithType: IUser.AddFactorAsync(AddPushFactorOptions, CancellationToken)
  fullName: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddPushFactorOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddPushFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddPushFactorOptions
    name: AddPushFactorOptions
    nameWithType: AddPushFactorOptions
    fullName: Okta.Sdk.AddPushFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddPushFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddPushFactorOptions
    name: AddPushFactorOptions
    nameWithType: AddPushFactorOptions
    fullName: Okta.Sdk.AddPushFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AddPushFactorOptions
  commentId: T:Okta.Sdk.AddPushFactorOptions
  parent: Okta.Sdk
  name: AddPushFactorOptions
  nameWithType: AddPushFactorOptions
  fullName: Okta.Sdk.AddPushFactorOptions
- uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddSmsFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddSmsFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: AddFactorAsync(AddSmsFactorOptions, CancellationToken)
  nameWithType: IUser.AddFactorAsync(AddSmsFactorOptions, CancellationToken)
  fullName: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddSmsFactorOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddSmsFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddSmsFactorOptions
    name: AddSmsFactorOptions
    nameWithType: AddSmsFactorOptions
    fullName: Okta.Sdk.AddSmsFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddSmsFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddSmsFactorOptions
    name: AddSmsFactorOptions
    nameWithType: AddSmsFactorOptions
    fullName: Okta.Sdk.AddSmsFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AddSmsFactorOptions
  commentId: T:Okta.Sdk.AddSmsFactorOptions
  parent: Okta.Sdk
  name: AddSmsFactorOptions
  nameWithType: AddSmsFactorOptions
  fullName: Okta.Sdk.AddSmsFactorOptions
- uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddTokenFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddTokenFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: AddFactorAsync(AddTokenFactorOptions, CancellationToken)
  nameWithType: IUser.AddFactorAsync(AddTokenFactorOptions, CancellationToken)
  fullName: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddTokenFactorOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddTokenFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddTokenFactorOptions
    name: AddTokenFactorOptions
    nameWithType: AddTokenFactorOptions
    fullName: Okta.Sdk.AddTokenFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddTokenFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddTokenFactorOptions
    name: AddTokenFactorOptions
    nameWithType: AddTokenFactorOptions
    fullName: Okta.Sdk.AddTokenFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AddTokenFactorOptions
  commentId: T:Okta.Sdk.AddTokenFactorOptions
  parent: Okta.Sdk
  name: AddTokenFactorOptions
  nameWithType: AddTokenFactorOptions
  fullName: Okta.Sdk.AddTokenFactorOptions
- uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddTotpFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddTotpFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: AddFactorAsync(AddTotpFactorOptions, CancellationToken)
  nameWithType: IUser.AddFactorAsync(AddTotpFactorOptions, CancellationToken)
  fullName: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddTotpFactorOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddTotpFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddTotpFactorOptions
    name: AddTotpFactorOptions
    nameWithType: AddTotpFactorOptions
    fullName: Okta.Sdk.AddTotpFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddTotpFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddTotpFactorOptions
    name: AddTotpFactorOptions
    nameWithType: AddTotpFactorOptions
    fullName: Okta.Sdk.AddTotpFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AddTotpFactorOptions
  commentId: T:Okta.Sdk.AddTotpFactorOptions
  parent: Okta.Sdk
  name: AddTotpFactorOptions
  nameWithType: AddTotpFactorOptions
  fullName: Okta.Sdk.AddTotpFactorOptions
- uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddCustomHotpFactorOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddCustomHotpFactorOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: AddFactorAsync(AddCustomHotpFactorOptions, CancellationToken)
  nameWithType: IUser.AddFactorAsync(AddCustomHotpFactorOptions, CancellationToken)
  fullName: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddCustomHotpFactorOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddCustomHotpFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddCustomHotpFactorOptions
    name: AddCustomHotpFactorOptions
    nameWithType: AddCustomHotpFactorOptions
    fullName: Okta.Sdk.AddCustomHotpFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.AddFactorAsync(Okta.Sdk.AddCustomHotpFactorOptions,System.Threading.CancellationToken)
    name: AddFactorAsync
    nameWithType: IUser.AddFactorAsync
    fullName: Okta.Sdk.IUser.AddFactorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.AddCustomHotpFactorOptions
    name: AddCustomHotpFactorOptions
    nameWithType: AddCustomHotpFactorOptions
    fullName: Okta.Sdk.AddCustomHotpFactorOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AddCustomHotpFactorOptions
  commentId: T:Okta.Sdk.AddCustomHotpFactorOptions
  parent: Okta.Sdk
  name: AddCustomHotpFactorOptions
  nameWithType: AddCustomHotpFactorOptions
  fullName: Okta.Sdk.AddCustomHotpFactorOptions
- uid: Okta.Sdk.IUser.DeactivateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUser.DeactivateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IUser
  isExternal: true
  name: DeactivateAsync(CancellationToken)
  nameWithType: IUser.DeactivateAsync(CancellationToken)
  fullName: Okta.Sdk.IUser.DeactivateAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUser.DeactivateAsync(System.Threading.CancellationToken)
    name: DeactivateAsync
    nameWithType: IUser.DeactivateAsync
    fullName: Okta.Sdk.IUser.DeactivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.DeactivateAsync(System.Threading.CancellationToken)
    name: DeactivateAsync
    nameWithType: IUser.DeactivateAsync
    fullName: Okta.Sdk.IUser.DeactivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IUser.DeactivateAsync
  commentId: M:Okta.Sdk.IUser.DeactivateAsync
  parent: Okta.Sdk.IUser
  name: DeactivateAsync()
  nameWithType: IUser.DeactivateAsync()
  fullName: Okta.Sdk.IUser.DeactivateAsync()
  spec.csharp:
  - uid: Okta.Sdk.IUser.DeactivateAsync
    name: DeactivateAsync
    nameWithType: IUser.DeactivateAsync
    fullName: Okta.Sdk.IUser.DeactivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUser.DeactivateAsync
    name: DeactivateAsync
    nameWithType: IUser.DeactivateAsync
    fullName: Okta.Sdk.IUser.DeactivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
