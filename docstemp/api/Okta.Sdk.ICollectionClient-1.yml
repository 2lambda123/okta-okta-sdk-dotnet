### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  id: ICollectionClient`1
  parent: Okta.Sdk
  children:
  - Okta.Sdk.ICollectionClient`1.GetPagedEnumerator(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/ICollectionClient{T}.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ICollectionClient
    path: ../src/Okta.Sdk/ICollectionClient{T}.cs
    startLine: 20
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nA collection of <xref href=\"Okta.Sdk.Resource?text=Resources\" data-throw-if-not-resolved=\"false\"></xref> that can be enumerated asynchronously.\n"
  remarks: "\nUsing this object with LINQ will automatically enumerate a paginated Okta collection.\nSee <a href=\"https://developer.okta.com/docs/api/getting_started/design_principles.html#pagination\">the API documentation on pagination</a>.\n"
  example: []
  syntax:
    content: 'public interface ICollectionClient<T> : IAsyncEnumerable<T> where T : IResource'
    typeParameters:
    - id: T
      description: The <xref href="Okta.Sdk.Resource" data-throw-if-not-resolved="false"></xref> type in the collection.
    content.vb: >-
      Public Interface ICollectionClient(Of T As IResource)

          Inherits IAsyncEnumerable(Of T)
  inheritedMembers:
  - System.Collections.Generic.IAsyncEnumerable{{T}}.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: ICollectionClient(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
- uid: Okta.Sdk.ICollectionClient`1.GetPagedEnumerator(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.ICollectionClient`1.GetPagedEnumerator(System.Threading.CancellationToken)
  id: GetPagedEnumerator(System.Threading.CancellationToken)
  parent: Okta.Sdk.ICollectionClient`1
  langs:
  - csharp
  - vb
  name: GetPagedEnumerator(CancellationToken)
  nameWithType: ICollectionClient<T>.GetPagedEnumerator(CancellationToken)
  fullName: Okta.Sdk.ICollectionClient<T>.GetPagedEnumerator(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/ICollectionClient{T}.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetPagedEnumerator
    path: ../src/Okta.Sdk/ICollectionClient{T}.cs
    startLine: 32
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nReturns an enumerator that can be used to retrieve items from an Okta collection page-by-page.\nUse this only if you need to enumerate collections manually; otherwise, use LINQ.\n"
  remarks: "\n/// See <a href=\"https://developer.okta.com/docs/api/getting_started/design_principles.html#pagination\">the API documentation on pagination</a>.\n"
  example: []
  syntax:
    content: IPagedCollectionEnumerator<T> GetPagedEnumerator(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: Okta.Sdk.IPagedCollectionEnumerator{{T}}
      description: An enumerator that retrieves items from an Okta collection page-by-page.
    content.vb: Function GetPagedEnumerator(cancellationToken As CancellationToken = Nothing) As IPagedCollectionEnumerator(Of T)
  overload: Okta.Sdk.ICollectionClient`1.GetPagedEnumerator*
  nameWithType.vb: ICollectionClient(Of T).GetPagedEnumerator(CancellationToken)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T).GetPagedEnumerator(System.Threading.CancellationToken)
references:
- uid: Okta.Sdk.Resource
  commentId: T:Okta.Sdk.Resource
  parent: Okta.Sdk
  name: Resource
  nameWithType: Resource
  fullName: Okta.Sdk.Resource
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Collections.Generic.IAsyncEnumerable{{T}}.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:System.Collections.Generic.IAsyncEnumerable{`0}.GetAsyncEnumerator(System.Threading.CancellationToken)
  parent: System.Collections.Generic.IAsyncEnumerable{{T}}
  definition: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator(CancellationToken)
  fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: IAsyncEnumerable(Of T).GetAsyncEnumerator(CancellationToken)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable(Of T).GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  isExternal: true
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator(CancellationToken)
  fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: IAsyncEnumerable(Of T).GetAsyncEnumerator(CancellationToken)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable(Of T).GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable{{T}}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.ICollectionClient`1.GetPagedEnumerator*
  commentId: Overload:Okta.Sdk.ICollectionClient`1.GetPagedEnumerator
  name: GetPagedEnumerator
  nameWithType: ICollectionClient<T>.GetPagedEnumerator
  fullName: Okta.Sdk.ICollectionClient<T>.GetPagedEnumerator
  nameWithType.vb: ICollectionClient(Of T).GetPagedEnumerator
  fullName.vb: Okta.Sdk.ICollectionClient(Of T).GetPagedEnumerator
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Okta.Sdk.IPagedCollectionEnumerator{{T}}
  commentId: T:Okta.Sdk.IPagedCollectionEnumerator{`0}
  parent: Okta.Sdk
  definition: Okta.Sdk.IPagedCollectionEnumerator`1
  name: IPagedCollectionEnumerator<T>
  nameWithType: IPagedCollectionEnumerator<T>
  fullName: Okta.Sdk.IPagedCollectionEnumerator<T>
  nameWithType.vb: IPagedCollectionEnumerator(Of T)
  fullName.vb: Okta.Sdk.IPagedCollectionEnumerator(Of T)
  name.vb: IPagedCollectionEnumerator(Of T)
  spec.csharp:
  - uid: Okta.Sdk.IPagedCollectionEnumerator`1
    name: IPagedCollectionEnumerator
    nameWithType: IPagedCollectionEnumerator
    fullName: Okta.Sdk.IPagedCollectionEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.IPagedCollectionEnumerator`1
    name: IPagedCollectionEnumerator
    nameWithType: IPagedCollectionEnumerator
    fullName: Okta.Sdk.IPagedCollectionEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Okta.Sdk.IPagedCollectionEnumerator`1
  commentId: T:Okta.Sdk.IPagedCollectionEnumerator`1
  name: IPagedCollectionEnumerator<T>
  nameWithType: IPagedCollectionEnumerator<T>
  fullName: Okta.Sdk.IPagedCollectionEnumerator<T>
  nameWithType.vb: IPagedCollectionEnumerator(Of T)
  fullName.vb: Okta.Sdk.IPagedCollectionEnumerator(Of T)
  name.vb: IPagedCollectionEnumerator(Of T)
  spec.csharp:
  - uid: Okta.Sdk.IPagedCollectionEnumerator`1
    name: IPagedCollectionEnumerator
    nameWithType: IPagedCollectionEnumerator
    fullName: Okta.Sdk.IPagedCollectionEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.IPagedCollectionEnumerator`1
    name: IPagedCollectionEnumerator
    nameWithType: IPagedCollectionEnumerator
    fullName: Okta.Sdk.IPagedCollectionEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
