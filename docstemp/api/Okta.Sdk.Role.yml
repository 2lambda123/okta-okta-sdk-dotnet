### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.Role
  commentId: T:Okta.Sdk.Role
  id: Role
  parent: Okta.Sdk
  children:
  - Okta.Sdk.Role.AddAdminGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Role.AddAllAppsAsTargetToRoleAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Role.AddAppInstanceTargetToAdminRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Role.AddAppTargetToAdminRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Role.AddAppTargetToAdminRoleForUserAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Role.AddAppTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Role.AssignmentType
  - Okta.Sdk.Role.Created
  - Okta.Sdk.Role.Description
  - Okta.Sdk.Role.Id
  - Okta.Sdk.Role.Label
  - Okta.Sdk.Role.LastUpdated
  - Okta.Sdk.Role.Status
  - Okta.Sdk.Role.Type
  langs:
  - csharp
  - vb
  name: Role
  nameWithType: Role
  fullName: Okta.Sdk.Role
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Role
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 16
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: 'public sealed class Role : Resource, IRole, IResource'
    content.vb: >-
      Public NotInheritable Class Role

          Inherits Resource

          Implements IRole, IResource
  inheritance:
  - System.Object
  - Okta.Sdk.Resource
  implements:
  - Okta.Sdk.IRole
  - Okta.Sdk.IResource
  inheritedMembers:
  - Okta.Sdk.Resource.GetClient
  - Okta.Sdk.Resource.GetData
  - Okta.Sdk.Resource.Item(System.String)
  - Okta.Sdk.Resource.GetProperty``1(System.String)
  - Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  - Okta.Sdk.Resource.GetStringProperty(System.String)
  - Okta.Sdk.Resource.GetBooleanProperty(System.String)
  - Okta.Sdk.Resource.GetIntegerProperty(System.String)
  - Okta.Sdk.Resource.GetLongProperty(System.String)
  - Okta.Sdk.Resource.GetDoubleProperty(System.String)
  - Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  - Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  - Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  - Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Okta.Sdk.Role.AssignmentType
  commentId: P:Okta.Sdk.Role.AssignmentType
  id: AssignmentType
  parent: Okta.Sdk.Role
  langs:
  - csharp
  - vb
  name: AssignmentType
  nameWithType: Role.AssignmentType
  fullName: Okta.Sdk.Role.AssignmentType
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AssignmentType
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public RoleAssignmentType AssignmentType { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.RoleAssignmentType
    content.vb: Public Property AssignmentType As RoleAssignmentType
  overload: Okta.Sdk.Role.AssignmentType*
  implements:
  - Okta.Sdk.IRole.AssignmentType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Role.Created
  commentId: P:Okta.Sdk.Role.Created
  id: Created
  parent: Okta.Sdk.Role
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: Role.Created
  fullName: Okta.Sdk.Role.Created
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Created
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 26
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public DateTimeOffset? Created { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public ReadOnly Property Created As DateTimeOffset?
  overload: Okta.Sdk.Role.Created*
  implements:
  - Okta.Sdk.IRole.Created
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Role.Description
  commentId: P:Okta.Sdk.Role.Description
  id: Description
  parent: Okta.Sdk.Role
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Role.Description
  fullName: Okta.Sdk.Role.Description
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Description
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 29
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Okta.Sdk.Role.Description*
  implements:
  - Okta.Sdk.IRole.Description
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Role.Id
  commentId: P:Okta.Sdk.Role.Id
  id: Id
  parent: Okta.Sdk.Role
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Role.Id
  fullName: Okta.Sdk.Role.Id
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Id
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 36
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Id As String
  overload: Okta.Sdk.Role.Id*
  implements:
  - Okta.Sdk.IRole.Id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Role.Label
  commentId: P:Okta.Sdk.Role.Label
  id: Label
  parent: Okta.Sdk.Role
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: Role.Label
  fullName: Okta.Sdk.Role.Label
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Label
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 39
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public string Label { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Label As String
  overload: Okta.Sdk.Role.Label*
  implements:
  - Okta.Sdk.IRole.Label
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Role.LastUpdated
  commentId: P:Okta.Sdk.Role.LastUpdated
  id: LastUpdated
  parent: Okta.Sdk.Role
  langs:
  - csharp
  - vb
  name: LastUpdated
  nameWithType: Role.LastUpdated
  fullName: Okta.Sdk.Role.LastUpdated
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: LastUpdated
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 42
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public DateTimeOffset? LastUpdated { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public ReadOnly Property LastUpdated As DateTimeOffset?
  overload: Okta.Sdk.Role.LastUpdated*
  implements:
  - Okta.Sdk.IRole.LastUpdated
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Role.Status
  commentId: P:Okta.Sdk.Role.Status
  id: Status
  parent: Okta.Sdk.Role
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Role.Status
  fullName: Okta.Sdk.Role.Status
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Status
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 45
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public RoleStatus Status { get; }
    parameters: []
    return:
      type: Okta.Sdk.RoleStatus
    content.vb: Public ReadOnly Property Status As RoleStatus
  overload: Okta.Sdk.Role.Status*
  implements:
  - Okta.Sdk.IRole.Status
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Role.Type
  commentId: P:Okta.Sdk.Role.Type
  id: Type
  parent: Okta.Sdk.Role
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Role.Type
  fullName: Okta.Sdk.Role.Type
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Type
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 48
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public RoleType Type { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.RoleType
    content.vb: Public Property Type As RoleType
  overload: Okta.Sdk.Role.Type*
  implements:
  - Okta.Sdk.IRole.Type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Role.AddAdminGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Role.AddAdminGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  id: AddAdminGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Role
  langs:
  - csharp
  - vb
  name: AddAdminGroupTargetAsync(String, String, CancellationToken)
  nameWithType: Role.AddAdminGroupTargetAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Role.AddAdminGroupTargetAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddAdminGroupTargetAsync
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 55
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task AddAdminGroupTargetAsync(string groupId, string targetGroupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: targetGroupId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddAdminGroupTargetAsync(groupId As String, targetGroupId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Role.AddAdminGroupTargetAsync*
  implements:
  - Okta.Sdk.IRole.AddAdminGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Role.AddAppInstanceTargetToAdminRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Role.AddAppInstanceTargetToAdminRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: AddAppInstanceTargetToAdminRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Role
  langs:
  - csharp
  - vb
  name: AddAppInstanceTargetToAdminRoleAsync(String, String, String, CancellationToken)
  nameWithType: Role.AddAppInstanceTargetToAdminRoleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.Role.AddAppInstanceTargetToAdminRoleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddAppInstanceTargetToAdminRoleAsync
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 60
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task AddAppInstanceTargetToAdminRoleAsync(string groupId, string appName, string applicationId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: appName
      type: System.String
    - id: applicationId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddAppInstanceTargetToAdminRoleAsync(groupId As String, appName As String, applicationId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Role.AddAppInstanceTargetToAdminRoleAsync*
  implements:
  - Okta.Sdk.IRole.AddAppInstanceTargetToAdminRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Role.AddAppTargetToAdminRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Role.AddAppTargetToAdminRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  id: AddAppTargetToAdminRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Role
  langs:
  - csharp
  - vb
  name: AddAppTargetToAdminRoleAsync(String, String, CancellationToken)
  nameWithType: Role.AddAppTargetToAdminRoleAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Role.AddAppTargetToAdminRoleAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddAppTargetToAdminRoleAsync
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 65
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task AddAppTargetToAdminRoleAsync(string groupId, string appName, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: appName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddAppTargetToAdminRoleAsync(groupId As String, appName As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Role.AddAppTargetToAdminRoleAsync*
  implements:
  - Okta.Sdk.IRole.AddAppTargetToAdminRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Role.AddAllAppsAsTargetToRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Role.AddAllAppsAsTargetToRoleAsync(System.String,System.Threading.CancellationToken)
  id: AddAllAppsAsTargetToRoleAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Role
  langs:
  - csharp
  - vb
  name: AddAllAppsAsTargetToRoleAsync(String, CancellationToken)
  nameWithType: Role.AddAllAppsAsTargetToRoleAsync(String, CancellationToken)
  fullName: Okta.Sdk.Role.AddAllAppsAsTargetToRoleAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddAllAppsAsTargetToRoleAsync
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 70
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task AddAllAppsAsTargetToRoleAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddAllAppsAsTargetToRoleAsync(userId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Role.AddAllAppsAsTargetToRoleAsync*
  implements:
  - Okta.Sdk.IRole.AddAllAppsAsTargetToRoleAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Role.AddAppTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Role.AddAppTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: AddAppTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Role
  langs:
  - csharp
  - vb
  name: AddAppTargetToAppAdminRoleForUserAsync(String, String, String, CancellationToken)
  nameWithType: Role.AddAppTargetToAppAdminRoleForUserAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.Role.AddAppTargetToAppAdminRoleForUserAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddAppTargetToAppAdminRoleForUserAsync
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 75
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task AddAppTargetToAppAdminRoleForUserAsync(string userId, string appName, string applicationId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: appName
      type: System.String
    - id: applicationId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddAppTargetToAppAdminRoleForUserAsync(userId As String, appName As String, applicationId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Role.AddAppTargetToAppAdminRoleForUserAsync*
  implements:
  - Okta.Sdk.IRole.AddAppTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Role.AddAppTargetToAdminRoleForUserAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Role.AddAppTargetToAdminRoleForUserAsync(System.String,System.String,System.Threading.CancellationToken)
  id: AddAppTargetToAdminRoleForUserAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Role
  langs:
  - csharp
  - vb
  name: AddAppTargetToAdminRoleForUserAsync(String, String, CancellationToken)
  nameWithType: Role.AddAppTargetToAdminRoleForUserAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Role.AddAppTargetToAdminRoleForUserAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Role.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddAppTargetToAdminRoleForUserAsync
    path: ../src/Okta.Sdk/Generated/Role.Generated.cs
    startLine: 80
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task AddAppTargetToAdminRoleForUserAsync(string userId, string appName, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: appName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddAppTargetToAdminRoleForUserAsync(userId As String, appName As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Role.AddAppTargetToAdminRoleForUserAsync*
  implements:
  - Okta.Sdk.IRole.AddAppTargetToAdminRoleForUserAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Okta.Sdk.Resource
  commentId: T:Okta.Sdk.Resource
  parent: Okta.Sdk
  name: Resource
  nameWithType: Resource
  fullName: Okta.Sdk.Resource
- uid: Okta.Sdk.IRole
  commentId: T:Okta.Sdk.IRole
  parent: Okta.Sdk
  name: IRole
  nameWithType: IRole
  fullName: Okta.Sdk.IRole
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  parent: Okta.Sdk
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
- uid: Okta.Sdk.Resource.GetClient
  commentId: M:Okta.Sdk.Resource.GetClient
  parent: Okta.Sdk.Resource
  name: GetClient()
  nameWithType: Resource.GetClient()
  fullName: Okta.Sdk.Resource.GetClient()
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetClient
    name: GetClient
    nameWithType: Resource.GetClient
    fullName: Okta.Sdk.Resource.GetClient
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetClient
    name: GetClient
    nameWithType: Resource.GetClient
    fullName: Okta.Sdk.Resource.GetClient
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetData
  commentId: M:Okta.Sdk.Resource.GetData
  parent: Okta.Sdk.Resource
  name: GetData()
  nameWithType: Resource.GetData()
  fullName: Okta.Sdk.Resource.GetData()
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetData
    name: GetData
    nameWithType: Resource.GetData
    fullName: Okta.Sdk.Resource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetData
    name: GetData
    nameWithType: Resource.GetData
    fullName: Okta.Sdk.Resource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.Item(System.String)
  commentId: P:Okta.Sdk.Resource.Item(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: Item[String]
  nameWithType: Resource.Item[String]
  fullName: Okta.Sdk.Resource.Item[System.String]
  nameWithType.vb: Resource.Item(String)
  fullName.vb: Okta.Sdk.Resource.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.Item(System.String)
    name: Item
    nameWithType: Resource.Item
    fullName: Okta.Sdk.Resource.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Okta.Sdk.Resource.Item(System.String)
    name: Item
    nameWithType: Resource.Item
    fullName: Okta.Sdk.Resource.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: Resource.GetProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetProperty<T>(System.String)
  nameWithType.vb: Resource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: Resource.GetProperty<T>
    fullName: Okta.Sdk.Resource.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: Resource.GetProperty(Of T)
    fullName: Okta.Sdk.Resource.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: Resource.SetProperty(String, Object)
  fullName: Okta.Sdk.Resource.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: Resource.SetProperty
    fullName: Okta.Sdk.Resource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: Resource.SetProperty
    fullName: Okta.Sdk.Resource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetStringProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetStringProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetStringProperty(String)
  nameWithType: Resource.GetStringProperty(String)
  fullName: Okta.Sdk.Resource.GetStringProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetStringProperty(System.String)
    name: GetStringProperty
    nameWithType: Resource.GetStringProperty
    fullName: Okta.Sdk.Resource.GetStringProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetStringProperty(System.String)
    name: GetStringProperty
    nameWithType: Resource.GetStringProperty
    fullName: Okta.Sdk.Resource.GetStringProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetBooleanProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetBooleanProperty(String)
  nameWithType: Resource.GetBooleanProperty(String)
  fullName: Okta.Sdk.Resource.GetBooleanProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
    name: GetBooleanProperty
    nameWithType: Resource.GetBooleanProperty
    fullName: Okta.Sdk.Resource.GetBooleanProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
    name: GetBooleanProperty
    nameWithType: Resource.GetBooleanProperty
    fullName: Okta.Sdk.Resource.GetBooleanProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetIntegerProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetIntegerProperty(String)
  nameWithType: Resource.GetIntegerProperty(String)
  fullName: Okta.Sdk.Resource.GetIntegerProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
    name: GetIntegerProperty
    nameWithType: Resource.GetIntegerProperty
    fullName: Okta.Sdk.Resource.GetIntegerProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
    name: GetIntegerProperty
    nameWithType: Resource.GetIntegerProperty
    fullName: Okta.Sdk.Resource.GetIntegerProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetLongProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetLongProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetLongProperty(String)
  nameWithType: Resource.GetLongProperty(String)
  fullName: Okta.Sdk.Resource.GetLongProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetLongProperty(System.String)
    name: GetLongProperty
    nameWithType: Resource.GetLongProperty
    fullName: Okta.Sdk.Resource.GetLongProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetLongProperty(System.String)
    name: GetLongProperty
    nameWithType: Resource.GetLongProperty
    fullName: Okta.Sdk.Resource.GetLongProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetDoubleProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetDoubleProperty(String)
  nameWithType: Resource.GetDoubleProperty(String)
  fullName: Okta.Sdk.Resource.GetDoubleProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
    name: GetDoubleProperty
    nameWithType: Resource.GetDoubleProperty
    fullName: Okta.Sdk.Resource.GetDoubleProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
    name: GetDoubleProperty
    nameWithType: Resource.GetDoubleProperty
    fullName: Okta.Sdk.Resource.GetDoubleProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetDateTimeProperty(String)
  nameWithType: Resource.GetDateTimeProperty(String)
  fullName: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
    name: GetDateTimeProperty
    nameWithType: Resource.GetDateTimeProperty
    fullName: Okta.Sdk.Resource.GetDateTimeProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
    name: GetDateTimeProperty
    nameWithType: Resource.GetDateTimeProperty
    fullName: Okta.Sdk.Resource.GetDateTimeProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetArrayProperty<T>(String)
  nameWithType: Resource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetArrayProperty<T>(System.String)
  nameWithType.vb: Resource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
    name: GetArrayProperty<T>
    nameWithType: Resource.GetArrayProperty<T>
    fullName: Okta.Sdk.Resource.GetArrayProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
    name: GetArrayProperty(Of T)
    nameWithType: Resource.GetArrayProperty(Of T)
    fullName: Okta.Sdk.Resource.GetArrayProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetEnumProperty<TEnum>(String)
  nameWithType: Resource.GetEnumProperty<TEnum>(String)
  fullName: Okta.Sdk.Resource.GetEnumProperty<TEnum>(System.String)
  nameWithType.vb: Resource.GetEnumProperty(Of TEnum)(String)
  fullName.vb: Okta.Sdk.Resource.GetEnumProperty(Of TEnum)(System.String)
  name.vb: GetEnumProperty(Of TEnum)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
    name: GetEnumProperty<TEnum>
    nameWithType: Resource.GetEnumProperty<TEnum>
    fullName: Okta.Sdk.Resource.GetEnumProperty<TEnum>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
    name: GetEnumProperty(Of TEnum)
    nameWithType: Resource.GetEnumProperty(Of TEnum)
    fullName: Okta.Sdk.Resource.GetEnumProperty(Of TEnum)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetResourceProperty<T>(String)
  nameWithType: Resource.GetResourceProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetResourceProperty<T>(System.String)
  nameWithType.vb: Resource.GetResourceProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetResourceProperty(Of T)(System.String)
  name.vb: GetResourceProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
    name: GetResourceProperty<T>
    nameWithType: Resource.GetResourceProperty<T>
    fullName: Okta.Sdk.Resource.GetResourceProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
    name: GetResourceProperty(Of T)
    nameWithType: Resource.GetResourceProperty(Of T)
    fullName: Okta.Sdk.Resource.GetResourceProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.Role.AssignmentType*
  commentId: Overload:Okta.Sdk.Role.AssignmentType
  name: AssignmentType
  nameWithType: Role.AssignmentType
  fullName: Okta.Sdk.Role.AssignmentType
- uid: Okta.Sdk.IRole.AssignmentType
  commentId: P:Okta.Sdk.IRole.AssignmentType
  parent: Okta.Sdk.IRole
  name: AssignmentType
  nameWithType: IRole.AssignmentType
  fullName: Okta.Sdk.IRole.AssignmentType
- uid: Okta.Sdk.RoleAssignmentType
  commentId: T:Okta.Sdk.RoleAssignmentType
  parent: Okta.Sdk
  name: RoleAssignmentType
  nameWithType: RoleAssignmentType
  fullName: Okta.Sdk.RoleAssignmentType
- uid: Okta.Sdk.Role.Created*
  commentId: Overload:Okta.Sdk.Role.Created
  name: Created
  nameWithType: Role.Created
  fullName: Okta.Sdk.Role.Created
- uid: Okta.Sdk.IRole.Created
  commentId: P:Okta.Sdk.IRole.Created
  parent: Okta.Sdk.IRole
  name: Created
  nameWithType: IRole.Created
  fullName: Okta.Sdk.IRole.Created
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Role.Description*
  commentId: Overload:Okta.Sdk.Role.Description
  name: Description
  nameWithType: Role.Description
  fullName: Okta.Sdk.Role.Description
- uid: Okta.Sdk.IRole.Description
  commentId: P:Okta.Sdk.IRole.Description
  parent: Okta.Sdk.IRole
  name: Description
  nameWithType: IRole.Description
  fullName: Okta.Sdk.IRole.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.Role.Id*
  commentId: Overload:Okta.Sdk.Role.Id
  name: Id
  nameWithType: Role.Id
  fullName: Okta.Sdk.Role.Id
- uid: Okta.Sdk.IRole.Id
  commentId: P:Okta.Sdk.IRole.Id
  parent: Okta.Sdk.IRole
  name: Id
  nameWithType: IRole.Id
  fullName: Okta.Sdk.IRole.Id
- uid: Okta.Sdk.Role.Label*
  commentId: Overload:Okta.Sdk.Role.Label
  name: Label
  nameWithType: Role.Label
  fullName: Okta.Sdk.Role.Label
- uid: Okta.Sdk.IRole.Label
  commentId: P:Okta.Sdk.IRole.Label
  parent: Okta.Sdk.IRole
  name: Label
  nameWithType: IRole.Label
  fullName: Okta.Sdk.IRole.Label
- uid: Okta.Sdk.Role.LastUpdated*
  commentId: Overload:Okta.Sdk.Role.LastUpdated
  name: LastUpdated
  nameWithType: Role.LastUpdated
  fullName: Okta.Sdk.Role.LastUpdated
- uid: Okta.Sdk.IRole.LastUpdated
  commentId: P:Okta.Sdk.IRole.LastUpdated
  parent: Okta.Sdk.IRole
  name: LastUpdated
  nameWithType: IRole.LastUpdated
  fullName: Okta.Sdk.IRole.LastUpdated
- uid: Okta.Sdk.Role.Status*
  commentId: Overload:Okta.Sdk.Role.Status
  name: Status
  nameWithType: Role.Status
  fullName: Okta.Sdk.Role.Status
- uid: Okta.Sdk.IRole.Status
  commentId: P:Okta.Sdk.IRole.Status
  parent: Okta.Sdk.IRole
  name: Status
  nameWithType: IRole.Status
  fullName: Okta.Sdk.IRole.Status
- uid: Okta.Sdk.RoleStatus
  commentId: T:Okta.Sdk.RoleStatus
  parent: Okta.Sdk
  name: RoleStatus
  nameWithType: RoleStatus
  fullName: Okta.Sdk.RoleStatus
- uid: Okta.Sdk.Role.Type*
  commentId: Overload:Okta.Sdk.Role.Type
  name: Type
  nameWithType: Role.Type
  fullName: Okta.Sdk.Role.Type
- uid: Okta.Sdk.IRole.Type
  commentId: P:Okta.Sdk.IRole.Type
  parent: Okta.Sdk.IRole
  name: Type
  nameWithType: IRole.Type
  fullName: Okta.Sdk.IRole.Type
- uid: Okta.Sdk.RoleType
  commentId: T:Okta.Sdk.RoleType
  parent: Okta.Sdk
  name: RoleType
  nameWithType: RoleType
  fullName: Okta.Sdk.RoleType
- uid: Okta.Sdk.Role.AddAdminGroupTargetAsync*
  commentId: Overload:Okta.Sdk.Role.AddAdminGroupTargetAsync
  name: AddAdminGroupTargetAsync
  nameWithType: Role.AddAdminGroupTargetAsync
  fullName: Okta.Sdk.Role.AddAdminGroupTargetAsync
- uid: Okta.Sdk.IRole.AddAdminGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IRole.AddAdminGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IRole
  isExternal: true
  name: AddAdminGroupTargetAsync(String, String, CancellationToken)
  nameWithType: IRole.AddAdminGroupTargetAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IRole.AddAdminGroupTargetAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IRole.AddAdminGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
    name: AddAdminGroupTargetAsync
    nameWithType: IRole.AddAdminGroupTargetAsync
    fullName: Okta.Sdk.IRole.AddAdminGroupTargetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IRole.AddAdminGroupTargetAsync(System.String,System.String,System.Threading.CancellationToken)
    name: AddAdminGroupTargetAsync
    nameWithType: IRole.AddAdminGroupTargetAsync
    fullName: Okta.Sdk.IRole.AddAdminGroupTargetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.Role.AddAppInstanceTargetToAdminRoleAsync*
  commentId: Overload:Okta.Sdk.Role.AddAppInstanceTargetToAdminRoleAsync
  name: AddAppInstanceTargetToAdminRoleAsync
  nameWithType: Role.AddAppInstanceTargetToAdminRoleAsync
  fullName: Okta.Sdk.Role.AddAppInstanceTargetToAdminRoleAsync
- uid: Okta.Sdk.IRole.AddAppInstanceTargetToAdminRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IRole.AddAppInstanceTargetToAdminRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IRole
  isExternal: true
  name: AddAppInstanceTargetToAdminRoleAsync(String, String, String, CancellationToken)
  nameWithType: IRole.AddAppInstanceTargetToAdminRoleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IRole.AddAppInstanceTargetToAdminRoleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IRole.AddAppInstanceTargetToAdminRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddAppInstanceTargetToAdminRoleAsync
    nameWithType: IRole.AddAppInstanceTargetToAdminRoleAsync
    fullName: Okta.Sdk.IRole.AddAppInstanceTargetToAdminRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IRole.AddAppInstanceTargetToAdminRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddAppInstanceTargetToAdminRoleAsync
    nameWithType: IRole.AddAppInstanceTargetToAdminRoleAsync
    fullName: Okta.Sdk.IRole.AddAppInstanceTargetToAdminRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Role.AddAppTargetToAdminRoleAsync*
  commentId: Overload:Okta.Sdk.Role.AddAppTargetToAdminRoleAsync
  name: AddAppTargetToAdminRoleAsync
  nameWithType: Role.AddAppTargetToAdminRoleAsync
  fullName: Okta.Sdk.Role.AddAppTargetToAdminRoleAsync
- uid: Okta.Sdk.IRole.AddAppTargetToAdminRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IRole.AddAppTargetToAdminRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IRole
  isExternal: true
  name: AddAppTargetToAdminRoleAsync(String, String, CancellationToken)
  nameWithType: IRole.AddAppTargetToAdminRoleAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IRole.AddAppTargetToAdminRoleAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IRole.AddAppTargetToAdminRoleAsync(System.String,System.String,System.Threading.CancellationToken)
    name: AddAppTargetToAdminRoleAsync
    nameWithType: IRole.AddAppTargetToAdminRoleAsync
    fullName: Okta.Sdk.IRole.AddAppTargetToAdminRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IRole.AddAppTargetToAdminRoleAsync(System.String,System.String,System.Threading.CancellationToken)
    name: AddAppTargetToAdminRoleAsync
    nameWithType: IRole.AddAppTargetToAdminRoleAsync
    fullName: Okta.Sdk.IRole.AddAppTargetToAdminRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Role.AddAllAppsAsTargetToRoleAsync*
  commentId: Overload:Okta.Sdk.Role.AddAllAppsAsTargetToRoleAsync
  name: AddAllAppsAsTargetToRoleAsync
  nameWithType: Role.AddAllAppsAsTargetToRoleAsync
  fullName: Okta.Sdk.Role.AddAllAppsAsTargetToRoleAsync
- uid: Okta.Sdk.IRole.AddAllAppsAsTargetToRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IRole.AddAllAppsAsTargetToRoleAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IRole
  isExternal: true
  name: AddAllAppsAsTargetToRoleAsync(String, CancellationToken)
  nameWithType: IRole.AddAllAppsAsTargetToRoleAsync(String, CancellationToken)
  fullName: Okta.Sdk.IRole.AddAllAppsAsTargetToRoleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IRole.AddAllAppsAsTargetToRoleAsync(System.String,System.Threading.CancellationToken)
    name: AddAllAppsAsTargetToRoleAsync
    nameWithType: IRole.AddAllAppsAsTargetToRoleAsync
    fullName: Okta.Sdk.IRole.AddAllAppsAsTargetToRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IRole.AddAllAppsAsTargetToRoleAsync(System.String,System.Threading.CancellationToken)
    name: AddAllAppsAsTargetToRoleAsync
    nameWithType: IRole.AddAllAppsAsTargetToRoleAsync
    fullName: Okta.Sdk.IRole.AddAllAppsAsTargetToRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Role.AddAppTargetToAppAdminRoleForUserAsync*
  commentId: Overload:Okta.Sdk.Role.AddAppTargetToAppAdminRoleForUserAsync
  name: AddAppTargetToAppAdminRoleForUserAsync
  nameWithType: Role.AddAppTargetToAppAdminRoleForUserAsync
  fullName: Okta.Sdk.Role.AddAppTargetToAppAdminRoleForUserAsync
- uid: Okta.Sdk.IRole.AddAppTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IRole.AddAppTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IRole
  isExternal: true
  name: AddAppTargetToAppAdminRoleForUserAsync(String, String, String, CancellationToken)
  nameWithType: IRole.AddAppTargetToAppAdminRoleForUserAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IRole.AddAppTargetToAppAdminRoleForUserAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IRole.AddAppTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddAppTargetToAppAdminRoleForUserAsync
    nameWithType: IRole.AddAppTargetToAppAdminRoleForUserAsync
    fullName: Okta.Sdk.IRole.AddAppTargetToAppAdminRoleForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IRole.AddAppTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddAppTargetToAppAdminRoleForUserAsync
    nameWithType: IRole.AddAppTargetToAppAdminRoleForUserAsync
    fullName: Okta.Sdk.IRole.AddAppTargetToAppAdminRoleForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Role.AddAppTargetToAdminRoleForUserAsync*
  commentId: Overload:Okta.Sdk.Role.AddAppTargetToAdminRoleForUserAsync
  name: AddAppTargetToAdminRoleForUserAsync
  nameWithType: Role.AddAppTargetToAdminRoleForUserAsync
  fullName: Okta.Sdk.Role.AddAppTargetToAdminRoleForUserAsync
- uid: Okta.Sdk.IRole.AddAppTargetToAdminRoleForUserAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IRole.AddAppTargetToAdminRoleForUserAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IRole
  isExternal: true
  name: AddAppTargetToAdminRoleForUserAsync(String, String, CancellationToken)
  nameWithType: IRole.AddAppTargetToAdminRoleForUserAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IRole.AddAppTargetToAdminRoleForUserAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IRole.AddAppTargetToAdminRoleForUserAsync(System.String,System.String,System.Threading.CancellationToken)
    name: AddAppTargetToAdminRoleForUserAsync
    nameWithType: IRole.AddAppTargetToAdminRoleForUserAsync
    fullName: Okta.Sdk.IRole.AddAppTargetToAdminRoleForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IRole.AddAppTargetToAdminRoleForUserAsync(System.String,System.String,System.Threading.CancellationToken)
    name: AddAppTargetToAdminRoleForUserAsync
    nameWithType: IRole.AddAppTargetToAdminRoleForUserAsync
    fullName: Okta.Sdk.IRole.AddAppTargetToAdminRoleForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
