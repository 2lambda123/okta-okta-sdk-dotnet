### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IDomainCertificate
  commentId: T:Okta.Sdk.IDomainCertificate
  id: IDomainCertificate
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IDomainCertificate.Certificate
  - Okta.Sdk.IDomainCertificate.CertificateChain
  - Okta.Sdk.IDomainCertificate.CreateCertificateAsync(Okta.Sdk.IDomainCertificate,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IDomainCertificate.PrivateKey
  - Okta.Sdk.IDomainCertificate.Type
  langs:
  - csharp
  - vb
  name: IDomainCertificate
  nameWithType: IDomainCertificate
  fullName: Okta.Sdk.IDomainCertificate
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomainCertificate.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IDomainCertificate
    path: ../src/Okta.Sdk/Generated/IDomainCertificate.Generated.cs
    startLine: 15
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: Represents a DomainCertificate resource in the Okta API.
  example: []
  syntax:
    content: 'public interface IDomainCertificate : IResource'
    content.vb: >-
      Public Interface IDomainCertificate

          Inherits IResource
  inheritedMembers:
  - Okta.Sdk.IResource.Item(System.String)
  - Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  - Okta.Sdk.IResource.GetData
  - Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  - Okta.Sdk.IResource.GetProperty``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IDomainCertificate.Certificate
  commentId: P:Okta.Sdk.IDomainCertificate.Certificate
  id: Certificate
  parent: Okta.Sdk.IDomainCertificate
  langs:
  - csharp
  - vb
  name: Certificate
  nameWithType: IDomainCertificate.Certificate
  fullName: Okta.Sdk.IDomainCertificate.Certificate
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomainCertificate.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Certificate
    path: ../src/Okta.Sdk/Generated/IDomainCertificate.Generated.cs
    startLine: 17
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Certificate { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Certificate As String
  overload: Okta.Sdk.IDomainCertificate.Certificate*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IDomainCertificate.CertificateChain
  commentId: P:Okta.Sdk.IDomainCertificate.CertificateChain
  id: CertificateChain
  parent: Okta.Sdk.IDomainCertificate
  langs:
  - csharp
  - vb
  name: CertificateChain
  nameWithType: IDomainCertificate.CertificateChain
  fullName: Okta.Sdk.IDomainCertificate.CertificateChain
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomainCertificate.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CertificateChain
    path: ../src/Okta.Sdk/Generated/IDomainCertificate.Generated.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string CertificateChain { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property CertificateChain As String
  overload: Okta.Sdk.IDomainCertificate.CertificateChain*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IDomainCertificate.PrivateKey
  commentId: P:Okta.Sdk.IDomainCertificate.PrivateKey
  id: PrivateKey
  parent: Okta.Sdk.IDomainCertificate
  langs:
  - csharp
  - vb
  name: PrivateKey
  nameWithType: IDomainCertificate.PrivateKey
  fullName: Okta.Sdk.IDomainCertificate.PrivateKey
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomainCertificate.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PrivateKey
    path: ../src/Okta.Sdk/Generated/IDomainCertificate.Generated.cs
    startLine: 21
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string PrivateKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property PrivateKey As String
  overload: Okta.Sdk.IDomainCertificate.PrivateKey*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IDomainCertificate.Type
  commentId: P:Okta.Sdk.IDomainCertificate.Type
  id: Type
  parent: Okta.Sdk.IDomainCertificate
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IDomainCertificate.Type
  fullName: Okta.Sdk.IDomainCertificate.Type
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomainCertificate.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Type
    path: ../src/Okta.Sdk/Generated/IDomainCertificate.Generated.cs
    startLine: 23
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: DomainCertificateType Type { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.DomainCertificateType
    content.vb: Property Type As DomainCertificateType
  overload: Okta.Sdk.IDomainCertificate.Type*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IDomainCertificate.CreateCertificateAsync(Okta.Sdk.IDomainCertificate,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IDomainCertificate.CreateCertificateAsync(Okta.Sdk.IDomainCertificate,System.String,System.Threading.CancellationToken)
  id: CreateCertificateAsync(Okta.Sdk.IDomainCertificate,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IDomainCertificate
  langs:
  - csharp
  - vb
  name: CreateCertificateAsync(IDomainCertificate, String, CancellationToken)
  nameWithType: IDomainCertificate.CreateCertificateAsync(IDomainCertificate, String, CancellationToken)
  fullName: Okta.Sdk.IDomainCertificate.CreateCertificateAsync(Okta.Sdk.IDomainCertificate, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomainCertificate.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateCertificateAsync
    path: ../src/Okta.Sdk/Generated/IDomainCertificate.Generated.cs
    startLine: 25
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task CreateCertificateAsync(IDomainCertificate certificate, string domainId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: certificate
      type: Okta.Sdk.IDomainCertificate
    - id: domainId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CreateCertificateAsync(certificate As IDomainCertificate, domainId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IDomainCertificate.CreateCertificateAsync*
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IResource.Item(System.String)
  commentId: P:Okta.Sdk.IResource.Item(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: Item[String]
  nameWithType: IResource.Item[String]
  fullName: Okta.Sdk.IResource.Item[System.String]
  nameWithType.vb: IResource.Item(String)
  fullName.vb: Okta.Sdk.IResource.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetArrayProperty<T>(String)
  nameWithType: IResource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetArrayProperty<T>(System.String)
  nameWithType.vb: IResource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty<T>
    nameWithType: IResource.GetArrayProperty<T>
    fullName: Okta.Sdk.IResource.GetArrayProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty(Of T)
    nameWithType: IResource.GetArrayProperty(Of T)
    fullName: Okta.Sdk.IResource.GetArrayProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetData
  commentId: M:Okta.Sdk.IResource.GetData
  parent: Okta.Sdk.IResource
  name: GetData()
  nameWithType: IResource.GetData()
  fullName: Okta.Sdk.IResource.GetData()
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: IResource.SetProperty(String, Object)
  fullName: Okta.Sdk.IResource.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: IResource.GetProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetProperty<T>(System.String)
  nameWithType.vb: IResource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: IResource.GetProperty<T>
    fullName: Okta.Sdk.IResource.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: IResource.GetProperty(Of T)
    fullName: Okta.Sdk.IResource.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  parent: Okta.Sdk
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
- uid: Okta.Sdk.IDomainCertificate.Certificate*
  commentId: Overload:Okta.Sdk.IDomainCertificate.Certificate
  name: Certificate
  nameWithType: IDomainCertificate.Certificate
  fullName: Okta.Sdk.IDomainCertificate.Certificate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.IDomainCertificate.CertificateChain*
  commentId: Overload:Okta.Sdk.IDomainCertificate.CertificateChain
  name: CertificateChain
  nameWithType: IDomainCertificate.CertificateChain
  fullName: Okta.Sdk.IDomainCertificate.CertificateChain
- uid: Okta.Sdk.IDomainCertificate.PrivateKey*
  commentId: Overload:Okta.Sdk.IDomainCertificate.PrivateKey
  name: PrivateKey
  nameWithType: IDomainCertificate.PrivateKey
  fullName: Okta.Sdk.IDomainCertificate.PrivateKey
- uid: Okta.Sdk.IDomainCertificate.Type*
  commentId: Overload:Okta.Sdk.IDomainCertificate.Type
  name: Type
  nameWithType: IDomainCertificate.Type
  fullName: Okta.Sdk.IDomainCertificate.Type
- uid: Okta.Sdk.DomainCertificateType
  commentId: T:Okta.Sdk.DomainCertificateType
  parent: Okta.Sdk
  name: DomainCertificateType
  nameWithType: DomainCertificateType
  fullName: Okta.Sdk.DomainCertificateType
- uid: Okta.Sdk.IDomainCertificate.CreateCertificateAsync*
  commentId: Overload:Okta.Sdk.IDomainCertificate.CreateCertificateAsync
  name: CreateCertificateAsync
  nameWithType: IDomainCertificate.CreateCertificateAsync
  fullName: Okta.Sdk.IDomainCertificate.CreateCertificateAsync
- uid: Okta.Sdk.IDomainCertificate
  commentId: T:Okta.Sdk.IDomainCertificate
  parent: Okta.Sdk
  name: IDomainCertificate
  nameWithType: IDomainCertificate
  fullName: Okta.Sdk.IDomainCertificate
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
