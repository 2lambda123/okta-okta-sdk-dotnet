### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IUserPolicyRuleCondition
  commentId: T:Okta.Sdk.IUserPolicyRuleCondition
  id: IUserPolicyRuleCondition
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IUserPolicyRuleCondition.Exclude
  - Okta.Sdk.IUserPolicyRuleCondition.Inactivity
  - Okta.Sdk.IUserPolicyRuleCondition.Include
  - Okta.Sdk.IUserPolicyRuleCondition.LifecycleExpiration
  - Okta.Sdk.IUserPolicyRuleCondition.PasswordExpiration
  - Okta.Sdk.IUserPolicyRuleCondition.UserLifecycleAttribute
  langs:
  - csharp
  - vb
  name: IUserPolicyRuleCondition
  nameWithType: IUserPolicyRuleCondition
  fullName: Okta.Sdk.IUserPolicyRuleCondition
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/Generated/IUserPolicyRuleCondition.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IUserPolicyRuleCondition
    path: ../src/Okta.Sdk/Generated/IUserPolicyRuleCondition.Generated.cs
    startLine: 15
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: Represents a UserPolicyRuleCondition resource in the Okta API.
  example: []
  syntax:
    content: 'public interface IUserPolicyRuleCondition : IResource'
    content.vb: >-
      Public Interface IUserPolicyRuleCondition

          Inherits IResource
  inheritedMembers:
  - Okta.Sdk.IResource.Item(System.String)
  - Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  - Okta.Sdk.IResource.GetData
  - Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  - Okta.Sdk.IResource.GetProperty``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IUserPolicyRuleCondition.Exclude
  commentId: P:Okta.Sdk.IUserPolicyRuleCondition.Exclude
  id: Exclude
  parent: Okta.Sdk.IUserPolicyRuleCondition
  langs:
  - csharp
  - vb
  name: Exclude
  nameWithType: IUserPolicyRuleCondition.Exclude
  fullName: Okta.Sdk.IUserPolicyRuleCondition.Exclude
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IUserPolicyRuleCondition.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Exclude
    path: ../src/Okta.Sdk/Generated/IUserPolicyRuleCondition.Generated.cs
    startLine: 17
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IList<string> Exclude { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Property Exclude As IList(Of String)
  overload: Okta.Sdk.IUserPolicyRuleCondition.Exclude*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IUserPolicyRuleCondition.Inactivity
  commentId: P:Okta.Sdk.IUserPolicyRuleCondition.Inactivity
  id: Inactivity
  parent: Okta.Sdk.IUserPolicyRuleCondition
  langs:
  - csharp
  - vb
  name: Inactivity
  nameWithType: IUserPolicyRuleCondition.Inactivity
  fullName: Okta.Sdk.IUserPolicyRuleCondition.Inactivity
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IUserPolicyRuleCondition.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Inactivity
    path: ../src/Okta.Sdk/Generated/IUserPolicyRuleCondition.Generated.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IInactivityPolicyRuleCondition Inactivity { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IInactivityPolicyRuleCondition
    content.vb: Property Inactivity As IInactivityPolicyRuleCondition
  overload: Okta.Sdk.IUserPolicyRuleCondition.Inactivity*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IUserPolicyRuleCondition.Include
  commentId: P:Okta.Sdk.IUserPolicyRuleCondition.Include
  id: Include
  parent: Okta.Sdk.IUserPolicyRuleCondition
  langs:
  - csharp
  - vb
  name: Include
  nameWithType: IUserPolicyRuleCondition.Include
  fullName: Okta.Sdk.IUserPolicyRuleCondition.Include
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IUserPolicyRuleCondition.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Include
    path: ../src/Okta.Sdk/Generated/IUserPolicyRuleCondition.Generated.cs
    startLine: 21
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IList<string> Include { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Property Include As IList(Of String)
  overload: Okta.Sdk.IUserPolicyRuleCondition.Include*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IUserPolicyRuleCondition.LifecycleExpiration
  commentId: P:Okta.Sdk.IUserPolicyRuleCondition.LifecycleExpiration
  id: LifecycleExpiration
  parent: Okta.Sdk.IUserPolicyRuleCondition
  langs:
  - csharp
  - vb
  name: LifecycleExpiration
  nameWithType: IUserPolicyRuleCondition.LifecycleExpiration
  fullName: Okta.Sdk.IUserPolicyRuleCondition.LifecycleExpiration
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IUserPolicyRuleCondition.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: LifecycleExpiration
    path: ../src/Okta.Sdk/Generated/IUserPolicyRuleCondition.Generated.cs
    startLine: 23
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: ILifecycleExpirationPolicyRuleCondition LifecycleExpiration { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.ILifecycleExpirationPolicyRuleCondition
    content.vb: Property LifecycleExpiration As ILifecycleExpirationPolicyRuleCondition
  overload: Okta.Sdk.IUserPolicyRuleCondition.LifecycleExpiration*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IUserPolicyRuleCondition.PasswordExpiration
  commentId: P:Okta.Sdk.IUserPolicyRuleCondition.PasswordExpiration
  id: PasswordExpiration
  parent: Okta.Sdk.IUserPolicyRuleCondition
  langs:
  - csharp
  - vb
  name: PasswordExpiration
  nameWithType: IUserPolicyRuleCondition.PasswordExpiration
  fullName: Okta.Sdk.IUserPolicyRuleCondition.PasswordExpiration
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IUserPolicyRuleCondition.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PasswordExpiration
    path: ../src/Okta.Sdk/Generated/IUserPolicyRuleCondition.Generated.cs
    startLine: 25
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IPasswordExpirationPolicyRuleCondition PasswordExpiration { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IPasswordExpirationPolicyRuleCondition
    content.vb: Property PasswordExpiration As IPasswordExpirationPolicyRuleCondition
  overload: Okta.Sdk.IUserPolicyRuleCondition.PasswordExpiration*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IUserPolicyRuleCondition.UserLifecycleAttribute
  commentId: P:Okta.Sdk.IUserPolicyRuleCondition.UserLifecycleAttribute
  id: UserLifecycleAttribute
  parent: Okta.Sdk.IUserPolicyRuleCondition
  langs:
  - csharp
  - vb
  name: UserLifecycleAttribute
  nameWithType: IUserPolicyRuleCondition.UserLifecycleAttribute
  fullName: Okta.Sdk.IUserPolicyRuleCondition.UserLifecycleAttribute
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IUserPolicyRuleCondition.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UserLifecycleAttribute
    path: ../src/Okta.Sdk/Generated/IUserPolicyRuleCondition.Generated.cs
    startLine: 27
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IUserLifecycleAttributePolicyRuleCondition UserLifecycleAttribute { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IUserLifecycleAttributePolicyRuleCondition
    content.vb: Property UserLifecycleAttribute As IUserLifecycleAttributePolicyRuleCondition
  overload: Okta.Sdk.IUserPolicyRuleCondition.UserLifecycleAttribute*
  modifiers.csharp:
  - get
  - set
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IResource.Item(System.String)
  commentId: P:Okta.Sdk.IResource.Item(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: Item[String]
  nameWithType: IResource.Item[String]
  fullName: Okta.Sdk.IResource.Item[System.String]
  nameWithType.vb: IResource.Item(String)
  fullName.vb: Okta.Sdk.IResource.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetArrayProperty<T>(String)
  nameWithType: IResource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetArrayProperty<T>(System.String)
  nameWithType.vb: IResource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty<T>
    nameWithType: IResource.GetArrayProperty<T>
    fullName: Okta.Sdk.IResource.GetArrayProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty(Of T)
    nameWithType: IResource.GetArrayProperty(Of T)
    fullName: Okta.Sdk.IResource.GetArrayProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetData
  commentId: M:Okta.Sdk.IResource.GetData
  parent: Okta.Sdk.IResource
  name: GetData()
  nameWithType: IResource.GetData()
  fullName: Okta.Sdk.IResource.GetData()
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: IResource.SetProperty(String, Object)
  fullName: Okta.Sdk.IResource.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: IResource.GetProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetProperty<T>(System.String)
  nameWithType.vb: IResource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: IResource.GetProperty<T>
    fullName: Okta.Sdk.IResource.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: IResource.GetProperty(Of T)
    fullName: Okta.Sdk.IResource.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  parent: Okta.Sdk
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
- uid: Okta.Sdk.IUserPolicyRuleCondition.Exclude*
  commentId: Overload:Okta.Sdk.IUserPolicyRuleCondition.Exclude
  name: Exclude
  nameWithType: IUserPolicyRuleCondition.Exclude
  fullName: Okta.Sdk.IUserPolicyRuleCondition.Exclude
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.IUserPolicyRuleCondition.Inactivity*
  commentId: Overload:Okta.Sdk.IUserPolicyRuleCondition.Inactivity
  name: Inactivity
  nameWithType: IUserPolicyRuleCondition.Inactivity
  fullName: Okta.Sdk.IUserPolicyRuleCondition.Inactivity
- uid: Okta.Sdk.IInactivityPolicyRuleCondition
  commentId: T:Okta.Sdk.IInactivityPolicyRuleCondition
  parent: Okta.Sdk
  name: IInactivityPolicyRuleCondition
  nameWithType: IInactivityPolicyRuleCondition
  fullName: Okta.Sdk.IInactivityPolicyRuleCondition
- uid: Okta.Sdk.IUserPolicyRuleCondition.Include*
  commentId: Overload:Okta.Sdk.IUserPolicyRuleCondition.Include
  name: Include
  nameWithType: IUserPolicyRuleCondition.Include
  fullName: Okta.Sdk.IUserPolicyRuleCondition.Include
- uid: Okta.Sdk.IUserPolicyRuleCondition.LifecycleExpiration*
  commentId: Overload:Okta.Sdk.IUserPolicyRuleCondition.LifecycleExpiration
  name: LifecycleExpiration
  nameWithType: IUserPolicyRuleCondition.LifecycleExpiration
  fullName: Okta.Sdk.IUserPolicyRuleCondition.LifecycleExpiration
- uid: Okta.Sdk.ILifecycleExpirationPolicyRuleCondition
  commentId: T:Okta.Sdk.ILifecycleExpirationPolicyRuleCondition
  parent: Okta.Sdk
  name: ILifecycleExpirationPolicyRuleCondition
  nameWithType: ILifecycleExpirationPolicyRuleCondition
  fullName: Okta.Sdk.ILifecycleExpirationPolicyRuleCondition
- uid: Okta.Sdk.IUserPolicyRuleCondition.PasswordExpiration*
  commentId: Overload:Okta.Sdk.IUserPolicyRuleCondition.PasswordExpiration
  name: PasswordExpiration
  nameWithType: IUserPolicyRuleCondition.PasswordExpiration
  fullName: Okta.Sdk.IUserPolicyRuleCondition.PasswordExpiration
- uid: Okta.Sdk.IPasswordExpirationPolicyRuleCondition
  commentId: T:Okta.Sdk.IPasswordExpirationPolicyRuleCondition
  parent: Okta.Sdk
  name: IPasswordExpirationPolicyRuleCondition
  nameWithType: IPasswordExpirationPolicyRuleCondition
  fullName: Okta.Sdk.IPasswordExpirationPolicyRuleCondition
- uid: Okta.Sdk.IUserPolicyRuleCondition.UserLifecycleAttribute*
  commentId: Overload:Okta.Sdk.IUserPolicyRuleCondition.UserLifecycleAttribute
  name: UserLifecycleAttribute
  nameWithType: IUserPolicyRuleCondition.UserLifecycleAttribute
  fullName: Okta.Sdk.IUserPolicyRuleCondition.UserLifecycleAttribute
- uid: Okta.Sdk.IUserLifecycleAttributePolicyRuleCondition
  commentId: T:Okta.Sdk.IUserLifecycleAttributePolicyRuleCondition
  parent: Okta.Sdk
  name: IUserLifecycleAttributePolicyRuleCondition
  nameWithType: IUserLifecycleAttributePolicyRuleCondition
  fullName: Okta.Sdk.IUserLifecycleAttributePolicyRuleCondition
