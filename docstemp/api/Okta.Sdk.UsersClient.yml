### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.UsersClient
  commentId: T:Okta.Sdk.UsersClient
  id: UsersClient
  parent: Okta.Sdk
  children:
  - Okta.Sdk.UsersClient.ActivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.AddAllAppsAsTargetToRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.AddApplicationTargetToAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.AddApplicationTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.AddGroupTargetToRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.ChangePasswordAsync(System.String,Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.ChangeRecoveryQuestionAsync(Okta.Sdk.IUserCredentials,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.ChangeRecoveryQuestionAsync(System.String,Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.ClearUserSessionsAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithImportedHashedPasswordOptions,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithoutCredentialsOptions,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithProviderOptions,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithRecoveryQuestionOptions,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.ICreateUserRequest,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Okta.Sdk.UserNextLogin,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync(System.String)
  - Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.DeactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.ExpirePasswordAndGetTemporaryPasswordAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.ExpirePasswordAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.ForgotPasswordGenerateOneTimeTokenAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.GetAsyncEnumerator(System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.GetLinkedObjectsForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.UsersClient.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.GetUserAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.GetUserGrantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.GetUserRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.UsersClient.ListAppLinks(System.String)
  - Okta.Sdk.UsersClient.ListAssignedRolesForUser(System.String,System.String)
  - Okta.Sdk.UsersClient.ListGrantsForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.UsersClient.ListGroupTargetsForRole(System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.UsersClient.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.UsersClient.ListUserClients(System.String)
  - Okta.Sdk.UsersClient.ListUserGrants(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.UsersClient.ListUserGroups(System.String)
  - Okta.Sdk.UsersClient.ListUserIdentityProviders(System.String)
  - Okta.Sdk.UsersClient.ListUsers(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)
  - Okta.Sdk.UsersClient.ListUserSubscriptions(System.String)
  - Okta.Sdk.UsersClient.PartialUpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.ReactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.RemoveGroupTargetFromRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.RemoveLinkedObjectForUserAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.RemoveRoleFromUserAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.ResetFactorsAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.ResetPasswordAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.RevokeGrantsForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.RevokeTokenForUserAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.RevokeTokensForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.RevokeUserGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.RevokeUserGrantsAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.SetLinkedObjectForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.SuspendUserAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.UnlockUserAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.UnsuspendUserAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.UsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: UsersClient
  nameWithType: UsersClient
  fullName: Okta.Sdk.UsersClient
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UsersClient
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 15
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nProvides methods that manipulate <xref href=\"Okta.Sdk.User\" data-throw-if-not-resolved=\"false\"></xref> resources, by communicating with the Okta Users API.\n"
  example: []
  syntax:
    content: 'public sealed class UsersClient : OktaClient, IOktaClient, IUsersClient, IAsyncEnumerable<IUser>'
    content.vb: >-
      Public NotInheritable Class UsersClient

          Inherits OktaClient

          Implements IOktaClient, IUsersClient, IAsyncEnumerable(Of IUser)
  inheritance:
  - System.Object
  - Okta.Sdk.OktaClient
  implements:
  - Okta.Sdk.IOktaClient
  - Okta.Sdk.IUsersClient
  - System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IUser}
  inheritedMembers:
  - Okta.Sdk.OktaClient.Configuration
  - Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  - Okta.Sdk.OktaClient.Brands
  - Okta.Sdk.OktaClient.GroupSchemas
  - Okta.Sdk.OktaClient.Authenticators
  - Okta.Sdk.OktaClient.Orgs
  - Okta.Sdk.OktaClient.UserTypes
  - Okta.Sdk.OktaClient.Users
  - Okta.Sdk.OktaClient.UserFactors
  - Okta.Sdk.OktaClient.Groups
  - Okta.Sdk.OktaClient.Applications
  - Okta.Sdk.OktaClient.Sessions
  - Okta.Sdk.OktaClient.AuthorizationServers
  - Okta.Sdk.OktaClient.Logs
  - Okta.Sdk.OktaClient.Policies
  - Okta.Sdk.OktaClient.EventHooks
  - Okta.Sdk.OktaClient.InlineHooks
  - Okta.Sdk.OktaClient.LinkedObjects
  - Okta.Sdk.OktaClient.TrustedOrigins
  - Okta.Sdk.OktaClient.Features
  - Okta.Sdk.OktaClient.Templates
  - Okta.Sdk.OktaClient.NetworkZones
  - Okta.Sdk.OktaClient.Domains
  - Okta.Sdk.OktaClient.ProfileMappings
  - Okta.Sdk.OktaClient.ThreatInsights
  - Okta.Sdk.OktaClient.IdentityProviders
  - Okta.Sdk.OktaClient.UserSchemas
  - Okta.Sdk.OktaClient.Subscriptions
  - Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
  - Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.GetCollection``1(System.String)
  - Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  - Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Okta.Sdk.UsersClient.ListUsers(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)
  commentId: M:Okta.Sdk.UsersClient.ListUsers(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)
  id: ListUsers(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ListUsers(String, String, Nullable<Int32>, String, String, String, String)
  nameWithType: UsersClient.ListUsers(String, String, Nullable<Int32>, String, String, String, String)
  fullName: Okta.Sdk.UsersClient.ListUsers(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListUsers
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 31
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IUser> ListUsers(string q = null, string after = null, int? limit = 10, string filter = null, string search = null, string sortBy = null, string sortOrder = null)
    parameters:
    - id: q
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    - id: filter
      type: System.String
    - id: search
      type: System.String
    - id: sortBy
      type: System.String
    - id: sortOrder
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IUser}
    content.vb: Public Function ListUsers(q As String = Nothing, after As String = Nothing, limit As Integer? = 10, filter As String = Nothing, search As String = Nothing, sortBy As String = Nothing, sortOrder As String = Nothing) As ICollectionClient(Of IUser)
  overload: Okta.Sdk.UsersClient.ListUsers*
  implements:
  - Okta.Sdk.IUsersClient.ListUsers(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)
  nameWithType.vb: UsersClient.ListUsers(String, String, Nullable(Of Int32), String, String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.ListUsers(System.String, System.String, System.Nullable(Of System.Int32), System.String, System.String, System.String, System.String)
  name.vb: ListUsers(String, String, Nullable(Of Int32), String, String, String, String)
- uid: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.ICreateUserRequest,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Okta.Sdk.UserNextLogin,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.ICreateUserRequest,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Okta.Sdk.UserNextLogin,System.Threading.CancellationToken)
  id: CreateUserAsync(Okta.Sdk.ICreateUserRequest,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Okta.Sdk.UserNextLogin,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: CreateUserAsync(ICreateUserRequest, Nullable<Boolean>, Nullable<Boolean>, UserNextLogin, CancellationToken)
  nameWithType: UsersClient.CreateUserAsync(ICreateUserRequest, Nullable<Boolean>, Nullable<Boolean>, UserNextLogin, CancellationToken)
  fullName: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.ICreateUserRequest, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, Okta.Sdk.UserNextLogin, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 50
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IUser> CreateUserAsync(ICreateUserRequest body, bool? activate = true, bool? provider = false, UserNextLogin nextLogin = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: body
      type: Okta.Sdk.ICreateUserRequest
    - id: activate
      type: System.Nullable{System.Boolean}
    - id: provider
      type: System.Nullable{System.Boolean}
    - id: nextLogin
      type: Okta.Sdk.UserNextLogin
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUser}
    content.vb: Public Function CreateUserAsync(body As ICreateUserRequest, activate As Boolean? = True, provider As Boolean? = False, nextLogin As UserNextLogin = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IUser)
  overload: Okta.Sdk.UsersClient.CreateUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.ICreateUserRequest,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Okta.Sdk.UserNextLogin,System.Threading.CancellationToken)
  nameWithType.vb: UsersClient.CreateUserAsync(ICreateUserRequest, Nullable(Of Boolean), Nullable(Of Boolean), UserNextLogin, CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.ICreateUserRequest, System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), Okta.Sdk.UserNextLogin, System.Threading.CancellationToken)
  name.vb: CreateUserAsync(ICreateUserRequest, Nullable(Of Boolean), Nullable(Of Boolean), UserNextLogin, CancellationToken)
- uid: Okta.Sdk.UsersClient.SetLinkedObjectForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.SetLinkedObjectForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: SetLinkedObjectForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: SetLinkedObjectForUserAsync(String, String, String, CancellationToken)
  nameWithType: UsersClient.SetLinkedObjectForUserAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.SetLinkedObjectForUserAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: SetLinkedObjectForUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 65
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task SetLinkedObjectForUserAsync(string associatedUserId, string primaryRelationshipName, string primaryUserId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: associatedUserId
      type: System.String
    - id: primaryRelationshipName
      type: System.String
    - id: primaryUserId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetLinkedObjectForUserAsync(associatedUserId As String, primaryRelationshipName As String, primaryUserId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.SetLinkedObjectForUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.SetLinkedObjectForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: DeactivateOrDeleteUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: DeactivateOrDeleteUserAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: UsersClient.DeactivateOrDeleteUserAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateOrDeleteUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 80
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task DeactivateOrDeleteUserAsync(string userId, bool? sendEmail = false, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: sendEmail
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeactivateOrDeleteUserAsync(userId As String, sendEmail As Boolean? = False, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: UsersClient.DeactivateOrDeleteUserAsync(String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: DeactivateOrDeleteUserAsync(String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.UsersClient.GetUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.GetUserAsync(System.String,System.Threading.CancellationToken)
  id: GetUserAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: GetUserAsync(String, CancellationToken)
  nameWithType: UsersClient.GetUserAsync(String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.GetUserAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 97
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IUser> GetUserAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUser}
    content.vb: Public Function GetUserAsync(userId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IUser)
  overload: Okta.Sdk.UsersClient.GetUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.GetUserAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.PartialUpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.PartialUpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: PartialUpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: PartialUpdateUserAsync(IUser, String, Nullable<Boolean>, CancellationToken)
  nameWithType: UsersClient.PartialUpdateUserAsync(IUser, String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.UsersClient.PartialUpdateUserAsync(Okta.Sdk.IUser, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PartialUpdateUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 110
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IUser> PartialUpdateUserAsync(IUser user, string userId, bool? strict = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: user
      type: Okta.Sdk.IUser
    - id: userId
      type: System.String
    - id: strict
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUser}
    content.vb: Public Function PartialUpdateUserAsync(user As IUser, userId As String, strict As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IUser)
  overload: Okta.Sdk.UsersClient.PartialUpdateUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.PartialUpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: UsersClient.PartialUpdateUserAsync(IUser, String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.PartialUpdateUserAsync(Okta.Sdk.IUser, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: PartialUpdateUserAsync(IUser, String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.UsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: UpdateUserAsync(IUser, String, Nullable<Boolean>, CancellationToken)
  nameWithType: UsersClient.UpdateUserAsync(IUser, String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.UsersClient.UpdateUserAsync(Okta.Sdk.IUser, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 127
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IUser> UpdateUserAsync(IUser user, string userId, bool? strict = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: user
      type: Okta.Sdk.IUser
    - id: userId
      type: System.String
    - id: strict
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUser}
    content.vb: Public Function UpdateUserAsync(user As IUser, userId As String, strict As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IUser)
  overload: Okta.Sdk.UsersClient.UpdateUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: UsersClient.UpdateUserAsync(IUser, String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.UpdateUserAsync(Okta.Sdk.IUser, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: UpdateUserAsync(IUser, String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.UsersClient.ListAppLinks(System.String)
  commentId: M:Okta.Sdk.UsersClient.ListAppLinks(System.String)
  id: ListAppLinks(System.String)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ListAppLinks(String)
  nameWithType: UsersClient.ListAppLinks(String)
  fullName: Okta.Sdk.UsersClient.ListAppLinks(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListAppLinks
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 144
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IAppLink> ListAppLinks(string userId)
    parameters:
    - id: userId
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IAppLink}
    content.vb: Public Function ListAppLinks(userId As String) As ICollectionClient(Of IAppLink)
  overload: Okta.Sdk.UsersClient.ListAppLinks*
  implements:
  - Okta.Sdk.IUsersClient.ListAppLinks(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ListUserClients(System.String)
  commentId: M:Okta.Sdk.UsersClient.ListUserClients(System.String)
  id: ListUserClients(System.String)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ListUserClients(String)
  nameWithType: UsersClient.ListUserClients(String)
  fullName: Okta.Sdk.UsersClient.ListUserClients(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListUserClients
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 157
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IOAuth2Client> ListUserClients(string userId)
    parameters:
    - id: userId
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
    content.vb: Public Function ListUserClients(userId As String) As ICollectionClient(Of IOAuth2Client)
  overload: Okta.Sdk.UsersClient.ListUserClients*
  implements:
  - Okta.Sdk.IUsersClient.ListUserClients(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.RevokeGrantsForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.RevokeGrantsForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RevokeGrantsForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: RevokeGrantsForUserAndClientAsync(String, String, CancellationToken)
  nameWithType: UsersClient.RevokeGrantsForUserAndClientAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.RevokeGrantsForUserAndClientAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeGrantsForUserAndClientAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 170
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RevokeGrantsForUserAndClientAsync(string userId, string clientId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: clientId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeGrantsForUserAndClientAsync(userId As String, clientId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.RevokeGrantsForUserAndClientAsync*
  implements:
  - Okta.Sdk.IUsersClient.RevokeGrantsForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ListGrantsForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.UsersClient.ListGrantsForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListGrantsForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ListGrantsForUserAndClient(String, String, String, String, Nullable<Int32>)
  nameWithType: UsersClient.ListGrantsForUserAndClient(String, String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.UsersClient.ListGrantsForUserAndClient(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListGrantsForUserAndClient
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 184
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IOAuth2ScopeConsentGrant> ListGrantsForUserAndClient(string userId, string clientId, string expand = null, string after = null, int? limit = 20)
    parameters:
    - id: userId
      type: System.String
    - id: clientId
      type: System.String
    - id: expand
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2ScopeConsentGrant}
    content.vb: Public Function ListGrantsForUserAndClient(userId As String, clientId As String, expand As String = Nothing, after As String = Nothing, limit As Integer? = 20) As ICollectionClient(Of IOAuth2ScopeConsentGrant)
  overload: Okta.Sdk.UsersClient.ListGrantsForUserAndClient*
  implements:
  - Okta.Sdk.IUsersClient.ListGrantsForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: UsersClient.ListGrantsForUserAndClient(String, String, String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.ListGrantsForUserAndClient(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListGrantsForUserAndClient(String, String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.UsersClient.RevokeTokensForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.RevokeTokensForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RevokeTokensForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: RevokeTokensForUserAndClientAsync(String, String, CancellationToken)
  nameWithType: UsersClient.RevokeTokensForUserAndClientAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.RevokeTokensForUserAndClientAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeTokensForUserAndClientAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 204
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RevokeTokensForUserAndClientAsync(string userId, string clientId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: clientId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeTokensForUserAndClientAsync(userId As String, clientId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.RevokeTokensForUserAndClientAsync*
  implements:
  - Okta.Sdk.IUsersClient.RevokeTokensForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.UsersClient.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ListRefreshTokensForUserAndClient(String, String, String, String, Nullable<Int32>)
  nameWithType: UsersClient.ListRefreshTokensForUserAndClient(String, String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.UsersClient.ListRefreshTokensForUserAndClient(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListRefreshTokensForUserAndClient
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 218
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IOAuth2RefreshToken> ListRefreshTokensForUserAndClient(string userId, string clientId, string expand = null, string after = null, int? limit = 20)
    parameters:
    - id: userId
      type: System.String
    - id: clientId
      type: System.String
    - id: expand
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
    content.vb: Public Function ListRefreshTokensForUserAndClient(userId As String, clientId As String, expand As String = Nothing, after As String = Nothing, limit As Integer? = 20) As ICollectionClient(Of IOAuth2RefreshToken)
  overload: Okta.Sdk.UsersClient.ListRefreshTokensForUserAndClient*
  implements:
  - Okta.Sdk.IUsersClient.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: UsersClient.ListRefreshTokensForUserAndClient(String, String, String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.ListRefreshTokensForUserAndClient(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListRefreshTokensForUserAndClient(String, String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.UsersClient.RevokeTokenForUserAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.RevokeTokenForUserAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RevokeTokenForUserAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: RevokeTokenForUserAndClientAsync(String, String, String, CancellationToken)
  nameWithType: UsersClient.RevokeTokenForUserAndClientAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.RevokeTokenForUserAndClientAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeTokenForUserAndClientAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 238
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RevokeTokenForUserAndClientAsync(string userId, string clientId, string tokenId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: clientId
      type: System.String
    - id: tokenId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeTokenForUserAndClientAsync(userId As String, clientId As String, tokenId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.RevokeTokenForUserAndClientAsync*
  implements:
  - Okta.Sdk.IUsersClient.RevokeTokenForUserAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  id: GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: GetRefreshTokenForUserAndClientAsync(String, String, String, String, Nullable<Int32>, String, CancellationToken)
  nameWithType: UsersClient.GetRefreshTokenForUserAndClientAsync(String, String, String, String, Nullable<Int32>, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.GetRefreshTokenForUserAndClientAsync(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetRefreshTokenForUserAndClientAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 253
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IOAuth2RefreshToken> GetRefreshTokenForUserAndClientAsync(string userId, string clientId, string tokenId, string expand = null, int? limit = 20, string after = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: clientId
      type: System.String
    - id: tokenId
      type: System.String
    - id: expand
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    - id: after
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
    content.vb: Public Function GetRefreshTokenForUserAndClientAsync(userId As String, clientId As String, tokenId As String, expand As String = Nothing, limit As Integer? = 20, after As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2RefreshToken)
  overload: Okta.Sdk.UsersClient.GetRefreshTokenForUserAndClientAsync*
  implements:
  - Okta.Sdk.IUsersClient.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  nameWithType.vb: UsersClient.GetRefreshTokenForUserAndClientAsync(String, String, String, String, Nullable(Of Int32), String, CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.GetRefreshTokenForUserAndClientAsync(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32), System.String, System.Threading.CancellationToken)
  name.vb: GetRefreshTokenForUserAndClientAsync(String, String, String, String, Nullable(Of Int32), String, CancellationToken)
- uid: Okta.Sdk.UsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ChangePasswordAsync(IChangePasswordRequest, String, Nullable<Boolean>, CancellationToken)
  nameWithType: UsersClient.ChangePasswordAsync(IChangePasswordRequest, String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.UsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ChangePasswordAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 274
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IUserCredentials> ChangePasswordAsync(IChangePasswordRequest changePasswordRequest, string userId, bool? strict = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: changePasswordRequest
      type: Okta.Sdk.IChangePasswordRequest
    - id: userId
      type: System.String
    - id: strict
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserCredentials}
    content.vb: Public Function ChangePasswordAsync(changePasswordRequest As IChangePasswordRequest, userId As String, strict As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IUserCredentials)
  overload: Okta.Sdk.UsersClient.ChangePasswordAsync*
  implements:
  - Okta.Sdk.IUsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: UsersClient.ChangePasswordAsync(IChangePasswordRequest, String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ChangePasswordAsync(IChangePasswordRequest, String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.UsersClient.ChangeRecoveryQuestionAsync(Okta.Sdk.IUserCredentials,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.ChangeRecoveryQuestionAsync(Okta.Sdk.IUserCredentials,System.String,System.Threading.CancellationToken)
  id: ChangeRecoveryQuestionAsync(Okta.Sdk.IUserCredentials,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ChangeRecoveryQuestionAsync(IUserCredentials, String, CancellationToken)
  nameWithType: UsersClient.ChangeRecoveryQuestionAsync(IUserCredentials, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.ChangeRecoveryQuestionAsync(Okta.Sdk.IUserCredentials, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ChangeRecoveryQuestionAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 291
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IUserCredentials> ChangeRecoveryQuestionAsync(IUserCredentials userCredentials, string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userCredentials
      type: Okta.Sdk.IUserCredentials
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserCredentials}
    content.vb: Public Function ChangeRecoveryQuestionAsync(userCredentials As IUserCredentials, userId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IUserCredentials)
  overload: Okta.Sdk.UsersClient.ChangeRecoveryQuestionAsync*
  implements:
  - Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync(Okta.Sdk.IUserCredentials,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ForgotPasswordGenerateOneTimeTokenAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.ForgotPasswordGenerateOneTimeTokenAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: ForgotPasswordGenerateOneTimeTokenAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ForgotPasswordGenerateOneTimeTokenAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: UsersClient.ForgotPasswordGenerateOneTimeTokenAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.UsersClient.ForgotPasswordGenerateOneTimeTokenAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ForgotPasswordGenerateOneTimeTokenAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 304
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IForgotPasswordResponse> ForgotPasswordGenerateOneTimeTokenAsync(string userId, bool? sendEmail = true, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: sendEmail
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IForgotPasswordResponse}
    content.vb: Public Function ForgotPasswordGenerateOneTimeTokenAsync(userId As String, sendEmail As Boolean? = True, cancellationToken As CancellationToken = Nothing) As Task(Of IForgotPasswordResponse)
  overload: Okta.Sdk.UsersClient.ForgotPasswordGenerateOneTimeTokenAsync*
  implements:
  - Okta.Sdk.IUsersClient.ForgotPasswordGenerateOneTimeTokenAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: UsersClient.ForgotPasswordGenerateOneTimeTokenAsync(String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.ForgotPasswordGenerateOneTimeTokenAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ForgotPasswordGenerateOneTimeTokenAsync(String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.UsersClient.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ForgotPasswordSetNewPasswordAsync(IUserCredentials, String, Nullable<Boolean>, CancellationToken)
  nameWithType: UsersClient.ForgotPasswordSetNewPasswordAsync(IUserCredentials, String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.UsersClient.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ForgotPasswordSetNewPasswordAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 321
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IForgotPasswordResponse> ForgotPasswordSetNewPasswordAsync(IUserCredentials user, string userId, bool? sendEmail = true, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: user
      type: Okta.Sdk.IUserCredentials
    - id: userId
      type: System.String
    - id: sendEmail
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IForgotPasswordResponse}
    content.vb: Public Function ForgotPasswordSetNewPasswordAsync(user As IUserCredentials, userId As String, sendEmail As Boolean? = True, cancellationToken As CancellationToken = Nothing) As Task(Of IForgotPasswordResponse)
  overload: Okta.Sdk.UsersClient.ForgotPasswordSetNewPasswordAsync*
  implements:
  - Okta.Sdk.IUsersClient.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: UsersClient.ForgotPasswordSetNewPasswordAsync(IUserCredentials, String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ForgotPasswordSetNewPasswordAsync(IUserCredentials, String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.UsersClient.RevokeUserGrantsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.RevokeUserGrantsAsync(System.String,System.Threading.CancellationToken)
  id: RevokeUserGrantsAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: RevokeUserGrantsAsync(String, CancellationToken)
  nameWithType: UsersClient.RevokeUserGrantsAsync(String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.RevokeUserGrantsAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeUserGrantsAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 338
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RevokeUserGrantsAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeUserGrantsAsync(userId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.RevokeUserGrantsAsync*
  implements:
  - Okta.Sdk.IUsersClient.RevokeUserGrantsAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ListUserGrants(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.UsersClient.ListUserGrants(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListUserGrants(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ListUserGrants(String, String, String, String, Nullable<Int32>)
  nameWithType: UsersClient.ListUserGrants(String, String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.UsersClient.ListUserGrants(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListUserGrants
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 351
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IOAuth2ScopeConsentGrant> ListUserGrants(string userId, string scopeId = null, string expand = null, string after = null, int? limit = 20)
    parameters:
    - id: userId
      type: System.String
    - id: scopeId
      type: System.String
    - id: expand
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2ScopeConsentGrant}
    content.vb: Public Function ListUserGrants(userId As String, scopeId As String = Nothing, expand As String = Nothing, after As String = Nothing, limit As Integer? = 20) As ICollectionClient(Of IOAuth2ScopeConsentGrant)
  overload: Okta.Sdk.UsersClient.ListUserGrants*
  implements:
  - Okta.Sdk.IUsersClient.ListUserGrants(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: UsersClient.ListUserGrants(String, String, String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.ListUserGrants(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListUserGrants(String, String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.UsersClient.RevokeUserGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.RevokeUserGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RevokeUserGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: RevokeUserGrantAsync(String, String, CancellationToken)
  nameWithType: UsersClient.RevokeUserGrantAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.RevokeUserGrantAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeUserGrantAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 371
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RevokeUserGrantAsync(string userId, string grantId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: grantId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeUserGrantAsync(userId As String, grantId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.RevokeUserGrantAsync*
  implements:
  - Okta.Sdk.IUsersClient.RevokeUserGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.GetUserGrantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.GetUserGrantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetUserGrantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: GetUserGrantAsync(String, String, String, CancellationToken)
  nameWithType: UsersClient.GetUserGrantAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.GetUserGrantAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetUserGrantAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 385
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IOAuth2ScopeConsentGrant> GetUserGrantAsync(string userId, string grantId, string expand = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: grantId
      type: System.String
    - id: expand
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2ScopeConsentGrant}
    content.vb: Public Function GetUserGrantAsync(userId As String, grantId As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2ScopeConsentGrant)
  overload: Okta.Sdk.UsersClient.GetUserGrantAsync*
  implements:
  - Okta.Sdk.IUsersClient.GetUserGrantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ListUserGroups(System.String)
  commentId: M:Okta.Sdk.UsersClient.ListUserGroups(System.String)
  id: ListUserGroups(System.String)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ListUserGroups(String)
  nameWithType: UsersClient.ListUserGroups(String)
  fullName: Okta.Sdk.UsersClient.ListUserGroups(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListUserGroups
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 403
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IGroup> ListUserGroups(string userId)
    parameters:
    - id: userId
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IGroup}
    content.vb: Public Function ListUserGroups(userId As String) As ICollectionClient(Of IGroup)
  overload: Okta.Sdk.UsersClient.ListUserGroups*
  implements:
  - Okta.Sdk.IUsersClient.ListUserGroups(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ListUserIdentityProviders(System.String)
  commentId: M:Okta.Sdk.UsersClient.ListUserIdentityProviders(System.String)
  id: ListUserIdentityProviders(System.String)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ListUserIdentityProviders(String)
  nameWithType: UsersClient.ListUserIdentityProviders(String)
  fullName: Okta.Sdk.UsersClient.ListUserIdentityProviders(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListUserIdentityProviders
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 416
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IIdentityProvider> ListUserIdentityProviders(string userId)
    parameters:
    - id: userId
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IIdentityProvider}
    content.vb: Public Function ListUserIdentityProviders(userId As String) As ICollectionClient(Of IIdentityProvider)
  overload: Okta.Sdk.UsersClient.ListUserIdentityProviders*
  implements:
  - Okta.Sdk.IUsersClient.ListUserIdentityProviders(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ActivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.ActivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: ActivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ActivateUserAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: UsersClient.ActivateUserAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.UsersClient.ActivateUserAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 429
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IUserActivationToken> ActivateUserAsync(string userId, bool? sendEmail = true, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: sendEmail
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserActivationToken}
    content.vb: Public Function ActivateUserAsync(userId As String, sendEmail As Boolean? = True, cancellationToken As CancellationToken = Nothing) As Task(Of IUserActivationToken)
  overload: Okta.Sdk.UsersClient.ActivateUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.ActivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: UsersClient.ActivateUserAsync(String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.ActivateUserAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ActivateUserAsync(String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.UsersClient.DeactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.DeactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: DeactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: DeactivateUserAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: UsersClient.DeactivateUserAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.UsersClient.DeactivateUserAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 446
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task DeactivateUserAsync(string userId, bool? sendEmail = false, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: sendEmail
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeactivateUserAsync(userId As String, sendEmail As Boolean? = False, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.DeactivateUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.DeactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: UsersClient.DeactivateUserAsync(String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.DeactivateUserAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: DeactivateUserAsync(String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.UsersClient.ExpirePasswordAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.ExpirePasswordAsync(System.String,System.Threading.CancellationToken)
  id: ExpirePasswordAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ExpirePasswordAsync(String, CancellationToken)
  nameWithType: UsersClient.ExpirePasswordAsync(String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.ExpirePasswordAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ExpirePasswordAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 463
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IUser> ExpirePasswordAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUser}
    content.vb: Public Function ExpirePasswordAsync(userId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IUser)
  overload: Okta.Sdk.UsersClient.ExpirePasswordAsync*
  implements:
  - Okta.Sdk.IUsersClient.ExpirePasswordAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ExpirePasswordAndGetTemporaryPasswordAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.ExpirePasswordAndGetTemporaryPasswordAsync(System.String,System.Threading.CancellationToken)
  id: ExpirePasswordAndGetTemporaryPasswordAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ExpirePasswordAndGetTemporaryPasswordAsync(String, CancellationToken)
  nameWithType: UsersClient.ExpirePasswordAndGetTemporaryPasswordAsync(String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.ExpirePasswordAndGetTemporaryPasswordAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ExpirePasswordAndGetTemporaryPasswordAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 476
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<ITempPassword> ExpirePasswordAndGetTemporaryPasswordAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.ITempPassword}
    content.vb: Public Function ExpirePasswordAndGetTemporaryPasswordAsync(userId As String, cancellationToken As CancellationToken = Nothing) As Task(Of ITempPassword)
  overload: Okta.Sdk.UsersClient.ExpirePasswordAndGetTemporaryPasswordAsync*
  implements:
  - Okta.Sdk.IUsersClient.ExpirePasswordAndGetTemporaryPasswordAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ReactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.ReactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: ReactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ReactivateUserAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: UsersClient.ReactivateUserAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.UsersClient.ReactivateUserAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ReactivateUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 489
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IUserActivationToken> ReactivateUserAsync(string userId, bool? sendEmail = false, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: sendEmail
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserActivationToken}
    content.vb: Public Function ReactivateUserAsync(userId As String, sendEmail As Boolean? = False, cancellationToken As CancellationToken = Nothing) As Task(Of IUserActivationToken)
  overload: Okta.Sdk.UsersClient.ReactivateUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.ReactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: UsersClient.ReactivateUserAsync(String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.ReactivateUserAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ReactivateUserAsync(String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.UsersClient.ResetFactorsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.ResetFactorsAsync(System.String,System.Threading.CancellationToken)
  id: ResetFactorsAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ResetFactorsAsync(String, CancellationToken)
  nameWithType: UsersClient.ResetFactorsAsync(String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.ResetFactorsAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ResetFactorsAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 506
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task ResetFactorsAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ResetFactorsAsync(userId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.ResetFactorsAsync*
  implements:
  - Okta.Sdk.IUsersClient.ResetFactorsAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ResetPasswordAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.ResetPasswordAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: ResetPasswordAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ResetPasswordAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: UsersClient.ResetPasswordAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.UsersClient.ResetPasswordAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ResetPasswordAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 519
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IResetPasswordToken> ResetPasswordAsync(string userId, bool? sendEmail, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: sendEmail
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IResetPasswordToken}
    content.vb: Public Function ResetPasswordAsync(userId As String, sendEmail As Boolean?, cancellationToken As CancellationToken = Nothing) As Task(Of IResetPasswordToken)
  overload: Okta.Sdk.UsersClient.ResetPasswordAsync*
  implements:
  - Okta.Sdk.IUsersClient.ResetPasswordAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: UsersClient.ResetPasswordAsync(String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.ResetPasswordAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ResetPasswordAsync(String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.UsersClient.SuspendUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.SuspendUserAsync(System.String,System.Threading.CancellationToken)
  id: SuspendUserAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: SuspendUserAsync(String, CancellationToken)
  nameWithType: UsersClient.SuspendUserAsync(String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.SuspendUserAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: SuspendUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 536
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task SuspendUserAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SuspendUserAsync(userId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.SuspendUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.SuspendUserAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.UnlockUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.UnlockUserAsync(System.String,System.Threading.CancellationToken)
  id: UnlockUserAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: UnlockUserAsync(String, CancellationToken)
  nameWithType: UsersClient.UnlockUserAsync(String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.UnlockUserAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UnlockUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 549
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task UnlockUserAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UnlockUserAsync(userId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.UnlockUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.UnlockUserAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.UnsuspendUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.UnsuspendUserAsync(System.String,System.Threading.CancellationToken)
  id: UnsuspendUserAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: UnsuspendUserAsync(String, CancellationToken)
  nameWithType: UsersClient.UnsuspendUserAsync(String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.UnsuspendUserAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UnsuspendUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 562
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task UnsuspendUserAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UnsuspendUserAsync(userId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.UnsuspendUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.UnsuspendUserAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.RemoveLinkedObjectForUserAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.RemoveLinkedObjectForUserAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RemoveLinkedObjectForUserAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: RemoveLinkedObjectForUserAsync(String, String, CancellationToken)
  nameWithType: UsersClient.RemoveLinkedObjectForUserAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.RemoveLinkedObjectForUserAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveLinkedObjectForUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 575
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RemoveLinkedObjectForUserAsync(string userId, string relationshipName, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: relationshipName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveLinkedObjectForUserAsync(userId As String, relationshipName As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.RemoveLinkedObjectForUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.RemoveLinkedObjectForUserAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.GetLinkedObjectsForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.UsersClient.GetLinkedObjectsForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
  id: GetLinkedObjectsForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: GetLinkedObjectsForUser(String, String, String, Nullable<Int32>)
  nameWithType: UsersClient.GetLinkedObjectsForUser(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.UsersClient.GetLinkedObjectsForUser(System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetLinkedObjectsForUser
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 589
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IResponseLinks> GetLinkedObjectsForUser(string userId, string relationshipName, string after = null, int? limit = -1)
    parameters:
    - id: userId
      type: System.String
    - id: relationshipName
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IResponseLinks}
    content.vb: Public Function GetLinkedObjectsForUser(userId As String, relationshipName As String, after As String = Nothing, limit As Integer? = -1) As ICollectionClient(Of IResponseLinks)
  overload: Okta.Sdk.UsersClient.GetLinkedObjectsForUser*
  implements:
  - Okta.Sdk.IUsersClient.GetLinkedObjectsForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: UsersClient.GetLinkedObjectsForUser(String, String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.GetLinkedObjectsForUser(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: GetLinkedObjectsForUser(String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.UsersClient.ListAssignedRolesForUser(System.String,System.String)
  commentId: M:Okta.Sdk.UsersClient.ListAssignedRolesForUser(System.String,System.String)
  id: ListAssignedRolesForUser(System.String,System.String)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ListAssignedRolesForUser(String, String)
  nameWithType: UsersClient.ListAssignedRolesForUser(String, String)
  fullName: Okta.Sdk.UsersClient.ListAssignedRolesForUser(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListAssignedRolesForUser
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 608
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IRole> ListAssignedRolesForUser(string userId, string expand = null)
    parameters:
    - id: userId
      type: System.String
    - id: expand
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IRole}
    content.vb: Public Function ListAssignedRolesForUser(userId As String, expand As String = Nothing) As ICollectionClient(Of IRole)
  overload: Okta.Sdk.UsersClient.ListAssignedRolesForUser*
  implements:
  - Okta.Sdk.IUsersClient.ListAssignedRolesForUser(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: AssignRoleToUserAsync(IAssignRoleRequest, String, Nullable<Boolean>, CancellationToken)
  nameWithType: UsersClient.AssignRoleToUserAsync(IAssignRoleRequest, String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.UsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AssignRoleToUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 625
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IRole> AssignRoleToUserAsync(IAssignRoleRequest assignRoleRequest, string userId, bool? disableNotifications = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: assignRoleRequest
      type: Okta.Sdk.IAssignRoleRequest
    - id: userId
      type: System.String
    - id: disableNotifications
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IRole}
    content.vb: Public Function AssignRoleToUserAsync(assignRoleRequest As IAssignRoleRequest, userId As String, disableNotifications As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IRole)
  overload: Okta.Sdk.UsersClient.AssignRoleToUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: UsersClient.AssignRoleToUserAsync(IAssignRoleRequest, String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: AssignRoleToUserAsync(IAssignRoleRequest, String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.UsersClient.RemoveRoleFromUserAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.RemoveRoleFromUserAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RemoveRoleFromUserAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: RemoveRoleFromUserAsync(String, String, CancellationToken)
  nameWithType: UsersClient.RemoveRoleFromUserAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.RemoveRoleFromUserAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveRoleFromUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 642
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RemoveRoleFromUserAsync(string userId, string roleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: roleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveRoleFromUserAsync(userId As String, roleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.RemoveRoleFromUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.RemoveRoleFromUserAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.GetUserRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.GetUserRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetUserRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: GetUserRoleAsync(String, String, CancellationToken)
  nameWithType: UsersClient.GetUserRoleAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.GetUserRoleAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetUserRoleAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 656
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IRole> GetUserRoleAsync(string userId, string roleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: roleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IRole}
    content.vb: Public Function GetUserRoleAsync(userId As String, roleId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IRole)
  overload: Okta.Sdk.UsersClient.GetUserRoleAsync*
  implements:
  - Okta.Sdk.IUsersClient.GetUserRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.UsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListApplicationTargetsForApplicationAdministratorRoleForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ListApplicationTargetsForApplicationAdministratorRoleForUser(String, String, String, Nullable<Int32>)
  nameWithType: UsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.UsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListApplicationTargetsForApplicationAdministratorRoleForUser
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 670
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<ICatalogApplication> ListApplicationTargetsForApplicationAdministratorRoleForUser(string userId, string roleId, string after = null, int? limit = 20)
    parameters:
    - id: userId
      type: System.String
    - id: roleId
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.ICatalogApplication}
    content.vb: Public Function ListApplicationTargetsForApplicationAdministratorRoleForUser(userId As String, roleId As String, after As String = Nothing, limit As Integer? = 20) As ICollectionClient(Of ICatalogApplication)
  overload: Okta.Sdk.UsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser*
  implements:
  - Okta.Sdk.IUsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: UsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(String, String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListApplicationTargetsForApplicationAdministratorRoleForUser(String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.UsersClient.AddAllAppsAsTargetToRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.AddAllAppsAsTargetToRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  id: AddAllAppsAsTargetToRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: AddAllAppsAsTargetToRoleAsync(String, String, CancellationToken)
  nameWithType: UsersClient.AddAllAppsAsTargetToRoleAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.AddAllAppsAsTargetToRoleAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddAllAppsAsTargetToRoleAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 689
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task AddAllAppsAsTargetToRoleAsync(string userId, string roleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: roleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddAllAppsAsTargetToRoleAsync(userId As String, roleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.AddAllAppsAsTargetToRoleAsync*
  implements:
  - Okta.Sdk.IUsersClient.AddAllAppsAsTargetToRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(String, String, String, CancellationToken)
  nameWithType: UsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 703
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(string userId, string roleId, string appName, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: roleId
      type: System.String
    - id: appName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(userId As String, roleId As String, appName As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.AddApplicationTargetToAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.AddApplicationTargetToAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: AddApplicationTargetToAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: AddApplicationTargetToAdminRoleForUserAsync(String, String, String, CancellationToken)
  nameWithType: UsersClient.AddApplicationTargetToAdminRoleForUserAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.AddApplicationTargetToAdminRoleForUserAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddApplicationTargetToAdminRoleForUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 718
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task AddApplicationTargetToAdminRoleForUserAsync(string userId, string roleId, string appName, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: roleId
      type: System.String
    - id: appName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddApplicationTargetToAdminRoleForUserAsync(userId As String, roleId As String, appName As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.AddApplicationTargetToAdminRoleForUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.AddApplicationTargetToAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RemoveApplicationTargetFromAdministratorRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: RemoveApplicationTargetFromAdministratorRoleForUserAsync(String, String, String, String, CancellationToken)
  nameWithType: UsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync(String, String, String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync(System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveApplicationTargetFromAdministratorRoleForUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 733
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RemoveApplicationTargetFromAdministratorRoleForUserAsync(string userId, string roleId, string appName, string applicationId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: roleId
      type: System.String
    - id: appName
      type: System.String
    - id: applicationId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveApplicationTargetFromAdministratorRoleForUserAsync(userId As String, roleId As String, appName As String, applicationId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.AddApplicationTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.AddApplicationTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: AddApplicationTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: AddApplicationTargetToAppAdminRoleForUserAsync(String, String, String, String, CancellationToken)
  nameWithType: UsersClient.AddApplicationTargetToAppAdminRoleForUserAsync(String, String, String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.AddApplicationTargetToAppAdminRoleForUserAsync(System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddApplicationTargetToAppAdminRoleForUserAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 749
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task AddApplicationTargetToAppAdminRoleForUserAsync(string userId, string roleId, string appName, string applicationId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: roleId
      type: System.String
    - id: appName
      type: System.String
    - id: applicationId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddApplicationTargetToAppAdminRoleForUserAsync(userId As String, roleId As String, appName As String, applicationId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.AddApplicationTargetToAppAdminRoleForUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.AddApplicationTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ListGroupTargetsForRole(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.UsersClient.ListGroupTargetsForRole(System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListGroupTargetsForRole(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ListGroupTargetsForRole(String, String, String, Nullable<Int32>)
  nameWithType: UsersClient.ListGroupTargetsForRole(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.UsersClient.ListGroupTargetsForRole(System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListGroupTargetsForRole
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 765
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IGroup> ListGroupTargetsForRole(string userId, string roleId, string after = null, int? limit = 20)
    parameters:
    - id: userId
      type: System.String
    - id: roleId
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IGroup}
    content.vb: Public Function ListGroupTargetsForRole(userId As String, roleId As String, after As String = Nothing, limit As Integer? = 20) As ICollectionClient(Of IGroup)
  overload: Okta.Sdk.UsersClient.ListGroupTargetsForRole*
  implements:
  - Okta.Sdk.IUsersClient.ListGroupTargetsForRole(System.String,System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: UsersClient.ListGroupTargetsForRole(String, String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.ListGroupTargetsForRole(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListGroupTargetsForRole(String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.UsersClient.RemoveGroupTargetFromRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.RemoveGroupTargetFromRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RemoveGroupTargetFromRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: RemoveGroupTargetFromRoleAsync(String, String, String, CancellationToken)
  nameWithType: UsersClient.RemoveGroupTargetFromRoleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.RemoveGroupTargetFromRoleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveGroupTargetFromRoleAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 784
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RemoveGroupTargetFromRoleAsync(string userId, string roleId, string groupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: roleId
      type: System.String
    - id: groupId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveGroupTargetFromRoleAsync(userId As String, roleId As String, groupId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.RemoveGroupTargetFromRoleAsync*
  implements:
  - Okta.Sdk.IUsersClient.RemoveGroupTargetFromRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.AddGroupTargetToRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.AddGroupTargetToRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: AddGroupTargetToRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: AddGroupTargetToRoleAsync(String, String, String, CancellationToken)
  nameWithType: UsersClient.AddGroupTargetToRoleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.AddGroupTargetToRoleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddGroupTargetToRoleAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 799
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task AddGroupTargetToRoleAsync(string userId, string roleId, string groupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: roleId
      type: System.String
    - id: groupId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddGroupTargetToRoleAsync(userId As String, roleId As String, groupId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.AddGroupTargetToRoleAsync*
  implements:
  - Okta.Sdk.IUsersClient.AddGroupTargetToRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ClearUserSessionsAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.ClearUserSessionsAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: ClearUserSessionsAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ClearUserSessionsAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: UsersClient.ClearUserSessionsAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.UsersClient.ClearUserSessionsAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ClearUserSessionsAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 814
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task ClearUserSessionsAsync(string userId, bool? oauthTokens = false, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: oauthTokens
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ClearUserSessionsAsync(userId As String, oauthTokens As Boolean? = False, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.ClearUserSessionsAsync*
  implements:
  - Okta.Sdk.IUsersClient.ClearUserSessionsAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: UsersClient.ClearUserSessionsAsync(String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.UsersClient.ClearUserSessionsAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ClearUserSessionsAsync(String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.UsersClient.ListUserSubscriptions(System.String)
  commentId: M:Okta.Sdk.UsersClient.ListUserSubscriptions(System.String)
  id: ListUserSubscriptions(System.String)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ListUserSubscriptions(String)
  nameWithType: UsersClient.ListUserSubscriptions(String)
  fullName: Okta.Sdk.UsersClient.ListUserSubscriptions(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListUserSubscriptions
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 831
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<ISubscription> ListUserSubscriptions(string userId)
    parameters:
    - id: userId
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.ISubscription}
    content.vb: Public Function ListUserSubscriptions(userId As String) As ICollectionClient(Of ISubscription)
  overload: Okta.Sdk.UsersClient.ListUserSubscriptions*
  implements:
  - Okta.Sdk.IUsersClient.ListUserSubscriptions(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: GetUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  nameWithType: UsersClient.GetUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.GetUserSubscriptionByNotificationTypeAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/UsersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetUserSubscriptionByNotificationTypeAsync
    path: ../src/Okta.Sdk/Generated/UsersClient.Generated.cs
    startLine: 844
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<ISubscription> GetUserSubscriptionByNotificationTypeAsync(string userId, string notificationType, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: notificationType
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.ISubscription}
    content.vb: Public Function GetUserSubscriptionByNotificationTypeAsync(userId As String, notificationType As String, cancellationToken As CancellationToken = Nothing) As Task(Of ISubscription)
  overload: Okta.Sdk.UsersClient.GetUserSubscriptionByNotificationTypeAsync*
  implements:
  - Okta.Sdk.IUsersClient.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.GetAsyncEnumerator(System.Threading.CancellationToken)
  id: GetAsyncEnumerator(System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: UsersClient.GetAsyncEnumerator(CancellationToken)
  fullName: Okta.Sdk.UsersClient.GetAsyncEnumerator(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAsyncEnumerator
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 18
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IAsyncEnumerator<IUser> GetAsyncEnumerator(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Collections.Generic.IAsyncEnumerator{Okta.Sdk.IUser}
    content.vb: Public Function GetAsyncEnumerator(cancellationToken As CancellationToken = Nothing) As IAsyncEnumerator(Of IUser)
  overload: Okta.Sdk.UsersClient.GetAsyncEnumerator*
  implements:
  - System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IUser}.GetAsyncEnumerator(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithoutCredentialsOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithoutCredentialsOptions,System.Threading.CancellationToken)
  id: CreateUserAsync(Okta.Sdk.CreateUserWithoutCredentialsOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: CreateUserAsync(CreateUserWithoutCredentialsOptions, CancellationToken)
  nameWithType: UsersClient.CreateUserAsync(CreateUserWithoutCredentialsOptions, CancellationToken)
  fullName: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithoutCredentialsOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateUserAsync
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 21
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUser> CreateUserAsync(CreateUserWithoutCredentialsOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: options
      type: Okta.Sdk.CreateUserWithoutCredentialsOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUser}
    content.vb: Public Function CreateUserAsync(options As CreateUserWithoutCredentialsOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUser)
  overload: Okta.Sdk.UsersClient.CreateUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithoutCredentialsOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithImportedHashedPasswordOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithImportedHashedPasswordOptions,System.Threading.CancellationToken)
  id: CreateUserAsync(Okta.Sdk.CreateUserWithImportedHashedPasswordOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: CreateUserAsync(CreateUserWithImportedHashedPasswordOptions, CancellationToken)
  nameWithType: UsersClient.CreateUserAsync(CreateUserWithImportedHashedPasswordOptions, CancellationToken)
  fullName: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithImportedHashedPasswordOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateUserAsync
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 37
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUser> CreateUserAsync(CreateUserWithImportedHashedPasswordOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: options
      type: Okta.Sdk.CreateUserWithImportedHashedPasswordOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUser}
    content.vb: Public Function CreateUserAsync(options As CreateUserWithImportedHashedPasswordOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUser)
  overload: Okta.Sdk.UsersClient.CreateUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithImportedHashedPasswordOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions,System.Threading.CancellationToken)
  id: CreateUserAsync(Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: CreateUserAsync(CreateUserWithPasswordImportInlineHookOptions, CancellationToken)
  nameWithType: UsersClient.CreateUserAsync(CreateUserWithPasswordImportInlineHookOptions, CancellationToken)
  fullName: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateUserAsync
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 60
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUser> CreateUserAsync(CreateUserWithPasswordImportInlineHookOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: options
      type: Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUser}
    content.vb: Public Function CreateUserAsync(options As CreateUserWithPasswordImportInlineHookOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUser)
  overload: Okta.Sdk.UsersClient.CreateUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithRecoveryQuestionOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithRecoveryQuestionOptions,System.Threading.CancellationToken)
  id: CreateUserAsync(Okta.Sdk.CreateUserWithRecoveryQuestionOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: CreateUserAsync(CreateUserWithRecoveryQuestionOptions, CancellationToken)
  nameWithType: UsersClient.CreateUserAsync(CreateUserWithRecoveryQuestionOptions, CancellationToken)
  fullName: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithRecoveryQuestionOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateUserAsync
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 80
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUser> CreateUserAsync(CreateUserWithRecoveryQuestionOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: options
      type: Okta.Sdk.CreateUserWithRecoveryQuestionOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUser}
    content.vb: Public Function CreateUserAsync(options As CreateUserWithRecoveryQuestionOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUser)
  overload: Okta.Sdk.UsersClient.CreateUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithRecoveryQuestionOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions,System.Threading.CancellationToken)
  id: CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: CreateUserAsync(CreateUserWithPasswordOptions, CancellationToken)
  nameWithType: UsersClient.CreateUserAsync(CreateUserWithPasswordOptions, CancellationToken)
  fullName: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateUserAsync
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 104
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUser> CreateUserAsync(CreateUserWithPasswordOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: options
      type: Okta.Sdk.CreateUserWithPasswordOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUser}
    content.vb: Public Function CreateUserAsync(options As CreateUserWithPasswordOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUser)
  overload: Okta.Sdk.UsersClient.CreateUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithProviderOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithProviderOptions,System.Threading.CancellationToken)
  id: CreateUserAsync(Okta.Sdk.CreateUserWithProviderOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: CreateUserAsync(CreateUserWithProviderOptions, CancellationToken)
  nameWithType: UsersClient.CreateUserAsync(CreateUserWithProviderOptions, CancellationToken)
  fullName: Okta.Sdk.UsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithProviderOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateUserAsync
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 134
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUser> CreateUserAsync(CreateUserWithProviderOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: options
      type: Okta.Sdk.CreateUserWithProviderOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUser}
    content.vb: Public Function CreateUserAsync(options As CreateUserWithProviderOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUser)
  overload: Okta.Sdk.UsersClient.CreateUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithProviderOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ChangePasswordAsync(System.String,Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.ChangePasswordAsync(System.String,Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
  id: ChangePasswordAsync(System.String,Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ChangePasswordAsync(String, ChangePasswordOptions, CancellationToken)
  nameWithType: UsersClient.ChangePasswordAsync(String, ChangePasswordOptions, CancellationToken)
  fullName: Okta.Sdk.UsersClient.ChangePasswordAsync(System.String, Okta.Sdk.ChangePasswordOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ChangePasswordAsync
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 158
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserCredentials> ChangePasswordAsync(string userId, ChangePasswordOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: options
      type: Okta.Sdk.ChangePasswordOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserCredentials}
    content.vb: Public Function ChangePasswordAsync(userId As String, options As ChangePasswordOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IUserCredentials)
  overload: Okta.Sdk.UsersClient.ChangePasswordAsync*
  implements:
  - Okta.Sdk.IUsersClient.ChangePasswordAsync(System.String,Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Threading.CancellationToken)
  id: ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ChangePasswordAsync(IChangePasswordRequest, String, CancellationToken)
  nameWithType: UsersClient.ChangePasswordAsync(IChangePasswordRequest, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ChangePasswordAsync
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 178
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUserCredentials> ChangePasswordAsync(IChangePasswordRequest changePasswordRequest, string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: changePasswordRequest
      type: Okta.Sdk.IChangePasswordRequest
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserCredentials}
    content.vb: Public Function ChangePasswordAsync(changePasswordRequest As IChangePasswordRequest, userId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IUserCredentials)
  overload: Okta.Sdk.UsersClient.ChangePasswordAsync*
  implements:
  - Okta.Sdk.IUsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.ChangeRecoveryQuestionAsync(System.String,Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.ChangeRecoveryQuestionAsync(System.String,Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
  id: ChangeRecoveryQuestionAsync(System.String,Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: ChangeRecoveryQuestionAsync(String, ChangeRecoveryQuestionOptions, CancellationToken)
  nameWithType: UsersClient.ChangeRecoveryQuestionAsync(String, ChangeRecoveryQuestionOptions, CancellationToken)
  fullName: Okta.Sdk.UsersClient.ChangeRecoveryQuestionAsync(System.String, Okta.Sdk.ChangeRecoveryQuestionOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ChangeRecoveryQuestionAsync
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 182
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task ChangeRecoveryQuestionAsync(string userId, ChangeRecoveryQuestionOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: options
      type: Okta.Sdk.ChangeRecoveryQuestionOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ChangeRecoveryQuestionAsync(userId As String, options As ChangeRecoveryQuestionOptions, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.ChangeRecoveryQuestionAsync*
  implements:
  - Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync(System.String,Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync(System.String,System.Threading.CancellationToken)
  id: DeactivateOrDeleteUserAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: DeactivateOrDeleteUserAsync(String, CancellationToken)
  nameWithType: UsersClient.DeactivateOrDeleteUserAsync(String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateOrDeleteUserAsync
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 203
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task DeactivateOrDeleteUserAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeactivateOrDeleteUserAsync(userId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync(System.String)
  commentId: M:Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync(System.String)
  id: DeactivateOrDeleteUserAsync(System.String)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: DeactivateOrDeleteUserAsync(String)
  nameWithType: UsersClient.DeactivateOrDeleteUserAsync(String)
  fullName: Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateOrDeleteUserAsync
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 207
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task DeactivateOrDeleteUserAsync(string userId)
    parameters:
    - id: userId
      type: System.String
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeactivateOrDeleteUserAsync(userId As String) As Task
  overload: Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Threading.CancellationToken)
  id: UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: UpdateUserAsync(IUser, String, CancellationToken)
  nameWithType: UsersClient.UpdateUserAsync(IUser, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.UpdateUserAsync(Okta.Sdk.IUser, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateUserAsync
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 211
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IUser> UpdateUserAsync(IUser user, string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: user
      type: Okta.Sdk.IUser
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUser}
    content.vb: Public Function UpdateUserAsync(user As IUser, userId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IUser)
  overload: Okta.Sdk.UsersClient.UpdateUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.UsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.UsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.String,System.Threading.CancellationToken)
  id: AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.UsersClient
  langs:
  - csharp
  - vb
  name: AssignRoleToUserAsync(IAssignRoleRequest, String, String, CancellationToken)
  nameWithType: UsersClient.AssignRoleToUserAsync(IAssignRoleRequest, String, String, CancellationToken)
  fullName: Okta.Sdk.UsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/UsersClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AssignRoleToUserAsync
    path: ../src/Okta.Sdk/UsersClient.cs
    startLine: 215
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IRole> AssignRoleToUserAsync(IAssignRoleRequest assignRoleRequest, string userId, string disableNotifications, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: assignRoleRequest
      type: Okta.Sdk.IAssignRoleRequest
    - id: userId
      type: System.String
    - id: disableNotifications
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IRole}
    content.vb: Public Function AssignRoleToUserAsync(assignRoleRequest As IAssignRoleRequest, userId As String, disableNotifications As String, cancellationToken As CancellationToken = Nothing) As Task(Of IRole)
  overload: Okta.Sdk.UsersClient.AssignRoleToUserAsync*
  implements:
  - Okta.Sdk.IUsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk.User
  commentId: T:Okta.Sdk.User
  name: User
  nameWithType: User
  fullName: Okta.Sdk.User
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Okta.Sdk.OktaClient
  commentId: T:Okta.Sdk.OktaClient
  parent: Okta.Sdk
  name: OktaClient
  nameWithType: OktaClient
  fullName: Okta.Sdk.OktaClient
- uid: Okta.Sdk.IOktaClient
  commentId: T:Okta.Sdk.IOktaClient
  parent: Okta.Sdk
  name: IOktaClient
  nameWithType: IOktaClient
  fullName: Okta.Sdk.IOktaClient
- uid: Okta.Sdk.IUsersClient
  commentId: T:Okta.Sdk.IUsersClient
  parent: Okta.Sdk
  name: IUsersClient
  nameWithType: IUsersClient
  fullName: Okta.Sdk.IUsersClient
- uid: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IUser}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IUser}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<IUser>
  nameWithType: IAsyncEnumerable<IUser>
  fullName: System.Collections.Generic.IAsyncEnumerable<Okta.Sdk.IUser>
  nameWithType.vb: IAsyncEnumerable(Of IUser)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Okta.Sdk.IUser)
  name.vb: IAsyncEnumerable(Of IUser)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.Configuration
  commentId: P:Okta.Sdk.OktaClient.Configuration
  parent: Okta.Sdk.OktaClient
  name: Configuration
  nameWithType: OktaClient.Configuration
  fullName: Okta.Sdk.OktaClient.Configuration
- uid: Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  commentId: M:Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  parent: Okta.Sdk.OktaClient
  name: CreateScoped(RequestContext)
  nameWithType: OktaClient.CreateScoped(RequestContext)
  fullName: Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
    name: CreateScoped
    nameWithType: OktaClient.CreateScoped
    fullName: Okta.Sdk.OktaClient.CreateScoped
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
    name: CreateScoped
    nameWithType: OktaClient.CreateScoped
    fullName: Okta.Sdk.OktaClient.CreateScoped
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.Brands
  commentId: P:Okta.Sdk.OktaClient.Brands
  parent: Okta.Sdk.OktaClient
  name: Brands
  nameWithType: OktaClient.Brands
  fullName: Okta.Sdk.OktaClient.Brands
- uid: Okta.Sdk.OktaClient.GroupSchemas
  commentId: P:Okta.Sdk.OktaClient.GroupSchemas
  parent: Okta.Sdk.OktaClient
  name: GroupSchemas
  nameWithType: OktaClient.GroupSchemas
  fullName: Okta.Sdk.OktaClient.GroupSchemas
- uid: Okta.Sdk.OktaClient.Authenticators
  commentId: P:Okta.Sdk.OktaClient.Authenticators
  parent: Okta.Sdk.OktaClient
  name: Authenticators
  nameWithType: OktaClient.Authenticators
  fullName: Okta.Sdk.OktaClient.Authenticators
- uid: Okta.Sdk.OktaClient.Orgs
  commentId: P:Okta.Sdk.OktaClient.Orgs
  parent: Okta.Sdk.OktaClient
  name: Orgs
  nameWithType: OktaClient.Orgs
  fullName: Okta.Sdk.OktaClient.Orgs
- uid: Okta.Sdk.OktaClient.UserTypes
  commentId: P:Okta.Sdk.OktaClient.UserTypes
  parent: Okta.Sdk.OktaClient
  name: UserTypes
  nameWithType: OktaClient.UserTypes
  fullName: Okta.Sdk.OktaClient.UserTypes
- uid: Okta.Sdk.OktaClient.Users
  commentId: P:Okta.Sdk.OktaClient.Users
  parent: Okta.Sdk.OktaClient
  name: Users
  nameWithType: OktaClient.Users
  fullName: Okta.Sdk.OktaClient.Users
- uid: Okta.Sdk.OktaClient.UserFactors
  commentId: P:Okta.Sdk.OktaClient.UserFactors
  parent: Okta.Sdk.OktaClient
  name: UserFactors
  nameWithType: OktaClient.UserFactors
  fullName: Okta.Sdk.OktaClient.UserFactors
- uid: Okta.Sdk.OktaClient.Groups
  commentId: P:Okta.Sdk.OktaClient.Groups
  parent: Okta.Sdk.OktaClient
  name: Groups
  nameWithType: OktaClient.Groups
  fullName: Okta.Sdk.OktaClient.Groups
- uid: Okta.Sdk.OktaClient.Applications
  commentId: P:Okta.Sdk.OktaClient.Applications
  parent: Okta.Sdk.OktaClient
  name: Applications
  nameWithType: OktaClient.Applications
  fullName: Okta.Sdk.OktaClient.Applications
- uid: Okta.Sdk.OktaClient.Sessions
  commentId: P:Okta.Sdk.OktaClient.Sessions
  parent: Okta.Sdk.OktaClient
  name: Sessions
  nameWithType: OktaClient.Sessions
  fullName: Okta.Sdk.OktaClient.Sessions
- uid: Okta.Sdk.OktaClient.AuthorizationServers
  commentId: P:Okta.Sdk.OktaClient.AuthorizationServers
  parent: Okta.Sdk.OktaClient
  name: AuthorizationServers
  nameWithType: OktaClient.AuthorizationServers
  fullName: Okta.Sdk.OktaClient.AuthorizationServers
- uid: Okta.Sdk.OktaClient.Logs
  commentId: P:Okta.Sdk.OktaClient.Logs
  parent: Okta.Sdk.OktaClient
  name: Logs
  nameWithType: OktaClient.Logs
  fullName: Okta.Sdk.OktaClient.Logs
- uid: Okta.Sdk.OktaClient.Policies
  commentId: P:Okta.Sdk.OktaClient.Policies
  parent: Okta.Sdk.OktaClient
  name: Policies
  nameWithType: OktaClient.Policies
  fullName: Okta.Sdk.OktaClient.Policies
- uid: Okta.Sdk.OktaClient.EventHooks
  commentId: P:Okta.Sdk.OktaClient.EventHooks
  parent: Okta.Sdk.OktaClient
  name: EventHooks
  nameWithType: OktaClient.EventHooks
  fullName: Okta.Sdk.OktaClient.EventHooks
- uid: Okta.Sdk.OktaClient.InlineHooks
  commentId: P:Okta.Sdk.OktaClient.InlineHooks
  parent: Okta.Sdk.OktaClient
  name: InlineHooks
  nameWithType: OktaClient.InlineHooks
  fullName: Okta.Sdk.OktaClient.InlineHooks
- uid: Okta.Sdk.OktaClient.LinkedObjects
  commentId: P:Okta.Sdk.OktaClient.LinkedObjects
  parent: Okta.Sdk.OktaClient
  name: LinkedObjects
  nameWithType: OktaClient.LinkedObjects
  fullName: Okta.Sdk.OktaClient.LinkedObjects
- uid: Okta.Sdk.OktaClient.TrustedOrigins
  commentId: P:Okta.Sdk.OktaClient.TrustedOrigins
  parent: Okta.Sdk.OktaClient
  name: TrustedOrigins
  nameWithType: OktaClient.TrustedOrigins
  fullName: Okta.Sdk.OktaClient.TrustedOrigins
- uid: Okta.Sdk.OktaClient.Features
  commentId: P:Okta.Sdk.OktaClient.Features
  parent: Okta.Sdk.OktaClient
  name: Features
  nameWithType: OktaClient.Features
  fullName: Okta.Sdk.OktaClient.Features
- uid: Okta.Sdk.OktaClient.Templates
  commentId: P:Okta.Sdk.OktaClient.Templates
  parent: Okta.Sdk.OktaClient
  name: Templates
  nameWithType: OktaClient.Templates
  fullName: Okta.Sdk.OktaClient.Templates
- uid: Okta.Sdk.OktaClient.NetworkZones
  commentId: P:Okta.Sdk.OktaClient.NetworkZones
  parent: Okta.Sdk.OktaClient
  name: NetworkZones
  nameWithType: OktaClient.NetworkZones
  fullName: Okta.Sdk.OktaClient.NetworkZones
- uid: Okta.Sdk.OktaClient.Domains
  commentId: P:Okta.Sdk.OktaClient.Domains
  parent: Okta.Sdk.OktaClient
  name: Domains
  nameWithType: OktaClient.Domains
  fullName: Okta.Sdk.OktaClient.Domains
- uid: Okta.Sdk.OktaClient.ProfileMappings
  commentId: P:Okta.Sdk.OktaClient.ProfileMappings
  parent: Okta.Sdk.OktaClient
  name: ProfileMappings
  nameWithType: OktaClient.ProfileMappings
  fullName: Okta.Sdk.OktaClient.ProfileMappings
- uid: Okta.Sdk.OktaClient.ThreatInsights
  commentId: P:Okta.Sdk.OktaClient.ThreatInsights
  parent: Okta.Sdk.OktaClient
  name: ThreatInsights
  nameWithType: OktaClient.ThreatInsights
  fullName: Okta.Sdk.OktaClient.ThreatInsights
- uid: Okta.Sdk.OktaClient.IdentityProviders
  commentId: P:Okta.Sdk.OktaClient.IdentityProviders
  parent: Okta.Sdk.OktaClient
  name: IdentityProviders
  nameWithType: OktaClient.IdentityProviders
  fullName: Okta.Sdk.OktaClient.IdentityProviders
- uid: Okta.Sdk.OktaClient.UserSchemas
  commentId: P:Okta.Sdk.OktaClient.UserSchemas
  parent: Okta.Sdk.OktaClient
  name: UserSchemas
  nameWithType: OktaClient.UserSchemas
  fullName: Okta.Sdk.OktaClient.UserSchemas
- uid: Okta.Sdk.OktaClient.Subscriptions
  commentId: P:Okta.Sdk.OktaClient.Subscriptions
  parent: Okta.Sdk.OktaClient
  name: Subscriptions
  nameWithType: OktaClient.Subscriptions
  fullName: Okta.Sdk.OktaClient.Subscriptions
- uid: Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
  commentId: M:Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
  parent: Okta.Sdk.OktaClient
  name: GetCollectionClient<T>(HttpRequest)
  nameWithType: OktaClient.GetCollectionClient<T>(HttpRequest)
  fullName: Okta.Sdk.OktaClient.GetCollectionClient<T>(Okta.Sdk.HttpRequest)
  nameWithType.vb: OktaClient.GetCollectionClient(Of T)(HttpRequest)
  fullName.vb: Okta.Sdk.OktaClient.GetCollectionClient(Of T)(Okta.Sdk.HttpRequest)
  name.vb: GetCollectionClient(Of T)(HttpRequest)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
    name: GetCollectionClient<T>
    nameWithType: OktaClient.GetCollectionClient<T>
    fullName: Okta.Sdk.OktaClient.GetCollectionClient<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
    name: GetCollectionClient(Of T)
    nameWithType: OktaClient.GetCollectionClient(Of T)
    fullName: Okta.Sdk.OktaClient.GetCollectionClient(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: GetAsync<T>(String, CancellationToken)
  nameWithType: OktaClient.GetAsync<T>(String, CancellationToken)
  fullName: Okta.Sdk.OktaClient.GetAsync<T>(System.String, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.GetAsync(Of T)(String, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.GetAsync(Of T)(System.String, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(String, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
    name: GetAsync<T>
    nameWithType: OktaClient.GetAsync<T>
    fullName: Okta.Sdk.OktaClient.GetAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
    name: GetAsync(Of T)
    nameWithType: OktaClient.GetAsync(Of T)
    fullName: Okta.Sdk.OktaClient.GetAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: GetAsync<T>(HttpRequest, CancellationToken)
  nameWithType: OktaClient.GetAsync<T>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.GetAsync<T>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.GetAsync(Of T)(HttpRequest, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.GetAsync(Of T)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(HttpRequest, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: GetAsync<T>
    nameWithType: OktaClient.GetAsync<T>
    fullName: Okta.Sdk.OktaClient.GetAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: GetAsync(Of T)
    nameWithType: OktaClient.GetAsync(Of T)
    fullName: Okta.Sdk.OktaClient.GetAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetCollection``1(System.String)
  commentId: M:Okta.Sdk.OktaClient.GetCollection``1(System.String)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: GetCollection<T>(String)
  nameWithType: OktaClient.GetCollection<T>(String)
  fullName: Okta.Sdk.OktaClient.GetCollection<T>(System.String)
  nameWithType.vb: OktaClient.GetCollection(Of T)(String)
  fullName.vb: Okta.Sdk.OktaClient.GetCollection(Of T)(System.String)
  name.vb: GetCollection(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetCollection``1(System.String)
    name: GetCollection<T>
    nameWithType: OktaClient.GetCollection<T>
    fullName: Okta.Sdk.OktaClient.GetCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetCollection``1(System.String)
    name: GetCollection(Of T)
    nameWithType: OktaClient.GetCollection(Of T)
    fullName: Okta.Sdk.OktaClient.GetCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  commentId: M:Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  parent: Okta.Sdk.OktaClient
  name: GetCollection<T>(HttpRequest)
  nameWithType: OktaClient.GetCollection<T>(HttpRequest)
  fullName: Okta.Sdk.OktaClient.GetCollection<T>(Okta.Sdk.HttpRequest)
  nameWithType.vb: OktaClient.GetCollection(Of T)(HttpRequest)
  fullName.vb: Okta.Sdk.OktaClient.GetCollection(Of T)(Okta.Sdk.HttpRequest)
  name.vb: GetCollection(Of T)(HttpRequest)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
    name: GetCollection<T>
    nameWithType: OktaClient.GetCollection<T>
    fullName: Okta.Sdk.OktaClient.GetCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
    name: GetCollection(Of T)
    nameWithType: OktaClient.GetCollection(Of T)
    fullName: Okta.Sdk.OktaClient.GetCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PostAsync(String, Object, CancellationToken)
  nameWithType: OktaClient.PostAsync(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync(System.String, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: OktaClient.PostAsync
    fullName: Okta.Sdk.OktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: OktaClient.PostAsync
    fullName: Okta.Sdk.OktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PostAsync<TResponse>(String, Object, CancellationToken)
  nameWithType: OktaClient.PostAsync<TResponse>(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync<TResponse>(System.String, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PostAsync(Of TResponse)(String, Object, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.PostAsync(Of TResponse)(System.String, System.Object, System.Threading.CancellationToken)
  name.vb: PostAsync(Of TResponse)(String, Object, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync<TResponse>
    nameWithType: OktaClient.PostAsync<TResponse>
    fullName: Okta.Sdk.OktaClient.PostAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync(Of TResponse)
    nameWithType: OktaClient.PostAsync(Of TResponse)
    fullName: Okta.Sdk.OktaClient.PostAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PostAsync(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PostAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: OktaClient.PostAsync
    fullName: Okta.Sdk.OktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: OktaClient.PostAsync
    fullName: Okta.Sdk.OktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PostAsync<TResponse>(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PostAsync<TResponse>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync<TResponse>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PostAsync(Of TResponse)(HttpRequest, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.PostAsync(Of TResponse)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: PostAsync(Of TResponse)(HttpRequest, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync<TResponse>
    nameWithType: OktaClient.PostAsync<TResponse>
    fullName: Okta.Sdk.OktaClient.PostAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync(Of TResponse)
    nameWithType: OktaClient.PostAsync(Of TResponse)
    fullName: Okta.Sdk.OktaClient.PostAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PutAsync(String, Object, CancellationToken)
  nameWithType: OktaClient.PutAsync(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync(System.String, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: OktaClient.PutAsync
    fullName: Okta.Sdk.OktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: OktaClient.PutAsync
    fullName: Okta.Sdk.OktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PutAsync<TResponse>(String, Object, CancellationToken)
  nameWithType: OktaClient.PutAsync<TResponse>(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync<TResponse>(System.String, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PutAsync(Of TResponse)(String, Object, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.PutAsync(Of TResponse)(System.String, System.Object, System.Threading.CancellationToken)
  name.vb: PutAsync(Of TResponse)(String, Object, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync<TResponse>
    nameWithType: OktaClient.PutAsync<TResponse>
    fullName: Okta.Sdk.OktaClient.PutAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync(Of TResponse)
    nameWithType: OktaClient.PutAsync(Of TResponse)
    fullName: Okta.Sdk.OktaClient.PutAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PutAsync(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PutAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: OktaClient.PutAsync
    fullName: Okta.Sdk.OktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: OktaClient.PutAsync
    fullName: Okta.Sdk.OktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PutAsync<TResponse>(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PutAsync<TResponse>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync<TResponse>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PutAsync(Of TResponse)(HttpRequest, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.PutAsync(Of TResponse)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: PutAsync(Of TResponse)(HttpRequest, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync<TResponse>
    nameWithType: OktaClient.PutAsync<TResponse>
    fullName: Okta.Sdk.OktaClient.PutAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync(Of TResponse)
    nameWithType: OktaClient.PutAsync(Of TResponse)
    fullName: Okta.Sdk.OktaClient.PutAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: DeleteAsync(String, CancellationToken)
  nameWithType: OktaClient.DeleteAsync(String, CancellationToken)
  fullName: Okta.Sdk.OktaClient.DeleteAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: OktaClient.DeleteAsync
    fullName: Okta.Sdk.OktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: OktaClient.DeleteAsync
    fullName: Okta.Sdk.OktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: DeleteAsync(HttpRequest, CancellationToken)
  nameWithType: OktaClient.DeleteAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: OktaClient.DeleteAsync
    fullName: Okta.Sdk.OktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: OktaClient.DeleteAsync
    fullName: Okta.Sdk.OktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.UsersClient.ListUsers*
  commentId: Overload:Okta.Sdk.UsersClient.ListUsers
  name: ListUsers
  nameWithType: UsersClient.ListUsers
  fullName: Okta.Sdk.UsersClient.ListUsers
- uid: Okta.Sdk.IUsersClient.ListUsers(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)
  commentId: M:Okta.Sdk.IUsersClient.ListUsers(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ListUsers(String, String, Nullable<Int32>, String, String, String, String)
  nameWithType: IUsersClient.ListUsers(String, String, Nullable<Int32>, String, String, String, String)
  fullName: Okta.Sdk.IUsersClient.ListUsers(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, System.String, System.String)
  nameWithType.vb: IUsersClient.ListUsers(String, String, Nullable(Of Int32), String, String, String, String)
  fullName.vb: Okta.Sdk.IUsersClient.ListUsers(System.String, System.String, System.Nullable(Of System.Int32), System.String, System.String, System.String, System.String)
  name.vb: ListUsers(String, String, Nullable(Of Int32), String, String, String, String)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ListUsers(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)
    name: ListUsers
    nameWithType: IUsersClient.ListUsers
    fullName: Okta.Sdk.IUsersClient.ListUsers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ListUsers(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)
    name: ListUsers
    nameWithType: IUsersClient.ListUsers
    fullName: Okta.Sdk.IUsersClient.ListUsers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IUser}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IUser}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IUser>
  nameWithType: ICollectionClient<IUser>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IUser>
  nameWithType.vb: ICollectionClient(Of IUser)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IUser)
  name.vb: ICollectionClient(Of IUser)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.CreateUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.CreateUserAsync
  name: CreateUserAsync
  nameWithType: UsersClient.CreateUserAsync
  fullName: Okta.Sdk.UsersClient.CreateUserAsync
- uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.ICreateUserRequest,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Okta.Sdk.UserNextLogin,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.ICreateUserRequest,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Okta.Sdk.UserNextLogin,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: CreateUserAsync(ICreateUserRequest, Nullable<Boolean>, Nullable<Boolean>, UserNextLogin, CancellationToken)
  nameWithType: IUsersClient.CreateUserAsync(ICreateUserRequest, Nullable<Boolean>, Nullable<Boolean>, UserNextLogin, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.ICreateUserRequest, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, Okta.Sdk.UserNextLogin, System.Threading.CancellationToken)
  nameWithType.vb: IUsersClient.CreateUserAsync(ICreateUserRequest, Nullable(Of Boolean), Nullable(Of Boolean), UserNextLogin, CancellationToken)
  fullName.vb: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.ICreateUserRequest, System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), Okta.Sdk.UserNextLogin, System.Threading.CancellationToken)
  name.vb: CreateUserAsync(ICreateUserRequest, Nullable(Of Boolean), Nullable(Of Boolean), UserNextLogin, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.ICreateUserRequest,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Okta.Sdk.UserNextLogin,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.ICreateUserRequest
    name: ICreateUserRequest
    nameWithType: ICreateUserRequest
    fullName: Okta.Sdk.ICreateUserRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.UserNextLogin
    name: UserNextLogin
    nameWithType: UserNextLogin
    fullName: Okta.Sdk.UserNextLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.ICreateUserRequest,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Okta.Sdk.UserNextLogin,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.ICreateUserRequest
    name: ICreateUserRequest
    nameWithType: ICreateUserRequest
    fullName: Okta.Sdk.ICreateUserRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.UserNextLogin
    name: UserNextLogin
    nameWithType: UserNextLogin
    fullName: Okta.Sdk.UserNextLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICreateUserRequest
  commentId: T:Okta.Sdk.ICreateUserRequest
  parent: Okta.Sdk
  name: ICreateUserRequest
  nameWithType: ICreateUserRequest
  fullName: Okta.Sdk.ICreateUserRequest
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UserNextLogin
  commentId: T:Okta.Sdk.UserNextLogin
  parent: Okta.Sdk
  name: UserNextLogin
  nameWithType: UserNextLogin
  fullName: Okta.Sdk.UserNextLogin
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.IUser}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IUser}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IUser>
  nameWithType: Task<IUser>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IUser>
  nameWithType.vb: Task(Of IUser)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IUser)
  name.vb: Task(Of IUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.UsersClient.SetLinkedObjectForUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.SetLinkedObjectForUserAsync
  name: SetLinkedObjectForUserAsync
  nameWithType: UsersClient.SetLinkedObjectForUserAsync
  fullName: Okta.Sdk.UsersClient.SetLinkedObjectForUserAsync
- uid: Okta.Sdk.IUsersClient.SetLinkedObjectForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.SetLinkedObjectForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: SetLinkedObjectForUserAsync(String, String, String, CancellationToken)
  nameWithType: IUsersClient.SetLinkedObjectForUserAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.SetLinkedObjectForUserAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.SetLinkedObjectForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: SetLinkedObjectForUserAsync
    nameWithType: IUsersClient.SetLinkedObjectForUserAsync
    fullName: Okta.Sdk.IUsersClient.SetLinkedObjectForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.SetLinkedObjectForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: SetLinkedObjectForUserAsync
    nameWithType: IUsersClient.SetLinkedObjectForUserAsync
    fullName: Okta.Sdk.IUsersClient.SetLinkedObjectForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync
  name: DeactivateOrDeleteUserAsync
  nameWithType: UsersClient.DeactivateOrDeleteUserAsync
  fullName: Okta.Sdk.UsersClient.DeactivateOrDeleteUserAsync
- uid: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: DeactivateOrDeleteUserAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: IUsersClient.DeactivateOrDeleteUserAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUsersClient.DeactivateOrDeleteUserAsync(String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: DeactivateOrDeleteUserAsync(String, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: DeactivateOrDeleteUserAsync
    nameWithType: IUsersClient.DeactivateOrDeleteUserAsync
    fullName: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: DeactivateOrDeleteUserAsync
    nameWithType: IUsersClient.DeactivateOrDeleteUserAsync
    fullName: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.GetUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.GetUserAsync
  name: GetUserAsync
  nameWithType: UsersClient.GetUserAsync
  fullName: Okta.Sdk.UsersClient.GetUserAsync
- uid: Okta.Sdk.IUsersClient.GetUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.GetUserAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: GetUserAsync(String, CancellationToken)
  nameWithType: IUsersClient.GetUserAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.GetUserAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.GetUserAsync(System.String,System.Threading.CancellationToken)
    name: GetUserAsync
    nameWithType: IUsersClient.GetUserAsync
    fullName: Okta.Sdk.IUsersClient.GetUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.GetUserAsync(System.String,System.Threading.CancellationToken)
    name: GetUserAsync
    nameWithType: IUsersClient.GetUserAsync
    fullName: Okta.Sdk.IUsersClient.GetUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.PartialUpdateUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.PartialUpdateUserAsync
  name: PartialUpdateUserAsync
  nameWithType: UsersClient.PartialUpdateUserAsync
  fullName: Okta.Sdk.UsersClient.PartialUpdateUserAsync
- uid: Okta.Sdk.IUsersClient.PartialUpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.PartialUpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: PartialUpdateUserAsync(IUser, String, Nullable<Boolean>, CancellationToken)
  nameWithType: IUsersClient.PartialUpdateUserAsync(IUser, String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.PartialUpdateUserAsync(Okta.Sdk.IUser, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUsersClient.PartialUpdateUserAsync(IUser, String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUsersClient.PartialUpdateUserAsync(Okta.Sdk.IUser, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: PartialUpdateUserAsync(IUser, String, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.PartialUpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: PartialUpdateUserAsync
    nameWithType: IUsersClient.PartialUpdateUserAsync
    fullName: Okta.Sdk.IUsersClient.PartialUpdateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.PartialUpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: PartialUpdateUserAsync
    nameWithType: IUsersClient.PartialUpdateUserAsync
    fullName: Okta.Sdk.IUsersClient.PartialUpdateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IUser
  commentId: T:Okta.Sdk.IUser
  parent: Okta.Sdk
  name: IUser
  nameWithType: IUser
  fullName: Okta.Sdk.IUser
- uid: Okta.Sdk.UsersClient.UpdateUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.UpdateUserAsync
  name: UpdateUserAsync
  nameWithType: UsersClient.UpdateUserAsync
  fullName: Okta.Sdk.UsersClient.UpdateUserAsync
- uid: Okta.Sdk.IUsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: UpdateUserAsync(IUser, String, Nullable<Boolean>, CancellationToken)
  nameWithType: IUsersClient.UpdateUserAsync(IUser, String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.UpdateUserAsync(Okta.Sdk.IUser, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUsersClient.UpdateUserAsync(IUser, String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUsersClient.UpdateUserAsync(Okta.Sdk.IUser, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: UpdateUserAsync(IUser, String, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: UpdateUserAsync
    nameWithType: IUsersClient.UpdateUserAsync
    fullName: Okta.Sdk.IUsersClient.UpdateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: UpdateUserAsync
    nameWithType: IUsersClient.UpdateUserAsync
    fullName: Okta.Sdk.IUsersClient.UpdateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ListAppLinks*
  commentId: Overload:Okta.Sdk.UsersClient.ListAppLinks
  name: ListAppLinks
  nameWithType: UsersClient.ListAppLinks
  fullName: Okta.Sdk.UsersClient.ListAppLinks
- uid: Okta.Sdk.IUsersClient.ListAppLinks(System.String)
  commentId: M:Okta.Sdk.IUsersClient.ListAppLinks(System.String)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ListAppLinks(String)
  nameWithType: IUsersClient.ListAppLinks(String)
  fullName: Okta.Sdk.IUsersClient.ListAppLinks(System.String)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ListAppLinks(System.String)
    name: ListAppLinks
    nameWithType: IUsersClient.ListAppLinks
    fullName: Okta.Sdk.IUsersClient.ListAppLinks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ListAppLinks(System.String)
    name: ListAppLinks
    nameWithType: IUsersClient.ListAppLinks
    fullName: Okta.Sdk.IUsersClient.ListAppLinks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IAppLink}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IAppLink}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IAppLink>
  nameWithType: ICollectionClient<IAppLink>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IAppLink>
  nameWithType.vb: ICollectionClient(Of IAppLink)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IAppLink)
  name.vb: ICollectionClient(Of IAppLink)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAppLink
    name: IAppLink
    nameWithType: IAppLink
    fullName: Okta.Sdk.IAppLink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAppLink
    name: IAppLink
    nameWithType: IAppLink
    fullName: Okta.Sdk.IAppLink
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ListUserClients*
  commentId: Overload:Okta.Sdk.UsersClient.ListUserClients
  name: ListUserClients
  nameWithType: UsersClient.ListUserClients
  fullName: Okta.Sdk.UsersClient.ListUserClients
- uid: Okta.Sdk.IUsersClient.ListUserClients(System.String)
  commentId: M:Okta.Sdk.IUsersClient.ListUserClients(System.String)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ListUserClients(String)
  nameWithType: IUsersClient.ListUserClients(String)
  fullName: Okta.Sdk.IUsersClient.ListUserClients(System.String)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ListUserClients(System.String)
    name: ListUserClients
    nameWithType: IUsersClient.ListUserClients
    fullName: Okta.Sdk.IUsersClient.ListUserClients
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ListUserClients(System.String)
    name: ListUserClients
    nameWithType: IUsersClient.ListUserClients
    fullName: Okta.Sdk.IUsersClient.ListUserClients
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2Client>
  nameWithType: ICollectionClient<IOAuth2Client>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2Client>
  nameWithType.vb: ICollectionClient(Of IOAuth2Client)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2Client)
  name.vb: ICollectionClient(Of IOAuth2Client)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Client
    name: IOAuth2Client
    nameWithType: IOAuth2Client
    fullName: Okta.Sdk.IOAuth2Client
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Client
    name: IOAuth2Client
    nameWithType: IOAuth2Client
    fullName: Okta.Sdk.IOAuth2Client
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.RevokeGrantsForUserAndClientAsync*
  commentId: Overload:Okta.Sdk.UsersClient.RevokeGrantsForUserAndClientAsync
  name: RevokeGrantsForUserAndClientAsync
  nameWithType: UsersClient.RevokeGrantsForUserAndClientAsync
  fullName: Okta.Sdk.UsersClient.RevokeGrantsForUserAndClientAsync
- uid: Okta.Sdk.IUsersClient.RevokeGrantsForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.RevokeGrantsForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: RevokeGrantsForUserAndClientAsync(String, String, CancellationToken)
  nameWithType: IUsersClient.RevokeGrantsForUserAndClientAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.RevokeGrantsForUserAndClientAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.RevokeGrantsForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RevokeGrantsForUserAndClientAsync
    nameWithType: IUsersClient.RevokeGrantsForUserAndClientAsync
    fullName: Okta.Sdk.IUsersClient.RevokeGrantsForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.RevokeGrantsForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RevokeGrantsForUserAndClientAsync
    nameWithType: IUsersClient.RevokeGrantsForUserAndClientAsync
    fullName: Okta.Sdk.IUsersClient.RevokeGrantsForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ListGrantsForUserAndClient*
  commentId: Overload:Okta.Sdk.UsersClient.ListGrantsForUserAndClient
  name: ListGrantsForUserAndClient
  nameWithType: UsersClient.ListGrantsForUserAndClient
  fullName: Okta.Sdk.UsersClient.ListGrantsForUserAndClient
- uid: Okta.Sdk.IUsersClient.ListGrantsForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IUsersClient.ListGrantsForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ListGrantsForUserAndClient(String, String, String, String, Nullable<Int32>)
  nameWithType: IUsersClient.ListGrantsForUserAndClient(String, String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IUsersClient.ListGrantsForUserAndClient(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IUsersClient.ListGrantsForUserAndClient(String, String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IUsersClient.ListGrantsForUserAndClient(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListGrantsForUserAndClient(String, String, String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ListGrantsForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListGrantsForUserAndClient
    nameWithType: IUsersClient.ListGrantsForUserAndClient
    fullName: Okta.Sdk.IUsersClient.ListGrantsForUserAndClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ListGrantsForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListGrantsForUserAndClient
    nameWithType: IUsersClient.ListGrantsForUserAndClient
    fullName: Okta.Sdk.IUsersClient.ListGrantsForUserAndClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2ScopeConsentGrant}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2ScopeConsentGrant}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2ScopeConsentGrant>
  nameWithType: ICollectionClient<IOAuth2ScopeConsentGrant>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2ScopeConsentGrant>
  nameWithType.vb: ICollectionClient(Of IOAuth2ScopeConsentGrant)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2ScopeConsentGrant)
  name.vb: ICollectionClient(Of IOAuth2ScopeConsentGrant)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.RevokeTokensForUserAndClientAsync*
  commentId: Overload:Okta.Sdk.UsersClient.RevokeTokensForUserAndClientAsync
  name: RevokeTokensForUserAndClientAsync
  nameWithType: UsersClient.RevokeTokensForUserAndClientAsync
  fullName: Okta.Sdk.UsersClient.RevokeTokensForUserAndClientAsync
- uid: Okta.Sdk.IUsersClient.RevokeTokensForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.RevokeTokensForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: RevokeTokensForUserAndClientAsync(String, String, CancellationToken)
  nameWithType: IUsersClient.RevokeTokensForUserAndClientAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.RevokeTokensForUserAndClientAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.RevokeTokensForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RevokeTokensForUserAndClientAsync
    nameWithType: IUsersClient.RevokeTokensForUserAndClientAsync
    fullName: Okta.Sdk.IUsersClient.RevokeTokensForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.RevokeTokensForUserAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RevokeTokensForUserAndClientAsync
    nameWithType: IUsersClient.RevokeTokensForUserAndClientAsync
    fullName: Okta.Sdk.IUsersClient.RevokeTokensForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ListRefreshTokensForUserAndClient*
  commentId: Overload:Okta.Sdk.UsersClient.ListRefreshTokensForUserAndClient
  name: ListRefreshTokensForUserAndClient
  nameWithType: UsersClient.ListRefreshTokensForUserAndClient
  fullName: Okta.Sdk.UsersClient.ListRefreshTokensForUserAndClient
- uid: Okta.Sdk.IUsersClient.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IUsersClient.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ListRefreshTokensForUserAndClient(String, String, String, String, Nullable<Int32>)
  nameWithType: IUsersClient.ListRefreshTokensForUserAndClient(String, String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IUsersClient.ListRefreshTokensForUserAndClient(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IUsersClient.ListRefreshTokensForUserAndClient(String, String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IUsersClient.ListRefreshTokensForUserAndClient(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListRefreshTokensForUserAndClient(String, String, String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListRefreshTokensForUserAndClient
    nameWithType: IUsersClient.ListRefreshTokensForUserAndClient
    fullName: Okta.Sdk.IUsersClient.ListRefreshTokensForUserAndClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ListRefreshTokensForUserAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListRefreshTokensForUserAndClient
    nameWithType: IUsersClient.ListRefreshTokensForUserAndClient
    fullName: Okta.Sdk.IUsersClient.ListRefreshTokensForUserAndClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2RefreshToken>
  nameWithType: ICollectionClient<IOAuth2RefreshToken>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2RefreshToken>
  nameWithType.vb: ICollectionClient(Of IOAuth2RefreshToken)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2RefreshToken)
  name.vb: ICollectionClient(Of IOAuth2RefreshToken)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.RevokeTokenForUserAndClientAsync*
  commentId: Overload:Okta.Sdk.UsersClient.RevokeTokenForUserAndClientAsync
  name: RevokeTokenForUserAndClientAsync
  nameWithType: UsersClient.RevokeTokenForUserAndClientAsync
  fullName: Okta.Sdk.UsersClient.RevokeTokenForUserAndClientAsync
- uid: Okta.Sdk.IUsersClient.RevokeTokenForUserAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.RevokeTokenForUserAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: RevokeTokenForUserAndClientAsync(String, String, String, CancellationToken)
  nameWithType: IUsersClient.RevokeTokenForUserAndClientAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.RevokeTokenForUserAndClientAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.RevokeTokenForUserAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RevokeTokenForUserAndClientAsync
    nameWithType: IUsersClient.RevokeTokenForUserAndClientAsync
    fullName: Okta.Sdk.IUsersClient.RevokeTokenForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.RevokeTokenForUserAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RevokeTokenForUserAndClientAsync
    nameWithType: IUsersClient.RevokeTokenForUserAndClientAsync
    fullName: Okta.Sdk.IUsersClient.RevokeTokenForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.GetRefreshTokenForUserAndClientAsync*
  commentId: Overload:Okta.Sdk.UsersClient.GetRefreshTokenForUserAndClientAsync
  name: GetRefreshTokenForUserAndClientAsync
  nameWithType: UsersClient.GetRefreshTokenForUserAndClientAsync
  fullName: Okta.Sdk.UsersClient.GetRefreshTokenForUserAndClientAsync
- uid: Okta.Sdk.IUsersClient.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: GetRefreshTokenForUserAndClientAsync(String, String, String, String, Nullable<Int32>, String, CancellationToken)
  nameWithType: IUsersClient.GetRefreshTokenForUserAndClientAsync(String, String, String, String, Nullable<Int32>, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.GetRefreshTokenForUserAndClientAsync(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>, System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUsersClient.GetRefreshTokenForUserAndClientAsync(String, String, String, String, Nullable(Of Int32), String, CancellationToken)
  fullName.vb: Okta.Sdk.IUsersClient.GetRefreshTokenForUserAndClientAsync(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32), System.String, System.Threading.CancellationToken)
  name.vb: GetRefreshTokenForUserAndClientAsync(String, String, String, String, Nullable(Of Int32), String, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
    name: GetRefreshTokenForUserAndClientAsync
    nameWithType: IUsersClient.GetRefreshTokenForUserAndClientAsync
    fullName: Okta.Sdk.IUsersClient.GetRefreshTokenForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.GetRefreshTokenForUserAndClientAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
    name: GetRefreshTokenForUserAndClientAsync
    nameWithType: IUsersClient.GetRefreshTokenForUserAndClientAsync
    fullName: Okta.Sdk.IUsersClient.GetRefreshTokenForUserAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2RefreshToken>
  nameWithType: Task<IOAuth2RefreshToken>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2RefreshToken>
  nameWithType.vb: Task(Of IOAuth2RefreshToken)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2RefreshToken)
  name.vb: Task(Of IOAuth2RefreshToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ChangePasswordAsync*
  commentId: Overload:Okta.Sdk.UsersClient.ChangePasswordAsync
  name: ChangePasswordAsync
  nameWithType: UsersClient.ChangePasswordAsync
  fullName: Okta.Sdk.UsersClient.ChangePasswordAsync
- uid: Okta.Sdk.IUsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ChangePasswordAsync(IChangePasswordRequest, String, Nullable<Boolean>, CancellationToken)
  nameWithType: IUsersClient.ChangePasswordAsync(IChangePasswordRequest, String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUsersClient.ChangePasswordAsync(IChangePasswordRequest, String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ChangePasswordAsync(IChangePasswordRequest, String, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ChangePasswordAsync
    nameWithType: IUsersClient.ChangePasswordAsync
    fullName: Okta.Sdk.IUsersClient.ChangePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IChangePasswordRequest
    name: IChangePasswordRequest
    nameWithType: IChangePasswordRequest
    fullName: Okta.Sdk.IChangePasswordRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ChangePasswordAsync
    nameWithType: IUsersClient.ChangePasswordAsync
    fullName: Okta.Sdk.IUsersClient.ChangePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IChangePasswordRequest
    name: IChangePasswordRequest
    nameWithType: IChangePasswordRequest
    fullName: Okta.Sdk.IChangePasswordRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IChangePasswordRequest
  commentId: T:Okta.Sdk.IChangePasswordRequest
  parent: Okta.Sdk
  name: IChangePasswordRequest
  nameWithType: IChangePasswordRequest
  fullName: Okta.Sdk.IChangePasswordRequest
- uid: System.Threading.Tasks.Task{Okta.Sdk.IUserCredentials}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IUserCredentials}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IUserCredentials>
  nameWithType: Task<IUserCredentials>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IUserCredentials>
  nameWithType.vb: Task(Of IUserCredentials)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IUserCredentials)
  name.vb: Task(Of IUserCredentials)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUserCredentials
    name: IUserCredentials
    nameWithType: IUserCredentials
    fullName: Okta.Sdk.IUserCredentials
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUserCredentials
    name: IUserCredentials
    nameWithType: IUserCredentials
    fullName: Okta.Sdk.IUserCredentials
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ChangeRecoveryQuestionAsync*
  commentId: Overload:Okta.Sdk.UsersClient.ChangeRecoveryQuestionAsync
  name: ChangeRecoveryQuestionAsync
  nameWithType: UsersClient.ChangeRecoveryQuestionAsync
  fullName: Okta.Sdk.UsersClient.ChangeRecoveryQuestionAsync
- uid: Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync(Okta.Sdk.IUserCredentials,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync(Okta.Sdk.IUserCredentials,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ChangeRecoveryQuestionAsync(IUserCredentials, String, CancellationToken)
  nameWithType: IUsersClient.ChangeRecoveryQuestionAsync(IUserCredentials, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync(Okta.Sdk.IUserCredentials, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync(Okta.Sdk.IUserCredentials,System.String,System.Threading.CancellationToken)
    name: ChangeRecoveryQuestionAsync
    nameWithType: IUsersClient.ChangeRecoveryQuestionAsync
    fullName: Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IUserCredentials
    name: IUserCredentials
    nameWithType: IUserCredentials
    fullName: Okta.Sdk.IUserCredentials
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync(Okta.Sdk.IUserCredentials,System.String,System.Threading.CancellationToken)
    name: ChangeRecoveryQuestionAsync
    nameWithType: IUsersClient.ChangeRecoveryQuestionAsync
    fullName: Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IUserCredentials
    name: IUserCredentials
    nameWithType: IUserCredentials
    fullName: Okta.Sdk.IUserCredentials
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IUserCredentials
  commentId: T:Okta.Sdk.IUserCredentials
  parent: Okta.Sdk
  name: IUserCredentials
  nameWithType: IUserCredentials
  fullName: Okta.Sdk.IUserCredentials
- uid: Okta.Sdk.UsersClient.ForgotPasswordGenerateOneTimeTokenAsync*
  commentId: Overload:Okta.Sdk.UsersClient.ForgotPasswordGenerateOneTimeTokenAsync
  name: ForgotPasswordGenerateOneTimeTokenAsync
  nameWithType: UsersClient.ForgotPasswordGenerateOneTimeTokenAsync
  fullName: Okta.Sdk.UsersClient.ForgotPasswordGenerateOneTimeTokenAsync
- uid: Okta.Sdk.IUsersClient.ForgotPasswordGenerateOneTimeTokenAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.ForgotPasswordGenerateOneTimeTokenAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ForgotPasswordGenerateOneTimeTokenAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: IUsersClient.ForgotPasswordGenerateOneTimeTokenAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.ForgotPasswordGenerateOneTimeTokenAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUsersClient.ForgotPasswordGenerateOneTimeTokenAsync(String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUsersClient.ForgotPasswordGenerateOneTimeTokenAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ForgotPasswordGenerateOneTimeTokenAsync(String, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ForgotPasswordGenerateOneTimeTokenAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ForgotPasswordGenerateOneTimeTokenAsync
    nameWithType: IUsersClient.ForgotPasswordGenerateOneTimeTokenAsync
    fullName: Okta.Sdk.IUsersClient.ForgotPasswordGenerateOneTimeTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ForgotPasswordGenerateOneTimeTokenAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ForgotPasswordGenerateOneTimeTokenAsync
    nameWithType: IUsersClient.ForgotPasswordGenerateOneTimeTokenAsync
    fullName: Okta.Sdk.IUsersClient.ForgotPasswordGenerateOneTimeTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IForgotPasswordResponse}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IForgotPasswordResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IForgotPasswordResponse>
  nameWithType: Task<IForgotPasswordResponse>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IForgotPasswordResponse>
  nameWithType.vb: Task(Of IForgotPasswordResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IForgotPasswordResponse)
  name.vb: Task(Of IForgotPasswordResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IForgotPasswordResponse
    name: IForgotPasswordResponse
    nameWithType: IForgotPasswordResponse
    fullName: Okta.Sdk.IForgotPasswordResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IForgotPasswordResponse
    name: IForgotPasswordResponse
    nameWithType: IForgotPasswordResponse
    fullName: Okta.Sdk.IForgotPasswordResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ForgotPasswordSetNewPasswordAsync*
  commentId: Overload:Okta.Sdk.UsersClient.ForgotPasswordSetNewPasswordAsync
  name: ForgotPasswordSetNewPasswordAsync
  nameWithType: UsersClient.ForgotPasswordSetNewPasswordAsync
  fullName: Okta.Sdk.UsersClient.ForgotPasswordSetNewPasswordAsync
- uid: Okta.Sdk.IUsersClient.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ForgotPasswordSetNewPasswordAsync(IUserCredentials, String, Nullable<Boolean>, CancellationToken)
  nameWithType: IUsersClient.ForgotPasswordSetNewPasswordAsync(IUserCredentials, String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUsersClient.ForgotPasswordSetNewPasswordAsync(IUserCredentials, String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUsersClient.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ForgotPasswordSetNewPasswordAsync(IUserCredentials, String, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ForgotPasswordSetNewPasswordAsync
    nameWithType: IUsersClient.ForgotPasswordSetNewPasswordAsync
    fullName: Okta.Sdk.IUsersClient.ForgotPasswordSetNewPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IUserCredentials
    name: IUserCredentials
    nameWithType: IUserCredentials
    fullName: Okta.Sdk.IUserCredentials
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ForgotPasswordSetNewPasswordAsync(Okta.Sdk.IUserCredentials,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ForgotPasswordSetNewPasswordAsync
    nameWithType: IUsersClient.ForgotPasswordSetNewPasswordAsync
    fullName: Okta.Sdk.IUsersClient.ForgotPasswordSetNewPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IUserCredentials
    name: IUserCredentials
    nameWithType: IUserCredentials
    fullName: Okta.Sdk.IUserCredentials
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.RevokeUserGrantsAsync*
  commentId: Overload:Okta.Sdk.UsersClient.RevokeUserGrantsAsync
  name: RevokeUserGrantsAsync
  nameWithType: UsersClient.RevokeUserGrantsAsync
  fullName: Okta.Sdk.UsersClient.RevokeUserGrantsAsync
- uid: Okta.Sdk.IUsersClient.RevokeUserGrantsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.RevokeUserGrantsAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: RevokeUserGrantsAsync(String, CancellationToken)
  nameWithType: IUsersClient.RevokeUserGrantsAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.RevokeUserGrantsAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.RevokeUserGrantsAsync(System.String,System.Threading.CancellationToken)
    name: RevokeUserGrantsAsync
    nameWithType: IUsersClient.RevokeUserGrantsAsync
    fullName: Okta.Sdk.IUsersClient.RevokeUserGrantsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.RevokeUserGrantsAsync(System.String,System.Threading.CancellationToken)
    name: RevokeUserGrantsAsync
    nameWithType: IUsersClient.RevokeUserGrantsAsync
    fullName: Okta.Sdk.IUsersClient.RevokeUserGrantsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ListUserGrants*
  commentId: Overload:Okta.Sdk.UsersClient.ListUserGrants
  name: ListUserGrants
  nameWithType: UsersClient.ListUserGrants
  fullName: Okta.Sdk.UsersClient.ListUserGrants
- uid: Okta.Sdk.IUsersClient.ListUserGrants(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IUsersClient.ListUserGrants(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ListUserGrants(String, String, String, String, Nullable<Int32>)
  nameWithType: IUsersClient.ListUserGrants(String, String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IUsersClient.ListUserGrants(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IUsersClient.ListUserGrants(String, String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IUsersClient.ListUserGrants(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListUserGrants(String, String, String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ListUserGrants(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListUserGrants
    nameWithType: IUsersClient.ListUserGrants
    fullName: Okta.Sdk.IUsersClient.ListUserGrants
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ListUserGrants(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListUserGrants
    nameWithType: IUsersClient.ListUserGrants
    fullName: Okta.Sdk.IUsersClient.ListUserGrants
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.RevokeUserGrantAsync*
  commentId: Overload:Okta.Sdk.UsersClient.RevokeUserGrantAsync
  name: RevokeUserGrantAsync
  nameWithType: UsersClient.RevokeUserGrantAsync
  fullName: Okta.Sdk.UsersClient.RevokeUserGrantAsync
- uid: Okta.Sdk.IUsersClient.RevokeUserGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.RevokeUserGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: RevokeUserGrantAsync(String, String, CancellationToken)
  nameWithType: IUsersClient.RevokeUserGrantAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.RevokeUserGrantAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.RevokeUserGrantAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RevokeUserGrantAsync
    nameWithType: IUsersClient.RevokeUserGrantAsync
    fullName: Okta.Sdk.IUsersClient.RevokeUserGrantAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.RevokeUserGrantAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RevokeUserGrantAsync
    nameWithType: IUsersClient.RevokeUserGrantAsync
    fullName: Okta.Sdk.IUsersClient.RevokeUserGrantAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.GetUserGrantAsync*
  commentId: Overload:Okta.Sdk.UsersClient.GetUserGrantAsync
  name: GetUserGrantAsync
  nameWithType: UsersClient.GetUserGrantAsync
  fullName: Okta.Sdk.UsersClient.GetUserGrantAsync
- uid: Okta.Sdk.IUsersClient.GetUserGrantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.GetUserGrantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: GetUserGrantAsync(String, String, String, CancellationToken)
  nameWithType: IUsersClient.GetUserGrantAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.GetUserGrantAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.GetUserGrantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: GetUserGrantAsync
    nameWithType: IUsersClient.GetUserGrantAsync
    fullName: Okta.Sdk.IUsersClient.GetUserGrantAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.GetUserGrantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: GetUserGrantAsync
    nameWithType: IUsersClient.GetUserGrantAsync
    fullName: Okta.Sdk.IUsersClient.GetUserGrantAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2ScopeConsentGrant}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2ScopeConsentGrant}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2ScopeConsentGrant>
  nameWithType: Task<IOAuth2ScopeConsentGrant>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2ScopeConsentGrant>
  nameWithType.vb: Task(Of IOAuth2ScopeConsentGrant)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2ScopeConsentGrant)
  name.vb: Task(Of IOAuth2ScopeConsentGrant)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ListUserGroups*
  commentId: Overload:Okta.Sdk.UsersClient.ListUserGroups
  name: ListUserGroups
  nameWithType: UsersClient.ListUserGroups
  fullName: Okta.Sdk.UsersClient.ListUserGroups
- uid: Okta.Sdk.IUsersClient.ListUserGroups(System.String)
  commentId: M:Okta.Sdk.IUsersClient.ListUserGroups(System.String)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ListUserGroups(String)
  nameWithType: IUsersClient.ListUserGroups(String)
  fullName: Okta.Sdk.IUsersClient.ListUserGroups(System.String)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ListUserGroups(System.String)
    name: ListUserGroups
    nameWithType: IUsersClient.ListUserGroups
    fullName: Okta.Sdk.IUsersClient.ListUserGroups
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ListUserGroups(System.String)
    name: ListUserGroups
    nameWithType: IUsersClient.ListUserGroups
    fullName: Okta.Sdk.IUsersClient.ListUserGroups
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IGroup}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IGroup}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IGroup>
  nameWithType: ICollectionClient<IGroup>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IGroup>
  nameWithType.vb: ICollectionClient(Of IGroup)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IGroup)
  name.vb: ICollectionClient(Of IGroup)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ListUserIdentityProviders*
  commentId: Overload:Okta.Sdk.UsersClient.ListUserIdentityProviders
  name: ListUserIdentityProviders
  nameWithType: UsersClient.ListUserIdentityProviders
  fullName: Okta.Sdk.UsersClient.ListUserIdentityProviders
- uid: Okta.Sdk.IUsersClient.ListUserIdentityProviders(System.String)
  commentId: M:Okta.Sdk.IUsersClient.ListUserIdentityProviders(System.String)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ListUserIdentityProviders(String)
  nameWithType: IUsersClient.ListUserIdentityProviders(String)
  fullName: Okta.Sdk.IUsersClient.ListUserIdentityProviders(System.String)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ListUserIdentityProviders(System.String)
    name: ListUserIdentityProviders
    nameWithType: IUsersClient.ListUserIdentityProviders
    fullName: Okta.Sdk.IUsersClient.ListUserIdentityProviders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ListUserIdentityProviders(System.String)
    name: ListUserIdentityProviders
    nameWithType: IUsersClient.ListUserIdentityProviders
    fullName: Okta.Sdk.IUsersClient.ListUserIdentityProviders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IIdentityProvider}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IIdentityProvider}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IIdentityProvider>
  nameWithType: ICollectionClient<IIdentityProvider>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IIdentityProvider>
  nameWithType.vb: ICollectionClient(Of IIdentityProvider)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IIdentityProvider)
  name.vb: ICollectionClient(Of IIdentityProvider)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IIdentityProvider
    name: IIdentityProvider
    nameWithType: IIdentityProvider
    fullName: Okta.Sdk.IIdentityProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IIdentityProvider
    name: IIdentityProvider
    nameWithType: IIdentityProvider
    fullName: Okta.Sdk.IIdentityProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ActivateUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.ActivateUserAsync
  name: ActivateUserAsync
  nameWithType: UsersClient.ActivateUserAsync
  fullName: Okta.Sdk.UsersClient.ActivateUserAsync
- uid: Okta.Sdk.IUsersClient.ActivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.ActivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ActivateUserAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: IUsersClient.ActivateUserAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.ActivateUserAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUsersClient.ActivateUserAsync(String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUsersClient.ActivateUserAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ActivateUserAsync(String, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ActivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ActivateUserAsync
    nameWithType: IUsersClient.ActivateUserAsync
    fullName: Okta.Sdk.IUsersClient.ActivateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ActivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ActivateUserAsync
    nameWithType: IUsersClient.ActivateUserAsync
    fullName: Okta.Sdk.IUsersClient.ActivateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IUserActivationToken}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IUserActivationToken}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IUserActivationToken>
  nameWithType: Task<IUserActivationToken>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IUserActivationToken>
  nameWithType.vb: Task(Of IUserActivationToken)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IUserActivationToken)
  name.vb: Task(Of IUserActivationToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUserActivationToken
    name: IUserActivationToken
    nameWithType: IUserActivationToken
    fullName: Okta.Sdk.IUserActivationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUserActivationToken
    name: IUserActivationToken
    nameWithType: IUserActivationToken
    fullName: Okta.Sdk.IUserActivationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.DeactivateUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.DeactivateUserAsync
  name: DeactivateUserAsync
  nameWithType: UsersClient.DeactivateUserAsync
  fullName: Okta.Sdk.UsersClient.DeactivateUserAsync
- uid: Okta.Sdk.IUsersClient.DeactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.DeactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: DeactivateUserAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: IUsersClient.DeactivateUserAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.DeactivateUserAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUsersClient.DeactivateUserAsync(String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUsersClient.DeactivateUserAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: DeactivateUserAsync(String, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.DeactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: DeactivateUserAsync
    nameWithType: IUsersClient.DeactivateUserAsync
    fullName: Okta.Sdk.IUsersClient.DeactivateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.DeactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: DeactivateUserAsync
    nameWithType: IUsersClient.DeactivateUserAsync
    fullName: Okta.Sdk.IUsersClient.DeactivateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ExpirePasswordAsync*
  commentId: Overload:Okta.Sdk.UsersClient.ExpirePasswordAsync
  name: ExpirePasswordAsync
  nameWithType: UsersClient.ExpirePasswordAsync
  fullName: Okta.Sdk.UsersClient.ExpirePasswordAsync
- uid: Okta.Sdk.IUsersClient.ExpirePasswordAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.ExpirePasswordAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ExpirePasswordAsync(String, CancellationToken)
  nameWithType: IUsersClient.ExpirePasswordAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.ExpirePasswordAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ExpirePasswordAsync(System.String,System.Threading.CancellationToken)
    name: ExpirePasswordAsync
    nameWithType: IUsersClient.ExpirePasswordAsync
    fullName: Okta.Sdk.IUsersClient.ExpirePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ExpirePasswordAsync(System.String,System.Threading.CancellationToken)
    name: ExpirePasswordAsync
    nameWithType: IUsersClient.ExpirePasswordAsync
    fullName: Okta.Sdk.IUsersClient.ExpirePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ExpirePasswordAndGetTemporaryPasswordAsync*
  commentId: Overload:Okta.Sdk.UsersClient.ExpirePasswordAndGetTemporaryPasswordAsync
  name: ExpirePasswordAndGetTemporaryPasswordAsync
  nameWithType: UsersClient.ExpirePasswordAndGetTemporaryPasswordAsync
  fullName: Okta.Sdk.UsersClient.ExpirePasswordAndGetTemporaryPasswordAsync
- uid: Okta.Sdk.IUsersClient.ExpirePasswordAndGetTemporaryPasswordAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.ExpirePasswordAndGetTemporaryPasswordAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ExpirePasswordAndGetTemporaryPasswordAsync(String, CancellationToken)
  nameWithType: IUsersClient.ExpirePasswordAndGetTemporaryPasswordAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.ExpirePasswordAndGetTemporaryPasswordAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ExpirePasswordAndGetTemporaryPasswordAsync(System.String,System.Threading.CancellationToken)
    name: ExpirePasswordAndGetTemporaryPasswordAsync
    nameWithType: IUsersClient.ExpirePasswordAndGetTemporaryPasswordAsync
    fullName: Okta.Sdk.IUsersClient.ExpirePasswordAndGetTemporaryPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ExpirePasswordAndGetTemporaryPasswordAsync(System.String,System.Threading.CancellationToken)
    name: ExpirePasswordAndGetTemporaryPasswordAsync
    nameWithType: IUsersClient.ExpirePasswordAndGetTemporaryPasswordAsync
    fullName: Okta.Sdk.IUsersClient.ExpirePasswordAndGetTemporaryPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.ITempPassword}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.ITempPassword}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ITempPassword>
  nameWithType: Task<ITempPassword>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.ITempPassword>
  nameWithType.vb: Task(Of ITempPassword)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.ITempPassword)
  name.vb: Task(Of ITempPassword)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.ITempPassword
    name: ITempPassword
    nameWithType: ITempPassword
    fullName: Okta.Sdk.ITempPassword
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.ITempPassword
    name: ITempPassword
    nameWithType: ITempPassword
    fullName: Okta.Sdk.ITempPassword
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ReactivateUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.ReactivateUserAsync
  name: ReactivateUserAsync
  nameWithType: UsersClient.ReactivateUserAsync
  fullName: Okta.Sdk.UsersClient.ReactivateUserAsync
- uid: Okta.Sdk.IUsersClient.ReactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.ReactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ReactivateUserAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: IUsersClient.ReactivateUserAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.ReactivateUserAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUsersClient.ReactivateUserAsync(String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUsersClient.ReactivateUserAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ReactivateUserAsync(String, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ReactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ReactivateUserAsync
    nameWithType: IUsersClient.ReactivateUserAsync
    fullName: Okta.Sdk.IUsersClient.ReactivateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ReactivateUserAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ReactivateUserAsync
    nameWithType: IUsersClient.ReactivateUserAsync
    fullName: Okta.Sdk.IUsersClient.ReactivateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ResetFactorsAsync*
  commentId: Overload:Okta.Sdk.UsersClient.ResetFactorsAsync
  name: ResetFactorsAsync
  nameWithType: UsersClient.ResetFactorsAsync
  fullName: Okta.Sdk.UsersClient.ResetFactorsAsync
- uid: Okta.Sdk.IUsersClient.ResetFactorsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.ResetFactorsAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ResetFactorsAsync(String, CancellationToken)
  nameWithType: IUsersClient.ResetFactorsAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.ResetFactorsAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ResetFactorsAsync(System.String,System.Threading.CancellationToken)
    name: ResetFactorsAsync
    nameWithType: IUsersClient.ResetFactorsAsync
    fullName: Okta.Sdk.IUsersClient.ResetFactorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ResetFactorsAsync(System.String,System.Threading.CancellationToken)
    name: ResetFactorsAsync
    nameWithType: IUsersClient.ResetFactorsAsync
    fullName: Okta.Sdk.IUsersClient.ResetFactorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ResetPasswordAsync*
  commentId: Overload:Okta.Sdk.UsersClient.ResetPasswordAsync
  name: ResetPasswordAsync
  nameWithType: UsersClient.ResetPasswordAsync
  fullName: Okta.Sdk.UsersClient.ResetPasswordAsync
- uid: Okta.Sdk.IUsersClient.ResetPasswordAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.ResetPasswordAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ResetPasswordAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: IUsersClient.ResetPasswordAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.ResetPasswordAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUsersClient.ResetPasswordAsync(String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUsersClient.ResetPasswordAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ResetPasswordAsync(String, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ResetPasswordAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ResetPasswordAsync
    nameWithType: IUsersClient.ResetPasswordAsync
    fullName: Okta.Sdk.IUsersClient.ResetPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ResetPasswordAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ResetPasswordAsync
    nameWithType: IUsersClient.ResetPasswordAsync
    fullName: Okta.Sdk.IUsersClient.ResetPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IResetPasswordToken}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IResetPasswordToken}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IResetPasswordToken>
  nameWithType: Task<IResetPasswordToken>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IResetPasswordToken>
  nameWithType.vb: Task(Of IResetPasswordToken)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IResetPasswordToken)
  name.vb: Task(Of IResetPasswordToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IResetPasswordToken
    name: IResetPasswordToken
    nameWithType: IResetPasswordToken
    fullName: Okta.Sdk.IResetPasswordToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IResetPasswordToken
    name: IResetPasswordToken
    nameWithType: IResetPasswordToken
    fullName: Okta.Sdk.IResetPasswordToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.SuspendUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.SuspendUserAsync
  name: SuspendUserAsync
  nameWithType: UsersClient.SuspendUserAsync
  fullName: Okta.Sdk.UsersClient.SuspendUserAsync
- uid: Okta.Sdk.IUsersClient.SuspendUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.SuspendUserAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: SuspendUserAsync(String, CancellationToken)
  nameWithType: IUsersClient.SuspendUserAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.SuspendUserAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.SuspendUserAsync(System.String,System.Threading.CancellationToken)
    name: SuspendUserAsync
    nameWithType: IUsersClient.SuspendUserAsync
    fullName: Okta.Sdk.IUsersClient.SuspendUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.SuspendUserAsync(System.String,System.Threading.CancellationToken)
    name: SuspendUserAsync
    nameWithType: IUsersClient.SuspendUserAsync
    fullName: Okta.Sdk.IUsersClient.SuspendUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.UnlockUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.UnlockUserAsync
  name: UnlockUserAsync
  nameWithType: UsersClient.UnlockUserAsync
  fullName: Okta.Sdk.UsersClient.UnlockUserAsync
- uid: Okta.Sdk.IUsersClient.UnlockUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.UnlockUserAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: UnlockUserAsync(String, CancellationToken)
  nameWithType: IUsersClient.UnlockUserAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.UnlockUserAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.UnlockUserAsync(System.String,System.Threading.CancellationToken)
    name: UnlockUserAsync
    nameWithType: IUsersClient.UnlockUserAsync
    fullName: Okta.Sdk.IUsersClient.UnlockUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.UnlockUserAsync(System.String,System.Threading.CancellationToken)
    name: UnlockUserAsync
    nameWithType: IUsersClient.UnlockUserAsync
    fullName: Okta.Sdk.IUsersClient.UnlockUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.UnsuspendUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.UnsuspendUserAsync
  name: UnsuspendUserAsync
  nameWithType: UsersClient.UnsuspendUserAsync
  fullName: Okta.Sdk.UsersClient.UnsuspendUserAsync
- uid: Okta.Sdk.IUsersClient.UnsuspendUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.UnsuspendUserAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: UnsuspendUserAsync(String, CancellationToken)
  nameWithType: IUsersClient.UnsuspendUserAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.UnsuspendUserAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.UnsuspendUserAsync(System.String,System.Threading.CancellationToken)
    name: UnsuspendUserAsync
    nameWithType: IUsersClient.UnsuspendUserAsync
    fullName: Okta.Sdk.IUsersClient.UnsuspendUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.UnsuspendUserAsync(System.String,System.Threading.CancellationToken)
    name: UnsuspendUserAsync
    nameWithType: IUsersClient.UnsuspendUserAsync
    fullName: Okta.Sdk.IUsersClient.UnsuspendUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.RemoveLinkedObjectForUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.RemoveLinkedObjectForUserAsync
  name: RemoveLinkedObjectForUserAsync
  nameWithType: UsersClient.RemoveLinkedObjectForUserAsync
  fullName: Okta.Sdk.UsersClient.RemoveLinkedObjectForUserAsync
- uid: Okta.Sdk.IUsersClient.RemoveLinkedObjectForUserAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.RemoveLinkedObjectForUserAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: RemoveLinkedObjectForUserAsync(String, String, CancellationToken)
  nameWithType: IUsersClient.RemoveLinkedObjectForUserAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.RemoveLinkedObjectForUserAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.RemoveLinkedObjectForUserAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RemoveLinkedObjectForUserAsync
    nameWithType: IUsersClient.RemoveLinkedObjectForUserAsync
    fullName: Okta.Sdk.IUsersClient.RemoveLinkedObjectForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.RemoveLinkedObjectForUserAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RemoveLinkedObjectForUserAsync
    nameWithType: IUsersClient.RemoveLinkedObjectForUserAsync
    fullName: Okta.Sdk.IUsersClient.RemoveLinkedObjectForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.GetLinkedObjectsForUser*
  commentId: Overload:Okta.Sdk.UsersClient.GetLinkedObjectsForUser
  name: GetLinkedObjectsForUser
  nameWithType: UsersClient.GetLinkedObjectsForUser
  fullName: Okta.Sdk.UsersClient.GetLinkedObjectsForUser
- uid: Okta.Sdk.IUsersClient.GetLinkedObjectsForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IUsersClient.GetLinkedObjectsForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: GetLinkedObjectsForUser(String, String, String, Nullable<Int32>)
  nameWithType: IUsersClient.GetLinkedObjectsForUser(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IUsersClient.GetLinkedObjectsForUser(System.String, System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IUsersClient.GetLinkedObjectsForUser(String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IUsersClient.GetLinkedObjectsForUser(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: GetLinkedObjectsForUser(String, String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.GetLinkedObjectsForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
    name: GetLinkedObjectsForUser
    nameWithType: IUsersClient.GetLinkedObjectsForUser
    fullName: Okta.Sdk.IUsersClient.GetLinkedObjectsForUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.GetLinkedObjectsForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
    name: GetLinkedObjectsForUser
    nameWithType: IUsersClient.GetLinkedObjectsForUser
    fullName: Okta.Sdk.IUsersClient.GetLinkedObjectsForUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IResponseLinks}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IResponseLinks}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IResponseLinks>
  nameWithType: ICollectionClient<IResponseLinks>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IResponseLinks>
  nameWithType.vb: ICollectionClient(Of IResponseLinks)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IResponseLinks)
  name.vb: ICollectionClient(Of IResponseLinks)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IResponseLinks
    name: IResponseLinks
    nameWithType: IResponseLinks
    fullName: Okta.Sdk.IResponseLinks
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IResponseLinks
    name: IResponseLinks
    nameWithType: IResponseLinks
    fullName: Okta.Sdk.IResponseLinks
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ListAssignedRolesForUser*
  commentId: Overload:Okta.Sdk.UsersClient.ListAssignedRolesForUser
  name: ListAssignedRolesForUser
  nameWithType: UsersClient.ListAssignedRolesForUser
  fullName: Okta.Sdk.UsersClient.ListAssignedRolesForUser
- uid: Okta.Sdk.IUsersClient.ListAssignedRolesForUser(System.String,System.String)
  commentId: M:Okta.Sdk.IUsersClient.ListAssignedRolesForUser(System.String,System.String)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ListAssignedRolesForUser(String, String)
  nameWithType: IUsersClient.ListAssignedRolesForUser(String, String)
  fullName: Okta.Sdk.IUsersClient.ListAssignedRolesForUser(System.String, System.String)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ListAssignedRolesForUser(System.String,System.String)
    name: ListAssignedRolesForUser
    nameWithType: IUsersClient.ListAssignedRolesForUser
    fullName: Okta.Sdk.IUsersClient.ListAssignedRolesForUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ListAssignedRolesForUser(System.String,System.String)
    name: ListAssignedRolesForUser
    nameWithType: IUsersClient.ListAssignedRolesForUser
    fullName: Okta.Sdk.IUsersClient.ListAssignedRolesForUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IRole}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IRole}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IRole>
  nameWithType: ICollectionClient<IRole>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IRole>
  nameWithType.vb: ICollectionClient(Of IRole)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IRole)
  name.vb: ICollectionClient(Of IRole)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.AssignRoleToUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.AssignRoleToUserAsync
  name: AssignRoleToUserAsync
  nameWithType: UsersClient.AssignRoleToUserAsync
  fullName: Okta.Sdk.UsersClient.AssignRoleToUserAsync
- uid: Okta.Sdk.IUsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: AssignRoleToUserAsync(IAssignRoleRequest, String, Nullable<Boolean>, CancellationToken)
  nameWithType: IUsersClient.AssignRoleToUserAsync(IAssignRoleRequest, String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUsersClient.AssignRoleToUserAsync(IAssignRoleRequest, String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: AssignRoleToUserAsync(IAssignRoleRequest, String, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: AssignRoleToUserAsync
    nameWithType: IUsersClient.AssignRoleToUserAsync
    fullName: Okta.Sdk.IUsersClient.AssignRoleToUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAssignRoleRequest
    name: IAssignRoleRequest
    nameWithType: IAssignRoleRequest
    fullName: Okta.Sdk.IAssignRoleRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: AssignRoleToUserAsync
    nameWithType: IUsersClient.AssignRoleToUserAsync
    fullName: Okta.Sdk.IUsersClient.AssignRoleToUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAssignRoleRequest
    name: IAssignRoleRequest
    nameWithType: IAssignRoleRequest
    fullName: Okta.Sdk.IAssignRoleRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAssignRoleRequest
  commentId: T:Okta.Sdk.IAssignRoleRequest
  parent: Okta.Sdk
  name: IAssignRoleRequest
  nameWithType: IAssignRoleRequest
  fullName: Okta.Sdk.IAssignRoleRequest
- uid: System.Threading.Tasks.Task{Okta.Sdk.IRole}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IRole}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IRole>
  nameWithType: Task<IRole>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IRole>
  nameWithType.vb: Task(Of IRole)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IRole)
  name.vb: Task(Of IRole)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.RemoveRoleFromUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.RemoveRoleFromUserAsync
  name: RemoveRoleFromUserAsync
  nameWithType: UsersClient.RemoveRoleFromUserAsync
  fullName: Okta.Sdk.UsersClient.RemoveRoleFromUserAsync
- uid: Okta.Sdk.IUsersClient.RemoveRoleFromUserAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.RemoveRoleFromUserAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: RemoveRoleFromUserAsync(String, String, CancellationToken)
  nameWithType: IUsersClient.RemoveRoleFromUserAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.RemoveRoleFromUserAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.RemoveRoleFromUserAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RemoveRoleFromUserAsync
    nameWithType: IUsersClient.RemoveRoleFromUserAsync
    fullName: Okta.Sdk.IUsersClient.RemoveRoleFromUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.RemoveRoleFromUserAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RemoveRoleFromUserAsync
    nameWithType: IUsersClient.RemoveRoleFromUserAsync
    fullName: Okta.Sdk.IUsersClient.RemoveRoleFromUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.GetUserRoleAsync*
  commentId: Overload:Okta.Sdk.UsersClient.GetUserRoleAsync
  name: GetUserRoleAsync
  nameWithType: UsersClient.GetUserRoleAsync
  fullName: Okta.Sdk.UsersClient.GetUserRoleAsync
- uid: Okta.Sdk.IUsersClient.GetUserRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.GetUserRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: GetUserRoleAsync(String, String, CancellationToken)
  nameWithType: IUsersClient.GetUserRoleAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.GetUserRoleAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.GetUserRoleAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetUserRoleAsync
    nameWithType: IUsersClient.GetUserRoleAsync
    fullName: Okta.Sdk.IUsersClient.GetUserRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.GetUserRoleAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetUserRoleAsync
    nameWithType: IUsersClient.GetUserRoleAsync
    fullName: Okta.Sdk.IUsersClient.GetUserRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser*
  commentId: Overload:Okta.Sdk.UsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser
  name: ListApplicationTargetsForApplicationAdministratorRoleForUser
  nameWithType: UsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser
  fullName: Okta.Sdk.UsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser
- uid: Okta.Sdk.IUsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IUsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ListApplicationTargetsForApplicationAdministratorRoleForUser(String, String, String, Nullable<Int32>)
  nameWithType: IUsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IUsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(System.String, System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IUsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IUsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListApplicationTargetsForApplicationAdministratorRoleForUser(String, String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListApplicationTargetsForApplicationAdministratorRoleForUser
    nameWithType: IUsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser
    fullName: Okta.Sdk.IUsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser(System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListApplicationTargetsForApplicationAdministratorRoleForUser
    nameWithType: IUsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser
    fullName: Okta.Sdk.IUsersClient.ListApplicationTargetsForApplicationAdministratorRoleForUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.ICatalogApplication}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.ICatalogApplication}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<ICatalogApplication>
  nameWithType: ICollectionClient<ICatalogApplication>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.ICatalogApplication>
  nameWithType.vb: ICollectionClient(Of ICatalogApplication)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.ICatalogApplication)
  name.vb: ICollectionClient(Of ICatalogApplication)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.ICatalogApplication
    name: ICatalogApplication
    nameWithType: ICatalogApplication
    fullName: Okta.Sdk.ICatalogApplication
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.ICatalogApplication
    name: ICatalogApplication
    nameWithType: ICatalogApplication
    fullName: Okta.Sdk.ICatalogApplication
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.AddAllAppsAsTargetToRoleAsync*
  commentId: Overload:Okta.Sdk.UsersClient.AddAllAppsAsTargetToRoleAsync
  name: AddAllAppsAsTargetToRoleAsync
  nameWithType: UsersClient.AddAllAppsAsTargetToRoleAsync
  fullName: Okta.Sdk.UsersClient.AddAllAppsAsTargetToRoleAsync
- uid: Okta.Sdk.IUsersClient.AddAllAppsAsTargetToRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.AddAllAppsAsTargetToRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: AddAllAppsAsTargetToRoleAsync(String, String, CancellationToken)
  nameWithType: IUsersClient.AddAllAppsAsTargetToRoleAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.AddAllAppsAsTargetToRoleAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.AddAllAppsAsTargetToRoleAsync(System.String,System.String,System.Threading.CancellationToken)
    name: AddAllAppsAsTargetToRoleAsync
    nameWithType: IUsersClient.AddAllAppsAsTargetToRoleAsync
    fullName: Okta.Sdk.IUsersClient.AddAllAppsAsTargetToRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.AddAllAppsAsTargetToRoleAsync(System.String,System.String,System.Threading.CancellationToken)
    name: AddAllAppsAsTargetToRoleAsync
    nameWithType: IUsersClient.AddAllAppsAsTargetToRoleAsync
    fullName: Okta.Sdk.IUsersClient.AddAllAppsAsTargetToRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync
  name: RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync
  nameWithType: UsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync
  fullName: Okta.Sdk.UsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync
- uid: Okta.Sdk.IUsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(String, String, String, CancellationToken)
  nameWithType: IUsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync
    nameWithType: IUsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync
    fullName: Okta.Sdk.IUsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync
    nameWithType: IUsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync
    fullName: Okta.Sdk.IUsersClient.RemoveApplicationTargetFromApplicationAdministratorRoleForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.AddApplicationTargetToAdminRoleForUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.AddApplicationTargetToAdminRoleForUserAsync
  name: AddApplicationTargetToAdminRoleForUserAsync
  nameWithType: UsersClient.AddApplicationTargetToAdminRoleForUserAsync
  fullName: Okta.Sdk.UsersClient.AddApplicationTargetToAdminRoleForUserAsync
- uid: Okta.Sdk.IUsersClient.AddApplicationTargetToAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.AddApplicationTargetToAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: AddApplicationTargetToAdminRoleForUserAsync(String, String, String, CancellationToken)
  nameWithType: IUsersClient.AddApplicationTargetToAdminRoleForUserAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.AddApplicationTargetToAdminRoleForUserAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.AddApplicationTargetToAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddApplicationTargetToAdminRoleForUserAsync
    nameWithType: IUsersClient.AddApplicationTargetToAdminRoleForUserAsync
    fullName: Okta.Sdk.IUsersClient.AddApplicationTargetToAdminRoleForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.AddApplicationTargetToAdminRoleForUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddApplicationTargetToAdminRoleForUserAsync
    nameWithType: IUsersClient.AddApplicationTargetToAdminRoleForUserAsync
    fullName: Okta.Sdk.IUsersClient.AddApplicationTargetToAdminRoleForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync
  name: RemoveApplicationTargetFromAdministratorRoleForUserAsync
  nameWithType: UsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync
  fullName: Okta.Sdk.UsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync
- uid: Okta.Sdk.IUsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: RemoveApplicationTargetFromAdministratorRoleForUserAsync(String, String, String, String, CancellationToken)
  nameWithType: IUsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync(String, String, String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync(System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveApplicationTargetFromAdministratorRoleForUserAsync
    nameWithType: IUsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync
    fullName: Okta.Sdk.IUsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveApplicationTargetFromAdministratorRoleForUserAsync
    nameWithType: IUsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync
    fullName: Okta.Sdk.IUsersClient.RemoveApplicationTargetFromAdministratorRoleForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.AddApplicationTargetToAppAdminRoleForUserAsync*
  commentId: Overload:Okta.Sdk.UsersClient.AddApplicationTargetToAppAdminRoleForUserAsync
  name: AddApplicationTargetToAppAdminRoleForUserAsync
  nameWithType: UsersClient.AddApplicationTargetToAppAdminRoleForUserAsync
  fullName: Okta.Sdk.UsersClient.AddApplicationTargetToAppAdminRoleForUserAsync
- uid: Okta.Sdk.IUsersClient.AddApplicationTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.AddApplicationTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: AddApplicationTargetToAppAdminRoleForUserAsync(String, String, String, String, CancellationToken)
  nameWithType: IUsersClient.AddApplicationTargetToAppAdminRoleForUserAsync(String, String, String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.AddApplicationTargetToAppAdminRoleForUserAsync(System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.AddApplicationTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddApplicationTargetToAppAdminRoleForUserAsync
    nameWithType: IUsersClient.AddApplicationTargetToAppAdminRoleForUserAsync
    fullName: Okta.Sdk.IUsersClient.AddApplicationTargetToAppAdminRoleForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.AddApplicationTargetToAppAdminRoleForUserAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddApplicationTargetToAppAdminRoleForUserAsync
    nameWithType: IUsersClient.AddApplicationTargetToAppAdminRoleForUserAsync
    fullName: Okta.Sdk.IUsersClient.AddApplicationTargetToAppAdminRoleForUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ListGroupTargetsForRole*
  commentId: Overload:Okta.Sdk.UsersClient.ListGroupTargetsForRole
  name: ListGroupTargetsForRole
  nameWithType: UsersClient.ListGroupTargetsForRole
  fullName: Okta.Sdk.UsersClient.ListGroupTargetsForRole
- uid: Okta.Sdk.IUsersClient.ListGroupTargetsForRole(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IUsersClient.ListGroupTargetsForRole(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ListGroupTargetsForRole(String, String, String, Nullable<Int32>)
  nameWithType: IUsersClient.ListGroupTargetsForRole(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IUsersClient.ListGroupTargetsForRole(System.String, System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IUsersClient.ListGroupTargetsForRole(String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IUsersClient.ListGroupTargetsForRole(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListGroupTargetsForRole(String, String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ListGroupTargetsForRole(System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListGroupTargetsForRole
    nameWithType: IUsersClient.ListGroupTargetsForRole
    fullName: Okta.Sdk.IUsersClient.ListGroupTargetsForRole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ListGroupTargetsForRole(System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListGroupTargetsForRole
    nameWithType: IUsersClient.ListGroupTargetsForRole
    fullName: Okta.Sdk.IUsersClient.ListGroupTargetsForRole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.RemoveGroupTargetFromRoleAsync*
  commentId: Overload:Okta.Sdk.UsersClient.RemoveGroupTargetFromRoleAsync
  name: RemoveGroupTargetFromRoleAsync
  nameWithType: UsersClient.RemoveGroupTargetFromRoleAsync
  fullName: Okta.Sdk.UsersClient.RemoveGroupTargetFromRoleAsync
- uid: Okta.Sdk.IUsersClient.RemoveGroupTargetFromRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.RemoveGroupTargetFromRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: RemoveGroupTargetFromRoleAsync(String, String, String, CancellationToken)
  nameWithType: IUsersClient.RemoveGroupTargetFromRoleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.RemoveGroupTargetFromRoleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.RemoveGroupTargetFromRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveGroupTargetFromRoleAsync
    nameWithType: IUsersClient.RemoveGroupTargetFromRoleAsync
    fullName: Okta.Sdk.IUsersClient.RemoveGroupTargetFromRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.RemoveGroupTargetFromRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveGroupTargetFromRoleAsync
    nameWithType: IUsersClient.RemoveGroupTargetFromRoleAsync
    fullName: Okta.Sdk.IUsersClient.RemoveGroupTargetFromRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.AddGroupTargetToRoleAsync*
  commentId: Overload:Okta.Sdk.UsersClient.AddGroupTargetToRoleAsync
  name: AddGroupTargetToRoleAsync
  nameWithType: UsersClient.AddGroupTargetToRoleAsync
  fullName: Okta.Sdk.UsersClient.AddGroupTargetToRoleAsync
- uid: Okta.Sdk.IUsersClient.AddGroupTargetToRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.AddGroupTargetToRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: AddGroupTargetToRoleAsync(String, String, String, CancellationToken)
  nameWithType: IUsersClient.AddGroupTargetToRoleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.AddGroupTargetToRoleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.AddGroupTargetToRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddGroupTargetToRoleAsync
    nameWithType: IUsersClient.AddGroupTargetToRoleAsync
    fullName: Okta.Sdk.IUsersClient.AddGroupTargetToRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.AddGroupTargetToRoleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddGroupTargetToRoleAsync
    nameWithType: IUsersClient.AddGroupTargetToRoleAsync
    fullName: Okta.Sdk.IUsersClient.AddGroupTargetToRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ClearUserSessionsAsync*
  commentId: Overload:Okta.Sdk.UsersClient.ClearUserSessionsAsync
  name: ClearUserSessionsAsync
  nameWithType: UsersClient.ClearUserSessionsAsync
  fullName: Okta.Sdk.UsersClient.ClearUserSessionsAsync
- uid: Okta.Sdk.IUsersClient.ClearUserSessionsAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.ClearUserSessionsAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ClearUserSessionsAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: IUsersClient.ClearUserSessionsAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.ClearUserSessionsAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IUsersClient.ClearUserSessionsAsync(String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IUsersClient.ClearUserSessionsAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ClearUserSessionsAsync(String, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ClearUserSessionsAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ClearUserSessionsAsync
    nameWithType: IUsersClient.ClearUserSessionsAsync
    fullName: Okta.Sdk.IUsersClient.ClearUserSessionsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ClearUserSessionsAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: ClearUserSessionsAsync
    nameWithType: IUsersClient.ClearUserSessionsAsync
    fullName: Okta.Sdk.IUsersClient.ClearUserSessionsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.ListUserSubscriptions*
  commentId: Overload:Okta.Sdk.UsersClient.ListUserSubscriptions
  name: ListUserSubscriptions
  nameWithType: UsersClient.ListUserSubscriptions
  fullName: Okta.Sdk.UsersClient.ListUserSubscriptions
- uid: Okta.Sdk.IUsersClient.ListUserSubscriptions(System.String)
  commentId: M:Okta.Sdk.IUsersClient.ListUserSubscriptions(System.String)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ListUserSubscriptions(String)
  nameWithType: IUsersClient.ListUserSubscriptions(String)
  fullName: Okta.Sdk.IUsersClient.ListUserSubscriptions(System.String)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ListUserSubscriptions(System.String)
    name: ListUserSubscriptions
    nameWithType: IUsersClient.ListUserSubscriptions
    fullName: Okta.Sdk.IUsersClient.ListUserSubscriptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ListUserSubscriptions(System.String)
    name: ListUserSubscriptions
    nameWithType: IUsersClient.ListUserSubscriptions
    fullName: Okta.Sdk.IUsersClient.ListUserSubscriptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.ISubscription}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.ISubscription}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<ISubscription>
  nameWithType: ICollectionClient<ISubscription>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.ISubscription>
  nameWithType.vb: ICollectionClient(Of ISubscription)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.ISubscription)
  name.vb: ICollectionClient(Of ISubscription)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.ISubscription
    name: ISubscription
    nameWithType: ISubscription
    fullName: Okta.Sdk.ISubscription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.ISubscription
    name: ISubscription
    nameWithType: ISubscription
    fullName: Okta.Sdk.ISubscription
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.GetUserSubscriptionByNotificationTypeAsync*
  commentId: Overload:Okta.Sdk.UsersClient.GetUserSubscriptionByNotificationTypeAsync
  name: GetUserSubscriptionByNotificationTypeAsync
  nameWithType: UsersClient.GetUserSubscriptionByNotificationTypeAsync
  fullName: Okta.Sdk.UsersClient.GetUserSubscriptionByNotificationTypeAsync
- uid: Okta.Sdk.IUsersClient.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: GetUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  nameWithType: IUsersClient.GetUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.GetUserSubscriptionByNotificationTypeAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetUserSubscriptionByNotificationTypeAsync
    nameWithType: IUsersClient.GetUserSubscriptionByNotificationTypeAsync
    fullName: Okta.Sdk.IUsersClient.GetUserSubscriptionByNotificationTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetUserSubscriptionByNotificationTypeAsync
    nameWithType: IUsersClient.GetUserSubscriptionByNotificationTypeAsync
    fullName: Okta.Sdk.IUsersClient.GetUserSubscriptionByNotificationTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.ISubscription}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.ISubscription}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ISubscription>
  nameWithType: Task<ISubscription>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.ISubscription>
  nameWithType.vb: Task(Of ISubscription)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.ISubscription)
  name.vb: Task(Of ISubscription)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.ISubscription
    name: ISubscription
    nameWithType: ISubscription
    fullName: Okta.Sdk.ISubscription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.ISubscription
    name: ISubscription
    nameWithType: ISubscription
    fullName: Okta.Sdk.ISubscription
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.UsersClient.GetAsyncEnumerator*
  commentId: Overload:Okta.Sdk.UsersClient.GetAsyncEnumerator
  name: GetAsyncEnumerator
  nameWithType: UsersClient.GetAsyncEnumerator
  fullName: Okta.Sdk.UsersClient.GetAsyncEnumerator
- uid: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IUser}.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IUser}.GetAsyncEnumerator(System.Threading.CancellationToken)
  parent: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IUser}
  definition: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: IAsyncEnumerable<IUser>.GetAsyncEnumerator(CancellationToken)
  fullName: System.Collections.Generic.IAsyncEnumerable<Okta.Sdk.IUser>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: IAsyncEnumerable(Of IUser).GetAsyncEnumerator(CancellationToken)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Okta.Sdk.IUser).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable<IUser>.GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable<Okta.Sdk.IUser>.GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable(Of IUser).GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable(Of Okta.Sdk.IUser).GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerator{Okta.Sdk.IUser}
  commentId: T:System.Collections.Generic.IAsyncEnumerator{Okta.Sdk.IUser}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerator`1
  name: IAsyncEnumerator<IUser>
  nameWithType: IAsyncEnumerator<IUser>
  fullName: System.Collections.Generic.IAsyncEnumerator<Okta.Sdk.IUser>
  nameWithType.vb: IAsyncEnumerator(Of IUser)
  fullName.vb: System.Collections.Generic.IAsyncEnumerator(Of Okta.Sdk.IUser)
  name.vb: IAsyncEnumerator(Of IUser)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  isExternal: true
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator(CancellationToken)
  fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: IAsyncEnumerable(Of T).GetAsyncEnumerator(CancellationToken)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable(Of T).GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerator`1
  commentId: T:System.Collections.Generic.IAsyncEnumerator`1
  isExternal: true
  name: IAsyncEnumerator<T>
  nameWithType: IAsyncEnumerator<T>
  fullName: System.Collections.Generic.IAsyncEnumerator<T>
  nameWithType.vb: IAsyncEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerator(Of T)
  name.vb: IAsyncEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithoutCredentialsOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithoutCredentialsOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: CreateUserAsync(CreateUserWithoutCredentialsOptions, CancellationToken)
  nameWithType: IUsersClient.CreateUserAsync(CreateUserWithoutCredentialsOptions, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithoutCredentialsOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithoutCredentialsOptions,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateUserWithoutCredentialsOptions
    name: CreateUserWithoutCredentialsOptions
    nameWithType: CreateUserWithoutCredentialsOptions
    fullName: Okta.Sdk.CreateUserWithoutCredentialsOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithoutCredentialsOptions,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateUserWithoutCredentialsOptions
    name: CreateUserWithoutCredentialsOptions
    nameWithType: CreateUserWithoutCredentialsOptions
    fullName: Okta.Sdk.CreateUserWithoutCredentialsOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.CreateUserWithoutCredentialsOptions
  commentId: T:Okta.Sdk.CreateUserWithoutCredentialsOptions
  parent: Okta.Sdk
  name: CreateUserWithoutCredentialsOptions
  nameWithType: CreateUserWithoutCredentialsOptions
  fullName: Okta.Sdk.CreateUserWithoutCredentialsOptions
- uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithImportedHashedPasswordOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithImportedHashedPasswordOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: CreateUserAsync(CreateUserWithImportedHashedPasswordOptions, CancellationToken)
  nameWithType: IUsersClient.CreateUserAsync(CreateUserWithImportedHashedPasswordOptions, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithImportedHashedPasswordOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithImportedHashedPasswordOptions,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateUserWithImportedHashedPasswordOptions
    name: CreateUserWithImportedHashedPasswordOptions
    nameWithType: CreateUserWithImportedHashedPasswordOptions
    fullName: Okta.Sdk.CreateUserWithImportedHashedPasswordOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithImportedHashedPasswordOptions,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateUserWithImportedHashedPasswordOptions
    name: CreateUserWithImportedHashedPasswordOptions
    nameWithType: CreateUserWithImportedHashedPasswordOptions
    fullName: Okta.Sdk.CreateUserWithImportedHashedPasswordOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.CreateUserWithImportedHashedPasswordOptions
  commentId: T:Okta.Sdk.CreateUserWithImportedHashedPasswordOptions
  parent: Okta.Sdk
  name: CreateUserWithImportedHashedPasswordOptions
  nameWithType: CreateUserWithImportedHashedPasswordOptions
  fullName: Okta.Sdk.CreateUserWithImportedHashedPasswordOptions
- uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: CreateUserAsync(CreateUserWithPasswordImportInlineHookOptions, CancellationToken)
  nameWithType: IUsersClient.CreateUserAsync(CreateUserWithPasswordImportInlineHookOptions, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions
    name: CreateUserWithPasswordImportInlineHookOptions
    nameWithType: CreateUserWithPasswordImportInlineHookOptions
    fullName: Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions
    name: CreateUserWithPasswordImportInlineHookOptions
    nameWithType: CreateUserWithPasswordImportInlineHookOptions
    fullName: Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions
  commentId: T:Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions
  parent: Okta.Sdk
  name: CreateUserWithPasswordImportInlineHookOptions
  nameWithType: CreateUserWithPasswordImportInlineHookOptions
  fullName: Okta.Sdk.CreateUserWithPasswordImportInlineHookOptions
- uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithRecoveryQuestionOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithRecoveryQuestionOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: CreateUserAsync(CreateUserWithRecoveryQuestionOptions, CancellationToken)
  nameWithType: IUsersClient.CreateUserAsync(CreateUserWithRecoveryQuestionOptions, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithRecoveryQuestionOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithRecoveryQuestionOptions,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateUserWithRecoveryQuestionOptions
    name: CreateUserWithRecoveryQuestionOptions
    nameWithType: CreateUserWithRecoveryQuestionOptions
    fullName: Okta.Sdk.CreateUserWithRecoveryQuestionOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithRecoveryQuestionOptions,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateUserWithRecoveryQuestionOptions
    name: CreateUserWithRecoveryQuestionOptions
    nameWithType: CreateUserWithRecoveryQuestionOptions
    fullName: Okta.Sdk.CreateUserWithRecoveryQuestionOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.CreateUserWithRecoveryQuestionOptions
  commentId: T:Okta.Sdk.CreateUserWithRecoveryQuestionOptions
  parent: Okta.Sdk
  name: CreateUserWithRecoveryQuestionOptions
  nameWithType: CreateUserWithRecoveryQuestionOptions
  fullName: Okta.Sdk.CreateUserWithRecoveryQuestionOptions
- uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: CreateUserAsync(CreateUserWithPasswordOptions, CancellationToken)
  nameWithType: IUsersClient.CreateUserAsync(CreateUserWithPasswordOptions, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateUserWithPasswordOptions
    name: CreateUserWithPasswordOptions
    nameWithType: CreateUserWithPasswordOptions
    fullName: Okta.Sdk.CreateUserWithPasswordOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateUserWithPasswordOptions
    name: CreateUserWithPasswordOptions
    nameWithType: CreateUserWithPasswordOptions
    fullName: Okta.Sdk.CreateUserWithPasswordOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.CreateUserWithPasswordOptions
  commentId: T:Okta.Sdk.CreateUserWithPasswordOptions
  parent: Okta.Sdk
  name: CreateUserWithPasswordOptions
  nameWithType: CreateUserWithPasswordOptions
  fullName: Okta.Sdk.CreateUserWithPasswordOptions
- uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithProviderOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithProviderOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: CreateUserAsync(CreateUserWithProviderOptions, CancellationToken)
  nameWithType: IUsersClient.CreateUserAsync(CreateUserWithProviderOptions, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithProviderOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithProviderOptions,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateUserWithProviderOptions
    name: CreateUserWithProviderOptions
    nameWithType: CreateUserWithProviderOptions
    fullName: Okta.Sdk.CreateUserWithProviderOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithProviderOptions,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateUserWithProviderOptions
    name: CreateUserWithProviderOptions
    nameWithType: CreateUserWithProviderOptions
    fullName: Okta.Sdk.CreateUserWithProviderOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.CreateUserWithProviderOptions
  commentId: T:Okta.Sdk.CreateUserWithProviderOptions
  parent: Okta.Sdk
  name: CreateUserWithProviderOptions
  nameWithType: CreateUserWithProviderOptions
  fullName: Okta.Sdk.CreateUserWithProviderOptions
- uid: Okta.Sdk.IUsersClient.ChangePasswordAsync(System.String,Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.ChangePasswordAsync(System.String,Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ChangePasswordAsync(String, ChangePasswordOptions, CancellationToken)
  nameWithType: IUsersClient.ChangePasswordAsync(String, ChangePasswordOptions, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.ChangePasswordAsync(System.String, Okta.Sdk.ChangePasswordOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ChangePasswordAsync(System.String,Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
    name: ChangePasswordAsync
    nameWithType: IUsersClient.ChangePasswordAsync
    fullName: Okta.Sdk.IUsersClient.ChangePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.ChangePasswordOptions
    name: ChangePasswordOptions
    nameWithType: ChangePasswordOptions
    fullName: Okta.Sdk.ChangePasswordOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ChangePasswordAsync(System.String,Okta.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)
    name: ChangePasswordAsync
    nameWithType: IUsersClient.ChangePasswordAsync
    fullName: Okta.Sdk.IUsersClient.ChangePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.ChangePasswordOptions
    name: ChangePasswordOptions
    nameWithType: ChangePasswordOptions
    fullName: Okta.Sdk.ChangePasswordOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ChangePasswordOptions
  commentId: T:Okta.Sdk.ChangePasswordOptions
  parent: Okta.Sdk
  name: ChangePasswordOptions
  nameWithType: ChangePasswordOptions
  fullName: Okta.Sdk.ChangePasswordOptions
- uid: Okta.Sdk.IUsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ChangePasswordAsync(IChangePasswordRequest, String, CancellationToken)
  nameWithType: IUsersClient.ChangePasswordAsync(IChangePasswordRequest, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Threading.CancellationToken)
    name: ChangePasswordAsync
    nameWithType: IUsersClient.ChangePasswordAsync
    fullName: Okta.Sdk.IUsersClient.ChangePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IChangePasswordRequest
    name: IChangePasswordRequest
    nameWithType: IChangePasswordRequest
    fullName: Okta.Sdk.IChangePasswordRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ChangePasswordAsync(Okta.Sdk.IChangePasswordRequest,System.String,System.Threading.CancellationToken)
    name: ChangePasswordAsync
    nameWithType: IUsersClient.ChangePasswordAsync
    fullName: Okta.Sdk.IUsersClient.ChangePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IChangePasswordRequest
    name: IChangePasswordRequest
    nameWithType: IChangePasswordRequest
    fullName: Okta.Sdk.IChangePasswordRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync(System.String,Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync(System.String,Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: ChangeRecoveryQuestionAsync(String, ChangeRecoveryQuestionOptions, CancellationToken)
  nameWithType: IUsersClient.ChangeRecoveryQuestionAsync(String, ChangeRecoveryQuestionOptions, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync(System.String, Okta.Sdk.ChangeRecoveryQuestionOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync(System.String,Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
    name: ChangeRecoveryQuestionAsync
    nameWithType: IUsersClient.ChangeRecoveryQuestionAsync
    fullName: Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.ChangeRecoveryQuestionOptions
    name: ChangeRecoveryQuestionOptions
    nameWithType: ChangeRecoveryQuestionOptions
    fullName: Okta.Sdk.ChangeRecoveryQuestionOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync(System.String,Okta.Sdk.ChangeRecoveryQuestionOptions,System.Threading.CancellationToken)
    name: ChangeRecoveryQuestionAsync
    nameWithType: IUsersClient.ChangeRecoveryQuestionAsync
    fullName: Okta.Sdk.IUsersClient.ChangeRecoveryQuestionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Okta.Sdk.ChangeRecoveryQuestionOptions
    name: ChangeRecoveryQuestionOptions
    nameWithType: ChangeRecoveryQuestionOptions
    fullName: Okta.Sdk.ChangeRecoveryQuestionOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ChangeRecoveryQuestionOptions
  commentId: T:Okta.Sdk.ChangeRecoveryQuestionOptions
  parent: Okta.Sdk
  name: ChangeRecoveryQuestionOptions
  nameWithType: ChangeRecoveryQuestionOptions
  fullName: Okta.Sdk.ChangeRecoveryQuestionOptions
- uid: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: DeactivateOrDeleteUserAsync(String, CancellationToken)
  nameWithType: IUsersClient.DeactivateOrDeleteUserAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String,System.Threading.CancellationToken)
    name: DeactivateOrDeleteUserAsync
    nameWithType: IUsersClient.DeactivateOrDeleteUserAsync
    fullName: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String,System.Threading.CancellationToken)
    name: DeactivateOrDeleteUserAsync
    nameWithType: IUsersClient.DeactivateOrDeleteUserAsync
    fullName: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String)
  commentId: M:Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: DeactivateOrDeleteUserAsync(String)
  nameWithType: IUsersClient.DeactivateOrDeleteUserAsync(String)
  fullName: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String)
    name: DeactivateOrDeleteUserAsync
    nameWithType: IUsersClient.DeactivateOrDeleteUserAsync
    fullName: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync(System.String)
    name: DeactivateOrDeleteUserAsync
    nameWithType: IUsersClient.DeactivateOrDeleteUserAsync
    fullName: Okta.Sdk.IUsersClient.DeactivateOrDeleteUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IUsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: UpdateUserAsync(IUser, String, CancellationToken)
  nameWithType: IUsersClient.UpdateUserAsync(IUser, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.UpdateUserAsync(Okta.Sdk.IUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Threading.CancellationToken)
    name: UpdateUserAsync
    nameWithType: IUsersClient.UpdateUserAsync
    fullName: Okta.Sdk.IUsersClient.UpdateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.UpdateUserAsync(Okta.Sdk.IUser,System.String,System.Threading.CancellationToken)
    name: UpdateUserAsync
    nameWithType: IUsersClient.UpdateUserAsync
    fullName: Okta.Sdk.IUsersClient.UpdateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IUsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: AssignRoleToUserAsync(IAssignRoleRequest, String, String, CancellationToken)
  nameWithType: IUsersClient.AssignRoleToUserAsync(IAssignRoleRequest, String, String, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.String,System.Threading.CancellationToken)
    name: AssignRoleToUserAsync
    nameWithType: IUsersClient.AssignRoleToUserAsync
    fullName: Okta.Sdk.IUsersClient.AssignRoleToUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAssignRoleRequest
    name: IAssignRoleRequest
    nameWithType: IAssignRoleRequest
    fullName: Okta.Sdk.IAssignRoleRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.AssignRoleToUserAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.String,System.Threading.CancellationToken)
    name: AssignRoleToUserAsync
    nameWithType: IUsersClient.AssignRoleToUserAsync
    fullName: Okta.Sdk.IUsersClient.AssignRoleToUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAssignRoleRequest
    name: IAssignRoleRequest
    nameWithType: IAssignRoleRequest
    fullName: Okta.Sdk.IAssignRoleRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
