### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.OktaOAuthException
  commentId: T:Okta.Sdk.OktaOAuthException
  id: OktaOAuthException
  parent: Okta.Sdk
  children:
  - Okta.Sdk.OktaOAuthException.#ctor(System.Int32,Okta.Sdk.IOAuthApiError)
  - Okta.Sdk.OktaOAuthException.Error
  - Okta.Sdk.OktaOAuthException.ErrorDescription
  - Okta.Sdk.OktaOAuthException.StatusCode
  langs:
  - csharp
  - vb
  name: OktaOAuthException
  nameWithType: OktaOAuthException
  fullName: Okta.Sdk.OktaOAuthException
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/OktaOAuthException.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: OktaOAuthException
    path: ../src/Okta.Sdk/OktaOAuthException.cs
    startLine: 10
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAn exception wrapping an error returned by the Okta OAuth API.\n"
  example: []
  syntax:
    content: 'public class OktaOAuthException : OktaException, ISerializable'
    content.vb: >-
      Public Class OktaOAuthException

          Inherits OktaException

          Implements ISerializable
  inheritance:
  - System.Object
  - System.Exception
  - Okta.Sdk.OktaException
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.ToString
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Okta.Sdk.OktaOAuthException.#ctor(System.Int32,Okta.Sdk.IOAuthApiError)
  commentId: M:Okta.Sdk.OktaOAuthException.#ctor(System.Int32,Okta.Sdk.IOAuthApiError)
  id: '#ctor(System.Int32,Okta.Sdk.IOAuthApiError)'
  parent: Okta.Sdk.OktaOAuthException
  langs:
  - csharp
  - vb
  name: OktaOAuthException(Int32, IOAuthApiError)
  nameWithType: OktaOAuthException.OktaOAuthException(Int32, IOAuthApiError)
  fullName: Okta.Sdk.OktaOAuthException.OktaOAuthException(System.Int32, Okta.Sdk.IOAuthApiError)
  type: Constructor
  source:
    remote:
      path: src/Okta.Sdk/OktaOAuthException.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: .ctor
    path: ../src/Okta.Sdk/OktaOAuthException.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nInitializes a new instance of the <xref href=\"Okta.Sdk.OktaOAuthException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public OktaOAuthException(int statusCode, IOAuthApiError error)
    parameters:
    - id: statusCode
      type: System.Int32
      description: The status code.
    - id: error
      type: Okta.Sdk.IOAuthApiError
      description: the error.
    content.vb: Public Sub New(statusCode As Integer, error As IOAuthApiError)
  overload: Okta.Sdk.OktaOAuthException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.OktaOAuthException.StatusCode
  commentId: P:Okta.Sdk.OktaOAuthException.StatusCode
  id: StatusCode
  parent: Okta.Sdk.OktaOAuthException
  langs:
  - csharp
  - vb
  name: StatusCode
  nameWithType: OktaOAuthException.StatusCode
  fullName: Okta.Sdk.OktaOAuthException.StatusCode
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaOAuthException.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: StatusCode
    path: ../src/Okta.Sdk/OktaOAuthException.cs
    startLine: 32
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the HTTP status code.\n"
  example: []
  syntax:
    content: public int StatusCode { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe HTTP status code.\n"
    content.vb: Public ReadOnly Property StatusCode As Integer
  overload: Okta.Sdk.OktaOAuthException.StatusCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaOAuthException.Error
  commentId: P:Okta.Sdk.OktaOAuthException.Error
  id: Error
  parent: Okta.Sdk.OktaOAuthException
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: OktaOAuthException.Error
  fullName: Okta.Sdk.OktaOAuthException.Error
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaOAuthException.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Error
    path: ../src/Okta.Sdk/OktaOAuthException.cs
    startLine: 40
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the error code from the <xref href=\"Okta.Sdk.OktaOAuthException.Error\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public string Error { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe error.\n"
    content.vb: Public ReadOnly Property Error As String
  overload: Okta.Sdk.OktaOAuthException.Error*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaOAuthException.ErrorDescription
  commentId: P:Okta.Sdk.OktaOAuthException.ErrorDescription
  id: ErrorDescription
  parent: Okta.Sdk.OktaOAuthException
  langs:
  - csharp
  - vb
  name: ErrorDescription
  nameWithType: OktaOAuthException.ErrorDescription
  fullName: Okta.Sdk.OktaOAuthException.ErrorDescription
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaOAuthException.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ErrorDescription
    path: ../src/Okta.Sdk/OktaOAuthException.cs
    startLine: 48
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the error code from the <xref href=\"Okta.Sdk.OktaOAuthException.Error\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public string ErrorDescription { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe error description.\n"
    content.vb: Public ReadOnly Property ErrorDescription As String
  overload: Okta.Sdk.OktaOAuthException.ErrorDescription*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Okta.Sdk.OktaException
  commentId: T:Okta.Sdk.OktaException
  parent: Okta.Sdk
  name: OktaException
  nameWithType: OktaException
  fullName: Okta.Sdk.OktaException
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Okta.Sdk.OktaOAuthException
  commentId: T:Okta.Sdk.OktaOAuthException
  name: OktaOAuthException
  nameWithType: OktaOAuthException
  fullName: Okta.Sdk.OktaOAuthException
- uid: Okta.Sdk.OktaOAuthException.#ctor*
  commentId: Overload:Okta.Sdk.OktaOAuthException.#ctor
  name: OktaOAuthException
  nameWithType: OktaOAuthException.OktaOAuthException
  fullName: Okta.Sdk.OktaOAuthException.OktaOAuthException
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Okta.Sdk.IOAuthApiError
  commentId: T:Okta.Sdk.IOAuthApiError
  parent: Okta.Sdk
  name: IOAuthApiError
  nameWithType: IOAuthApiError
  fullName: Okta.Sdk.IOAuthApiError
- uid: Okta.Sdk.OktaOAuthException.StatusCode*
  commentId: Overload:Okta.Sdk.OktaOAuthException.StatusCode
  name: StatusCode
  nameWithType: OktaOAuthException.StatusCode
  fullName: Okta.Sdk.OktaOAuthException.StatusCode
- uid: Okta.Sdk.OktaOAuthException.Error
  commentId: P:Okta.Sdk.OktaOAuthException.Error
  isExternal: true
- uid: Okta.Sdk.OktaOAuthException.Error*
  commentId: Overload:Okta.Sdk.OktaOAuthException.Error
  name: Error
  nameWithType: OktaOAuthException.Error
  fullName: Okta.Sdk.OktaOAuthException.Error
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.OktaOAuthException.ErrorDescription*
  commentId: Overload:Okta.Sdk.OktaOAuthException.ErrorDescription
  name: ErrorDescription
  nameWithType: OktaOAuthException.ErrorDescription
  fullName: Okta.Sdk.OktaOAuthException.ErrorDescription
