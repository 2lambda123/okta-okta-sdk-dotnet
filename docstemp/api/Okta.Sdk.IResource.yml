### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  id: IResource
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  - Okta.Sdk.IResource.GetData
  - Okta.Sdk.IResource.GetProperty``1(System.String)
  - Okta.Sdk.IResource.Item(System.String)
  - Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/IResource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IResource
    path: ../src/Okta.Sdk/IResource.cs
    startLine: 12
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRepresents a resource in the Okta API.\n"
  example: []
  syntax:
    content: public interface IResource
    content.vb: Public Interface IResource
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IResource.Item(System.String)
  commentId: P:Okta.Sdk.IResource.Item(System.String)
  id: Item(System.String)
  parent: Okta.Sdk.IResource
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: IResource.Item[String]
  fullName: Okta.Sdk.IResource.Item[System.String]
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/IResource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: this[]
    path: ../src/Okta.Sdk/IResource.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets a resource property by name.\n"
  example: []
  syntax:
    content: object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: The property name.
    return:
      type: System.Object
      description: The property value, or<code>null</code>.
    content.vb: Property Item(name As String) As Object
  overload: Okta.Sdk.IResource.Item*
  nameWithType.vb: IResource.Item(String)
  modifiers.csharp:
  - get
  - set
  fullName.vb: Okta.Sdk.IResource.Item(System.String)
  name.vb: Item(String)
- uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  id: GetArrayProperty``1(System.String)
  parent: Okta.Sdk.IResource
  langs:
  - csharp
  - vb
  name: GetArrayProperty<T>(String)
  nameWithType: IResource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetArrayProperty<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IResource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetArrayProperty
    path: ../src/Okta.Sdk/IResource.cs
    startLine: 27
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a list or array property from the resource by name.\n"
  example: []
  syntax:
    content: IList<T> GetArrayProperty<T>(string name)
    parameters:
    - id: name
      type: System.String
      description: The property name.
    typeParameters:
    - id: T
      description: The type of items contained in the list or array.
    return:
      type: System.Collections.Generic.IList{{T}}
      description: A <xref href="System.Collections.Generic.IList%601?text=list" data-throw-if-not-resolved="false"></xref> that can be enumerated to obtain the property items.
    content.vb: Function GetArrayProperty(Of T)(name As String) As IList(Of T)
  overload: Okta.Sdk.IResource.GetArrayProperty*
  nameWithType.vb: IResource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
- uid: Okta.Sdk.IResource.GetData
  commentId: M:Okta.Sdk.IResource.GetData
  id: GetData
  parent: Okta.Sdk.IResource
  langs:
  - csharp
  - vb
  name: GetData()
  nameWithType: IResource.GetData()
  fullName: Okta.Sdk.IResource.GetData()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IResource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetData
    path: ../src/Okta.Sdk/IResource.cs
    startLine: 33
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the underlying data backing this resource.\n"
  example: []
  syntax:
    content: IDictionary<string, object> GetData()
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: The data backing this resource.
    content.vb: Function GetData As IDictionary(Of String, Object)
  overload: Okta.Sdk.IResource.GetData*
- uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  id: SetProperty(System.String,System.Object)
  parent: Okta.Sdk.IResource
  langs:
  - csharp
  - vb
  name: SetProperty(String, Object)
  nameWithType: IResource.SetProperty(String, Object)
  fullName: Okta.Sdk.IResource.SetProperty(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IResource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: SetProperty
    path: ../src/Okta.Sdk/IResource.cs
    startLine: 40
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSets a resource property by name\n"
  example: []
  syntax:
    content: void SetProperty(string name, object value)
    parameters:
    - id: name
      type: System.String
      description: The property name
    - id: value
      type: System.Object
      description: The property value
    content.vb: Sub SetProperty(name As String, value As Object)
  overload: Okta.Sdk.IResource.SetProperty*
- uid: Okta.Sdk.IResource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetProperty``1(System.String)
  id: GetProperty``1(System.String)
  parent: Okta.Sdk.IResource
  langs:
  - csharp
  - vb
  name: GetProperty<T>(String)
  nameWithType: IResource.GetProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetProperty<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IResource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetProperty
    path: ../src/Okta.Sdk/IResource.cs
    startLine: 49
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a resource property by name.\n"
  remarks: In derived classes, use the more specific methods such as <xref href="Okta.Sdk.Resource.GetStringProperty(System.String)" data-throw-if-not-resolved="false"></xref> and <xref href="Okta.Sdk.Resource.GetIntegerProperty(System.String)" data-throw-if-not-resolved="false"></xref> instead.
  example: []
  syntax:
    content: T GetProperty<T>(string name)
    parameters:
    - id: name
      type: System.String
      description: The property name.
    typeParameters:
    - id: T
      description: The property type.
    return:
      type: '{T}'
      description: The strongly-typed property value, or <code>null</code>.
    content.vb: Function GetProperty(Of T)(name As String) As T
  overload: Okta.Sdk.IResource.GetProperty*
  nameWithType.vb: IResource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IResource.Item*
  commentId: Overload:Okta.Sdk.IResource.Item
  name: Item
  nameWithType: IResource.Item
  fullName: Okta.Sdk.IResource.Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetArrayProperty*
  commentId: Overload:Okta.Sdk.IResource.GetArrayProperty
  name: GetArrayProperty
  nameWithType: IResource.GetArrayProperty
  fullName: Okta.Sdk.IResource.GetArrayProperty
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.IResource.GetData*
  commentId: Overload:Okta.Sdk.IResource.GetData
  name: GetData
  nameWithType: IResource.GetData
  fullName: Okta.Sdk.IResource.GetData
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.SetProperty*
  commentId: Overload:Okta.Sdk.IResource.SetProperty
  name: SetProperty
  nameWithType: IResource.SetProperty
  fullName: Okta.Sdk.IResource.SetProperty
- uid: Okta.Sdk.Resource.GetStringProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetStringProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetStringProperty(String)
  nameWithType: Resource.GetStringProperty(String)
  fullName: Okta.Sdk.Resource.GetStringProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetStringProperty(System.String)
    name: GetStringProperty
    nameWithType: Resource.GetStringProperty
    fullName: Okta.Sdk.Resource.GetStringProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetStringProperty(System.String)
    name: GetStringProperty
    nameWithType: Resource.GetStringProperty
    fullName: Okta.Sdk.Resource.GetStringProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetIntegerProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetIntegerProperty(String)
  nameWithType: Resource.GetIntegerProperty(String)
  fullName: Okta.Sdk.Resource.GetIntegerProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
    name: GetIntegerProperty
    nameWithType: Resource.GetIntegerProperty
    fullName: Okta.Sdk.Resource.GetIntegerProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
    name: GetIntegerProperty
    nameWithType: Resource.GetIntegerProperty
    fullName: Okta.Sdk.Resource.GetIntegerProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetProperty*
  commentId: Overload:Okta.Sdk.IResource.GetProperty
  name: GetProperty
  nameWithType: IResource.GetProperty
  fullName: Okta.Sdk.IResource.GetProperty
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Okta.Sdk.Resource
  commentId: T:Okta.Sdk.Resource
  parent: Okta.Sdk
  name: Resource
  nameWithType: Resource
  fullName: Okta.Sdk.Resource
- uid: T
  name: T
  nameWithType: T
  fullName: T
