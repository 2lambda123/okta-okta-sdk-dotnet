### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.Subscription
  commentId: T:Okta.Sdk.Subscription
  id: Subscription
  parent: Okta.Sdk
  children:
  - Okta.Sdk.Subscription.Channels
  - Okta.Sdk.Subscription.GetRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Subscription.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Subscription.ListRoleSubscriptions(System.String)
  - Okta.Sdk.Subscription.ListUserSubscriptions(System.String)
  - Okta.Sdk.Subscription.NotificationType
  - Okta.Sdk.Subscription.Status
  - Okta.Sdk.Subscription.SubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Subscription.SubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Subscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Subscription.UnsubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: Subscription
  nameWithType: Subscription
  fullName: Okta.Sdk.Subscription
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/Generated/Subscription.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Subscription
    path: ../src/Okta.Sdk/Generated/Subscription.Generated.cs
    startLine: 16
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: 'public sealed class Subscription : Resource, ISubscription, IResource'
    content.vb: >-
      Public NotInheritable Class Subscription

          Inherits Resource

          Implements ISubscription, IResource
  inheritance:
  - System.Object
  - Okta.Sdk.Resource
  implements:
  - Okta.Sdk.ISubscription
  - Okta.Sdk.IResource
  inheritedMembers:
  - Okta.Sdk.Resource.GetClient
  - Okta.Sdk.Resource.GetData
  - Okta.Sdk.Resource.Item(System.String)
  - Okta.Sdk.Resource.GetProperty``1(System.String)
  - Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  - Okta.Sdk.Resource.GetStringProperty(System.String)
  - Okta.Sdk.Resource.GetBooleanProperty(System.String)
  - Okta.Sdk.Resource.GetIntegerProperty(System.String)
  - Okta.Sdk.Resource.GetLongProperty(System.String)
  - Okta.Sdk.Resource.GetDoubleProperty(System.String)
  - Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  - Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  - Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  - Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Okta.Sdk.Subscription.Channels
  commentId: P:Okta.Sdk.Subscription.Channels
  id: Channels
  parent: Okta.Sdk.Subscription
  langs:
  - csharp
  - vb
  name: Channels
  nameWithType: Subscription.Channels
  fullName: Okta.Sdk.Subscription.Channels
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Subscription.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Channels
    path: ../src/Okta.Sdk/Generated/Subscription.Generated.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IList<string> Channels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property Channels As IList(Of String)
  overload: Okta.Sdk.Subscription.Channels*
  implements:
  - Okta.Sdk.ISubscription.Channels
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Subscription.NotificationType
  commentId: P:Okta.Sdk.Subscription.NotificationType
  id: NotificationType
  parent: Okta.Sdk.Subscription
  langs:
  - csharp
  - vb
  name: NotificationType
  nameWithType: Subscription.NotificationType
  fullName: Okta.Sdk.Subscription.NotificationType
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Subscription.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: NotificationType
    path: ../src/Okta.Sdk/Generated/Subscription.Generated.cs
    startLine: 26
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public NotificationType NotificationType { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.NotificationType
    content.vb: Public Property NotificationType As NotificationType
  overload: Okta.Sdk.Subscription.NotificationType*
  implements:
  - Okta.Sdk.ISubscription.NotificationType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Subscription.Status
  commentId: P:Okta.Sdk.Subscription.Status
  id: Status
  parent: Okta.Sdk.Subscription
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Subscription.Status
  fullName: Okta.Sdk.Subscription.Status
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Subscription.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Status
    path: ../src/Okta.Sdk/Generated/Subscription.Generated.cs
    startLine: 33
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public SubscriptionStatus Status { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.SubscriptionStatus
    content.vb: Public Property Status As SubscriptionStatus
  overload: Okta.Sdk.Subscription.Status*
  implements:
  - Okta.Sdk.ISubscription.Status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Subscription.ListRoleSubscriptions(System.String)
  commentId: M:Okta.Sdk.Subscription.ListRoleSubscriptions(System.String)
  id: ListRoleSubscriptions(System.String)
  parent: Okta.Sdk.Subscription
  langs:
  - csharp
  - vb
  name: ListRoleSubscriptions(String)
  nameWithType: Subscription.ListRoleSubscriptions(String)
  fullName: Okta.Sdk.Subscription.ListRoleSubscriptions(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Subscription.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListRoleSubscriptions
    path: ../src/Okta.Sdk/Generated/Subscription.Generated.cs
    startLine: 40
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<ISubscription> ListRoleSubscriptions(string roleTypeOrRoleId)
    parameters:
    - id: roleTypeOrRoleId
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.ISubscription}
    content.vb: Public Function ListRoleSubscriptions(roleTypeOrRoleId As String) As ICollectionClient(Of ISubscription)
  overload: Okta.Sdk.Subscription.ListRoleSubscriptions*
  implements:
  - Okta.Sdk.ISubscription.ListRoleSubscriptions(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Subscription.GetRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Subscription.GetRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Subscription
  langs:
  - csharp
  - vb
  name: GetRoleSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  nameWithType: Subscription.GetRoleSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Subscription.GetRoleSubscriptionByNotificationTypeAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Subscription.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetRoleSubscriptionByNotificationTypeAsync
    path: ../src/Okta.Sdk/Generated/Subscription.Generated.cs
    startLine: 45
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<ISubscription> GetRoleSubscriptionByNotificationTypeAsync(string roleTypeOrRoleId, string notificationType, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: roleTypeOrRoleId
      type: System.String
    - id: notificationType
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.ISubscription}
    content.vb: Public Function GetRoleSubscriptionByNotificationTypeAsync(roleTypeOrRoleId As String, notificationType As String, cancellationToken As CancellationToken = Nothing) As Task(Of ISubscription)
  overload: Okta.Sdk.Subscription.GetRoleSubscriptionByNotificationTypeAsync*
  implements:
  - Okta.Sdk.ISubscription.GetRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Subscription.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Subscription.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Subscription
  langs:
  - csharp
  - vb
  name: GetUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  nameWithType: Subscription.GetUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Subscription.GetUserSubscriptionByNotificationTypeAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Subscription.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetUserSubscriptionByNotificationTypeAsync
    path: ../src/Okta.Sdk/Generated/Subscription.Generated.cs
    startLine: 50
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<ISubscription> GetUserSubscriptionByNotificationTypeAsync(string userId, string notificationType, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: notificationType
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.ISubscription}
    content.vb: Public Function GetUserSubscriptionByNotificationTypeAsync(userId As String, notificationType As String, cancellationToken As CancellationToken = Nothing) As Task(Of ISubscription)
  overload: Okta.Sdk.Subscription.GetUserSubscriptionByNotificationTypeAsync*
  implements:
  - Okta.Sdk.ISubscription.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Subscription.ListUserSubscriptions(System.String)
  commentId: M:Okta.Sdk.Subscription.ListUserSubscriptions(System.String)
  id: ListUserSubscriptions(System.String)
  parent: Okta.Sdk.Subscription
  langs:
  - csharp
  - vb
  name: ListUserSubscriptions(String)
  nameWithType: Subscription.ListUserSubscriptions(String)
  fullName: Okta.Sdk.Subscription.ListUserSubscriptions(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Subscription.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListUserSubscriptions
    path: ../src/Okta.Sdk/Generated/Subscription.Generated.cs
    startLine: 55
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<ISubscription> ListUserSubscriptions(string userId)
    parameters:
    - id: userId
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.ISubscription}
    content.vb: Public Function ListUserSubscriptions(userId As String) As ICollectionClient(Of ISubscription)
  overload: Okta.Sdk.Subscription.ListUserSubscriptions*
  implements:
  - Okta.Sdk.ISubscription.ListUserSubscriptions(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Subscription.SubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Subscription.SubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  id: SubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Subscription
  langs:
  - csharp
  - vb
  name: SubscribeUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  nameWithType: Subscription.SubscribeUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Subscription.SubscribeUserSubscriptionByNotificationTypeAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Subscription.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: SubscribeUserSubscriptionByNotificationTypeAsync
    path: ../src/Okta.Sdk/Generated/Subscription.Generated.cs
    startLine: 60
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task SubscribeUserSubscriptionByNotificationTypeAsync(string userId, string notificationType, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: notificationType
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SubscribeUserSubscriptionByNotificationTypeAsync(userId As String, notificationType As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Subscription.SubscribeUserSubscriptionByNotificationTypeAsync*
  implements:
  - Okta.Sdk.ISubscription.SubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Subscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Subscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  id: UnsubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Subscription
  langs:
  - csharp
  - vb
  name: UnsubscribeRoleSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  nameWithType: Subscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Subscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Subscription.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UnsubscribeRoleSubscriptionByNotificationTypeAsync
    path: ../src/Okta.Sdk/Generated/Subscription.Generated.cs
    startLine: 65
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task UnsubscribeRoleSubscriptionByNotificationTypeAsync(string roleTypeOrRoleId, string notificationType, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: roleTypeOrRoleId
      type: System.String
    - id: notificationType
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UnsubscribeRoleSubscriptionByNotificationTypeAsync(roleTypeOrRoleId As String, notificationType As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Subscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync*
  implements:
  - Okta.Sdk.ISubscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Subscription.SubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Subscription.SubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  id: SubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Subscription
  langs:
  - csharp
  - vb
  name: SubscribeRoleSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  nameWithType: Subscription.SubscribeRoleSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Subscription.SubscribeRoleSubscriptionByNotificationTypeAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Subscription.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: SubscribeRoleSubscriptionByNotificationTypeAsync
    path: ../src/Okta.Sdk/Generated/Subscription.Generated.cs
    startLine: 70
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task SubscribeRoleSubscriptionByNotificationTypeAsync(string roleTypeOrRoleId, string notificationType, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: roleTypeOrRoleId
      type: System.String
    - id: notificationType
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SubscribeRoleSubscriptionByNotificationTypeAsync(roleTypeOrRoleId As String, notificationType As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Subscription.SubscribeRoleSubscriptionByNotificationTypeAsync*
  implements:
  - Okta.Sdk.ISubscription.SubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Subscription.UnsubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Subscription.UnsubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  id: UnsubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Subscription
  langs:
  - csharp
  - vb
  name: UnsubscribeUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  nameWithType: Subscription.UnsubscribeUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Subscription.UnsubscribeUserSubscriptionByNotificationTypeAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Subscription.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UnsubscribeUserSubscriptionByNotificationTypeAsync
    path: ../src/Okta.Sdk/Generated/Subscription.Generated.cs
    startLine: 75
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task UnsubscribeUserSubscriptionByNotificationTypeAsync(string userId, string notificationType, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: notificationType
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UnsubscribeUserSubscriptionByNotificationTypeAsync(userId As String, notificationType As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Subscription.UnsubscribeUserSubscriptionByNotificationTypeAsync*
  implements:
  - Okta.Sdk.ISubscription.UnsubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Okta.Sdk.Resource
  commentId: T:Okta.Sdk.Resource
  parent: Okta.Sdk
  name: Resource
  nameWithType: Resource
  fullName: Okta.Sdk.Resource
- uid: Okta.Sdk.ISubscription
  commentId: T:Okta.Sdk.ISubscription
  parent: Okta.Sdk
  name: ISubscription
  nameWithType: ISubscription
  fullName: Okta.Sdk.ISubscription
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  parent: Okta.Sdk
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
- uid: Okta.Sdk.Resource.GetClient
  commentId: M:Okta.Sdk.Resource.GetClient
  parent: Okta.Sdk.Resource
  name: GetClient()
  nameWithType: Resource.GetClient()
  fullName: Okta.Sdk.Resource.GetClient()
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetClient
    name: GetClient
    nameWithType: Resource.GetClient
    fullName: Okta.Sdk.Resource.GetClient
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetClient
    name: GetClient
    nameWithType: Resource.GetClient
    fullName: Okta.Sdk.Resource.GetClient
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetData
  commentId: M:Okta.Sdk.Resource.GetData
  parent: Okta.Sdk.Resource
  name: GetData()
  nameWithType: Resource.GetData()
  fullName: Okta.Sdk.Resource.GetData()
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetData
    name: GetData
    nameWithType: Resource.GetData
    fullName: Okta.Sdk.Resource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetData
    name: GetData
    nameWithType: Resource.GetData
    fullName: Okta.Sdk.Resource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.Item(System.String)
  commentId: P:Okta.Sdk.Resource.Item(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: Item[String]
  nameWithType: Resource.Item[String]
  fullName: Okta.Sdk.Resource.Item[System.String]
  nameWithType.vb: Resource.Item(String)
  fullName.vb: Okta.Sdk.Resource.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.Item(System.String)
    name: Item
    nameWithType: Resource.Item
    fullName: Okta.Sdk.Resource.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Okta.Sdk.Resource.Item(System.String)
    name: Item
    nameWithType: Resource.Item
    fullName: Okta.Sdk.Resource.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: Resource.GetProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetProperty<T>(System.String)
  nameWithType.vb: Resource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: Resource.GetProperty<T>
    fullName: Okta.Sdk.Resource.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: Resource.GetProperty(Of T)
    fullName: Okta.Sdk.Resource.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: Resource.SetProperty(String, Object)
  fullName: Okta.Sdk.Resource.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: Resource.SetProperty
    fullName: Okta.Sdk.Resource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: Resource.SetProperty
    fullName: Okta.Sdk.Resource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetStringProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetStringProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetStringProperty(String)
  nameWithType: Resource.GetStringProperty(String)
  fullName: Okta.Sdk.Resource.GetStringProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetStringProperty(System.String)
    name: GetStringProperty
    nameWithType: Resource.GetStringProperty
    fullName: Okta.Sdk.Resource.GetStringProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetStringProperty(System.String)
    name: GetStringProperty
    nameWithType: Resource.GetStringProperty
    fullName: Okta.Sdk.Resource.GetStringProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetBooleanProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetBooleanProperty(String)
  nameWithType: Resource.GetBooleanProperty(String)
  fullName: Okta.Sdk.Resource.GetBooleanProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
    name: GetBooleanProperty
    nameWithType: Resource.GetBooleanProperty
    fullName: Okta.Sdk.Resource.GetBooleanProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
    name: GetBooleanProperty
    nameWithType: Resource.GetBooleanProperty
    fullName: Okta.Sdk.Resource.GetBooleanProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetIntegerProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetIntegerProperty(String)
  nameWithType: Resource.GetIntegerProperty(String)
  fullName: Okta.Sdk.Resource.GetIntegerProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
    name: GetIntegerProperty
    nameWithType: Resource.GetIntegerProperty
    fullName: Okta.Sdk.Resource.GetIntegerProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
    name: GetIntegerProperty
    nameWithType: Resource.GetIntegerProperty
    fullName: Okta.Sdk.Resource.GetIntegerProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetLongProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetLongProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetLongProperty(String)
  nameWithType: Resource.GetLongProperty(String)
  fullName: Okta.Sdk.Resource.GetLongProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetLongProperty(System.String)
    name: GetLongProperty
    nameWithType: Resource.GetLongProperty
    fullName: Okta.Sdk.Resource.GetLongProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetLongProperty(System.String)
    name: GetLongProperty
    nameWithType: Resource.GetLongProperty
    fullName: Okta.Sdk.Resource.GetLongProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetDoubleProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetDoubleProperty(String)
  nameWithType: Resource.GetDoubleProperty(String)
  fullName: Okta.Sdk.Resource.GetDoubleProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
    name: GetDoubleProperty
    nameWithType: Resource.GetDoubleProperty
    fullName: Okta.Sdk.Resource.GetDoubleProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
    name: GetDoubleProperty
    nameWithType: Resource.GetDoubleProperty
    fullName: Okta.Sdk.Resource.GetDoubleProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetDateTimeProperty(String)
  nameWithType: Resource.GetDateTimeProperty(String)
  fullName: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
    name: GetDateTimeProperty
    nameWithType: Resource.GetDateTimeProperty
    fullName: Okta.Sdk.Resource.GetDateTimeProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
    name: GetDateTimeProperty
    nameWithType: Resource.GetDateTimeProperty
    fullName: Okta.Sdk.Resource.GetDateTimeProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetArrayProperty<T>(String)
  nameWithType: Resource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetArrayProperty<T>(System.String)
  nameWithType.vb: Resource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
    name: GetArrayProperty<T>
    nameWithType: Resource.GetArrayProperty<T>
    fullName: Okta.Sdk.Resource.GetArrayProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
    name: GetArrayProperty(Of T)
    nameWithType: Resource.GetArrayProperty(Of T)
    fullName: Okta.Sdk.Resource.GetArrayProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetEnumProperty<TEnum>(String)
  nameWithType: Resource.GetEnumProperty<TEnum>(String)
  fullName: Okta.Sdk.Resource.GetEnumProperty<TEnum>(System.String)
  nameWithType.vb: Resource.GetEnumProperty(Of TEnum)(String)
  fullName.vb: Okta.Sdk.Resource.GetEnumProperty(Of TEnum)(System.String)
  name.vb: GetEnumProperty(Of TEnum)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
    name: GetEnumProperty<TEnum>
    nameWithType: Resource.GetEnumProperty<TEnum>
    fullName: Okta.Sdk.Resource.GetEnumProperty<TEnum>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
    name: GetEnumProperty(Of TEnum)
    nameWithType: Resource.GetEnumProperty(Of TEnum)
    fullName: Okta.Sdk.Resource.GetEnumProperty(Of TEnum)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetResourceProperty<T>(String)
  nameWithType: Resource.GetResourceProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetResourceProperty<T>(System.String)
  nameWithType.vb: Resource.GetResourceProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetResourceProperty(Of T)(System.String)
  name.vb: GetResourceProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
    name: GetResourceProperty<T>
    nameWithType: Resource.GetResourceProperty<T>
    fullName: Okta.Sdk.Resource.GetResourceProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
    name: GetResourceProperty(Of T)
    nameWithType: Resource.GetResourceProperty(Of T)
    fullName: Okta.Sdk.Resource.GetResourceProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.Subscription.Channels*
  commentId: Overload:Okta.Sdk.Subscription.Channels
  name: Channels
  nameWithType: Subscription.Channels
  fullName: Okta.Sdk.Subscription.Channels
- uid: Okta.Sdk.ISubscription.Channels
  commentId: P:Okta.Sdk.ISubscription.Channels
  parent: Okta.Sdk.ISubscription
  name: Channels
  nameWithType: ISubscription.Channels
  fullName: Okta.Sdk.ISubscription.Channels
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.Subscription.NotificationType*
  commentId: Overload:Okta.Sdk.Subscription.NotificationType
  name: NotificationType
  nameWithType: Subscription.NotificationType
  fullName: Okta.Sdk.Subscription.NotificationType
- uid: Okta.Sdk.ISubscription.NotificationType
  commentId: P:Okta.Sdk.ISubscription.NotificationType
  parent: Okta.Sdk.ISubscription
  name: NotificationType
  nameWithType: ISubscription.NotificationType
  fullName: Okta.Sdk.ISubscription.NotificationType
- uid: Okta.Sdk.NotificationType
  commentId: T:Okta.Sdk.NotificationType
  parent: Okta.Sdk
  name: NotificationType
  nameWithType: NotificationType
  fullName: Okta.Sdk.NotificationType
- uid: Okta.Sdk.Subscription.Status*
  commentId: Overload:Okta.Sdk.Subscription.Status
  name: Status
  nameWithType: Subscription.Status
  fullName: Okta.Sdk.Subscription.Status
- uid: Okta.Sdk.ISubscription.Status
  commentId: P:Okta.Sdk.ISubscription.Status
  parent: Okta.Sdk.ISubscription
  name: Status
  nameWithType: ISubscription.Status
  fullName: Okta.Sdk.ISubscription.Status
- uid: Okta.Sdk.SubscriptionStatus
  commentId: T:Okta.Sdk.SubscriptionStatus
  parent: Okta.Sdk
  name: SubscriptionStatus
  nameWithType: SubscriptionStatus
  fullName: Okta.Sdk.SubscriptionStatus
- uid: Okta.Sdk.Subscription.ListRoleSubscriptions*
  commentId: Overload:Okta.Sdk.Subscription.ListRoleSubscriptions
  name: ListRoleSubscriptions
  nameWithType: Subscription.ListRoleSubscriptions
  fullName: Okta.Sdk.Subscription.ListRoleSubscriptions
- uid: Okta.Sdk.ISubscription.ListRoleSubscriptions(System.String)
  commentId: M:Okta.Sdk.ISubscription.ListRoleSubscriptions(System.String)
  parent: Okta.Sdk.ISubscription
  isExternal: true
  name: ListRoleSubscriptions(String)
  nameWithType: ISubscription.ListRoleSubscriptions(String)
  fullName: Okta.Sdk.ISubscription.ListRoleSubscriptions(System.String)
  spec.csharp:
  - uid: Okta.Sdk.ISubscription.ListRoleSubscriptions(System.String)
    name: ListRoleSubscriptions
    nameWithType: ISubscription.ListRoleSubscriptions
    fullName: Okta.Sdk.ISubscription.ListRoleSubscriptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.ISubscription.ListRoleSubscriptions(System.String)
    name: ListRoleSubscriptions
    nameWithType: ISubscription.ListRoleSubscriptions
    fullName: Okta.Sdk.ISubscription.ListRoleSubscriptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.ISubscription}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.ISubscription}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<ISubscription>
  nameWithType: ICollectionClient<ISubscription>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.ISubscription>
  nameWithType.vb: ICollectionClient(Of ISubscription)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.ISubscription)
  name.vb: ICollectionClient(Of ISubscription)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.ISubscription
    name: ISubscription
    nameWithType: ISubscription
    fullName: Okta.Sdk.ISubscription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.ISubscription
    name: ISubscription
    nameWithType: ISubscription
    fullName: Okta.Sdk.ISubscription
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Subscription.GetRoleSubscriptionByNotificationTypeAsync*
  commentId: Overload:Okta.Sdk.Subscription.GetRoleSubscriptionByNotificationTypeAsync
  name: GetRoleSubscriptionByNotificationTypeAsync
  nameWithType: Subscription.GetRoleSubscriptionByNotificationTypeAsync
  fullName: Okta.Sdk.Subscription.GetRoleSubscriptionByNotificationTypeAsync
- uid: Okta.Sdk.ISubscription.GetRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.ISubscription.GetRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.ISubscription
  isExternal: true
  name: GetRoleSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  nameWithType: ISubscription.GetRoleSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.ISubscription.GetRoleSubscriptionByNotificationTypeAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.ISubscription.GetRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetRoleSubscriptionByNotificationTypeAsync
    nameWithType: ISubscription.GetRoleSubscriptionByNotificationTypeAsync
    fullName: Okta.Sdk.ISubscription.GetRoleSubscriptionByNotificationTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.ISubscription.GetRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetRoleSubscriptionByNotificationTypeAsync
    nameWithType: ISubscription.GetRoleSubscriptionByNotificationTypeAsync
    fullName: Okta.Sdk.ISubscription.GetRoleSubscriptionByNotificationTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.ISubscription}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.ISubscription}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ISubscription>
  nameWithType: Task<ISubscription>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.ISubscription>
  nameWithType.vb: Task(Of ISubscription)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.ISubscription)
  name.vb: Task(Of ISubscription)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.ISubscription
    name: ISubscription
    nameWithType: ISubscription
    fullName: Okta.Sdk.ISubscription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.ISubscription
    name: ISubscription
    nameWithType: ISubscription
    fullName: Okta.Sdk.ISubscription
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.Subscription.GetUserSubscriptionByNotificationTypeAsync*
  commentId: Overload:Okta.Sdk.Subscription.GetUserSubscriptionByNotificationTypeAsync
  name: GetUserSubscriptionByNotificationTypeAsync
  nameWithType: Subscription.GetUserSubscriptionByNotificationTypeAsync
  fullName: Okta.Sdk.Subscription.GetUserSubscriptionByNotificationTypeAsync
- uid: Okta.Sdk.ISubscription.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.ISubscription.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.ISubscription
  isExternal: true
  name: GetUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  nameWithType: ISubscription.GetUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.ISubscription.GetUserSubscriptionByNotificationTypeAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.ISubscription.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetUserSubscriptionByNotificationTypeAsync
    nameWithType: ISubscription.GetUserSubscriptionByNotificationTypeAsync
    fullName: Okta.Sdk.ISubscription.GetUserSubscriptionByNotificationTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.ISubscription.GetUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetUserSubscriptionByNotificationTypeAsync
    nameWithType: ISubscription.GetUserSubscriptionByNotificationTypeAsync
    fullName: Okta.Sdk.ISubscription.GetUserSubscriptionByNotificationTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Subscription.ListUserSubscriptions*
  commentId: Overload:Okta.Sdk.Subscription.ListUserSubscriptions
  name: ListUserSubscriptions
  nameWithType: Subscription.ListUserSubscriptions
  fullName: Okta.Sdk.Subscription.ListUserSubscriptions
- uid: Okta.Sdk.ISubscription.ListUserSubscriptions(System.String)
  commentId: M:Okta.Sdk.ISubscription.ListUserSubscriptions(System.String)
  parent: Okta.Sdk.ISubscription
  isExternal: true
  name: ListUserSubscriptions(String)
  nameWithType: ISubscription.ListUserSubscriptions(String)
  fullName: Okta.Sdk.ISubscription.ListUserSubscriptions(System.String)
  spec.csharp:
  - uid: Okta.Sdk.ISubscription.ListUserSubscriptions(System.String)
    name: ListUserSubscriptions
    nameWithType: ISubscription.ListUserSubscriptions
    fullName: Okta.Sdk.ISubscription.ListUserSubscriptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.ISubscription.ListUserSubscriptions(System.String)
    name: ListUserSubscriptions
    nameWithType: ISubscription.ListUserSubscriptions
    fullName: Okta.Sdk.ISubscription.ListUserSubscriptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Subscription.SubscribeUserSubscriptionByNotificationTypeAsync*
  commentId: Overload:Okta.Sdk.Subscription.SubscribeUserSubscriptionByNotificationTypeAsync
  name: SubscribeUserSubscriptionByNotificationTypeAsync
  nameWithType: Subscription.SubscribeUserSubscriptionByNotificationTypeAsync
  fullName: Okta.Sdk.Subscription.SubscribeUserSubscriptionByNotificationTypeAsync
- uid: Okta.Sdk.ISubscription.SubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.ISubscription.SubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.ISubscription
  isExternal: true
  name: SubscribeUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  nameWithType: ISubscription.SubscribeUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.ISubscription.SubscribeUserSubscriptionByNotificationTypeAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.ISubscription.SubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: SubscribeUserSubscriptionByNotificationTypeAsync
    nameWithType: ISubscription.SubscribeUserSubscriptionByNotificationTypeAsync
    fullName: Okta.Sdk.ISubscription.SubscribeUserSubscriptionByNotificationTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.ISubscription.SubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: SubscribeUserSubscriptionByNotificationTypeAsync
    nameWithType: ISubscription.SubscribeUserSubscriptionByNotificationTypeAsync
    fullName: Okta.Sdk.ISubscription.SubscribeUserSubscriptionByNotificationTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Okta.Sdk.Subscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync*
  commentId: Overload:Okta.Sdk.Subscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync
  name: UnsubscribeRoleSubscriptionByNotificationTypeAsync
  nameWithType: Subscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync
  fullName: Okta.Sdk.Subscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync
- uid: Okta.Sdk.ISubscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.ISubscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.ISubscription
  isExternal: true
  name: UnsubscribeRoleSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  nameWithType: ISubscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.ISubscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.ISubscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: UnsubscribeRoleSubscriptionByNotificationTypeAsync
    nameWithType: ISubscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync
    fullName: Okta.Sdk.ISubscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.ISubscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: UnsubscribeRoleSubscriptionByNotificationTypeAsync
    nameWithType: ISubscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync
    fullName: Okta.Sdk.ISubscription.UnsubscribeRoleSubscriptionByNotificationTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Subscription.SubscribeRoleSubscriptionByNotificationTypeAsync*
  commentId: Overload:Okta.Sdk.Subscription.SubscribeRoleSubscriptionByNotificationTypeAsync
  name: SubscribeRoleSubscriptionByNotificationTypeAsync
  nameWithType: Subscription.SubscribeRoleSubscriptionByNotificationTypeAsync
  fullName: Okta.Sdk.Subscription.SubscribeRoleSubscriptionByNotificationTypeAsync
- uid: Okta.Sdk.ISubscription.SubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.ISubscription.SubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.ISubscription
  isExternal: true
  name: SubscribeRoleSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  nameWithType: ISubscription.SubscribeRoleSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.ISubscription.SubscribeRoleSubscriptionByNotificationTypeAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.ISubscription.SubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: SubscribeRoleSubscriptionByNotificationTypeAsync
    nameWithType: ISubscription.SubscribeRoleSubscriptionByNotificationTypeAsync
    fullName: Okta.Sdk.ISubscription.SubscribeRoleSubscriptionByNotificationTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.ISubscription.SubscribeRoleSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: SubscribeRoleSubscriptionByNotificationTypeAsync
    nameWithType: ISubscription.SubscribeRoleSubscriptionByNotificationTypeAsync
    fullName: Okta.Sdk.ISubscription.SubscribeRoleSubscriptionByNotificationTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Subscription.UnsubscribeUserSubscriptionByNotificationTypeAsync*
  commentId: Overload:Okta.Sdk.Subscription.UnsubscribeUserSubscriptionByNotificationTypeAsync
  name: UnsubscribeUserSubscriptionByNotificationTypeAsync
  nameWithType: Subscription.UnsubscribeUserSubscriptionByNotificationTypeAsync
  fullName: Okta.Sdk.Subscription.UnsubscribeUserSubscriptionByNotificationTypeAsync
- uid: Okta.Sdk.ISubscription.UnsubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.ISubscription.UnsubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.ISubscription
  isExternal: true
  name: UnsubscribeUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  nameWithType: ISubscription.UnsubscribeUserSubscriptionByNotificationTypeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.ISubscription.UnsubscribeUserSubscriptionByNotificationTypeAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.ISubscription.UnsubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: UnsubscribeUserSubscriptionByNotificationTypeAsync
    nameWithType: ISubscription.UnsubscribeUserSubscriptionByNotificationTypeAsync
    fullName: Okta.Sdk.ISubscription.UnsubscribeUserSubscriptionByNotificationTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.ISubscription.UnsubscribeUserSubscriptionByNotificationTypeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: UnsubscribeUserSubscriptionByNotificationTypeAsync
    nameWithType: ISubscription.UnsubscribeUserSubscriptionByNotificationTypeAsync
    fullName: Okta.Sdk.ISubscription.UnsubscribeUserSubscriptionByNotificationTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
