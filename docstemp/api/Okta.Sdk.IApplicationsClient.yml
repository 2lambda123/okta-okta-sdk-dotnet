### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IApplicationsClient
  commentId: T:Okta.Sdk.IApplicationsClient
  id: IApplicationsClient
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IApplicationsClient.ActivateApplicationAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.ActivateDefaultProvisioningConnectionForApplicationAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.AssignUserToApplicationAsync(Okta.Sdk.AssignUserToApplicationOptions,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.AssignUserToApplicationAsync(Okta.Sdk.IAppUser,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.CloneApplicationKeyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateBasicAuthApplicationOptions,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateBookmarkApplicationOptions,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateOpenIdConnectApplication,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSamlApplicationOptions,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaApplicationOptions,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaCustomApplicationOptions,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaNoPluginApplicationOptions,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaThreeFieldApplicationOptions,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateWsFederationApplicationOptions,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.IApplication,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.CreateApplicationGroupAssignmentAsync(Okta.Sdk.CreateApplicationGroupAssignmentOptions,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.DeactivateApplicationAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.DeactivateDefaultProvisioningConnectionForApplicationAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.DeleteApplicationAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.DeleteApplicationGroupAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync(System.String,System.String)
  - Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.GenerateApplicationKeyAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.GenerateCsrForApplicationAsync(Okta.Sdk.ICsrMetadata,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.GetApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.GetApplicationAsync``1(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.GetApplicationGroupAssignmentAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.GetApplicationKeyAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.GetApplicationUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.GetCsrForApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.GetDefaultProvisioningConnectionForApplicationAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.GetFeatureForApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.GetOAuth2TokenForApplicationAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.GetScopeConsentGrantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.ListApplicationGroupAssignments(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
  - Okta.Sdk.IApplicationsClient.ListApplicationKeys(System.String)
  - Okta.Sdk.IApplicationsClient.ListApplications(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean})
  - Okta.Sdk.IApplicationsClient.ListApplicationUsers(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  - Okta.Sdk.IApplicationsClient.ListCsrsForApplication(System.String)
  - Okta.Sdk.IApplicationsClient.ListFeaturesForApplication(System.String)
  - Okta.Sdk.IApplicationsClient.ListOAuth2TokensForApplication(System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.IApplicationsClient.ListScopeConsentGrants(System.String,System.String)
  - Okta.Sdk.IApplicationsClient.PublishBinaryCerCertAsync(System.Byte[],System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.PublishBinaryDerCertAsync(System.Byte[],System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.PublishBinaryPemCertAsync(System.Byte[],System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.PublishCerCertAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.PublishDerCertAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.RevokeCsrFromApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.RevokeOAuth2TokenForApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.RevokeOAuth2TokensForApplicationAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.RevokeScopeConsentGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.SetDefaultProvisioningConnectionForApplicationAsync(Okta.Sdk.IProvisioningConnectionRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.UpdateApplicationAsync(Okta.Sdk.IApplication,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.UpdateApplicationAsync``1(Okta.Sdk.IApplication,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.UpdateApplicationPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.UpdateApplicationUserAsync(Okta.Sdk.IAppUser,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IApplicationsClient.UploadApplicationLogoAsync(System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IApplicationsClient
  nameWithType: IApplicationsClient
  fullName: Okta.Sdk.IApplicationsClient
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IApplicationsClient
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 13
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: A client that works with Okta Application resources.
  example: []
  syntax:
    content: 'public interface IApplicationsClient : IAsyncEnumerable<IApplication>'
    content.vb: >-
      Public Interface IApplicationsClient

          Inherits IAsyncEnumerable(Of IApplication)
  inheritedMembers:
  - System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IApplication}.GetAsyncEnumerator(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IApplicationsClient.ListApplications(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean})
  commentId: M:Okta.Sdk.IApplicationsClient.ListApplications(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean})
  id: ListApplications(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean})
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: ListApplications(String, String, Nullable<Int32>, String, String, Nullable<Boolean>)
  nameWithType: IApplicationsClient.ListApplications(String, String, Nullable<Int32>, String, String, Nullable<Boolean>)
  fullName: Okta.Sdk.IApplicationsClient.ListApplications(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListApplications
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 27
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nEnumerates apps added to your organization with pagination. A subset of apps can be returned that match a supported filter expression or query.\n"
  example: []
  syntax:
    content: ICollectionClient<IApplication> ListApplications(string q = null, string after = null, int? limit = -1, string filter = null, string expand = null, bool? includeNonDeleted = false)
    parameters:
    - id: q
      type: System.String
      description: ''
    - id: after
      type: System.String
      description: Specifies the pagination cursor for the next page of apps
    - id: limit
      type: System.Nullable{System.Int32}
      description: Specifies the number of results for a page
    - id: filter
      type: System.String
      description: Filters apps by status, user.id, group.id or credentials.signing.kid expression
    - id: expand
      type: System.String
      description: Traverses users link relationship and optionally embeds Application User resource
    - id: includeNonDeleted
      type: System.Nullable{System.Boolean}
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IApplication}
      description: A collection of <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListApplications(q As String = Nothing, after As String = Nothing, limit As Integer? = -1, filter As String = Nothing, expand As String = Nothing, includeNonDeleted As Boolean? = False) As ICollectionClient(Of IApplication)
  overload: Okta.Sdk.IApplicationsClient.ListApplications*
  nameWithType.vb: IApplicationsClient.ListApplications(String, String, Nullable(Of Int32), String, String, Nullable(Of Boolean))
  fullName.vb: Okta.Sdk.IApplicationsClient.ListApplications(System.String, System.String, System.Nullable(Of System.Int32), System.String, System.String, System.Nullable(Of System.Boolean))
  name.vb: ListApplications(String, String, Nullable(Of Int32), String, String, Nullable(Of Boolean))
- uid: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.IApplication,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.IApplication,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: CreateApplicationAsync(Okta.Sdk.IApplication,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: CreateApplicationAsync(IApplication, Nullable<Boolean>, CancellationToken)
  nameWithType: IApplicationsClient.CreateApplicationAsync(IApplication, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.IApplication, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 36
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAdds a new application to your Okta organization.\n"
  example: []
  syntax:
    content: Task<IApplication> CreateApplicationAsync(IApplication application, bool? activate = true, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: application
      type: Okta.Sdk.IApplication
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> resource.
    - id: activate
      type: System.Nullable{System.Boolean}
      description: Executes activation lifecycle operation when creating the app
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplication}
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateApplicationAsync(application As IApplication, activate As Boolean? = True, cancellationToken As CancellationToken = Nothing) As Task(Of IApplication)
  overload: Okta.Sdk.IApplicationsClient.CreateApplicationAsync*
  nameWithType.vb: IApplicationsClient.CreateApplicationAsync(IApplication, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.IApplication, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: CreateApplicationAsync(IApplication, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.IApplicationsClient.DeleteApplicationAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.DeleteApplicationAsync(System.String,System.Threading.CancellationToken)
  id: DeleteApplicationAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: DeleteApplicationAsync(String, CancellationToken)
  nameWithType: IApplicationsClient.DeleteApplicationAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.DeleteApplicationAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 44
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRemoves an inactive application.\n"
  example: []
  syntax:
    content: Task DeleteApplicationAsync(string appId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeleteApplicationAsync(appId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IApplicationsClient.DeleteApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.GetApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.GetApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: GetApplicationAsync(String, String, CancellationToken)
  nameWithType: IApplicationsClient.GetApplicationAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.GetApplicationAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 53
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nFetches an application from your Okta organization by `id`.\n"
  example: []
  syntax:
    content: Task<IApplication> GetApplicationAsync(string appId, string expand = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: expand
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplication}
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetApplicationAsync(appId As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IApplication)
  overload: Okta.Sdk.IApplicationsClient.GetApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.UpdateApplicationAsync(Okta.Sdk.IApplication,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.UpdateApplicationAsync(Okta.Sdk.IApplication,System.String,System.Threading.CancellationToken)
  id: UpdateApplicationAsync(Okta.Sdk.IApplication,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: UpdateApplicationAsync(IApplication, String, CancellationToken)
  nameWithType: IApplicationsClient.UpdateApplicationAsync(IApplication, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.UpdateApplicationAsync(Okta.Sdk.IApplication, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 62
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nUpdates an application in your organization.\n"
  example: []
  syntax:
    content: Task<IApplication> UpdateApplicationAsync(IApplication application, string appId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: application
      type: Okta.Sdk.IApplication
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> resource.
    - id: appId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplication}
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdateApplicationAsync(application As IApplication, appId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IApplication)
  overload: Okta.Sdk.IApplicationsClient.UpdateApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.GetDefaultProvisioningConnectionForApplicationAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.GetDefaultProvisioningConnectionForApplicationAsync(System.String,System.Threading.CancellationToken)
  id: GetDefaultProvisioningConnectionForApplicationAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: GetDefaultProvisioningConnectionForApplicationAsync(String, CancellationToken)
  nameWithType: IApplicationsClient.GetDefaultProvisioningConnectionForApplicationAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.GetDefaultProvisioningConnectionForApplicationAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetDefaultProvisioningConnectionForApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 70
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGet default Provisioning Connection for application\n"
  example: []
  syntax:
    content: Task<IProvisioningConnection> GetDefaultProvisioningConnectionForApplicationAsync(string appId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IProvisioningConnection}
      description: The <xref href="Okta.Sdk.IProvisioningConnection" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetDefaultProvisioningConnectionForApplicationAsync(appId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IProvisioningConnection)
  overload: Okta.Sdk.IApplicationsClient.GetDefaultProvisioningConnectionForApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.SetDefaultProvisioningConnectionForApplicationAsync(Okta.Sdk.IProvisioningConnectionRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.SetDefaultProvisioningConnectionForApplicationAsync(Okta.Sdk.IProvisioningConnectionRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: SetDefaultProvisioningConnectionForApplicationAsync(Okta.Sdk.IProvisioningConnectionRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: SetDefaultProvisioningConnectionForApplicationAsync(IProvisioningConnectionRequest, String, Nullable<Boolean>, CancellationToken)
  nameWithType: IApplicationsClient.SetDefaultProvisioningConnectionForApplicationAsync(IProvisioningConnectionRequest, String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.SetDefaultProvisioningConnectionForApplicationAsync(Okta.Sdk.IProvisioningConnectionRequest, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: SetDefaultProvisioningConnectionForApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 80
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSet default Provisioning Connection for application\n"
  example: []
  syntax:
    content: Task<IProvisioningConnection> SetDefaultProvisioningConnectionForApplicationAsync(IProvisioningConnectionRequest profile, string appId, bool? activate = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: profile
      type: Okta.Sdk.IProvisioningConnectionRequest
      description: The <xref href="Okta.Sdk.IProvisioningConnectionRequest" data-throw-if-not-resolved="false"></xref> resource.
    - id: appId
      type: System.String
      description: ''
    - id: activate
      type: System.Nullable{System.Boolean}
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IProvisioningConnection}
      description: The <xref href="Okta.Sdk.IProvisioningConnection" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function SetDefaultProvisioningConnectionForApplicationAsync(profile As IProvisioningConnectionRequest, appId As String, activate As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IProvisioningConnection)
  overload: Okta.Sdk.IApplicationsClient.SetDefaultProvisioningConnectionForApplicationAsync*
  nameWithType.vb: IApplicationsClient.SetDefaultProvisioningConnectionForApplicationAsync(IProvisioningConnectionRequest, String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IApplicationsClient.SetDefaultProvisioningConnectionForApplicationAsync(Okta.Sdk.IProvisioningConnectionRequest, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: SetDefaultProvisioningConnectionForApplicationAsync(IProvisioningConnectionRequest, String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.IApplicationsClient.ActivateDefaultProvisioningConnectionForApplicationAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.ActivateDefaultProvisioningConnectionForApplicationAsync(System.String,System.Threading.CancellationToken)
  id: ActivateDefaultProvisioningConnectionForApplicationAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: ActivateDefaultProvisioningConnectionForApplicationAsync(String, CancellationToken)
  nameWithType: IApplicationsClient.ActivateDefaultProvisioningConnectionForApplicationAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.ActivateDefaultProvisioningConnectionForApplicationAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateDefaultProvisioningConnectionForApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 88
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nActivates the default Provisioning Connection for an application.\n"
  example: []
  syntax:
    content: Task ActivateDefaultProvisioningConnectionForApplicationAsync(string appId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function ActivateDefaultProvisioningConnectionForApplicationAsync(appId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IApplicationsClient.ActivateDefaultProvisioningConnectionForApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.DeactivateDefaultProvisioningConnectionForApplicationAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.DeactivateDefaultProvisioningConnectionForApplicationAsync(System.String,System.Threading.CancellationToken)
  id: DeactivateDefaultProvisioningConnectionForApplicationAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: DeactivateDefaultProvisioningConnectionForApplicationAsync(String, CancellationToken)
  nameWithType: IApplicationsClient.DeactivateDefaultProvisioningConnectionForApplicationAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.DeactivateDefaultProvisioningConnectionForApplicationAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateDefaultProvisioningConnectionForApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 96
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nDeactivates the default Provisioning Connection for an application.\n"
  example: []
  syntax:
    content: Task DeactivateDefaultProvisioningConnectionForApplicationAsync(string appId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeactivateDefaultProvisioningConnectionForApplicationAsync(appId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IApplicationsClient.DeactivateDefaultProvisioningConnectionForApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.ListCsrsForApplication(System.String)
  commentId: M:Okta.Sdk.IApplicationsClient.ListCsrsForApplication(System.String)
  id: ListCsrsForApplication(System.String)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: ListCsrsForApplication(String)
  nameWithType: IApplicationsClient.ListCsrsForApplication(String)
  fullName: Okta.Sdk.IApplicationsClient.ListCsrsForApplication(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListCsrsForApplication
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 103
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nEnumerates Certificate Signing Requests for an application\n"
  example: []
  syntax:
    content: ICollectionClient<ICsr> ListCsrsForApplication(string appId)
    parameters:
    - id: appId
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.ICsr}
      description: A collection of <xref href="Okta.Sdk.ICsr" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListCsrsForApplication(appId As String) As ICollectionClient(Of ICsr)
  overload: Okta.Sdk.IApplicationsClient.ListCsrsForApplication*
- uid: Okta.Sdk.IApplicationsClient.GenerateCsrForApplicationAsync(Okta.Sdk.ICsrMetadata,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.GenerateCsrForApplicationAsync(Okta.Sdk.ICsrMetadata,System.String,System.Threading.CancellationToken)
  id: GenerateCsrForApplicationAsync(Okta.Sdk.ICsrMetadata,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: GenerateCsrForApplicationAsync(ICsrMetadata, String, CancellationToken)
  nameWithType: IApplicationsClient.GenerateCsrForApplicationAsync(ICsrMetadata, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.GenerateCsrForApplicationAsync(Okta.Sdk.ICsrMetadata, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GenerateCsrForApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 112
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGenerates a new key pair and returns the Certificate Signing Request for it.\n"
  example: []
  syntax:
    content: Task<ICsr> GenerateCsrForApplicationAsync(ICsrMetadata metadata, string appId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: metadata
      type: Okta.Sdk.ICsrMetadata
      description: The <xref href="Okta.Sdk.ICsrMetadata" data-throw-if-not-resolved="false"></xref> resource.
    - id: appId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.ICsr}
      description: The <xref href="Okta.Sdk.ICsr" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GenerateCsrForApplicationAsync(metadata As ICsrMetadata, appId As String, cancellationToken As CancellationToken = Nothing) As Task(Of ICsr)
  overload: Okta.Sdk.IApplicationsClient.GenerateCsrForApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.RevokeCsrFromApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.RevokeCsrFromApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RevokeCsrFromApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: RevokeCsrFromApplicationAsync(String, String, CancellationToken)
  nameWithType: IApplicationsClient.RevokeCsrFromApplicationAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.RevokeCsrFromApplicationAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeCsrFromApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 121
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\n\n"
  example: []
  syntax:
    content: Task RevokeCsrFromApplicationAsync(string appId, string csrId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: csrId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function RevokeCsrFromApplicationAsync(appId As String, csrId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IApplicationsClient.RevokeCsrFromApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.GetCsrForApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.GetCsrForApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetCsrForApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: GetCsrForApplicationAsync(String, String, CancellationToken)
  nameWithType: IApplicationsClient.GetCsrForApplicationAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.GetCsrForApplicationAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetCsrForApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 130
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\n\n"
  example: []
  syntax:
    content: Task<ICsr> GetCsrForApplicationAsync(string appId, string csrId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: csrId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.ICsr}
      description: The <xref href="Okta.Sdk.ICsr" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetCsrForApplicationAsync(appId As String, csrId As String, cancellationToken As CancellationToken = Nothing) As Task(Of ICsr)
  overload: Okta.Sdk.IApplicationsClient.GetCsrForApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.ListApplicationKeys(System.String)
  commentId: M:Okta.Sdk.IApplicationsClient.ListApplicationKeys(System.String)
  id: ListApplicationKeys(System.String)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: ListApplicationKeys(String)
  nameWithType: IApplicationsClient.ListApplicationKeys(String)
  fullName: Okta.Sdk.IApplicationsClient.ListApplicationKeys(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListApplicationKeys
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 137
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nEnumerates key credentials for an application\n"
  example: []
  syntax:
    content: ICollectionClient<IJsonWebKey> ListApplicationKeys(string appId)
    parameters:
    - id: appId
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
      description: A collection of <xref href="Okta.Sdk.IJsonWebKey" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListApplicationKeys(appId As String) As ICollectionClient(Of IJsonWebKey)
  overload: Okta.Sdk.IApplicationsClient.ListApplicationKeys*
- uid: Okta.Sdk.IApplicationsClient.GenerateApplicationKeyAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.GenerateApplicationKeyAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  id: GenerateApplicationKeyAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: GenerateApplicationKeyAsync(String, Nullable<Int32>, CancellationToken)
  nameWithType: IApplicationsClient.GenerateApplicationKeyAsync(String, Nullable<Int32>, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.GenerateApplicationKeyAsync(System.String, System.Nullable<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GenerateApplicationKeyAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 146
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGenerates a new X.509 certificate for an application key credential\n"
  example: []
  syntax:
    content: Task<IJsonWebKey> GenerateApplicationKeyAsync(string appId, int? validityYears = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: validityYears
      type: System.Nullable{System.Int32}
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
      description: The <xref href="Okta.Sdk.IJsonWebKey" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GenerateApplicationKeyAsync(appId As String, validityYears As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.IApplicationsClient.GenerateApplicationKeyAsync*
  nameWithType.vb: IApplicationsClient.GenerateApplicationKeyAsync(String, Nullable(Of Int32), CancellationToken)
  fullName.vb: Okta.Sdk.IApplicationsClient.GenerateApplicationKeyAsync(System.String, System.Nullable(Of System.Int32), System.Threading.CancellationToken)
  name.vb: GenerateApplicationKeyAsync(String, Nullable(Of Int32), CancellationToken)
- uid: Okta.Sdk.IApplicationsClient.GetApplicationKeyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.GetApplicationKeyAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetApplicationKeyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: GetApplicationKeyAsync(String, String, CancellationToken)
  nameWithType: IApplicationsClient.GetApplicationKeyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.GetApplicationKeyAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetApplicationKeyAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 155
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a specific application key credential by kid\n"
  example: []
  syntax:
    content: Task<IJsonWebKey> GetApplicationKeyAsync(string appId, string keyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: keyId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
      description: The <xref href="Okta.Sdk.IJsonWebKey" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetApplicationKeyAsync(appId As String, keyId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.IApplicationsClient.GetApplicationKeyAsync*
- uid: Okta.Sdk.IApplicationsClient.CloneApplicationKeyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.CloneApplicationKeyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: CloneApplicationKeyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: CloneApplicationKeyAsync(String, String, String, CancellationToken)
  nameWithType: IApplicationsClient.CloneApplicationKeyAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.CloneApplicationKeyAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CloneApplicationKeyAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 165
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nClones a X.509 certificate for an application key credential from a source application to target application.\n"
  example: []
  syntax:
    content: Task<IJsonWebKey> CloneApplicationKeyAsync(string appId, string keyId, string targetAid, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: keyId
      type: System.String
      description: ''
    - id: targetAid
      type: System.String
      description: Unique key of the target Application
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
      description: The <xref href="Okta.Sdk.IJsonWebKey" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CloneApplicationKeyAsync(appId As String, keyId As String, targetAid As String, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.IApplicationsClient.CloneApplicationKeyAsync*
- uid: Okta.Sdk.IApplicationsClient.ListFeaturesForApplication(System.String)
  commentId: M:Okta.Sdk.IApplicationsClient.ListFeaturesForApplication(System.String)
  id: ListFeaturesForApplication(System.String)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: ListFeaturesForApplication(String)
  nameWithType: IApplicationsClient.ListFeaturesForApplication(String)
  fullName: Okta.Sdk.IApplicationsClient.ListFeaturesForApplication(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListFeaturesForApplication
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 172
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nList Features for application\n"
  example: []
  syntax:
    content: ICollectionClient<IApplicationFeature> ListFeaturesForApplication(string appId)
    parameters:
    - id: appId
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IApplicationFeature}
      description: A collection of <xref href="Okta.Sdk.IApplicationFeature" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListFeaturesForApplication(appId As String) As ICollectionClient(Of IApplicationFeature)
  overload: Okta.Sdk.IApplicationsClient.ListFeaturesForApplication*
- uid: Okta.Sdk.IApplicationsClient.GetFeatureForApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.GetFeatureForApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetFeatureForApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: GetFeatureForApplicationAsync(String, String, CancellationToken)
  nameWithType: IApplicationsClient.GetFeatureForApplicationAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.GetFeatureForApplicationAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetFeatureForApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 181
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nFetches a Feature object for an application.\n"
  example: []
  syntax:
    content: Task<IApplicationFeature> GetFeatureForApplicationAsync(string appId, string name, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: name
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplicationFeature}
      description: The <xref href="Okta.Sdk.IApplicationFeature" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetFeatureForApplicationAsync(appId As String, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of IApplicationFeature)
  overload: Okta.Sdk.IApplicationsClient.GetFeatureForApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject,System.String,System.String,System.Threading.CancellationToken)
  id: UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: UpdateFeatureForApplicationAsync(ICapabilitiesObject, String, String, CancellationToken)
  nameWithType: IApplicationsClient.UpdateFeatureForApplicationAsync(ICapabilitiesObject, String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateFeatureForApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 191
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nUpdates a Feature object for an application.\n"
  example: []
  syntax:
    content: Task<IApplicationFeature> UpdateFeatureForApplicationAsync(ICapabilitiesObject capabilities, string appId, string name, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: capabilities
      type: Okta.Sdk.ICapabilitiesObject
      description: The <xref href="Okta.Sdk.ICapabilitiesObject" data-throw-if-not-resolved="false"></xref> resource.
    - id: appId
      type: System.String
      description: ''
    - id: name
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplicationFeature}
      description: The <xref href="Okta.Sdk.IApplicationFeature" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdateFeatureForApplicationAsync(capabilities As ICapabilitiesObject, appId As String, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of IApplicationFeature)
  overload: Okta.Sdk.IApplicationsClient.UpdateFeatureForApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.ListScopeConsentGrants(System.String,System.String)
  commentId: M:Okta.Sdk.IApplicationsClient.ListScopeConsentGrants(System.String,System.String)
  id: ListScopeConsentGrants(System.String,System.String)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: ListScopeConsentGrants(String, String)
  nameWithType: IApplicationsClient.ListScopeConsentGrants(String, String)
  fullName: Okta.Sdk.IApplicationsClient.ListScopeConsentGrants(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListScopeConsentGrants
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 199
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nLists all scope consent grants for the application\n"
  example: []
  syntax:
    content: ICollectionClient<IOAuth2ScopeConsentGrant> ListScopeConsentGrants(string appId, string expand = null)
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: expand
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2ScopeConsentGrant}
      description: A collection of <xref href="Okta.Sdk.IOAuth2ScopeConsentGrant" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListScopeConsentGrants(appId As String, expand As String = Nothing) As ICollectionClient(Of IOAuth2ScopeConsentGrant)
  overload: Okta.Sdk.IApplicationsClient.ListScopeConsentGrants*
- uid: Okta.Sdk.IApplicationsClient.GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant,System.String,System.Threading.CancellationToken)
  id: GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: GrantConsentToScopeAsync(IOAuth2ScopeConsentGrant, String, CancellationToken)
  nameWithType: IApplicationsClient.GrantConsentToScopeAsync(IOAuth2ScopeConsentGrant, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GrantConsentToScopeAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 208
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGrants consent for the application to request an OAuth 2.0 Okta scope\n"
  example: []
  syntax:
    content: Task<IOAuth2ScopeConsentGrant> GrantConsentToScopeAsync(IOAuth2ScopeConsentGrant oAuth2ScopeConsentGrant, string appId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oAuth2ScopeConsentGrant
      type: Okta.Sdk.IOAuth2ScopeConsentGrant
      description: The <xref href="Okta.Sdk.IOAuth2ScopeConsentGrant" data-throw-if-not-resolved="false"></xref> resource.
    - id: appId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2ScopeConsentGrant}
      description: The <xref href="Okta.Sdk.IOAuth2ScopeConsentGrant" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GrantConsentToScopeAsync(oAuth2ScopeConsentGrant As IOAuth2ScopeConsentGrant, appId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2ScopeConsentGrant)
  overload: Okta.Sdk.IApplicationsClient.GrantConsentToScopeAsync*
- uid: Okta.Sdk.IApplicationsClient.RevokeScopeConsentGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.RevokeScopeConsentGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RevokeScopeConsentGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: RevokeScopeConsentGrantAsync(String, String, CancellationToken)
  nameWithType: IApplicationsClient.RevokeScopeConsentGrantAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.RevokeScopeConsentGrantAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeScopeConsentGrantAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 217
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRevokes permission for the application to request the given scope\n"
  example: []
  syntax:
    content: Task RevokeScopeConsentGrantAsync(string appId, string grantId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: grantId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function RevokeScopeConsentGrantAsync(appId As String, grantId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IApplicationsClient.RevokeScopeConsentGrantAsync*
- uid: Okta.Sdk.IApplicationsClient.GetScopeConsentGrantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.GetScopeConsentGrantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetScopeConsentGrantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: GetScopeConsentGrantAsync(String, String, String, CancellationToken)
  nameWithType: IApplicationsClient.GetScopeConsentGrantAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.GetScopeConsentGrantAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetScopeConsentGrantAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 227
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nFetches a single scope consent grant for the application\n"
  example: []
  syntax:
    content: Task<IOAuth2ScopeConsentGrant> GetScopeConsentGrantAsync(string appId, string grantId, string expand = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: grantId
      type: System.String
      description: ''
    - id: expand
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2ScopeConsentGrant}
      description: The <xref href="Okta.Sdk.IOAuth2ScopeConsentGrant" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetScopeConsentGrantAsync(appId As String, grantId As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2ScopeConsentGrant)
  overload: Okta.Sdk.IApplicationsClient.GetScopeConsentGrantAsync*
- uid: Okta.Sdk.IApplicationsClient.ListApplicationGroupAssignments(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
  commentId: M:Okta.Sdk.IApplicationsClient.ListApplicationGroupAssignments(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
  id: ListApplicationGroupAssignments(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: ListApplicationGroupAssignments(String, String, String, Nullable<Int32>, String)
  nameWithType: IApplicationsClient.ListApplicationGroupAssignments(String, String, String, Nullable<Int32>, String)
  fullName: Okta.Sdk.IApplicationsClient.ListApplicationGroupAssignments(System.String, System.String, System.String, System.Nullable<System.Int32>, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListApplicationGroupAssignments
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 238
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nEnumerates group assignments for an application.\n"
  example: []
  syntax:
    content: ICollectionClient<IApplicationGroupAssignment> ListApplicationGroupAssignments(string appId, string q = null, string after = null, int? limit = -1, string expand = null)
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: q
      type: System.String
      description: ''
    - id: after
      type: System.String
      description: Specifies the pagination cursor for the next page of assignments
    - id: limit
      type: System.Nullable{System.Int32}
      description: Specifies the number of results for a page
    - id: expand
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IApplicationGroupAssignment}
      description: A collection of <xref href="Okta.Sdk.IApplicationGroupAssignment" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListApplicationGroupAssignments(appId As String, q As String = Nothing, after As String = Nothing, limit As Integer? = -1, expand As String = Nothing) As ICollectionClient(Of IApplicationGroupAssignment)
  overload: Okta.Sdk.IApplicationsClient.ListApplicationGroupAssignments*
  nameWithType.vb: IApplicationsClient.ListApplicationGroupAssignments(String, String, String, Nullable(Of Int32), String)
  fullName.vb: Okta.Sdk.IApplicationsClient.ListApplicationGroupAssignments(System.String, System.String, System.String, System.Nullable(Of System.Int32), System.String)
  name.vb: ListApplicationGroupAssignments(String, String, String, Nullable(Of Int32), String)
- uid: Okta.Sdk.IApplicationsClient.DeleteApplicationGroupAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.DeleteApplicationGroupAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeleteApplicationGroupAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: DeleteApplicationGroupAssignmentAsync(String, String, CancellationToken)
  nameWithType: IApplicationsClient.DeleteApplicationGroupAssignmentAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.DeleteApplicationGroupAssignmentAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteApplicationGroupAssignmentAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 247
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRemoves a group assignment from an application.\n"
  example: []
  syntax:
    content: Task DeleteApplicationGroupAssignmentAsync(string appId, string groupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: groupId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeleteApplicationGroupAssignmentAsync(appId As String, groupId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IApplicationsClient.DeleteApplicationGroupAssignmentAsync*
- uid: Okta.Sdk.IApplicationsClient.GetApplicationGroupAssignmentAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.GetApplicationGroupAssignmentAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetApplicationGroupAssignmentAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: GetApplicationGroupAssignmentAsync(String, String, String, CancellationToken)
  nameWithType: IApplicationsClient.GetApplicationGroupAssignmentAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.GetApplicationGroupAssignmentAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetApplicationGroupAssignmentAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 257
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nFetches an application group assignment\n"
  example: []
  syntax:
    content: Task<IApplicationGroupAssignment> GetApplicationGroupAssignmentAsync(string appId, string groupId, string expand = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: groupId
      type: System.String
      description: ''
    - id: expand
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplicationGroupAssignment}
      description: The <xref href="Okta.Sdk.IApplicationGroupAssignment" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetApplicationGroupAssignmentAsync(appId As String, groupId As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IApplicationGroupAssignment)
  overload: Okta.Sdk.IApplicationsClient.GetApplicationGroupAssignmentAsync*
- uid: Okta.Sdk.IApplicationsClient.CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment,System.String,System.String,System.Threading.CancellationToken)
  id: CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: CreateApplicationGroupAssignmentAsync(IApplicationGroupAssignment, String, String, CancellationToken)
  nameWithType: IApplicationsClient.CreateApplicationGroupAssignmentAsync(IApplicationGroupAssignment, String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateApplicationGroupAssignmentAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 267
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAssigns a group to an application\n"
  example: []
  syntax:
    content: Task<IApplicationGroupAssignment> CreateApplicationGroupAssignmentAsync(IApplicationGroupAssignment applicationGroupAssignment, string appId, string groupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: applicationGroupAssignment
      type: Okta.Sdk.IApplicationGroupAssignment
      description: The <xref href="Okta.Sdk.IApplicationGroupAssignment" data-throw-if-not-resolved="false"></xref> resource.
    - id: appId
      type: System.String
      description: ''
    - id: groupId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplicationGroupAssignment}
      description: The <xref href="Okta.Sdk.IApplicationGroupAssignment" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateApplicationGroupAssignmentAsync(applicationGroupAssignment As IApplicationGroupAssignment, appId As String, groupId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IApplicationGroupAssignment)
  overload: Okta.Sdk.IApplicationsClient.CreateApplicationGroupAssignmentAsync*
- uid: Okta.Sdk.IApplicationsClient.ActivateApplicationAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.ActivateApplicationAsync(System.String,System.Threading.CancellationToken)
  id: ActivateApplicationAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: ActivateApplicationAsync(String, CancellationToken)
  nameWithType: IApplicationsClient.ActivateApplicationAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.ActivateApplicationAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 275
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nActivates an inactive application.\n"
  example: []
  syntax:
    content: Task ActivateApplicationAsync(string appId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function ActivateApplicationAsync(appId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IApplicationsClient.ActivateApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.DeactivateApplicationAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.DeactivateApplicationAsync(System.String,System.Threading.CancellationToken)
  id: DeactivateApplicationAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: DeactivateApplicationAsync(String, CancellationToken)
  nameWithType: IApplicationsClient.DeactivateApplicationAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.DeactivateApplicationAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 283
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nDeactivates an active application.\n"
  example: []
  syntax:
    content: Task DeactivateApplicationAsync(string appId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeactivateApplicationAsync(appId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IApplicationsClient.DeactivateApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.UploadApplicationLogoAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.UploadApplicationLogoAsync(System.String,System.Threading.CancellationToken)
  id: UploadApplicationLogoAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: UploadApplicationLogoAsync(String, CancellationToken)
  nameWithType: IApplicationsClient.UploadApplicationLogoAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.UploadApplicationLogoAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UploadApplicationLogoAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 291
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nUpdate the logo for an application.\n"
  example: []
  syntax:
    content: Task UploadApplicationLogoAsync(string appId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function UploadApplicationLogoAsync(appId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IApplicationsClient.UploadApplicationLogoAsync*
- uid: Okta.Sdk.IApplicationsClient.UpdateApplicationPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.UpdateApplicationPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  id: UpdateApplicationPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: UpdateApplicationPolicyAsync(String, String, CancellationToken)
  nameWithType: IApplicationsClient.UpdateApplicationPolicyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.UpdateApplicationPolicyAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateApplicationPolicyAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 300
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAssign an application to a specific policy. This unassigns the application from its currently assigned policy.\n"
  example: []
  syntax:
    content: Task UpdateApplicationPolicyAsync(string appId, string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: policyId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function UpdateApplicationPolicyAsync(appId As String, policyId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IApplicationsClient.UpdateApplicationPolicyAsync*
- uid: Okta.Sdk.IApplicationsClient.RevokeOAuth2TokensForApplicationAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.RevokeOAuth2TokensForApplicationAsync(System.String,System.Threading.CancellationToken)
  id: RevokeOAuth2TokensForApplicationAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: RevokeOAuth2TokensForApplicationAsync(String, CancellationToken)
  nameWithType: IApplicationsClient.RevokeOAuth2TokensForApplicationAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.RevokeOAuth2TokensForApplicationAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeOAuth2TokensForApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 308
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRevokes all tokens for the specified application\n"
  example: []
  syntax:
    content: Task RevokeOAuth2TokensForApplicationAsync(string appId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function RevokeOAuth2TokensForApplicationAsync(appId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IApplicationsClient.RevokeOAuth2TokensForApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.ListOAuth2TokensForApplication(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IApplicationsClient.ListOAuth2TokensForApplication(System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListOAuth2TokensForApplication(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: ListOAuth2TokensForApplication(String, String, String, Nullable<Int32>)
  nameWithType: IApplicationsClient.ListOAuth2TokensForApplication(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IApplicationsClient.ListOAuth2TokensForApplication(System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListOAuth2TokensForApplication
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 318
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nLists all tokens for the application\n"
  example: []
  syntax:
    content: ICollectionClient<IOAuth2Token> ListOAuth2TokensForApplication(string appId, string expand = null, string after = null, int? limit = 20)
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: expand
      type: System.String
      description: ''
    - id: after
      type: System.String
      description: ''
    - id: limit
      type: System.Nullable{System.Int32}
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Token}
      description: A collection of <xref href="Okta.Sdk.IOAuth2Token" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListOAuth2TokensForApplication(appId As String, expand As String = Nothing, after As String = Nothing, limit As Integer? = 20) As ICollectionClient(Of IOAuth2Token)
  overload: Okta.Sdk.IApplicationsClient.ListOAuth2TokensForApplication*
  nameWithType.vb: IApplicationsClient.ListOAuth2TokensForApplication(String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IApplicationsClient.ListOAuth2TokensForApplication(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListOAuth2TokensForApplication(String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.IApplicationsClient.RevokeOAuth2TokenForApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.RevokeOAuth2TokenForApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RevokeOAuth2TokenForApplicationAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: RevokeOAuth2TokenForApplicationAsync(String, String, CancellationToken)
  nameWithType: IApplicationsClient.RevokeOAuth2TokenForApplicationAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.RevokeOAuth2TokenForApplicationAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeOAuth2TokenForApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 327
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRevokes the specified token for the specified application\n"
  example: []
  syntax:
    content: Task RevokeOAuth2TokenForApplicationAsync(string appId, string tokenId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: tokenId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function RevokeOAuth2TokenForApplicationAsync(appId As String, tokenId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IApplicationsClient.RevokeOAuth2TokenForApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.GetOAuth2TokenForApplicationAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.GetOAuth2TokenForApplicationAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetOAuth2TokenForApplicationAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: GetOAuth2TokenForApplicationAsync(String, String, String, CancellationToken)
  nameWithType: IApplicationsClient.GetOAuth2TokenForApplicationAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.GetOAuth2TokenForApplicationAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetOAuth2TokenForApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 337
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a token for the specified application\n"
  example: []
  syntax:
    content: Task<IOAuth2Token> GetOAuth2TokenForApplicationAsync(string appId, string tokenId, string expand = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: tokenId
      type: System.String
      description: ''
    - id: expand
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Token}
      description: The <xref href="Okta.Sdk.IOAuth2Token" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetOAuth2TokenForApplicationAsync(appId As String, tokenId As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Token)
  overload: Okta.Sdk.IApplicationsClient.GetOAuth2TokenForApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.ListApplicationUsers(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  commentId: M:Okta.Sdk.IApplicationsClient.ListApplicationUsers(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  id: ListApplicationUsers(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: ListApplicationUsers(String, String, String, String, Nullable<Int32>, String, String)
  nameWithType: IApplicationsClient.ListApplicationUsers(String, String, String, String, Nullable<Int32>, String, String)
  fullName: Okta.Sdk.IApplicationsClient.ListApplicationUsers(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListApplicationUsers
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 350
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nEnumerates all assigned [application users](#application-user-model) for an application.\n"
  example: []
  syntax:
    content: ICollectionClient<IAppUser> ListApplicationUsers(string appId, string q = null, string query_scope = null, string after = null, int? limit = -1, string filter = null, string expand = null)
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: q
      type: System.String
      description: ''
    - id: query_scope
      type: System.String
      description: ''
    - id: after
      type: System.String
      description: specifies the pagination cursor for the next page of assignments
    - id: limit
      type: System.Nullable{System.Int32}
      description: specifies the number of results for a page
    - id: filter
      type: System.String
      description: ''
    - id: expand
      type: System.String
      description: ''
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IAppUser}
      description: A collection of <xref href="Okta.Sdk.IAppUser" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListApplicationUsers(appId As String, q As String = Nothing, query_scope As String = Nothing, after As String = Nothing, limit As Integer? = -1, filter As String = Nothing, expand As String = Nothing) As ICollectionClient(Of IAppUser)
  overload: Okta.Sdk.IApplicationsClient.ListApplicationUsers*
  nameWithType.vb: IApplicationsClient.ListApplicationUsers(String, String, String, String, Nullable(Of Int32), String, String)
  fullName.vb: Okta.Sdk.IApplicationsClient.ListApplicationUsers(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32), System.String, System.String)
  name.vb: ListApplicationUsers(String, String, String, String, Nullable(Of Int32), String, String)
- uid: Okta.Sdk.IApplicationsClient.AssignUserToApplicationAsync(Okta.Sdk.IAppUser,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.AssignUserToApplicationAsync(Okta.Sdk.IAppUser,System.String,System.Threading.CancellationToken)
  id: AssignUserToApplicationAsync(Okta.Sdk.IAppUser,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: AssignUserToApplicationAsync(IAppUser, String, CancellationToken)
  nameWithType: IApplicationsClient.AssignUserToApplicationAsync(IAppUser, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.AssignUserToApplicationAsync(Okta.Sdk.IAppUser, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AssignUserToApplicationAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 359
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAssigns an user to an application with [credentials](#application-user-credentials-object) and an app-specific [profile](#application-user-profile-object). Profile mappings defined for the application are first applied before applying any profile properties specified in the request.\n"
  example: []
  syntax:
    content: Task<IAppUser> AssignUserToApplicationAsync(IAppUser appUser, string appId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appUser
      type: Okta.Sdk.IAppUser
      description: The <xref href="Okta.Sdk.IAppUser" data-throw-if-not-resolved="false"></xref> resource.
    - id: appId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAppUser}
      description: The <xref href="Okta.Sdk.IAppUser" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function AssignUserToApplicationAsync(appUser As IAppUser, appId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAppUser)
  overload: Okta.Sdk.IApplicationsClient.AssignUserToApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: DeleteApplicationUserAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: DeleteApplicationUserAsync(String, String, Nullable<Boolean>, CancellationToken)
  nameWithType: IApplicationsClient.DeleteApplicationUserAsync(String, String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync(System.String, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteApplicationUserAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 369
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRemoves an assignment for a user from an application.\n"
  example: []
  syntax:
    content: Task DeleteApplicationUserAsync(string appId, string userId, bool? sendEmail = false, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: userId
      type: System.String
      description: ''
    - id: sendEmail
      type: System.Nullable{System.Boolean}
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeleteApplicationUserAsync(appId As String, userId As String, sendEmail As Boolean? = False, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync*
  nameWithType.vb: IApplicationsClient.DeleteApplicationUserAsync(String, String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync(System.String, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: DeleteApplicationUserAsync(String, String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.IApplicationsClient.GetApplicationUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.GetApplicationUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetApplicationUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: GetApplicationUserAsync(String, String, String, CancellationToken)
  nameWithType: IApplicationsClient.GetApplicationUserAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.GetApplicationUserAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetApplicationUserAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 379
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nFetches a specific user assignment for application by `id`.\n"
  example: []
  syntax:
    content: Task<IAppUser> GetApplicationUserAsync(string appId, string userId, string expand = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: ''
    - id: userId
      type: System.String
      description: ''
    - id: expand
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAppUser}
      description: The <xref href="Okta.Sdk.IAppUser" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetApplicationUserAsync(appId As String, userId As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IAppUser)
  overload: Okta.Sdk.IApplicationsClient.GetApplicationUserAsync*
- uid: Okta.Sdk.IApplicationsClient.UpdateApplicationUserAsync(Okta.Sdk.IAppUser,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.UpdateApplicationUserAsync(Okta.Sdk.IAppUser,System.String,System.String,System.Threading.CancellationToken)
  id: UpdateApplicationUserAsync(Okta.Sdk.IAppUser,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: UpdateApplicationUserAsync(IAppUser, String, String, CancellationToken)
  nameWithType: IApplicationsClient.UpdateApplicationUserAsync(IAppUser, String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.UpdateApplicationUserAsync(Okta.Sdk.IAppUser, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateApplicationUserAsync
    path: ../src/Okta.Sdk/Generated/IApplicationsClient.Generated.cs
    startLine: 389
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nUpdates a user&apos;s profile for an application\n"
  example: []
  syntax:
    content: Task<IAppUser> UpdateApplicationUserAsync(IAppUser appUser, string appId, string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appUser
      type: Okta.Sdk.IAppUser
      description: The <xref href="Okta.Sdk.IAppUser" data-throw-if-not-resolved="false"></xref> resource.
    - id: appId
      type: System.String
      description: ''
    - id: userId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAppUser}
      description: The <xref href="Okta.Sdk.IAppUser" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdateApplicationUserAsync(appUser As IAppUser, appId As String, userId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAppUser)
  overload: Okta.Sdk.IApplicationsClient.UpdateApplicationUserAsync*
- uid: Okta.Sdk.IApplicationsClient.GetApplicationAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.GetApplicationAsync``1(System.String,System.Threading.CancellationToken)
  id: GetApplicationAsync``1(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: GetApplicationAsync<T>(String, CancellationToken)
  nameWithType: IApplicationsClient.GetApplicationAsync<T>(String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.GetApplicationAsync<T>(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetApplicationAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 22
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets an application by id\n"
  example: []
  syntax:
    content: >-
      Task<T> GetApplicationAsync<T>(string appId, CancellationToken cancellationToken = default(CancellationToken))

          where T : class, IApplication
    parameters:
    - id: appId
      type: System.String
      description: The application id
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    typeParameters:
    - id: T
      description: The application type
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetApplicationAsync(Of T As {Class, IApplication})(appId As String, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Okta.Sdk.IApplicationsClient.GetApplicationAsync*
  nameWithType.vb: IApplicationsClient.GetApplicationAsync(Of T)(String, CancellationToken)
  fullName.vb: Okta.Sdk.IApplicationsClient.GetApplicationAsync(Of T)(System.String, System.Threading.CancellationToken)
  name.vb: GetApplicationAsync(Of T)(String, CancellationToken)
- uid: Okta.Sdk.IApplicationsClient.UpdateApplicationAsync``1(Okta.Sdk.IApplication,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.UpdateApplicationAsync``1(Okta.Sdk.IApplication,System.String,System.Threading.CancellationToken)
  id: UpdateApplicationAsync``1(Okta.Sdk.IApplication,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: UpdateApplicationAsync<T>(IApplication, String, CancellationToken)
  nameWithType: IApplicationsClient.UpdateApplicationAsync<T>(IApplication, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.UpdateApplicationAsync<T>(Okta.Sdk.IApplication, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateApplicationAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 33
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nUpdates an application\n"
  example: []
  syntax:
    content: >-
      Task<T> UpdateApplicationAsync<T>(IApplication application, string appId, CancellationToken cancellationToken = default(CancellationToken))

          where T : class, IApplication
    parameters:
    - id: application
      type: Okta.Sdk.IApplication
      description: The application to update
    - id: appId
      type: System.String
      description: The application id
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    typeParameters:
    - id: T
      description: The application type
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdateApplicationAsync(Of T As {Class, IApplication})(application As IApplication, appId As String, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Okta.Sdk.IApplicationsClient.UpdateApplicationAsync*
  nameWithType.vb: IApplicationsClient.UpdateApplicationAsync(Of T)(IApplication, String, CancellationToken)
  fullName.vb: Okta.Sdk.IApplicationsClient.UpdateApplicationAsync(Of T)(Okta.Sdk.IApplication, System.String, System.Threading.CancellationToken)
  name.vb: UpdateApplicationAsync(Of T)(IApplication, String, CancellationToken)
- uid: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateBasicAuthApplicationOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateBasicAuthApplicationOptions,System.Threading.CancellationToken)
  id: CreateApplicationAsync(Okta.Sdk.CreateBasicAuthApplicationOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: CreateApplicationAsync(CreateBasicAuthApplicationOptions, CancellationToken)
  nameWithType: IApplicationsClient.CreateApplicationAsync(CreateBasicAuthApplicationOptions, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateBasicAuthApplicationOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateApplicationAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 42
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAdds an new application that uses HTTP Basic Authentication Scheme\n"
  example: []
  syntax:
    content: Task<IApplication> CreateApplicationAsync(CreateBasicAuthApplicationOptions basicAuthApplicationOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: basicAuthApplicationOptions
      type: Okta.Sdk.CreateBasicAuthApplicationOptions
      description: The application settings helper
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplication}
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateApplicationAsync(basicAuthApplicationOptions As CreateBasicAuthApplicationOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IApplication)
  overload: Okta.Sdk.IApplicationsClient.CreateApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateBookmarkApplicationOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateBookmarkApplicationOptions,System.Threading.CancellationToken)
  id: CreateApplicationAsync(Okta.Sdk.CreateBookmarkApplicationOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: CreateApplicationAsync(CreateBookmarkApplicationOptions, CancellationToken)
  nameWithType: IApplicationsClient.CreateApplicationAsync(CreateBookmarkApplicationOptions, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateBookmarkApplicationOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateApplicationAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 50
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAdds an new bookmark application\n"
  example: []
  syntax:
    content: Task<IApplication> CreateApplicationAsync(CreateBookmarkApplicationOptions bookmarkApplicationOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: bookmarkApplicationOptions
      type: Okta.Sdk.CreateBookmarkApplicationOptions
      description: The application settings helper
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplication}
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateApplicationAsync(bookmarkApplicationOptions As CreateBookmarkApplicationOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IApplication)
  overload: Okta.Sdk.IApplicationsClient.CreateApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaApplicationOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaApplicationOptions,System.Threading.CancellationToken)
  id: CreateApplicationAsync(Okta.Sdk.CreateSwaApplicationOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: CreateApplicationAsync(CreateSwaApplicationOptions, CancellationToken)
  nameWithType: IApplicationsClient.CreateApplicationAsync(CreateSwaApplicationOptions, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaApplicationOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateApplicationAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 58
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAdds a SWA application that requires a plugin\n"
  example: []
  syntax:
    content: Task<IApplication> CreateApplicationAsync(CreateSwaApplicationOptions swaApplicationOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: swaApplicationOptions
      type: Okta.Sdk.CreateSwaApplicationOptions
      description: The application settings helper
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplication}
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateApplicationAsync(swaApplicationOptions As CreateSwaApplicationOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IApplication)
  overload: Okta.Sdk.IApplicationsClient.CreateApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaNoPluginApplicationOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaNoPluginApplicationOptions,System.Threading.CancellationToken)
  id: CreateApplicationAsync(Okta.Sdk.CreateSwaNoPluginApplicationOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: CreateApplicationAsync(CreateSwaNoPluginApplicationOptions, CancellationToken)
  nameWithType: IApplicationsClient.CreateApplicationAsync(CreateSwaNoPluginApplicationOptions, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaNoPluginApplicationOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateApplicationAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 66
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAdds a SWA application that does not require a browser plugin\n"
  example: []
  syntax:
    content: Task<IApplication> CreateApplicationAsync(CreateSwaNoPluginApplicationOptions swaNoPluginApplicationOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: swaNoPluginApplicationOptions
      type: Okta.Sdk.CreateSwaNoPluginApplicationOptions
      description: The application settings helper
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplication}
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateApplicationAsync(swaNoPluginApplicationOptions As CreateSwaNoPluginApplicationOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IApplication)
  overload: Okta.Sdk.IApplicationsClient.CreateApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaThreeFieldApplicationOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaThreeFieldApplicationOptions,System.Threading.CancellationToken)
  id: CreateApplicationAsync(Okta.Sdk.CreateSwaThreeFieldApplicationOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: CreateApplicationAsync(CreateSwaThreeFieldApplicationOptions, CancellationToken)
  nameWithType: IApplicationsClient.CreateApplicationAsync(CreateSwaThreeFieldApplicationOptions, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaThreeFieldApplicationOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateApplicationAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 74
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAdds a SWA application that requires a browser plugin and supports 3 CSS selectors for the login form.\n"
  example: []
  syntax:
    content: Task<IApplication> CreateApplicationAsync(CreateSwaThreeFieldApplicationOptions swaThreeFieldApplicationOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: swaThreeFieldApplicationOptions
      type: Okta.Sdk.CreateSwaThreeFieldApplicationOptions
      description: The application settings helper
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplication}
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateApplicationAsync(swaThreeFieldApplicationOptions As CreateSwaThreeFieldApplicationOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IApplication)
  overload: Okta.Sdk.IApplicationsClient.CreateApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaCustomApplicationOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaCustomApplicationOptions,System.Threading.CancellationToken)
  id: CreateApplicationAsync(Okta.Sdk.CreateSwaCustomApplicationOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: CreateApplicationAsync(CreateSwaCustomApplicationOptions, CancellationToken)
  nameWithType: IApplicationsClient.CreateApplicationAsync(CreateSwaCustomApplicationOptions, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSwaCustomApplicationOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateApplicationAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 82
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAdds a SWA application. This application is only available to the org that creates it.\n"
  example: []
  syntax:
    content: Task<IApplication> CreateApplicationAsync(CreateSwaCustomApplicationOptions swaCustomApplicationOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: swaCustomApplicationOptions
      type: Okta.Sdk.CreateSwaCustomApplicationOptions
      description: The application settings helper
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplication}
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateApplicationAsync(swaCustomApplicationOptions As CreateSwaCustomApplicationOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IApplication)
  overload: Okta.Sdk.IApplicationsClient.CreateApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSamlApplicationOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSamlApplicationOptions,System.Threading.CancellationToken)
  id: CreateApplicationAsync(Okta.Sdk.CreateSamlApplicationOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: CreateApplicationAsync(CreateSamlApplicationOptions, CancellationToken)
  nameWithType: IApplicationsClient.CreateApplicationAsync(CreateSamlApplicationOptions, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateSamlApplicationOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateApplicationAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 90
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAdds a SAML 2.0 application. This application is only available to the org that creates it.\n"
  example: []
  syntax:
    content: Task<IApplication> CreateApplicationAsync(CreateSamlApplicationOptions samlApplicationOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: samlApplicationOptions
      type: Okta.Sdk.CreateSamlApplicationOptions
      description: The application settings helper
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplication}
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateApplicationAsync(samlApplicationOptions As CreateSamlApplicationOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IApplication)
  overload: Okta.Sdk.IApplicationsClient.CreateApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateWsFederationApplicationOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateWsFederationApplicationOptions,System.Threading.CancellationToken)
  id: CreateApplicationAsync(Okta.Sdk.CreateWsFederationApplicationOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: CreateApplicationAsync(CreateWsFederationApplicationOptions, CancellationToken)
  nameWithType: IApplicationsClient.CreateApplicationAsync(CreateWsFederationApplicationOptions, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateWsFederationApplicationOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateApplicationAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 98
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAdds a WS-Federation Passive Request to Profile application with a SAML 2.0 token.\n"
  example: []
  syntax:
    content: Task<IApplication> CreateApplicationAsync(CreateWsFederationApplicationOptions wsFederationApplicationOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: wsFederationApplicationOptions
      type: Okta.Sdk.CreateWsFederationApplicationOptions
      description: The application settings helper
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplication}
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateApplicationAsync(wsFederationApplicationOptions As CreateWsFederationApplicationOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IApplication)
  overload: Okta.Sdk.IApplicationsClient.CreateApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateOpenIdConnectApplication,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateOpenIdConnectApplication,System.Threading.CancellationToken)
  id: CreateApplicationAsync(Okta.Sdk.CreateOpenIdConnectApplication,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: CreateApplicationAsync(CreateOpenIdConnectApplication, CancellationToken)
  nameWithType: IApplicationsClient.CreateApplicationAsync(CreateOpenIdConnectApplication, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.CreateApplicationAsync(Okta.Sdk.CreateOpenIdConnectApplication, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateApplicationAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 106
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAdds an OAuth 2.0 client application. This application is only available to the org that creates it.\n"
  example: []
  syntax:
    content: Task<IApplication> CreateApplicationAsync(CreateOpenIdConnectApplication openIdApplicationOptions, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: openIdApplicationOptions
      type: Okta.Sdk.CreateOpenIdConnectApplication
      description: The application settings helper
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplication}
      description: The <xref href="Okta.Sdk.IApplication" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateApplicationAsync(openIdApplicationOptions As CreateOpenIdConnectApplication, cancellationToken As CancellationToken = Nothing) As Task(Of IApplication)
  overload: Okta.Sdk.IApplicationsClient.CreateApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.CreateApplicationGroupAssignmentAsync(Okta.Sdk.CreateApplicationGroupAssignmentOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.CreateApplicationGroupAssignmentAsync(Okta.Sdk.CreateApplicationGroupAssignmentOptions,System.Threading.CancellationToken)
  id: CreateApplicationGroupAssignmentAsync(Okta.Sdk.CreateApplicationGroupAssignmentOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: CreateApplicationGroupAssignmentAsync(CreateApplicationGroupAssignmentOptions, CancellationToken)
  nameWithType: IApplicationsClient.CreateApplicationGroupAssignmentAsync(CreateApplicationGroupAssignmentOptions, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.CreateApplicationGroupAssignmentAsync(Okta.Sdk.CreateApplicationGroupAssignmentOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateApplicationGroupAssignmentAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 114
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAssigns a group to an application\n"
  example: []
  syntax:
    content: Task<IApplicationGroupAssignment> CreateApplicationGroupAssignmentAsync(CreateApplicationGroupAssignmentOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: options
      type: Okta.Sdk.CreateApplicationGroupAssignmentOptions
      description: The group assignment settings helper
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplicationGroupAssignment}
      description: The <xref href="Okta.Sdk.IApplicationGroupAssignment" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateApplicationGroupAssignmentAsync(options As CreateApplicationGroupAssignmentOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IApplicationGroupAssignment)
  overload: Okta.Sdk.IApplicationsClient.CreateApplicationGroupAssignmentAsync*
- uid: Okta.Sdk.IApplicationsClient.AssignUserToApplicationAsync(Okta.Sdk.AssignUserToApplicationOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.AssignUserToApplicationAsync(Okta.Sdk.AssignUserToApplicationOptions,System.Threading.CancellationToken)
  id: AssignUserToApplicationAsync(Okta.Sdk.AssignUserToApplicationOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: AssignUserToApplicationAsync(AssignUserToApplicationOptions, CancellationToken)
  nameWithType: IApplicationsClient.AssignUserToApplicationAsync(AssignUserToApplicationOptions, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.AssignUserToApplicationAsync(Okta.Sdk.AssignUserToApplicationOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AssignUserToApplicationAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 122
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAssigns a user without a profile to an application for SSO\n"
  example: []
  syntax:
    content: Task<IAppUser> AssignUserToApplicationAsync(AssignUserToApplicationOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: options
      type: Okta.Sdk.AssignUserToApplicationOptions
      description: The user assignment settings helper
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAppUser}
      description: The <xref href="Okta.Sdk.IAppUser" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function AssignUserToApplicationAsync(options As AssignUserToApplicationOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IAppUser)
  overload: Okta.Sdk.IApplicationsClient.AssignUserToApplicationAsync*
- uid: Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeleteApplicationUserAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: DeleteApplicationUserAsync(String, String, CancellationToken)
  nameWithType: IApplicationsClient.DeleteApplicationUserAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteApplicationUserAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 132
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRemoves an assignment for a user from an application.\n"
  remarks: Explicit overload to support backward compatibility.
  example: []
  syntax:
    content: Task DeleteApplicationUserAsync(string appId, string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
      description: The application ID
    - id: userId
      type: System.String
      description: The user ID
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeleteApplicationUserAsync(appId As String, userId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync*
- uid: Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync(System.String,System.String)
  commentId: M:Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync(System.String,System.String)
  id: DeleteApplicationUserAsync(System.String,System.String)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: DeleteApplicationUserAsync(String, String)
  nameWithType: IApplicationsClient.DeleteApplicationUserAsync(String, String)
  fullName: Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteApplicationUserAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 141
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRemoves an assignment for a user from an application.\n"
  remarks: Explicit overload to support backward compatibility.
  example: []
  syntax:
    content: Task DeleteApplicationUserAsync(string appId, string userId)
    parameters:
    - id: appId
      type: System.String
      description: The application ID
    - id: userId
      type: System.String
      description: The user ID
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeleteApplicationUserAsync(appId As String, userId As String) As Task
  overload: Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync*
- uid: Okta.Sdk.IApplicationsClient.PublishCerCertAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.PublishCerCertAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: PublishCerCertAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: PublishCerCertAsync(String, String, String, CancellationToken)
  nameWithType: IApplicationsClient.PublishCerCertAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.PublishCerCertAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PublishCerCertAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 151
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nPublishes with an X.509 certificate in base64 encoded CER.\n"
  example: []
  syntax:
    content: Task<IJsonWebKey> PublishCerCertAsync(string base64EncodedCertificateData, string appId, string csrId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: base64EncodedCertificateData
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> resource.
    - id: appId
      type: System.String
      description: The application Id.
    - id: csrId
      type: System.String
      description: The CSR Id.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
      description: The <xref href="Okta.Sdk.IJsonWebKey" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function PublishCerCertAsync(base64EncodedCertificateData As String, appId As String, csrId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.IApplicationsClient.PublishCerCertAsync*
- uid: Okta.Sdk.IApplicationsClient.PublishBinaryCerCertAsync(System.Byte[],System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.PublishBinaryCerCertAsync(System.Byte[],System.String,System.String,System.Threading.CancellationToken)
  id: PublishBinaryCerCertAsync(System.Byte[],System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: PublishBinaryCerCertAsync(Byte[], String, String, CancellationToken)
  nameWithType: IApplicationsClient.PublishBinaryCerCertAsync(Byte[], String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.PublishBinaryCerCertAsync(System.Byte[], System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PublishBinaryCerCertAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 161
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nPublishes with an X.509 certificate in binary CER.\n"
  example: []
  syntax:
    content: Task<IJsonWebKey> PublishBinaryCerCertAsync(byte[] certificate, string appId, string csrId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: certificate
      type: System.Byte[]
      description: The <see cref="!:byte[]"></see> resource.
    - id: appId
      type: System.String
      description: The application Id.
    - id: csrId
      type: System.String
      description: The CSR Id.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
      description: The <xref href="Okta.Sdk.IJsonWebKey" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function PublishBinaryCerCertAsync(certificate As Byte(), appId As String, csrId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.IApplicationsClient.PublishBinaryCerCertAsync*
  nameWithType.vb: IApplicationsClient.PublishBinaryCerCertAsync(Byte(), String, String, CancellationToken)
  fullName.vb: Okta.Sdk.IApplicationsClient.PublishBinaryCerCertAsync(System.Byte(), System.String, System.String, System.Threading.CancellationToken)
  name.vb: PublishBinaryCerCertAsync(Byte(), String, String, CancellationToken)
- uid: Okta.Sdk.IApplicationsClient.PublishDerCertAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.PublishDerCertAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: PublishDerCertAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: PublishDerCertAsync(String, String, String, CancellationToken)
  nameWithType: IApplicationsClient.PublishDerCertAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.PublishDerCertAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PublishDerCertAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 171
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nPublishes with an X.509 certificate in base64 encoded DER.\n"
  example: []
  syntax:
    content: Task<IJsonWebKey> PublishDerCertAsync(string base64EncodedCertificateData, string appId, string csrId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: base64EncodedCertificateData
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> resource.
    - id: appId
      type: System.String
      description: The application Id.
    - id: csrId
      type: System.String
      description: The CSR Id.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
      description: The <xref href="Okta.Sdk.IJsonWebKey" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function PublishDerCertAsync(base64EncodedCertificateData As String, appId As String, csrId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.IApplicationsClient.PublishDerCertAsync*
- uid: Okta.Sdk.IApplicationsClient.PublishBinaryDerCertAsync(System.Byte[],System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.PublishBinaryDerCertAsync(System.Byte[],System.String,System.String,System.Threading.CancellationToken)
  id: PublishBinaryDerCertAsync(System.Byte[],System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: PublishBinaryDerCertAsync(Byte[], String, String, CancellationToken)
  nameWithType: IApplicationsClient.PublishBinaryDerCertAsync(Byte[], String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.PublishBinaryDerCertAsync(System.Byte[], System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PublishBinaryDerCertAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 181
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nPublishes with an X.509 certificate a binary DER.\n"
  example: []
  syntax:
    content: Task<IJsonWebKey> PublishBinaryDerCertAsync(byte[] certificate, string appId, string csrId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: certificate
      type: System.Byte[]
      description: The <see cref="!:byte[]"></see> resource.
    - id: appId
      type: System.String
      description: The application Id.
    - id: csrId
      type: System.String
      description: The CSR Id.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
      description: The <xref href="Okta.Sdk.IJsonWebKey" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function PublishBinaryDerCertAsync(certificate As Byte(), appId As String, csrId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.IApplicationsClient.PublishBinaryDerCertAsync*
  nameWithType.vb: IApplicationsClient.PublishBinaryDerCertAsync(Byte(), String, String, CancellationToken)
  fullName.vb: Okta.Sdk.IApplicationsClient.PublishBinaryDerCertAsync(System.Byte(), System.String, System.String, System.Threading.CancellationToken)
  name.vb: PublishBinaryDerCertAsync(Byte(), String, String, CancellationToken)
- uid: Okta.Sdk.IApplicationsClient.PublishBinaryPemCertAsync(System.Byte[],System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplicationsClient.PublishBinaryPemCertAsync(System.Byte[],System.String,System.String,System.Threading.CancellationToken)
  id: PublishBinaryPemCertAsync(System.Byte[],System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplicationsClient
  langs:
  - csharp
  - vb
  name: PublishBinaryPemCertAsync(Byte[], String, String, CancellationToken)
  nameWithType: IApplicationsClient.PublishBinaryPemCertAsync(Byte[], String, String, CancellationToken)
  fullName: Okta.Sdk.IApplicationsClient.PublishBinaryPemCertAsync(System.Byte[], System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/IApplicationsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PublishBinaryPemCertAsync
    path: ../src/Okta.Sdk/IApplicationsClient.cs
    startLine: 191
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nPublishes with an X.509 certificate in PEM format.\n"
  example: []
  syntax:
    content: Task<IJsonWebKey> PublishBinaryPemCertAsync(byte[] certificate, string appId, string csrId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: certificate
      type: System.Byte[]
      description: The <see cref="!:byte[]"></see> resource.
    - id: appId
      type: System.String
      description: The application Id.
    - id: csrId
      type: System.String
      description: The CSR Id.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
      description: The <xref href="Okta.Sdk.IJsonWebKey" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function PublishBinaryPemCertAsync(certificate As Byte(), appId As String, csrId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.IApplicationsClient.PublishBinaryPemCertAsync*
  nameWithType.vb: IApplicationsClient.PublishBinaryPemCertAsync(Byte(), String, String, CancellationToken)
  fullName.vb: Okta.Sdk.IApplicationsClient.PublishBinaryPemCertAsync(System.Byte(), System.String, System.String, System.Threading.CancellationToken)
  name.vb: PublishBinaryPemCertAsync(Byte(), String, String, CancellationToken)
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IApplication}.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IApplication}.GetAsyncEnumerator(System.Threading.CancellationToken)
  parent: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IApplication}
  definition: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: IAsyncEnumerable<IApplication>.GetAsyncEnumerator(CancellationToken)
  fullName: System.Collections.Generic.IAsyncEnumerable<Okta.Sdk.IApplication>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: IAsyncEnumerable(Of IApplication).GetAsyncEnumerator(CancellationToken)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Okta.Sdk.IApplication).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable<IApplication>.GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable<Okta.Sdk.IApplication>.GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable(Of IApplication).GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable(Of Okta.Sdk.IApplication).GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  isExternal: true
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator(CancellationToken)
  fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: IAsyncEnumerable(Of T).GetAsyncEnumerator(CancellationToken)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable(Of T).GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IApplication}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IApplication}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<IApplication>
  nameWithType: IAsyncEnumerable<IApplication>
  fullName: System.Collections.Generic.IAsyncEnumerable<Okta.Sdk.IApplication>
  nameWithType.vb: IAsyncEnumerable(Of IApplication)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Okta.Sdk.IApplication)
  name.vb: IAsyncEnumerable(Of IApplication)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IApplication
    name: IApplication
    nameWithType: IApplication
    fullName: Okta.Sdk.IApplication
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IApplication
    name: IApplication
    nameWithType: IApplication
    fullName: Okta.Sdk.IApplication
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.IApplication
  commentId: T:Okta.Sdk.IApplication
  parent: Okta.Sdk
  name: IApplication
  nameWithType: IApplication
  fullName: Okta.Sdk.IApplication
- uid: Okta.Sdk.IApplicationsClient.ListApplications*
  commentId: Overload:Okta.Sdk.IApplicationsClient.ListApplications
  name: ListApplications
  nameWithType: IApplicationsClient.ListApplications
  fullName: Okta.Sdk.IApplicationsClient.ListApplications
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IApplication}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IApplication}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IApplication>
  nameWithType: ICollectionClient<IApplication>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IApplication>
  nameWithType.vb: ICollectionClient(Of IApplication)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IApplication)
  name.vb: ICollectionClient(Of IApplication)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IApplication
    name: IApplication
    nameWithType: IApplication
    fullName: Okta.Sdk.IApplication
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IApplication
    name: IApplication
    nameWithType: IApplication
    fullName: Okta.Sdk.IApplication
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IApplicationsClient.CreateApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.CreateApplicationAsync
  name: CreateApplicationAsync
  nameWithType: IApplicationsClient.CreateApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.CreateApplicationAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.IApplication}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IApplication}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IApplication>
  nameWithType: Task<IApplication>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IApplication>
  nameWithType.vb: Task(Of IApplication)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IApplication)
  name.vb: Task(Of IApplication)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IApplication
    name: IApplication
    nameWithType: IApplication
    fullName: Okta.Sdk.IApplication
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IApplication
    name: IApplication
    nameWithType: IApplication
    fullName: Okta.Sdk.IApplication
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.IApplicationsClient.DeleteApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.DeleteApplicationAsync
  name: DeleteApplicationAsync
  nameWithType: IApplicationsClient.DeleteApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.DeleteApplicationAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Okta.Sdk.IApplicationsClient.GetApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.GetApplicationAsync
  name: GetApplicationAsync
  nameWithType: IApplicationsClient.GetApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.GetApplicationAsync
- uid: Okta.Sdk.IApplicationsClient.UpdateApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.UpdateApplicationAsync
  name: UpdateApplicationAsync
  nameWithType: IApplicationsClient.UpdateApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.UpdateApplicationAsync
- uid: Okta.Sdk.IProvisioningConnection
  commentId: T:Okta.Sdk.IProvisioningConnection
  parent: Okta.Sdk
  name: IProvisioningConnection
  nameWithType: IProvisioningConnection
  fullName: Okta.Sdk.IProvisioningConnection
- uid: Okta.Sdk.IApplicationsClient.GetDefaultProvisioningConnectionForApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.GetDefaultProvisioningConnectionForApplicationAsync
  name: GetDefaultProvisioningConnectionForApplicationAsync
  nameWithType: IApplicationsClient.GetDefaultProvisioningConnectionForApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.GetDefaultProvisioningConnectionForApplicationAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IProvisioningConnection}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IProvisioningConnection}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IProvisioningConnection>
  nameWithType: Task<IProvisioningConnection>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IProvisioningConnection>
  nameWithType.vb: Task(Of IProvisioningConnection)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IProvisioningConnection)
  name.vb: Task(Of IProvisioningConnection)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IProvisioningConnection
    name: IProvisioningConnection
    nameWithType: IProvisioningConnection
    fullName: Okta.Sdk.IProvisioningConnection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IProvisioningConnection
    name: IProvisioningConnection
    nameWithType: IProvisioningConnection
    fullName: Okta.Sdk.IProvisioningConnection
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IProvisioningConnectionRequest
  commentId: T:Okta.Sdk.IProvisioningConnectionRequest
  parent: Okta.Sdk
  name: IProvisioningConnectionRequest
  nameWithType: IProvisioningConnectionRequest
  fullName: Okta.Sdk.IProvisioningConnectionRequest
- uid: Okta.Sdk.IApplicationsClient.SetDefaultProvisioningConnectionForApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.SetDefaultProvisioningConnectionForApplicationAsync
  name: SetDefaultProvisioningConnectionForApplicationAsync
  nameWithType: IApplicationsClient.SetDefaultProvisioningConnectionForApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.SetDefaultProvisioningConnectionForApplicationAsync
- uid: Okta.Sdk.IApplicationsClient.ActivateDefaultProvisioningConnectionForApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.ActivateDefaultProvisioningConnectionForApplicationAsync
  name: ActivateDefaultProvisioningConnectionForApplicationAsync
  nameWithType: IApplicationsClient.ActivateDefaultProvisioningConnectionForApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.ActivateDefaultProvisioningConnectionForApplicationAsync
- uid: Okta.Sdk.IApplicationsClient.DeactivateDefaultProvisioningConnectionForApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.DeactivateDefaultProvisioningConnectionForApplicationAsync
  name: DeactivateDefaultProvisioningConnectionForApplicationAsync
  nameWithType: IApplicationsClient.DeactivateDefaultProvisioningConnectionForApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.DeactivateDefaultProvisioningConnectionForApplicationAsync
- uid: Okta.Sdk.ICsr
  commentId: T:Okta.Sdk.ICsr
  parent: Okta.Sdk
  name: ICsr
  nameWithType: ICsr
  fullName: Okta.Sdk.ICsr
- uid: Okta.Sdk.IApplicationsClient.ListCsrsForApplication*
  commentId: Overload:Okta.Sdk.IApplicationsClient.ListCsrsForApplication
  name: ListCsrsForApplication
  nameWithType: IApplicationsClient.ListCsrsForApplication
  fullName: Okta.Sdk.IApplicationsClient.ListCsrsForApplication
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.ICsr}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.ICsr}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<ICsr>
  nameWithType: ICollectionClient<ICsr>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.ICsr>
  nameWithType.vb: ICollectionClient(Of ICsr)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.ICsr)
  name.vb: ICollectionClient(Of ICsr)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.ICsr
    name: ICsr
    nameWithType: ICsr
    fullName: Okta.Sdk.ICsr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.ICsr
    name: ICsr
    nameWithType: ICsr
    fullName: Okta.Sdk.ICsr
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICsrMetadata
  commentId: T:Okta.Sdk.ICsrMetadata
  parent: Okta.Sdk
  name: ICsrMetadata
  nameWithType: ICsrMetadata
  fullName: Okta.Sdk.ICsrMetadata
- uid: Okta.Sdk.IApplicationsClient.GenerateCsrForApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.GenerateCsrForApplicationAsync
  name: GenerateCsrForApplicationAsync
  nameWithType: IApplicationsClient.GenerateCsrForApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.GenerateCsrForApplicationAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.ICsr}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.ICsr}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ICsr>
  nameWithType: Task<ICsr>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.ICsr>
  nameWithType.vb: Task(Of ICsr)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.ICsr)
  name.vb: Task(Of ICsr)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.ICsr
    name: ICsr
    nameWithType: ICsr
    fullName: Okta.Sdk.ICsr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.ICsr
    name: ICsr
    nameWithType: ICsr
    fullName: Okta.Sdk.ICsr
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IApplicationsClient.RevokeCsrFromApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.RevokeCsrFromApplicationAsync
  name: RevokeCsrFromApplicationAsync
  nameWithType: IApplicationsClient.RevokeCsrFromApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.RevokeCsrFromApplicationAsync
- uid: Okta.Sdk.IApplicationsClient.GetCsrForApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.GetCsrForApplicationAsync
  name: GetCsrForApplicationAsync
  nameWithType: IApplicationsClient.GetCsrForApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.GetCsrForApplicationAsync
- uid: Okta.Sdk.IJsonWebKey
  commentId: T:Okta.Sdk.IJsonWebKey
  parent: Okta.Sdk
  name: IJsonWebKey
  nameWithType: IJsonWebKey
  fullName: Okta.Sdk.IJsonWebKey
- uid: Okta.Sdk.IApplicationsClient.ListApplicationKeys*
  commentId: Overload:Okta.Sdk.IApplicationsClient.ListApplicationKeys
  name: ListApplicationKeys
  nameWithType: IApplicationsClient.ListApplicationKeys
  fullName: Okta.Sdk.IApplicationsClient.ListApplicationKeys
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IJsonWebKey>
  nameWithType: ICollectionClient<IJsonWebKey>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IJsonWebKey>
  nameWithType.vb: ICollectionClient(Of IJsonWebKey)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IJsonWebKey)
  name.vb: ICollectionClient(Of IJsonWebKey)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IApplicationsClient.GenerateApplicationKeyAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.GenerateApplicationKeyAsync
  name: GenerateApplicationKeyAsync
  nameWithType: IApplicationsClient.GenerateApplicationKeyAsync
  fullName: Okta.Sdk.IApplicationsClient.GenerateApplicationKeyAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IJsonWebKey>
  nameWithType: Task<IJsonWebKey>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IJsonWebKey>
  nameWithType.vb: Task(Of IJsonWebKey)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IJsonWebKey)
  name.vb: Task(Of IJsonWebKey)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IApplicationsClient.GetApplicationKeyAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.GetApplicationKeyAsync
  name: GetApplicationKeyAsync
  nameWithType: IApplicationsClient.GetApplicationKeyAsync
  fullName: Okta.Sdk.IApplicationsClient.GetApplicationKeyAsync
- uid: Okta.Sdk.IApplicationsClient.CloneApplicationKeyAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.CloneApplicationKeyAsync
  name: CloneApplicationKeyAsync
  nameWithType: IApplicationsClient.CloneApplicationKeyAsync
  fullName: Okta.Sdk.IApplicationsClient.CloneApplicationKeyAsync
- uid: Okta.Sdk.IApplicationFeature
  commentId: T:Okta.Sdk.IApplicationFeature
  parent: Okta.Sdk
  name: IApplicationFeature
  nameWithType: IApplicationFeature
  fullName: Okta.Sdk.IApplicationFeature
- uid: Okta.Sdk.IApplicationsClient.ListFeaturesForApplication*
  commentId: Overload:Okta.Sdk.IApplicationsClient.ListFeaturesForApplication
  name: ListFeaturesForApplication
  nameWithType: IApplicationsClient.ListFeaturesForApplication
  fullName: Okta.Sdk.IApplicationsClient.ListFeaturesForApplication
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IApplicationFeature}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IApplicationFeature}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IApplicationFeature>
  nameWithType: ICollectionClient<IApplicationFeature>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IApplicationFeature>
  nameWithType.vb: ICollectionClient(Of IApplicationFeature)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IApplicationFeature)
  name.vb: ICollectionClient(Of IApplicationFeature)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IApplicationFeature
    name: IApplicationFeature
    nameWithType: IApplicationFeature
    fullName: Okta.Sdk.IApplicationFeature
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IApplicationFeature
    name: IApplicationFeature
    nameWithType: IApplicationFeature
    fullName: Okta.Sdk.IApplicationFeature
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IApplicationsClient.GetFeatureForApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.GetFeatureForApplicationAsync
  name: GetFeatureForApplicationAsync
  nameWithType: IApplicationsClient.GetFeatureForApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.GetFeatureForApplicationAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IApplicationFeature}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IApplicationFeature}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IApplicationFeature>
  nameWithType: Task<IApplicationFeature>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IApplicationFeature>
  nameWithType.vb: Task(Of IApplicationFeature)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IApplicationFeature)
  name.vb: Task(Of IApplicationFeature)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IApplicationFeature
    name: IApplicationFeature
    nameWithType: IApplicationFeature
    fullName: Okta.Sdk.IApplicationFeature
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IApplicationFeature
    name: IApplicationFeature
    nameWithType: IApplicationFeature
    fullName: Okta.Sdk.IApplicationFeature
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICapabilitiesObject
  commentId: T:Okta.Sdk.ICapabilitiesObject
  parent: Okta.Sdk
  name: ICapabilitiesObject
  nameWithType: ICapabilitiesObject
  fullName: Okta.Sdk.ICapabilitiesObject
- uid: Okta.Sdk.IApplicationsClient.UpdateFeatureForApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.UpdateFeatureForApplicationAsync
  name: UpdateFeatureForApplicationAsync
  nameWithType: IApplicationsClient.UpdateFeatureForApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.UpdateFeatureForApplicationAsync
- uid: Okta.Sdk.IOAuth2ScopeConsentGrant
  commentId: T:Okta.Sdk.IOAuth2ScopeConsentGrant
  parent: Okta.Sdk
  name: IOAuth2ScopeConsentGrant
  nameWithType: IOAuth2ScopeConsentGrant
  fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
- uid: Okta.Sdk.IApplicationsClient.ListScopeConsentGrants*
  commentId: Overload:Okta.Sdk.IApplicationsClient.ListScopeConsentGrants
  name: ListScopeConsentGrants
  nameWithType: IApplicationsClient.ListScopeConsentGrants
  fullName: Okta.Sdk.IApplicationsClient.ListScopeConsentGrants
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2ScopeConsentGrant}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2ScopeConsentGrant}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2ScopeConsentGrant>
  nameWithType: ICollectionClient<IOAuth2ScopeConsentGrant>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2ScopeConsentGrant>
  nameWithType.vb: ICollectionClient(Of IOAuth2ScopeConsentGrant)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2ScopeConsentGrant)
  name.vb: ICollectionClient(Of IOAuth2ScopeConsentGrant)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IApplicationsClient.GrantConsentToScopeAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.GrantConsentToScopeAsync
  name: GrantConsentToScopeAsync
  nameWithType: IApplicationsClient.GrantConsentToScopeAsync
  fullName: Okta.Sdk.IApplicationsClient.GrantConsentToScopeAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2ScopeConsentGrant}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2ScopeConsentGrant}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2ScopeConsentGrant>
  nameWithType: Task<IOAuth2ScopeConsentGrant>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2ScopeConsentGrant>
  nameWithType.vb: Task(Of IOAuth2ScopeConsentGrant)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2ScopeConsentGrant)
  name.vb: Task(Of IOAuth2ScopeConsentGrant)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IApplicationsClient.RevokeScopeConsentGrantAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.RevokeScopeConsentGrantAsync
  name: RevokeScopeConsentGrantAsync
  nameWithType: IApplicationsClient.RevokeScopeConsentGrantAsync
  fullName: Okta.Sdk.IApplicationsClient.RevokeScopeConsentGrantAsync
- uid: Okta.Sdk.IApplicationsClient.GetScopeConsentGrantAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.GetScopeConsentGrantAsync
  name: GetScopeConsentGrantAsync
  nameWithType: IApplicationsClient.GetScopeConsentGrantAsync
  fullName: Okta.Sdk.IApplicationsClient.GetScopeConsentGrantAsync
- uid: Okta.Sdk.IApplicationGroupAssignment
  commentId: T:Okta.Sdk.IApplicationGroupAssignment
  parent: Okta.Sdk
  name: IApplicationGroupAssignment
  nameWithType: IApplicationGroupAssignment
  fullName: Okta.Sdk.IApplicationGroupAssignment
- uid: Okta.Sdk.IApplicationsClient.ListApplicationGroupAssignments*
  commentId: Overload:Okta.Sdk.IApplicationsClient.ListApplicationGroupAssignments
  name: ListApplicationGroupAssignments
  nameWithType: IApplicationsClient.ListApplicationGroupAssignments
  fullName: Okta.Sdk.IApplicationsClient.ListApplicationGroupAssignments
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IApplicationGroupAssignment}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IApplicationGroupAssignment}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IApplicationGroupAssignment>
  nameWithType: ICollectionClient<IApplicationGroupAssignment>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IApplicationGroupAssignment>
  nameWithType.vb: ICollectionClient(Of IApplicationGroupAssignment)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IApplicationGroupAssignment)
  name.vb: ICollectionClient(Of IApplicationGroupAssignment)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IApplicationGroupAssignment
    name: IApplicationGroupAssignment
    nameWithType: IApplicationGroupAssignment
    fullName: Okta.Sdk.IApplicationGroupAssignment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IApplicationGroupAssignment
    name: IApplicationGroupAssignment
    nameWithType: IApplicationGroupAssignment
    fullName: Okta.Sdk.IApplicationGroupAssignment
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IApplicationsClient.DeleteApplicationGroupAssignmentAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.DeleteApplicationGroupAssignmentAsync
  name: DeleteApplicationGroupAssignmentAsync
  nameWithType: IApplicationsClient.DeleteApplicationGroupAssignmentAsync
  fullName: Okta.Sdk.IApplicationsClient.DeleteApplicationGroupAssignmentAsync
- uid: Okta.Sdk.IApplicationsClient.GetApplicationGroupAssignmentAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.GetApplicationGroupAssignmentAsync
  name: GetApplicationGroupAssignmentAsync
  nameWithType: IApplicationsClient.GetApplicationGroupAssignmentAsync
  fullName: Okta.Sdk.IApplicationsClient.GetApplicationGroupAssignmentAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IApplicationGroupAssignment}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IApplicationGroupAssignment}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IApplicationGroupAssignment>
  nameWithType: Task<IApplicationGroupAssignment>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IApplicationGroupAssignment>
  nameWithType.vb: Task(Of IApplicationGroupAssignment)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IApplicationGroupAssignment)
  name.vb: Task(Of IApplicationGroupAssignment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IApplicationGroupAssignment
    name: IApplicationGroupAssignment
    nameWithType: IApplicationGroupAssignment
    fullName: Okta.Sdk.IApplicationGroupAssignment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IApplicationGroupAssignment
    name: IApplicationGroupAssignment
    nameWithType: IApplicationGroupAssignment
    fullName: Okta.Sdk.IApplicationGroupAssignment
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IApplicationsClient.CreateApplicationGroupAssignmentAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.CreateApplicationGroupAssignmentAsync
  name: CreateApplicationGroupAssignmentAsync
  nameWithType: IApplicationsClient.CreateApplicationGroupAssignmentAsync
  fullName: Okta.Sdk.IApplicationsClient.CreateApplicationGroupAssignmentAsync
- uid: Okta.Sdk.IApplicationsClient.ActivateApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.ActivateApplicationAsync
  name: ActivateApplicationAsync
  nameWithType: IApplicationsClient.ActivateApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.ActivateApplicationAsync
- uid: Okta.Sdk.IApplicationsClient.DeactivateApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.DeactivateApplicationAsync
  name: DeactivateApplicationAsync
  nameWithType: IApplicationsClient.DeactivateApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.DeactivateApplicationAsync
- uid: Okta.Sdk.IApplicationsClient.UploadApplicationLogoAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.UploadApplicationLogoAsync
  name: UploadApplicationLogoAsync
  nameWithType: IApplicationsClient.UploadApplicationLogoAsync
  fullName: Okta.Sdk.IApplicationsClient.UploadApplicationLogoAsync
- uid: Okta.Sdk.IApplicationsClient.UpdateApplicationPolicyAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.UpdateApplicationPolicyAsync
  name: UpdateApplicationPolicyAsync
  nameWithType: IApplicationsClient.UpdateApplicationPolicyAsync
  fullName: Okta.Sdk.IApplicationsClient.UpdateApplicationPolicyAsync
- uid: Okta.Sdk.IApplicationsClient.RevokeOAuth2TokensForApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.RevokeOAuth2TokensForApplicationAsync
  name: RevokeOAuth2TokensForApplicationAsync
  nameWithType: IApplicationsClient.RevokeOAuth2TokensForApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.RevokeOAuth2TokensForApplicationAsync
- uid: Okta.Sdk.IOAuth2Token
  commentId: T:Okta.Sdk.IOAuth2Token
  parent: Okta.Sdk
  name: IOAuth2Token
  nameWithType: IOAuth2Token
  fullName: Okta.Sdk.IOAuth2Token
- uid: Okta.Sdk.IApplicationsClient.ListOAuth2TokensForApplication*
  commentId: Overload:Okta.Sdk.IApplicationsClient.ListOAuth2TokensForApplication
  name: ListOAuth2TokensForApplication
  nameWithType: IApplicationsClient.ListOAuth2TokensForApplication
  fullName: Okta.Sdk.IApplicationsClient.ListOAuth2TokensForApplication
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Token}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Token}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2Token>
  nameWithType: ICollectionClient<IOAuth2Token>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2Token>
  nameWithType.vb: ICollectionClient(Of IOAuth2Token)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2Token)
  name.vb: ICollectionClient(Of IOAuth2Token)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Token
    name: IOAuth2Token
    nameWithType: IOAuth2Token
    fullName: Okta.Sdk.IOAuth2Token
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Token
    name: IOAuth2Token
    nameWithType: IOAuth2Token
    fullName: Okta.Sdk.IOAuth2Token
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IApplicationsClient.RevokeOAuth2TokenForApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.RevokeOAuth2TokenForApplicationAsync
  name: RevokeOAuth2TokenForApplicationAsync
  nameWithType: IApplicationsClient.RevokeOAuth2TokenForApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.RevokeOAuth2TokenForApplicationAsync
- uid: Okta.Sdk.IApplicationsClient.GetOAuth2TokenForApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.GetOAuth2TokenForApplicationAsync
  name: GetOAuth2TokenForApplicationAsync
  nameWithType: IApplicationsClient.GetOAuth2TokenForApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.GetOAuth2TokenForApplicationAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Token}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Token}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2Token>
  nameWithType: Task<IOAuth2Token>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2Token>
  nameWithType.vb: Task(Of IOAuth2Token)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2Token)
  name.vb: Task(Of IOAuth2Token)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Token
    name: IOAuth2Token
    nameWithType: IOAuth2Token
    fullName: Okta.Sdk.IOAuth2Token
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Token
    name: IOAuth2Token
    nameWithType: IOAuth2Token
    fullName: Okta.Sdk.IOAuth2Token
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAppUser
  commentId: T:Okta.Sdk.IAppUser
  parent: Okta.Sdk
  name: IAppUser
  nameWithType: IAppUser
  fullName: Okta.Sdk.IAppUser
- uid: Okta.Sdk.IApplicationsClient.ListApplicationUsers*
  commentId: Overload:Okta.Sdk.IApplicationsClient.ListApplicationUsers
  name: ListApplicationUsers
  nameWithType: IApplicationsClient.ListApplicationUsers
  fullName: Okta.Sdk.IApplicationsClient.ListApplicationUsers
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IAppUser}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IAppUser}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IAppUser>
  nameWithType: ICollectionClient<IAppUser>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IAppUser>
  nameWithType.vb: ICollectionClient(Of IAppUser)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IAppUser)
  name.vb: ICollectionClient(Of IAppUser)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAppUser
    name: IAppUser
    nameWithType: IAppUser
    fullName: Okta.Sdk.IAppUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAppUser
    name: IAppUser
    nameWithType: IAppUser
    fullName: Okta.Sdk.IAppUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IApplicationsClient.AssignUserToApplicationAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.AssignUserToApplicationAsync
  name: AssignUserToApplicationAsync
  nameWithType: IApplicationsClient.AssignUserToApplicationAsync
  fullName: Okta.Sdk.IApplicationsClient.AssignUserToApplicationAsync
- uid: System.Threading.Tasks.Task{Okta.Sdk.IAppUser}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IAppUser}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IAppUser>
  nameWithType: Task<IAppUser>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IAppUser>
  nameWithType.vb: Task(Of IAppUser)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IAppUser)
  name.vb: Task(Of IAppUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAppUser
    name: IAppUser
    nameWithType: IAppUser
    fullName: Okta.Sdk.IAppUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAppUser
    name: IAppUser
    nameWithType: IAppUser
    fullName: Okta.Sdk.IAppUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync
  name: DeleteApplicationUserAsync
  nameWithType: IApplicationsClient.DeleteApplicationUserAsync
  fullName: Okta.Sdk.IApplicationsClient.DeleteApplicationUserAsync
- uid: Okta.Sdk.IApplicationsClient.GetApplicationUserAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.GetApplicationUserAsync
  name: GetApplicationUserAsync
  nameWithType: IApplicationsClient.GetApplicationUserAsync
  fullName: Okta.Sdk.IApplicationsClient.GetApplicationUserAsync
- uid: Okta.Sdk.IApplicationsClient.UpdateApplicationUserAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.UpdateApplicationUserAsync
  name: UpdateApplicationUserAsync
  nameWithType: IApplicationsClient.UpdateApplicationUserAsync
  fullName: Okta.Sdk.IApplicationsClient.UpdateApplicationUserAsync
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.CreateBasicAuthApplicationOptions
  commentId: T:Okta.Sdk.CreateBasicAuthApplicationOptions
  parent: Okta.Sdk
  name: CreateBasicAuthApplicationOptions
  nameWithType: CreateBasicAuthApplicationOptions
  fullName: Okta.Sdk.CreateBasicAuthApplicationOptions
- uid: Okta.Sdk.CreateBookmarkApplicationOptions
  commentId: T:Okta.Sdk.CreateBookmarkApplicationOptions
  parent: Okta.Sdk
  name: CreateBookmarkApplicationOptions
  nameWithType: CreateBookmarkApplicationOptions
  fullName: Okta.Sdk.CreateBookmarkApplicationOptions
- uid: Okta.Sdk.CreateSwaApplicationOptions
  commentId: T:Okta.Sdk.CreateSwaApplicationOptions
  parent: Okta.Sdk
  name: CreateSwaApplicationOptions
  nameWithType: CreateSwaApplicationOptions
  fullName: Okta.Sdk.CreateSwaApplicationOptions
- uid: Okta.Sdk.CreateSwaNoPluginApplicationOptions
  commentId: T:Okta.Sdk.CreateSwaNoPluginApplicationOptions
  parent: Okta.Sdk
  name: CreateSwaNoPluginApplicationOptions
  nameWithType: CreateSwaNoPluginApplicationOptions
  fullName: Okta.Sdk.CreateSwaNoPluginApplicationOptions
- uid: Okta.Sdk.CreateSwaThreeFieldApplicationOptions
  commentId: T:Okta.Sdk.CreateSwaThreeFieldApplicationOptions
  parent: Okta.Sdk
  name: CreateSwaThreeFieldApplicationOptions
  nameWithType: CreateSwaThreeFieldApplicationOptions
  fullName: Okta.Sdk.CreateSwaThreeFieldApplicationOptions
- uid: Okta.Sdk.CreateSwaCustomApplicationOptions
  commentId: T:Okta.Sdk.CreateSwaCustomApplicationOptions
  parent: Okta.Sdk
  name: CreateSwaCustomApplicationOptions
  nameWithType: CreateSwaCustomApplicationOptions
  fullName: Okta.Sdk.CreateSwaCustomApplicationOptions
- uid: Okta.Sdk.CreateSamlApplicationOptions
  commentId: T:Okta.Sdk.CreateSamlApplicationOptions
  parent: Okta.Sdk
  name: CreateSamlApplicationOptions
  nameWithType: CreateSamlApplicationOptions
  fullName: Okta.Sdk.CreateSamlApplicationOptions
- uid: Okta.Sdk.CreateWsFederationApplicationOptions
  commentId: T:Okta.Sdk.CreateWsFederationApplicationOptions
  parent: Okta.Sdk
  name: CreateWsFederationApplicationOptions
  nameWithType: CreateWsFederationApplicationOptions
  fullName: Okta.Sdk.CreateWsFederationApplicationOptions
- uid: Okta.Sdk.CreateOpenIdConnectApplication
  commentId: T:Okta.Sdk.CreateOpenIdConnectApplication
  parent: Okta.Sdk
  name: CreateOpenIdConnectApplication
  nameWithType: CreateOpenIdConnectApplication
  fullName: Okta.Sdk.CreateOpenIdConnectApplication
- uid: Okta.Sdk.CreateApplicationGroupAssignmentOptions
  commentId: T:Okta.Sdk.CreateApplicationGroupAssignmentOptions
  parent: Okta.Sdk
  name: CreateApplicationGroupAssignmentOptions
  nameWithType: CreateApplicationGroupAssignmentOptions
  fullName: Okta.Sdk.CreateApplicationGroupAssignmentOptions
- uid: Okta.Sdk.AssignUserToApplicationOptions
  commentId: T:Okta.Sdk.AssignUserToApplicationOptions
  parent: Okta.Sdk
  name: AssignUserToApplicationOptions
  nameWithType: AssignUserToApplicationOptions
  fullName: Okta.Sdk.AssignUserToApplicationOptions
- uid: Okta.Sdk.IApplicationsClient.PublishCerCertAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.PublishCerCertAsync
  name: PublishCerCertAsync
  nameWithType: IApplicationsClient.PublishCerCertAsync
  fullName: Okta.Sdk.IApplicationsClient.PublishCerCertAsync
- uid: Okta.Sdk.IApplicationsClient.PublishBinaryCerCertAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.PublishBinaryCerCertAsync
  name: PublishBinaryCerCertAsync
  nameWithType: IApplicationsClient.PublishBinaryCerCertAsync
  fullName: Okta.Sdk.IApplicationsClient.PublishBinaryCerCertAsync
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Okta.Sdk.IApplicationsClient.PublishDerCertAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.PublishDerCertAsync
  name: PublishDerCertAsync
  nameWithType: IApplicationsClient.PublishDerCertAsync
  fullName: Okta.Sdk.IApplicationsClient.PublishDerCertAsync
- uid: Okta.Sdk.IApplicationsClient.PublishBinaryDerCertAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.PublishBinaryDerCertAsync
  name: PublishBinaryDerCertAsync
  nameWithType: IApplicationsClient.PublishBinaryDerCertAsync
  fullName: Okta.Sdk.IApplicationsClient.PublishBinaryDerCertAsync
- uid: Okta.Sdk.IApplicationsClient.PublishBinaryPemCertAsync*
  commentId: Overload:Okta.Sdk.IApplicationsClient.PublishBinaryPemCertAsync
  name: PublishBinaryPemCertAsync
  nameWithType: IApplicationsClient.PublishBinaryPemCertAsync
  fullName: Okta.Sdk.IApplicationsClient.PublishBinaryPemCertAsync
