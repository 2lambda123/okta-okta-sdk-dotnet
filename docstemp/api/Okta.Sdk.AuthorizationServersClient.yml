### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.AuthorizationServersClient
  commentId: T:Okta.Sdk.AuthorizationServersClient
  id: AuthorizationServersClient
  parent: Okta.Sdk
  children:
  - Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.GetOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.GetOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerKeys(System.String)
  - Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicies(System.String)
  - Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicyRules(System.String,System.String)
  - Okta.Sdk.AuthorizationServersClient.ListAuthorizationServers(System.String,System.String,System.String)
  - Okta.Sdk.AuthorizationServersClient.ListOAuth2Claims(System.String)
  - Okta.Sdk.AuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(System.String)
  - Okta.Sdk.AuthorizationServersClient.ListOAuth2Scopes(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.AuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse,System.String)
  - Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: AuthorizationServersClient
  nameWithType: AuthorizationServersClient
  fullName: Okta.Sdk.AuthorizationServersClient
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AuthorizationServersClient
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 18
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: 'public sealed class AuthorizationServersClient : OktaClient, IOktaClient, IAuthorizationServersClient'
    content.vb: >-
      Public NotInheritable Class AuthorizationServersClient

          Inherits OktaClient

          Implements IOktaClient, IAuthorizationServersClient
  inheritance:
  - System.Object
  - Okta.Sdk.OktaClient
  implements:
  - Okta.Sdk.IOktaClient
  - Okta.Sdk.IAuthorizationServersClient
  inheritedMembers:
  - Okta.Sdk.OktaClient.Configuration
  - Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  - Okta.Sdk.OktaClient.Brands
  - Okta.Sdk.OktaClient.GroupSchemas
  - Okta.Sdk.OktaClient.Authenticators
  - Okta.Sdk.OktaClient.Orgs
  - Okta.Sdk.OktaClient.UserTypes
  - Okta.Sdk.OktaClient.Users
  - Okta.Sdk.OktaClient.UserFactors
  - Okta.Sdk.OktaClient.Groups
  - Okta.Sdk.OktaClient.Applications
  - Okta.Sdk.OktaClient.Sessions
  - Okta.Sdk.OktaClient.AuthorizationServers
  - Okta.Sdk.OktaClient.Logs
  - Okta.Sdk.OktaClient.Policies
  - Okta.Sdk.OktaClient.EventHooks
  - Okta.Sdk.OktaClient.InlineHooks
  - Okta.Sdk.OktaClient.LinkedObjects
  - Okta.Sdk.OktaClient.TrustedOrigins
  - Okta.Sdk.OktaClient.Features
  - Okta.Sdk.OktaClient.Templates
  - Okta.Sdk.OktaClient.NetworkZones
  - Okta.Sdk.OktaClient.Domains
  - Okta.Sdk.OktaClient.ProfileMappings
  - Okta.Sdk.OktaClient.ThreatInsights
  - Okta.Sdk.OktaClient.IdentityProviders
  - Okta.Sdk.OktaClient.UserSchemas
  - Okta.Sdk.OktaClient.Subscriptions
  - Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
  - Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.GetCollection``1(System.String)
  - Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  - Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServers(System.String,System.String,System.String)
  commentId: M:Okta.Sdk.AuthorizationServersClient.ListAuthorizationServers(System.String,System.String,System.String)
  id: ListAuthorizationServers(System.String,System.String,System.String)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListAuthorizationServers(String, String, String)
  nameWithType: AuthorizationServersClient.ListAuthorizationServers(String, String, String)
  fullName: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServers(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListAuthorizationServers
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 31
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IAuthorizationServer> ListAuthorizationServers(string q = null, string limit = null, string after = null)
    parameters:
    - id: q
      type: System.String
    - id: limit
      type: System.String
    - id: after
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServer}
    content.vb: Public Function ListAuthorizationServers(q As String = Nothing, limit As String = Nothing, after As String = Nothing) As ICollectionClient(Of IAuthorizationServer)
  overload: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServers*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers(System.String,System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.Threading.CancellationToken)
  id: CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: CreateAuthorizationServerAsync(IAuthorizationServer, CancellationToken)
  nameWithType: AuthorizationServersClient.CreateAuthorizationServerAsync(IAuthorizationServer, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateAuthorizationServerAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 46
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IAuthorizationServer> CreateAuthorizationServerAsync(IAuthorizationServer authorizationServer, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authorizationServer
      type: Okta.Sdk.IAuthorizationServer
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServer}
    content.vb: Public Function CreateAuthorizationServerAsync(authorizationServer As IAuthorizationServer, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServer)
  overload: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  id: DeleteAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeleteAuthorizationServerAsync(String, CancellationToken)
  nameWithType: AuthorizationServersClient.DeleteAuthorizationServerAsync(String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteAuthorizationServerAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 55
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task DeleteAuthorizationServerAsync(string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteAuthorizationServerAsync(authServerId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  id: GetAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: GetAuthorizationServerAsync(String, CancellationToken)
  nameWithType: AuthorizationServersClient.GetAuthorizationServerAsync(String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAuthorizationServerAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 68
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IAuthorizationServer> GetAuthorizationServerAsync(string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServer}
    content.vb: Public Function GetAuthorizationServerAsync(authServerId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServer)
  overload: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.String,System.Threading.CancellationToken)
  id: UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: UpdateAuthorizationServerAsync(IAuthorizationServer, String, CancellationToken)
  nameWithType: AuthorizationServersClient.UpdateAuthorizationServerAsync(IAuthorizationServer, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateAuthorizationServerAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 81
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IAuthorizationServer> UpdateAuthorizationServerAsync(IAuthorizationServer authorizationServer, string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authorizationServer
      type: Okta.Sdk.IAuthorizationServer
    - id: authServerId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServer}
    content.vb: Public Function UpdateAuthorizationServerAsync(authorizationServer As IAuthorizationServer, authServerId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServer)
  overload: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.ListOAuth2Claims(System.String)
  commentId: M:Okta.Sdk.AuthorizationServersClient.ListOAuth2Claims(System.String)
  id: ListOAuth2Claims(System.String)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListOAuth2Claims(String)
  nameWithType: AuthorizationServersClient.ListOAuth2Claims(String)
  fullName: Okta.Sdk.AuthorizationServersClient.ListOAuth2Claims(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListOAuth2Claims
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 94
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IOAuth2Claim> ListOAuth2Claims(string authServerId)
    parameters:
    - id: authServerId
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Claim}
    content.vb: Public Function ListOAuth2Claims(authServerId As String) As ICollectionClient(Of IOAuth2Claim)
  overload: Okta.Sdk.AuthorizationServersClient.ListOAuth2Claims*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  id: CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: CreateOAuth2ClaimAsync(IOAuth2Claim, String, CancellationToken)
  nameWithType: AuthorizationServersClient.CreateOAuth2ClaimAsync(IOAuth2Claim, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateOAuth2ClaimAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 107
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IOAuth2Claim> CreateOAuth2ClaimAsync(IOAuth2Claim oAuth2Claim, string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oAuth2Claim
      type: Okta.Sdk.IOAuth2Claim
    - id: authServerId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
    content.vb: Public Function CreateOAuth2ClaimAsync(oAuth2Claim As IOAuth2Claim, authServerId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Claim)
  overload: Okta.Sdk.AuthorizationServersClient.CreateOAuth2ClaimAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeleteOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeleteOAuth2ClaimAsync(String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.DeleteOAuth2ClaimAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ClaimAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteOAuth2ClaimAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 120
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task DeleteOAuth2ClaimAsync(string authServerId, string claimId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: claimId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteOAuth2ClaimAsync(authServerId As String, claimId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ClaimAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.GetOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.GetOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: GetOAuth2ClaimAsync(String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.GetOAuth2ClaimAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.GetOAuth2ClaimAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetOAuth2ClaimAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 134
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IOAuth2Claim> GetOAuth2ClaimAsync(string authServerId, string claimId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: claimId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
    content.vb: Public Function GetOAuth2ClaimAsync(authServerId As String, claimId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Claim)
  overload: Okta.Sdk.AuthorizationServersClient.GetOAuth2ClaimAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.String,System.Threading.CancellationToken)
  id: UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: UpdateOAuth2ClaimAsync(IOAuth2Claim, String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.UpdateOAuth2ClaimAsync(IOAuth2Claim, String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateOAuth2ClaimAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 148
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IOAuth2Claim> UpdateOAuth2ClaimAsync(IOAuth2Claim oAuth2Claim, string authServerId, string claimId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oAuth2Claim
      type: Okta.Sdk.IOAuth2Claim
    - id: authServerId
      type: System.String
    - id: claimId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
    content.vb: Public Function UpdateOAuth2ClaimAsync(oAuth2Claim As IOAuth2Claim, authServerId As String, claimId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Claim)
  overload: Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ClaimAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(System.String)
  commentId: M:Okta.Sdk.AuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(System.String)
  id: ListOAuth2ClientsForAuthorizationServer(System.String)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListOAuth2ClientsForAuthorizationServer(String)
  nameWithType: AuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(String)
  fullName: Okta.Sdk.AuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListOAuth2ClientsForAuthorizationServer
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 162
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IOAuth2Client> ListOAuth2ClientsForAuthorizationServer(string authServerId)
    parameters:
    - id: authServerId
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
    content.vb: Public Function ListOAuth2ClientsForAuthorizationServer(authServerId As String) As ICollectionClient(Of IOAuth2Client)
  overload: Okta.Sdk.AuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: RevokeRefreshTokensForAuthorizationServerAndClientAsync(String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeRefreshTokensForAuthorizationServerAndClientAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 175
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RevokeRefreshTokensForAuthorizationServerAndClientAsync(string authServerId, string clientId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: clientId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeRefreshTokensForAuthorizationServerAndClientAsync(authServerId As String, clientId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.AuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListRefreshTokensForAuthorizationServerAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListRefreshTokensForAuthorizationServerAndClient(String, String, String, String, Nullable<Int32>)
  nameWithType: AuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(String, String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.AuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListRefreshTokensForAuthorizationServerAndClient
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 189
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IOAuth2RefreshToken> ListRefreshTokensForAuthorizationServerAndClient(string authServerId, string clientId, string expand = null, string after = null, int? limit = -1)
    parameters:
    - id: authServerId
      type: System.String
    - id: clientId
      type: System.String
    - id: expand
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
    content.vb: Public Function ListRefreshTokensForAuthorizationServerAndClient(authServerId As String, clientId As String, expand As String = Nothing, after As String = Nothing, limit As Integer? = -1) As ICollectionClient(Of IOAuth2RefreshToken)
  overload: Okta.Sdk.AuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: AuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(String, String, String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.AuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListRefreshTokensForAuthorizationServerAndClient(String, String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: RevokeRefreshTokenForAuthorizationServerAndClientAsync(String, String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeRefreshTokenForAuthorizationServerAndClientAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 209
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RevokeRefreshTokenForAuthorizationServerAndClientAsync(string authServerId, string clientId, string tokenId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: clientId
      type: System.String
    - id: tokenId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeRefreshTokenForAuthorizationServerAndClientAsync(authServerId As String, clientId As String, tokenId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: GetRefreshTokenForAuthorizationServerAndClientAsync(String, String, String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(String, String, String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetRefreshTokenForAuthorizationServerAndClientAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 224
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IOAuth2RefreshToken> GetRefreshTokenForAuthorizationServerAndClientAsync(string authServerId, string clientId, string tokenId, string expand = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: clientId
      type: System.String
    - id: tokenId
      type: System.String
    - id: expand
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
    content.vb: Public Function GetRefreshTokenForAuthorizationServerAndClientAsync(authServerId As String, clientId As String, tokenId As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2RefreshToken)
  overload: Okta.Sdk.AuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerKeys(System.String)
  commentId: M:Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerKeys(System.String)
  id: ListAuthorizationServerKeys(System.String)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListAuthorizationServerKeys(String)
  nameWithType: AuthorizationServersClient.ListAuthorizationServerKeys(String)
  fullName: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerKeys(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListAuthorizationServerKeys
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 243
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IJsonWebKey> ListAuthorizationServerKeys(string authServerId)
    parameters:
    - id: authServerId
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
    content.vb: Public Function ListAuthorizationServerKeys(authServerId As String) As ICollectionClient(Of IJsonWebKey)
  overload: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerKeys*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse,System.String)
  commentId: M:Okta.Sdk.AuthorizationServersClient.RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse,System.String)
  id: RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse,System.String)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: RotateAuthorizationServerKeys(IJwkUse, String)
  nameWithType: AuthorizationServersClient.RotateAuthorizationServerKeys(IJwkUse, String)
  fullName: Okta.Sdk.AuthorizationServersClient.RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RotateAuthorizationServerKeys
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 256
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IJsonWebKey> RotateAuthorizationServerKeys(IJwkUse use, string authServerId)
    parameters:
    - id: use
      type: Okta.Sdk.IJwkUse
    - id: authServerId
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
    content.vb: Public Function RotateAuthorizationServerKeys(use As IJwkUse, authServerId As String) As ICollectionClient(Of IJsonWebKey)
  overload: Okta.Sdk.AuthorizationServersClient.RotateAuthorizationServerKeys*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  id: ActivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ActivateAuthorizationServerAsync(String, CancellationToken)
  nameWithType: AuthorizationServersClient.ActivateAuthorizationServerAsync(String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateAuthorizationServerAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 269
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task ActivateAuthorizationServerAsync(string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ActivateAuthorizationServerAsync(authServerId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  id: DeactivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeactivateAuthorizationServerAsync(String, CancellationToken)
  nameWithType: AuthorizationServersClient.DeactivateAuthorizationServerAsync(String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateAuthorizationServerAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 282
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task DeactivateAuthorizationServerAsync(string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeactivateAuthorizationServerAsync(authServerId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicies(System.String)
  commentId: M:Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicies(System.String)
  id: ListAuthorizationServerPolicies(System.String)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListAuthorizationServerPolicies(String)
  nameWithType: AuthorizationServersClient.ListAuthorizationServerPolicies(String)
  fullName: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicies(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListAuthorizationServerPolicies
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 295
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IAuthorizationServerPolicy> ListAuthorizationServerPolicies(string authServerId)
    parameters:
    - id: authServerId
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicy}
    content.vb: Public Function ListAuthorizationServerPolicies(authServerId As String) As ICollectionClient(Of IAuthorizationServerPolicy)
  overload: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicies*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  id: CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: CreateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy, String, CancellationToken)
  nameWithType: AuthorizationServersClient.CreateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateAuthorizationServerPolicyAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 308
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IAuthorizationServerPolicy> CreateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy policy, string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policy
      type: Okta.Sdk.IAuthorizationServerPolicy
    - id: authServerId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
    content.vb: Public Function CreateAuthorizationServerPolicyAsync(policy As IAuthorizationServerPolicy, authServerId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicy)
  overload: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeleteAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeleteAuthorizationServerPolicyAsync(String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteAuthorizationServerPolicyAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 321
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task DeleteAuthorizationServerPolicyAsync(string authServerId, string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: policyId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteAuthorizationServerPolicyAsync(authServerId As String, policyId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: GetAuthorizationServerPolicyAsync(String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.GetAuthorizationServerPolicyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAuthorizationServerPolicyAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 335
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IAuthorizationServerPolicy> GetAuthorizationServerPolicyAsync(string authServerId, string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: policyId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
    content.vb: Public Function GetAuthorizationServerPolicyAsync(authServerId As String, policyId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicy)
  overload: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.String,System.Threading.CancellationToken)
  id: UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: UpdateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy, String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy, String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateAuthorizationServerPolicyAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 349
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IAuthorizationServerPolicy> UpdateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy policy, string authServerId, string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policy
      type: Okta.Sdk.IAuthorizationServerPolicy
    - id: authServerId
      type: System.String
    - id: policyId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
    content.vb: Public Function UpdateAuthorizationServerPolicyAsync(policy As IAuthorizationServerPolicy, authServerId As String, policyId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicy)
  overload: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  id: ActivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ActivateAuthorizationServerPolicyAsync(String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateAuthorizationServerPolicyAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 363
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task ActivateAuthorizationServerPolicyAsync(string authServerId, string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: policyId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ActivateAuthorizationServerPolicyAsync(authServerId As String, policyId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeactivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeactivateAuthorizationServerPolicyAsync(String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateAuthorizationServerPolicyAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 377
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task DeactivateAuthorizationServerPolicyAsync(string authServerId, string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: policyId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeactivateAuthorizationServerPolicyAsync(authServerId As String, policyId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicyRules(System.String,System.String)
  commentId: M:Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicyRules(System.String,System.String)
  id: ListAuthorizationServerPolicyRules(System.String,System.String)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListAuthorizationServerPolicyRules(String, String)
  nameWithType: AuthorizationServersClient.ListAuthorizationServerPolicyRules(String, String)
  fullName: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicyRules(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListAuthorizationServerPolicyRules
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 391
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IAuthorizationServerPolicyRule> ListAuthorizationServerPolicyRules(string policyId, string authServerId)
    parameters:
    - id: policyId
      type: System.String
    - id: authServerId
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicyRule}
    content.vb: Public Function ListAuthorizationServerPolicyRules(policyId As String, authServerId As String) As ICollectionClient(Of IAuthorizationServerPolicyRule)
  overload: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicyRules*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  id: CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: CreateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule, String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule, String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateAuthorizationServerPolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 405
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IAuthorizationServerPolicyRule> CreateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule policyRule, string policyId, string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyRule
      type: Okta.Sdk.IAuthorizationServerPolicyRule
    - id: policyId
      type: System.String
    - id: authServerId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicyRule}
    content.vb: Public Function CreateAuthorizationServerPolicyRuleAsync(policyRule As IAuthorizationServerPolicyRule, policyId As String, authServerId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicyRule)
  overload: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeleteAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteAuthorizationServerPolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 419
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task DeleteAuthorizationServerPolicyRuleAsync(string policyId, string authServerId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
    - id: authServerId
      type: System.String
    - id: ruleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteAuthorizationServerPolicyRuleAsync(policyId As String, authServerId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: GetAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAuthorizationServerPolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 434
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IAuthorizationServerPolicyRule> GetAuthorizationServerPolicyRuleAsync(string policyId, string authServerId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
    - id: authServerId
      type: System.String
    - id: ruleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicyRule}
    content.vb: Public Function GetAuthorizationServerPolicyRuleAsync(policyId As String, authServerId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicyRule)
  overload: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: UpdateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule, String, String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule, String, String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateAuthorizationServerPolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 449
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IAuthorizationServerPolicyRule> UpdateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule policyRule, string policyId, string authServerId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyRule
      type: Okta.Sdk.IAuthorizationServerPolicyRule
    - id: policyId
      type: System.String
    - id: authServerId
      type: System.String
    - id: ruleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicyRule}
    content.vb: Public Function UpdateAuthorizationServerPolicyRuleAsync(policyRule As IAuthorizationServerPolicyRule, policyId As String, authServerId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IAuthorizationServerPolicyRule)
  overload: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: ActivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ActivateAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateAuthorizationServerPolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 464
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task ActivateAuthorizationServerPolicyRuleAsync(string authServerId, string policyId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: policyId
      type: System.String
    - id: ruleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ActivateAuthorizationServerPolicyRuleAsync(authServerId As String, policyId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: DeactivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeactivateAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateAuthorizationServerPolicyRuleAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 479
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task DeactivateAuthorizationServerPolicyRuleAsync(string authServerId, string policyId, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: policyId
      type: System.String
    - id: ruleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeactivateAuthorizationServerPolicyRuleAsync(authServerId As String, policyId As String, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.ListOAuth2Scopes(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.AuthorizationServersClient.ListOAuth2Scopes(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListOAuth2Scopes(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: ListOAuth2Scopes(String, String, String, String, Nullable<Int32>)
  nameWithType: AuthorizationServersClient.ListOAuth2Scopes(String, String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.AuthorizationServersClient.ListOAuth2Scopes(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListOAuth2Scopes
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 494
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IOAuth2Scope> ListOAuth2Scopes(string authServerId, string q = null, string filter = null, string cursor = null, int? limit = -1)
    parameters:
    - id: authServerId
      type: System.String
    - id: q
      type: System.String
    - id: filter
      type: System.String
    - id: cursor
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Scope}
    content.vb: Public Function ListOAuth2Scopes(authServerId As String, q As String = Nothing, filter As String = Nothing, cursor As String = Nothing, limit As Integer? = -1) As ICollectionClient(Of IOAuth2Scope)
  overload: Okta.Sdk.AuthorizationServersClient.ListOAuth2Scopes*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: AuthorizationServersClient.ListOAuth2Scopes(String, String, String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.AuthorizationServersClient.ListOAuth2Scopes(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListOAuth2Scopes(String, String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.AuthorizationServersClient.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  id: CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: CreateOAuth2ScopeAsync(IOAuth2Scope, String, CancellationToken)
  nameWithType: AuthorizationServersClient.CreateOAuth2ScopeAsync(IOAuth2Scope, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateOAuth2ScopeAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 514
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IOAuth2Scope> CreateOAuth2ScopeAsync(IOAuth2Scope oAuth2Scope, string authServerId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oAuth2Scope
      type: Okta.Sdk.IOAuth2Scope
    - id: authServerId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
    content.vb: Public Function CreateOAuth2ScopeAsync(oAuth2Scope As IOAuth2Scope, authServerId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Scope)
  overload: Okta.Sdk.AuthorizationServersClient.CreateOAuth2ScopeAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeleteOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: DeleteOAuth2ScopeAsync(String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.DeleteOAuth2ScopeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ScopeAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteOAuth2ScopeAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 527
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task DeleteOAuth2ScopeAsync(string authServerId, string scopeId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: scopeId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteOAuth2ScopeAsync(authServerId As String, scopeId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ScopeAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.GetOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.GetOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: GetOAuth2ScopeAsync(String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.GetOAuth2ScopeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.GetOAuth2ScopeAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetOAuth2ScopeAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 541
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IOAuth2Scope> GetOAuth2ScopeAsync(string authServerId, string scopeId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authServerId
      type: System.String
    - id: scopeId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
    content.vb: Public Function GetOAuth2ScopeAsync(authServerId As String, scopeId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Scope)
  overload: Okta.Sdk.AuthorizationServersClient.GetOAuth2ScopeAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.String,System.Threading.CancellationToken)
  id: UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.AuthorizationServersClient
  langs:
  - csharp
  - vb
  name: UpdateOAuth2ScopeAsync(IOAuth2Scope, String, String, CancellationToken)
  nameWithType: AuthorizationServersClient.UpdateOAuth2ScopeAsync(IOAuth2Scope, String, String, CancellationToken)
  fullName: Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateOAuth2ScopeAsync
    path: ../src/Okta.Sdk/Generated/AuthorizationServersClient.Generated.cs
    startLine: 555
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IOAuth2Scope> UpdateOAuth2ScopeAsync(IOAuth2Scope oAuth2Scope, string authServerId, string scopeId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oAuth2Scope
      type: Okta.Sdk.IOAuth2Scope
    - id: authServerId
      type: System.String
    - id: scopeId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
    content.vb: Public Function UpdateOAuth2ScopeAsync(oAuth2Scope As IOAuth2Scope, authServerId As String, scopeId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Scope)
  overload: Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ScopeAsync*
  implements:
  - Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Okta.Sdk.OktaClient
  commentId: T:Okta.Sdk.OktaClient
  parent: Okta.Sdk
  name: OktaClient
  nameWithType: OktaClient
  fullName: Okta.Sdk.OktaClient
- uid: Okta.Sdk.IOktaClient
  commentId: T:Okta.Sdk.IOktaClient
  parent: Okta.Sdk
  name: IOktaClient
  nameWithType: IOktaClient
  fullName: Okta.Sdk.IOktaClient
- uid: Okta.Sdk.IAuthorizationServersClient
  commentId: T:Okta.Sdk.IAuthorizationServersClient
  parent: Okta.Sdk
  name: IAuthorizationServersClient
  nameWithType: IAuthorizationServersClient
  fullName: Okta.Sdk.IAuthorizationServersClient
- uid: Okta.Sdk.OktaClient.Configuration
  commentId: P:Okta.Sdk.OktaClient.Configuration
  parent: Okta.Sdk.OktaClient
  name: Configuration
  nameWithType: OktaClient.Configuration
  fullName: Okta.Sdk.OktaClient.Configuration
- uid: Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  commentId: M:Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  parent: Okta.Sdk.OktaClient
  name: CreateScoped(RequestContext)
  nameWithType: OktaClient.CreateScoped(RequestContext)
  fullName: Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
    name: CreateScoped
    nameWithType: OktaClient.CreateScoped
    fullName: Okta.Sdk.OktaClient.CreateScoped
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
    name: CreateScoped
    nameWithType: OktaClient.CreateScoped
    fullName: Okta.Sdk.OktaClient.CreateScoped
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.Brands
  commentId: P:Okta.Sdk.OktaClient.Brands
  parent: Okta.Sdk.OktaClient
  name: Brands
  nameWithType: OktaClient.Brands
  fullName: Okta.Sdk.OktaClient.Brands
- uid: Okta.Sdk.OktaClient.GroupSchemas
  commentId: P:Okta.Sdk.OktaClient.GroupSchemas
  parent: Okta.Sdk.OktaClient
  name: GroupSchemas
  nameWithType: OktaClient.GroupSchemas
  fullName: Okta.Sdk.OktaClient.GroupSchemas
- uid: Okta.Sdk.OktaClient.Authenticators
  commentId: P:Okta.Sdk.OktaClient.Authenticators
  parent: Okta.Sdk.OktaClient
  name: Authenticators
  nameWithType: OktaClient.Authenticators
  fullName: Okta.Sdk.OktaClient.Authenticators
- uid: Okta.Sdk.OktaClient.Orgs
  commentId: P:Okta.Sdk.OktaClient.Orgs
  parent: Okta.Sdk.OktaClient
  name: Orgs
  nameWithType: OktaClient.Orgs
  fullName: Okta.Sdk.OktaClient.Orgs
- uid: Okta.Sdk.OktaClient.UserTypes
  commentId: P:Okta.Sdk.OktaClient.UserTypes
  parent: Okta.Sdk.OktaClient
  name: UserTypes
  nameWithType: OktaClient.UserTypes
  fullName: Okta.Sdk.OktaClient.UserTypes
- uid: Okta.Sdk.OktaClient.Users
  commentId: P:Okta.Sdk.OktaClient.Users
  parent: Okta.Sdk.OktaClient
  name: Users
  nameWithType: OktaClient.Users
  fullName: Okta.Sdk.OktaClient.Users
- uid: Okta.Sdk.OktaClient.UserFactors
  commentId: P:Okta.Sdk.OktaClient.UserFactors
  parent: Okta.Sdk.OktaClient
  name: UserFactors
  nameWithType: OktaClient.UserFactors
  fullName: Okta.Sdk.OktaClient.UserFactors
- uid: Okta.Sdk.OktaClient.Groups
  commentId: P:Okta.Sdk.OktaClient.Groups
  parent: Okta.Sdk.OktaClient
  name: Groups
  nameWithType: OktaClient.Groups
  fullName: Okta.Sdk.OktaClient.Groups
- uid: Okta.Sdk.OktaClient.Applications
  commentId: P:Okta.Sdk.OktaClient.Applications
  parent: Okta.Sdk.OktaClient
  name: Applications
  nameWithType: OktaClient.Applications
  fullName: Okta.Sdk.OktaClient.Applications
- uid: Okta.Sdk.OktaClient.Sessions
  commentId: P:Okta.Sdk.OktaClient.Sessions
  parent: Okta.Sdk.OktaClient
  name: Sessions
  nameWithType: OktaClient.Sessions
  fullName: Okta.Sdk.OktaClient.Sessions
- uid: Okta.Sdk.OktaClient.AuthorizationServers
  commentId: P:Okta.Sdk.OktaClient.AuthorizationServers
  parent: Okta.Sdk.OktaClient
  name: AuthorizationServers
  nameWithType: OktaClient.AuthorizationServers
  fullName: Okta.Sdk.OktaClient.AuthorizationServers
- uid: Okta.Sdk.OktaClient.Logs
  commentId: P:Okta.Sdk.OktaClient.Logs
  parent: Okta.Sdk.OktaClient
  name: Logs
  nameWithType: OktaClient.Logs
  fullName: Okta.Sdk.OktaClient.Logs
- uid: Okta.Sdk.OktaClient.Policies
  commentId: P:Okta.Sdk.OktaClient.Policies
  parent: Okta.Sdk.OktaClient
  name: Policies
  nameWithType: OktaClient.Policies
  fullName: Okta.Sdk.OktaClient.Policies
- uid: Okta.Sdk.OktaClient.EventHooks
  commentId: P:Okta.Sdk.OktaClient.EventHooks
  parent: Okta.Sdk.OktaClient
  name: EventHooks
  nameWithType: OktaClient.EventHooks
  fullName: Okta.Sdk.OktaClient.EventHooks
- uid: Okta.Sdk.OktaClient.InlineHooks
  commentId: P:Okta.Sdk.OktaClient.InlineHooks
  parent: Okta.Sdk.OktaClient
  name: InlineHooks
  nameWithType: OktaClient.InlineHooks
  fullName: Okta.Sdk.OktaClient.InlineHooks
- uid: Okta.Sdk.OktaClient.LinkedObjects
  commentId: P:Okta.Sdk.OktaClient.LinkedObjects
  parent: Okta.Sdk.OktaClient
  name: LinkedObjects
  nameWithType: OktaClient.LinkedObjects
  fullName: Okta.Sdk.OktaClient.LinkedObjects
- uid: Okta.Sdk.OktaClient.TrustedOrigins
  commentId: P:Okta.Sdk.OktaClient.TrustedOrigins
  parent: Okta.Sdk.OktaClient
  name: TrustedOrigins
  nameWithType: OktaClient.TrustedOrigins
  fullName: Okta.Sdk.OktaClient.TrustedOrigins
- uid: Okta.Sdk.OktaClient.Features
  commentId: P:Okta.Sdk.OktaClient.Features
  parent: Okta.Sdk.OktaClient
  name: Features
  nameWithType: OktaClient.Features
  fullName: Okta.Sdk.OktaClient.Features
- uid: Okta.Sdk.OktaClient.Templates
  commentId: P:Okta.Sdk.OktaClient.Templates
  parent: Okta.Sdk.OktaClient
  name: Templates
  nameWithType: OktaClient.Templates
  fullName: Okta.Sdk.OktaClient.Templates
- uid: Okta.Sdk.OktaClient.NetworkZones
  commentId: P:Okta.Sdk.OktaClient.NetworkZones
  parent: Okta.Sdk.OktaClient
  name: NetworkZones
  nameWithType: OktaClient.NetworkZones
  fullName: Okta.Sdk.OktaClient.NetworkZones
- uid: Okta.Sdk.OktaClient.Domains
  commentId: P:Okta.Sdk.OktaClient.Domains
  parent: Okta.Sdk.OktaClient
  name: Domains
  nameWithType: OktaClient.Domains
  fullName: Okta.Sdk.OktaClient.Domains
- uid: Okta.Sdk.OktaClient.ProfileMappings
  commentId: P:Okta.Sdk.OktaClient.ProfileMappings
  parent: Okta.Sdk.OktaClient
  name: ProfileMappings
  nameWithType: OktaClient.ProfileMappings
  fullName: Okta.Sdk.OktaClient.ProfileMappings
- uid: Okta.Sdk.OktaClient.ThreatInsights
  commentId: P:Okta.Sdk.OktaClient.ThreatInsights
  parent: Okta.Sdk.OktaClient
  name: ThreatInsights
  nameWithType: OktaClient.ThreatInsights
  fullName: Okta.Sdk.OktaClient.ThreatInsights
- uid: Okta.Sdk.OktaClient.IdentityProviders
  commentId: P:Okta.Sdk.OktaClient.IdentityProviders
  parent: Okta.Sdk.OktaClient
  name: IdentityProviders
  nameWithType: OktaClient.IdentityProviders
  fullName: Okta.Sdk.OktaClient.IdentityProviders
- uid: Okta.Sdk.OktaClient.UserSchemas
  commentId: P:Okta.Sdk.OktaClient.UserSchemas
  parent: Okta.Sdk.OktaClient
  name: UserSchemas
  nameWithType: OktaClient.UserSchemas
  fullName: Okta.Sdk.OktaClient.UserSchemas
- uid: Okta.Sdk.OktaClient.Subscriptions
  commentId: P:Okta.Sdk.OktaClient.Subscriptions
  parent: Okta.Sdk.OktaClient
  name: Subscriptions
  nameWithType: OktaClient.Subscriptions
  fullName: Okta.Sdk.OktaClient.Subscriptions
- uid: Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
  commentId: M:Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
  parent: Okta.Sdk.OktaClient
  name: GetCollectionClient<T>(HttpRequest)
  nameWithType: OktaClient.GetCollectionClient<T>(HttpRequest)
  fullName: Okta.Sdk.OktaClient.GetCollectionClient<T>(Okta.Sdk.HttpRequest)
  nameWithType.vb: OktaClient.GetCollectionClient(Of T)(HttpRequest)
  fullName.vb: Okta.Sdk.OktaClient.GetCollectionClient(Of T)(Okta.Sdk.HttpRequest)
  name.vb: GetCollectionClient(Of T)(HttpRequest)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
    name: GetCollectionClient<T>
    nameWithType: OktaClient.GetCollectionClient<T>
    fullName: Okta.Sdk.OktaClient.GetCollectionClient<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
    name: GetCollectionClient(Of T)
    nameWithType: OktaClient.GetCollectionClient(Of T)
    fullName: Okta.Sdk.OktaClient.GetCollectionClient(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: GetAsync<T>(String, CancellationToken)
  nameWithType: OktaClient.GetAsync<T>(String, CancellationToken)
  fullName: Okta.Sdk.OktaClient.GetAsync<T>(System.String, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.GetAsync(Of T)(String, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.GetAsync(Of T)(System.String, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(String, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
    name: GetAsync<T>
    nameWithType: OktaClient.GetAsync<T>
    fullName: Okta.Sdk.OktaClient.GetAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
    name: GetAsync(Of T)
    nameWithType: OktaClient.GetAsync(Of T)
    fullName: Okta.Sdk.OktaClient.GetAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: GetAsync<T>(HttpRequest, CancellationToken)
  nameWithType: OktaClient.GetAsync<T>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.GetAsync<T>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.GetAsync(Of T)(HttpRequest, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.GetAsync(Of T)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(HttpRequest, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: GetAsync<T>
    nameWithType: OktaClient.GetAsync<T>
    fullName: Okta.Sdk.OktaClient.GetAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: GetAsync(Of T)
    nameWithType: OktaClient.GetAsync(Of T)
    fullName: Okta.Sdk.OktaClient.GetAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetCollection``1(System.String)
  commentId: M:Okta.Sdk.OktaClient.GetCollection``1(System.String)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: GetCollection<T>(String)
  nameWithType: OktaClient.GetCollection<T>(String)
  fullName: Okta.Sdk.OktaClient.GetCollection<T>(System.String)
  nameWithType.vb: OktaClient.GetCollection(Of T)(String)
  fullName.vb: Okta.Sdk.OktaClient.GetCollection(Of T)(System.String)
  name.vb: GetCollection(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetCollection``1(System.String)
    name: GetCollection<T>
    nameWithType: OktaClient.GetCollection<T>
    fullName: Okta.Sdk.OktaClient.GetCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetCollection``1(System.String)
    name: GetCollection(Of T)
    nameWithType: OktaClient.GetCollection(Of T)
    fullName: Okta.Sdk.OktaClient.GetCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  commentId: M:Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  parent: Okta.Sdk.OktaClient
  name: GetCollection<T>(HttpRequest)
  nameWithType: OktaClient.GetCollection<T>(HttpRequest)
  fullName: Okta.Sdk.OktaClient.GetCollection<T>(Okta.Sdk.HttpRequest)
  nameWithType.vb: OktaClient.GetCollection(Of T)(HttpRequest)
  fullName.vb: Okta.Sdk.OktaClient.GetCollection(Of T)(Okta.Sdk.HttpRequest)
  name.vb: GetCollection(Of T)(HttpRequest)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
    name: GetCollection<T>
    nameWithType: OktaClient.GetCollection<T>
    fullName: Okta.Sdk.OktaClient.GetCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
    name: GetCollection(Of T)
    nameWithType: OktaClient.GetCollection(Of T)
    fullName: Okta.Sdk.OktaClient.GetCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PostAsync(String, Object, CancellationToken)
  nameWithType: OktaClient.PostAsync(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync(System.String, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: OktaClient.PostAsync
    fullName: Okta.Sdk.OktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: OktaClient.PostAsync
    fullName: Okta.Sdk.OktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PostAsync<TResponse>(String, Object, CancellationToken)
  nameWithType: OktaClient.PostAsync<TResponse>(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync<TResponse>(System.String, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PostAsync(Of TResponse)(String, Object, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.PostAsync(Of TResponse)(System.String, System.Object, System.Threading.CancellationToken)
  name.vb: PostAsync(Of TResponse)(String, Object, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync<TResponse>
    nameWithType: OktaClient.PostAsync<TResponse>
    fullName: Okta.Sdk.OktaClient.PostAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync(Of TResponse)
    nameWithType: OktaClient.PostAsync(Of TResponse)
    fullName: Okta.Sdk.OktaClient.PostAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PostAsync(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PostAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: OktaClient.PostAsync
    fullName: Okta.Sdk.OktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: OktaClient.PostAsync
    fullName: Okta.Sdk.OktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PostAsync<TResponse>(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PostAsync<TResponse>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync<TResponse>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PostAsync(Of TResponse)(HttpRequest, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.PostAsync(Of TResponse)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: PostAsync(Of TResponse)(HttpRequest, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync<TResponse>
    nameWithType: OktaClient.PostAsync<TResponse>
    fullName: Okta.Sdk.OktaClient.PostAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync(Of TResponse)
    nameWithType: OktaClient.PostAsync(Of TResponse)
    fullName: Okta.Sdk.OktaClient.PostAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PutAsync(String, Object, CancellationToken)
  nameWithType: OktaClient.PutAsync(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync(System.String, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: OktaClient.PutAsync
    fullName: Okta.Sdk.OktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: OktaClient.PutAsync
    fullName: Okta.Sdk.OktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PutAsync<TResponse>(String, Object, CancellationToken)
  nameWithType: OktaClient.PutAsync<TResponse>(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync<TResponse>(System.String, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PutAsync(Of TResponse)(String, Object, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.PutAsync(Of TResponse)(System.String, System.Object, System.Threading.CancellationToken)
  name.vb: PutAsync(Of TResponse)(String, Object, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync<TResponse>
    nameWithType: OktaClient.PutAsync<TResponse>
    fullName: Okta.Sdk.OktaClient.PutAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync(Of TResponse)
    nameWithType: OktaClient.PutAsync(Of TResponse)
    fullName: Okta.Sdk.OktaClient.PutAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PutAsync(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PutAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: OktaClient.PutAsync
    fullName: Okta.Sdk.OktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: OktaClient.PutAsync
    fullName: Okta.Sdk.OktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PutAsync<TResponse>(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PutAsync<TResponse>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync<TResponse>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PutAsync(Of TResponse)(HttpRequest, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.PutAsync(Of TResponse)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: PutAsync(Of TResponse)(HttpRequest, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync<TResponse>
    nameWithType: OktaClient.PutAsync<TResponse>
    fullName: Okta.Sdk.OktaClient.PutAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync(Of TResponse)
    nameWithType: OktaClient.PutAsync(Of TResponse)
    fullName: Okta.Sdk.OktaClient.PutAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: DeleteAsync(String, CancellationToken)
  nameWithType: OktaClient.DeleteAsync(String, CancellationToken)
  fullName: Okta.Sdk.OktaClient.DeleteAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: OktaClient.DeleteAsync
    fullName: Okta.Sdk.OktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: OktaClient.DeleteAsync
    fullName: Okta.Sdk.OktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: DeleteAsync(HttpRequest, CancellationToken)
  nameWithType: OktaClient.DeleteAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: OktaClient.DeleteAsync
    fullName: Okta.Sdk.OktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: OktaClient.DeleteAsync
    fullName: Okta.Sdk.OktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServers*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.ListAuthorizationServers
  name: ListAuthorizationServers
  nameWithType: AuthorizationServersClient.ListAuthorizationServers
  fullName: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServers
- uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers(System.String,System.String,System.String)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers(System.String,System.String,System.String)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: ListAuthorizationServers(String, String, String)
  nameWithType: IAuthorizationServersClient.ListAuthorizationServers(String, String, String)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers(System.String, System.String, System.String)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers(System.String,System.String,System.String)
    name: ListAuthorizationServers
    nameWithType: IAuthorizationServersClient.ListAuthorizationServers
    fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers(System.String,System.String,System.String)
    name: ListAuthorizationServers
    nameWithType: IAuthorizationServersClient.ListAuthorizationServers
    fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServer}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServer}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IAuthorizationServer>
  nameWithType: ICollectionClient<IAuthorizationServer>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IAuthorizationServer>
  nameWithType.vb: ICollectionClient(Of IAuthorizationServer)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IAuthorizationServer)
  name.vb: ICollectionClient(Of IAuthorizationServer)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAuthorizationServer
    name: IAuthorizationServer
    nameWithType: IAuthorizationServer
    fullName: Okta.Sdk.IAuthorizationServer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAuthorizationServer
    name: IAuthorizationServer
    nameWithType: IAuthorizationServer
    fullName: Okta.Sdk.IAuthorizationServer
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerAsync
  name: CreateAuthorizationServerAsync
  nameWithType: AuthorizationServersClient.CreateAuthorizationServerAsync
  fullName: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerAsync
- uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: CreateAuthorizationServerAsync(IAuthorizationServer, CancellationToken)
  nameWithType: IAuthorizationServersClient.CreateAuthorizationServerAsync(IAuthorizationServer, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.Threading.CancellationToken)
    name: CreateAuthorizationServerAsync
    nameWithType: IAuthorizationServersClient.CreateAuthorizationServerAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAuthorizationServer
    name: IAuthorizationServer
    nameWithType: IAuthorizationServer
    fullName: Okta.Sdk.IAuthorizationServer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.Threading.CancellationToken)
    name: CreateAuthorizationServerAsync
    nameWithType: IAuthorizationServersClient.CreateAuthorizationServerAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAuthorizationServer
    name: IAuthorizationServer
    nameWithType: IAuthorizationServer
    fullName: Okta.Sdk.IAuthorizationServer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServer
  commentId: T:Okta.Sdk.IAuthorizationServer
  parent: Okta.Sdk
  name: IAuthorizationServer
  nameWithType: IAuthorizationServer
  fullName: Okta.Sdk.IAuthorizationServer
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServer}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServer}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IAuthorizationServer>
  nameWithType: Task<IAuthorizationServer>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IAuthorizationServer>
  nameWithType.vb: Task(Of IAuthorizationServer)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IAuthorizationServer)
  name.vb: Task(Of IAuthorizationServer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAuthorizationServer
    name: IAuthorizationServer
    nameWithType: IAuthorizationServer
    fullName: Okta.Sdk.IAuthorizationServer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAuthorizationServer
    name: IAuthorizationServer
    nameWithType: IAuthorizationServer
    fullName: Okta.Sdk.IAuthorizationServer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerAsync
  name: DeleteAuthorizationServerAsync
  nameWithType: AuthorizationServersClient.DeleteAuthorizationServerAsync
  fullName: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerAsync
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: DeleteAuthorizationServerAsync(String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
    name: DeleteAuthorizationServerAsync
    nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
    name: DeleteAuthorizationServerAsync
    nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerAsync
  name: GetAuthorizationServerAsync
  nameWithType: AuthorizationServersClient.GetAuthorizationServerAsync
  fullName: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerAsync
- uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: GetAuthorizationServerAsync(String, CancellationToken)
  nameWithType: IAuthorizationServersClient.GetAuthorizationServerAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
    name: GetAuthorizationServerAsync
    nameWithType: IAuthorizationServersClient.GetAuthorizationServerAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
    name: GetAuthorizationServerAsync
    nameWithType: IAuthorizationServersClient.GetAuthorizationServerAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerAsync
  name: UpdateAuthorizationServerAsync
  nameWithType: AuthorizationServersClient.UpdateAuthorizationServerAsync
  fullName: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerAsync
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: UpdateAuthorizationServerAsync(IAuthorizationServer, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerAsync(IAuthorizationServer, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.String,System.Threading.CancellationToken)
    name: UpdateAuthorizationServerAsync
    nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAuthorizationServer
    name: IAuthorizationServer
    nameWithType: IAuthorizationServer
    fullName: Okta.Sdk.IAuthorizationServer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync(Okta.Sdk.IAuthorizationServer,System.String,System.Threading.CancellationToken)
    name: UpdateAuthorizationServerAsync
    nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAuthorizationServer
    name: IAuthorizationServer
    nameWithType: IAuthorizationServer
    fullName: Okta.Sdk.IAuthorizationServer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.ListOAuth2Claims*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.ListOAuth2Claims
  name: ListOAuth2Claims
  nameWithType: AuthorizationServersClient.ListOAuth2Claims
  fullName: Okta.Sdk.AuthorizationServersClient.ListOAuth2Claims
- uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims(System.String)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims(System.String)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: ListOAuth2Claims(String)
  nameWithType: IAuthorizationServersClient.ListOAuth2Claims(String)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims(System.String)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims(System.String)
    name: ListOAuth2Claims
    nameWithType: IAuthorizationServersClient.ListOAuth2Claims
    fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims(System.String)
    name: ListOAuth2Claims
    nameWithType: IAuthorizationServersClient.ListOAuth2Claims
    fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Claims
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Claim}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Claim}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2Claim>
  nameWithType: ICollectionClient<IOAuth2Claim>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2Claim>
  nameWithType.vb: ICollectionClient(Of IOAuth2Claim)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2Claim)
  name.vb: ICollectionClient(Of IOAuth2Claim)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.CreateOAuth2ClaimAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.CreateOAuth2ClaimAsync
  name: CreateOAuth2ClaimAsync
  nameWithType: AuthorizationServersClient.CreateOAuth2ClaimAsync
  fullName: Okta.Sdk.AuthorizationServersClient.CreateOAuth2ClaimAsync
- uid: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: CreateOAuth2ClaimAsync(IOAuth2Claim, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.CreateOAuth2ClaimAsync(IOAuth2Claim, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
    name: CreateOAuth2ClaimAsync
    nameWithType: IAuthorizationServersClient.CreateOAuth2ClaimAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.Threading.CancellationToken)
    name: CreateOAuth2ClaimAsync
    nameWithType: IAuthorizationServersClient.CreateOAuth2ClaimAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOAuth2Claim
  commentId: T:Okta.Sdk.IOAuth2Claim
  parent: Okta.Sdk
  name: IOAuth2Claim
  nameWithType: IOAuth2Claim
  fullName: Okta.Sdk.IOAuth2Claim
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Claim}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2Claim>
  nameWithType: Task<IOAuth2Claim>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2Claim>
  nameWithType.vb: Task(Of IOAuth2Claim)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2Claim)
  name.vb: Task(Of IOAuth2Claim)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ClaimAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ClaimAsync
  name: DeleteOAuth2ClaimAsync
  nameWithType: AuthorizationServersClient.DeleteOAuth2ClaimAsync
  fullName: Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ClaimAsync
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: DeleteOAuth2ClaimAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeleteOAuth2ClaimAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
    name: DeleteOAuth2ClaimAsync
    nameWithType: IAuthorizationServersClient.DeleteOAuth2ClaimAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
    name: DeleteOAuth2ClaimAsync
    nameWithType: IAuthorizationServersClient.DeleteOAuth2ClaimAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.GetOAuth2ClaimAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.GetOAuth2ClaimAsync
  name: GetOAuth2ClaimAsync
  nameWithType: AuthorizationServersClient.GetOAuth2ClaimAsync
  fullName: Okta.Sdk.AuthorizationServersClient.GetOAuth2ClaimAsync
- uid: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: GetOAuth2ClaimAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.GetOAuth2ClaimAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetOAuth2ClaimAsync
    nameWithType: IAuthorizationServersClient.GetOAuth2ClaimAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetOAuth2ClaimAsync
    nameWithType: IAuthorizationServersClient.GetOAuth2ClaimAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ClaimAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ClaimAsync
  name: UpdateOAuth2ClaimAsync
  nameWithType: AuthorizationServersClient.UpdateOAuth2ClaimAsync
  fullName: Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ClaimAsync
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: UpdateOAuth2ClaimAsync(IOAuth2Claim, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.UpdateOAuth2ClaimAsync(IOAuth2Claim, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.String,System.Threading.CancellationToken)
    name: UpdateOAuth2ClaimAsync
    nameWithType: IAuthorizationServersClient.UpdateOAuth2ClaimAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync(Okta.Sdk.IOAuth2Claim,System.String,System.String,System.Threading.CancellationToken)
    name: UpdateOAuth2ClaimAsync
    nameWithType: IAuthorizationServersClient.UpdateOAuth2ClaimAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IOAuth2Claim
    name: IOAuth2Claim
    nameWithType: IOAuth2Claim
    fullName: Okta.Sdk.IOAuth2Claim
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer
  name: ListOAuth2ClientsForAuthorizationServer
  nameWithType: AuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer
  fullName: Okta.Sdk.AuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer
- uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(System.String)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(System.String)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: ListOAuth2ClientsForAuthorizationServer(String)
  nameWithType: IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(String)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(System.String)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(System.String)
    name: ListOAuth2ClientsForAuthorizationServer
    nameWithType: IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer
    fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer(System.String)
    name: ListOAuth2ClientsForAuthorizationServer
    nameWithType: IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer
    fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2ClientsForAuthorizationServer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Client}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2Client>
  nameWithType: ICollectionClient<IOAuth2Client>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2Client>
  nameWithType.vb: ICollectionClient(Of IOAuth2Client)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2Client)
  name.vb: ICollectionClient(Of IOAuth2Client)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Client
    name: IOAuth2Client
    nameWithType: IOAuth2Client
    fullName: Okta.Sdk.IOAuth2Client
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Client
    name: IOAuth2Client
    nameWithType: IOAuth2Client
    fullName: Okta.Sdk.IOAuth2Client
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync
  name: RevokeRefreshTokensForAuthorizationServerAndClientAsync
  nameWithType: AuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync
  fullName: Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync
- uid: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: RevokeRefreshTokensForAuthorizationServerAndClientAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RevokeRefreshTokensForAuthorizationServerAndClientAsync
    nameWithType: IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RevokeRefreshTokensForAuthorizationServerAndClientAsync
    nameWithType: IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokensForAuthorizationServerAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient
  name: ListRefreshTokensForAuthorizationServerAndClient
  nameWithType: AuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient
  fullName: Okta.Sdk.AuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient
- uid: Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: ListRefreshTokensForAuthorizationServerAndClient(String, String, String, String, Nullable<Int32>)
  nameWithType: IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(String, String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(String, String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListRefreshTokensForAuthorizationServerAndClient(String, String, String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListRefreshTokensForAuthorizationServerAndClient
    nameWithType: IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient
    fullName: Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListRefreshTokensForAuthorizationServerAndClient
    nameWithType: IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient
    fullName: Okta.Sdk.IAuthorizationServersClient.ListRefreshTokensForAuthorizationServerAndClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2RefreshToken}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2RefreshToken>
  nameWithType: ICollectionClient<IOAuth2RefreshToken>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2RefreshToken>
  nameWithType.vb: ICollectionClient(Of IOAuth2RefreshToken)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2RefreshToken)
  name.vb: ICollectionClient(Of IOAuth2RefreshToken)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync
  name: RevokeRefreshTokenForAuthorizationServerAndClientAsync
  nameWithType: AuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync
  fullName: Okta.Sdk.AuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync
- uid: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: RevokeRefreshTokenForAuthorizationServerAndClientAsync(String, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RevokeRefreshTokenForAuthorizationServerAndClientAsync
    nameWithType: IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RevokeRefreshTokenForAuthorizationServerAndClientAsync
    nameWithType: IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.RevokeRefreshTokenForAuthorizationServerAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync
  name: GetRefreshTokenForAuthorizationServerAndClientAsync
  nameWithType: AuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync
  fullName: Okta.Sdk.AuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync
- uid: Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: GetRefreshTokenForAuthorizationServerAndClientAsync(String, String, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(String, String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: GetRefreshTokenForAuthorizationServerAndClientAsync
    nameWithType: IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: GetRefreshTokenForAuthorizationServerAndClientAsync
    nameWithType: IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.GetRefreshTokenForAuthorizationServerAndClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2RefreshToken}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2RefreshToken>
  nameWithType: Task<IOAuth2RefreshToken>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2RefreshToken>
  nameWithType.vb: Task(Of IOAuth2RefreshToken)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2RefreshToken)
  name.vb: Task(Of IOAuth2RefreshToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2RefreshToken
    name: IOAuth2RefreshToken
    nameWithType: IOAuth2RefreshToken
    fullName: Okta.Sdk.IOAuth2RefreshToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerKeys*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerKeys
  name: ListAuthorizationServerKeys
  nameWithType: AuthorizationServersClient.ListAuthorizationServerKeys
  fullName: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerKeys
- uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys(System.String)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys(System.String)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: ListAuthorizationServerKeys(String)
  nameWithType: IAuthorizationServersClient.ListAuthorizationServerKeys(String)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys(System.String)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys(System.String)
    name: ListAuthorizationServerKeys
    nameWithType: IAuthorizationServersClient.ListAuthorizationServerKeys
    fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys(System.String)
    name: ListAuthorizationServerKeys
    nameWithType: IAuthorizationServersClient.ListAuthorizationServerKeys
    fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IJsonWebKey>
  nameWithType: ICollectionClient<IJsonWebKey>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IJsonWebKey>
  nameWithType.vb: ICollectionClient(Of IJsonWebKey)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IJsonWebKey)
  name.vb: ICollectionClient(Of IJsonWebKey)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.RotateAuthorizationServerKeys*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.RotateAuthorizationServerKeys
  name: RotateAuthorizationServerKeys
  nameWithType: AuthorizationServersClient.RotateAuthorizationServerKeys
  fullName: Okta.Sdk.AuthorizationServersClient.RotateAuthorizationServerKeys
- uid: Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse,System.String)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse,System.String)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: RotateAuthorizationServerKeys(IJwkUse, String)
  nameWithType: IAuthorizationServersClient.RotateAuthorizationServerKeys(IJwkUse, String)
  fullName: Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse, System.String)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse,System.String)
    name: RotateAuthorizationServerKeys
    nameWithType: IAuthorizationServersClient.RotateAuthorizationServerKeys
    fullName: Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IJwkUse
    name: IJwkUse
    nameWithType: IJwkUse
    fullName: Okta.Sdk.IJwkUse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys(Okta.Sdk.IJwkUse,System.String)
    name: RotateAuthorizationServerKeys
    nameWithType: IAuthorizationServersClient.RotateAuthorizationServerKeys
    fullName: Okta.Sdk.IAuthorizationServersClient.RotateAuthorizationServerKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IJwkUse
    name: IJwkUse
    nameWithType: IJwkUse
    fullName: Okta.Sdk.IJwkUse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IJwkUse
  commentId: T:Okta.Sdk.IJwkUse
  parent: Okta.Sdk
  name: IJwkUse
  nameWithType: IJwkUse
  fullName: Okta.Sdk.IJwkUse
- uid: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerAsync
  name: ActivateAuthorizationServerAsync
  nameWithType: AuthorizationServersClient.ActivateAuthorizationServerAsync
  fullName: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerAsync
- uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: ActivateAuthorizationServerAsync(String, CancellationToken)
  nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
    name: ActivateAuthorizationServerAsync
    nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
    name: ActivateAuthorizationServerAsync
    nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerAsync
  name: DeactivateAuthorizationServerAsync
  nameWithType: AuthorizationServersClient.DeactivateAuthorizationServerAsync
  fullName: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerAsync
- uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: DeactivateAuthorizationServerAsync(String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerAsync(String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
    name: DeactivateAuthorizationServerAsync
    nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync(System.String,System.Threading.CancellationToken)
    name: DeactivateAuthorizationServerAsync
    nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicies*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicies
  name: ListAuthorizationServerPolicies
  nameWithType: AuthorizationServersClient.ListAuthorizationServerPolicies
  fullName: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicies
- uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies(System.String)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies(System.String)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: ListAuthorizationServerPolicies(String)
  nameWithType: IAuthorizationServersClient.ListAuthorizationServerPolicies(String)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies(System.String)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies(System.String)
    name: ListAuthorizationServerPolicies
    nameWithType: IAuthorizationServersClient.ListAuthorizationServerPolicies
    fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies(System.String)
    name: ListAuthorizationServerPolicies
    nameWithType: IAuthorizationServersClient.ListAuthorizationServerPolicies
    fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicies
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicy}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicy}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IAuthorizationServerPolicy>
  nameWithType: ICollectionClient<IAuthorizationServerPolicy>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IAuthorizationServerPolicy>
  nameWithType.vb: ICollectionClient(Of IAuthorizationServerPolicy)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IAuthorizationServerPolicy)
  name.vb: ICollectionClient(Of IAuthorizationServerPolicy)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyAsync
  name: CreateAuthorizationServerPolicyAsync
  nameWithType: AuthorizationServersClient.CreateAuthorizationServerPolicyAsync
  fullName: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyAsync
- uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: CreateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
    name: CreateAuthorizationServerPolicyAsync
    nameWithType: IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.Threading.CancellationToken)
    name: CreateAuthorizationServerPolicyAsync
    nameWithType: IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServerPolicy
  commentId: T:Okta.Sdk.IAuthorizationServerPolicy
  parent: Okta.Sdk
  name: IAuthorizationServerPolicy
  nameWithType: IAuthorizationServerPolicy
  fullName: Okta.Sdk.IAuthorizationServerPolicy
- uid: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicy}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IAuthorizationServerPolicy>
  nameWithType: Task<IAuthorizationServerPolicy>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IAuthorizationServerPolicy>
  nameWithType.vb: Task(Of IAuthorizationServerPolicy)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IAuthorizationServerPolicy)
  name.vb: Task(Of IAuthorizationServerPolicy)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyAsync
  name: DeleteAuthorizationServerPolicyAsync
  nameWithType: AuthorizationServersClient.DeleteAuthorizationServerPolicyAsync
  fullName: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyAsync
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: DeleteAuthorizationServerPolicyAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
    name: DeleteAuthorizationServerPolicyAsync
    nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
    name: DeleteAuthorizationServerPolicyAsync
    nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyAsync
  name: GetAuthorizationServerPolicyAsync
  nameWithType: AuthorizationServersClient.GetAuthorizationServerPolicyAsync
  fullName: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyAsync
- uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: GetAuthorizationServerPolicyAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.GetAuthorizationServerPolicyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetAuthorizationServerPolicyAsync
    nameWithType: IAuthorizationServersClient.GetAuthorizationServerPolicyAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetAuthorizationServerPolicyAsync
    nameWithType: IAuthorizationServersClient.GetAuthorizationServerPolicyAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyAsync
  name: UpdateAuthorizationServerPolicyAsync
  nameWithType: AuthorizationServersClient.UpdateAuthorizationServerPolicyAsync
  fullName: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyAsync
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: UpdateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(IAuthorizationServerPolicy, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.String,System.Threading.CancellationToken)
    name: UpdateAuthorizationServerPolicyAsync
    nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync(Okta.Sdk.IAuthorizationServerPolicy,System.String,System.String,System.Threading.CancellationToken)
    name: UpdateAuthorizationServerPolicyAsync
    nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAuthorizationServerPolicy
    name: IAuthorizationServerPolicy
    nameWithType: IAuthorizationServerPolicy
    fullName: Okta.Sdk.IAuthorizationServerPolicy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyAsync
  name: ActivateAuthorizationServerPolicyAsync
  nameWithType: AuthorizationServersClient.ActivateAuthorizationServerPolicyAsync
  fullName: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyAsync
- uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: ActivateAuthorizationServerPolicyAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
    name: ActivateAuthorizationServerPolicyAsync
    nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
    name: ActivateAuthorizationServerPolicyAsync
    nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync
  name: DeactivateAuthorizationServerPolicyAsync
  nameWithType: AuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync
  fullName: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync
- uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: DeactivateAuthorizationServerPolicyAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
    name: DeactivateAuthorizationServerPolicyAsync
    nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync(System.String,System.String,System.Threading.CancellationToken)
    name: DeactivateAuthorizationServerPolicyAsync
    nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicyRules*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicyRules
  name: ListAuthorizationServerPolicyRules
  nameWithType: AuthorizationServersClient.ListAuthorizationServerPolicyRules
  fullName: Okta.Sdk.AuthorizationServersClient.ListAuthorizationServerPolicyRules
- uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules(System.String,System.String)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules(System.String,System.String)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: ListAuthorizationServerPolicyRules(String, String)
  nameWithType: IAuthorizationServersClient.ListAuthorizationServerPolicyRules(String, String)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules(System.String, System.String)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules(System.String,System.String)
    name: ListAuthorizationServerPolicyRules
    nameWithType: IAuthorizationServersClient.ListAuthorizationServerPolicyRules
    fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules(System.String,System.String)
    name: ListAuthorizationServerPolicyRules
    nameWithType: IAuthorizationServersClient.ListAuthorizationServerPolicyRules
    fullName: Okta.Sdk.IAuthorizationServersClient.ListAuthorizationServerPolicyRules
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicyRule}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IAuthorizationServerPolicyRule}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IAuthorizationServerPolicyRule>
  nameWithType: ICollectionClient<IAuthorizationServerPolicyRule>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IAuthorizationServerPolicyRule>
  nameWithType.vb: ICollectionClient(Of IAuthorizationServerPolicyRule)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IAuthorizationServerPolicyRule)
  name.vb: ICollectionClient(Of IAuthorizationServerPolicyRule)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAuthorizationServerPolicyRule
    name: IAuthorizationServerPolicyRule
    nameWithType: IAuthorizationServerPolicyRule
    fullName: Okta.Sdk.IAuthorizationServerPolicyRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAuthorizationServerPolicyRule
    name: IAuthorizationServerPolicyRule
    nameWithType: IAuthorizationServerPolicyRule
    fullName: Okta.Sdk.IAuthorizationServerPolicyRule
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync
  name: CreateAuthorizationServerPolicyRuleAsync
  nameWithType: AuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync
  fullName: Okta.Sdk.AuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync
- uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: CreateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.Threading.CancellationToken)
    name: CreateAuthorizationServerPolicyRuleAsync
    nameWithType: IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAuthorizationServerPolicyRule
    name: IAuthorizationServerPolicyRule
    nameWithType: IAuthorizationServerPolicyRule
    fullName: Okta.Sdk.IAuthorizationServerPolicyRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.Threading.CancellationToken)
    name: CreateAuthorizationServerPolicyRuleAsync
    nameWithType: IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.CreateAuthorizationServerPolicyRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAuthorizationServerPolicyRule
    name: IAuthorizationServerPolicyRule
    nameWithType: IAuthorizationServerPolicyRule
    fullName: Okta.Sdk.IAuthorizationServerPolicyRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAuthorizationServerPolicyRule
  commentId: T:Okta.Sdk.IAuthorizationServerPolicyRule
  parent: Okta.Sdk
  name: IAuthorizationServerPolicyRule
  nameWithType: IAuthorizationServerPolicyRule
  fullName: Okta.Sdk.IAuthorizationServerPolicyRule
- uid: System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicyRule}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IAuthorizationServerPolicyRule}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IAuthorizationServerPolicyRule>
  nameWithType: Task<IAuthorizationServerPolicyRule>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IAuthorizationServerPolicyRule>
  nameWithType.vb: Task(Of IAuthorizationServerPolicyRule)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IAuthorizationServerPolicyRule)
  name.vb: Task(Of IAuthorizationServerPolicyRule)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAuthorizationServerPolicyRule
    name: IAuthorizationServerPolicyRule
    nameWithType: IAuthorizationServerPolicyRule
    fullName: Okta.Sdk.IAuthorizationServerPolicyRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAuthorizationServerPolicyRule
    name: IAuthorizationServerPolicyRule
    nameWithType: IAuthorizationServerPolicyRule
    fullName: Okta.Sdk.IAuthorizationServerPolicyRule
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync
  name: DeleteAuthorizationServerPolicyRuleAsync
  nameWithType: AuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync
  fullName: Okta.Sdk.AuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: DeleteAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: DeleteAuthorizationServerPolicyRuleAsync
    nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: DeleteAuthorizationServerPolicyRuleAsync
    nameWithType: IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeleteAuthorizationServerPolicyRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync
  name: GetAuthorizationServerPolicyRuleAsync
  nameWithType: AuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync
  fullName: Okta.Sdk.AuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync
- uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: GetAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: GetAuthorizationServerPolicyRuleAsync
    nameWithType: IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: GetAuthorizationServerPolicyRuleAsync
    nameWithType: IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.GetAuthorizationServerPolicyRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync
  name: UpdateAuthorizationServerPolicyRuleAsync
  nameWithType: AuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync
  fullName: Okta.Sdk.AuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: UpdateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule, String, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(IAuthorizationServerPolicyRule, String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule, System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: UpdateAuthorizationServerPolicyRuleAsync
    nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAuthorizationServerPolicyRule
    name: IAuthorizationServerPolicyRule
    nameWithType: IAuthorizationServerPolicyRule
    fullName: Okta.Sdk.IAuthorizationServerPolicyRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync(Okta.Sdk.IAuthorizationServerPolicyRule,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: UpdateAuthorizationServerPolicyRuleAsync
    nameWithType: IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.UpdateAuthorizationServerPolicyRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAuthorizationServerPolicyRule
    name: IAuthorizationServerPolicyRule
    nameWithType: IAuthorizationServerPolicyRule
    fullName: Okta.Sdk.IAuthorizationServerPolicyRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync
  name: ActivateAuthorizationServerPolicyRuleAsync
  nameWithType: AuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync
  fullName: Okta.Sdk.AuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync
- uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: ActivateAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: ActivateAuthorizationServerPolicyRuleAsync
    nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: ActivateAuthorizationServerPolicyRuleAsync
    nameWithType: IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.ActivateAuthorizationServerPolicyRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync
  name: DeactivateAuthorizationServerPolicyRuleAsync
  nameWithType: AuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync
  fullName: Okta.Sdk.AuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync
- uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: DeactivateAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: DeactivateAuthorizationServerPolicyRuleAsync
    nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: DeactivateAuthorizationServerPolicyRuleAsync
    nameWithType: IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeactivateAuthorizationServerPolicyRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.ListOAuth2Scopes*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.ListOAuth2Scopes
  name: ListOAuth2Scopes
  nameWithType: AuthorizationServersClient.ListOAuth2Scopes
  fullName: Okta.Sdk.AuthorizationServersClient.ListOAuth2Scopes
- uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: ListOAuth2Scopes(String, String, String, String, Nullable<Int32>)
  nameWithType: IAuthorizationServersClient.ListOAuth2Scopes(String, String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IAuthorizationServersClient.ListOAuth2Scopes(String, String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListOAuth2Scopes(String, String, String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListOAuth2Scopes
    nameWithType: IAuthorizationServersClient.ListOAuth2Scopes
    fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListOAuth2Scopes
    nameWithType: IAuthorizationServersClient.ListOAuth2Scopes
    fullName: Okta.Sdk.IAuthorizationServersClient.ListOAuth2Scopes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Scope}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Scope}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2Scope>
  nameWithType: ICollectionClient<IOAuth2Scope>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2Scope>
  nameWithType.vb: ICollectionClient(Of IOAuth2Scope)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2Scope)
  name.vb: ICollectionClient(Of IOAuth2Scope)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.CreateOAuth2ScopeAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.CreateOAuth2ScopeAsync
  name: CreateOAuth2ScopeAsync
  nameWithType: AuthorizationServersClient.CreateOAuth2ScopeAsync
  fullName: Okta.Sdk.AuthorizationServersClient.CreateOAuth2ScopeAsync
- uid: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: CreateOAuth2ScopeAsync(IOAuth2Scope, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.CreateOAuth2ScopeAsync(IOAuth2Scope, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
    name: CreateOAuth2ScopeAsync
    nameWithType: IAuthorizationServersClient.CreateOAuth2ScopeAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.Threading.CancellationToken)
    name: CreateOAuth2ScopeAsync
    nameWithType: IAuthorizationServersClient.CreateOAuth2ScopeAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.CreateOAuth2ScopeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOAuth2Scope
  commentId: T:Okta.Sdk.IOAuth2Scope
  parent: Okta.Sdk
  name: IOAuth2Scope
  nameWithType: IOAuth2Scope
  fullName: Okta.Sdk.IOAuth2Scope
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Scope}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2Scope>
  nameWithType: Task<IOAuth2Scope>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2Scope>
  nameWithType.vb: Task(Of IOAuth2Scope)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2Scope)
  name.vb: Task(Of IOAuth2Scope)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ScopeAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ScopeAsync
  name: DeleteOAuth2ScopeAsync
  nameWithType: AuthorizationServersClient.DeleteOAuth2ScopeAsync
  fullName: Okta.Sdk.AuthorizationServersClient.DeleteOAuth2ScopeAsync
- uid: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: DeleteOAuth2ScopeAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.DeleteOAuth2ScopeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: DeleteOAuth2ScopeAsync
    nameWithType: IAuthorizationServersClient.DeleteOAuth2ScopeAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: DeleteOAuth2ScopeAsync
    nameWithType: IAuthorizationServersClient.DeleteOAuth2ScopeAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.DeleteOAuth2ScopeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.GetOAuth2ScopeAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.GetOAuth2ScopeAsync
  name: GetOAuth2ScopeAsync
  nameWithType: AuthorizationServersClient.GetOAuth2ScopeAsync
  fullName: Okta.Sdk.AuthorizationServersClient.GetOAuth2ScopeAsync
- uid: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: GetOAuth2ScopeAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.GetOAuth2ScopeAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetOAuth2ScopeAsync
    nameWithType: IAuthorizationServersClient.GetOAuth2ScopeAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetOAuth2ScopeAsync
    nameWithType: IAuthorizationServersClient.GetOAuth2ScopeAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.GetOAuth2ScopeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ScopeAsync*
  commentId: Overload:Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ScopeAsync
  name: UpdateOAuth2ScopeAsync
  nameWithType: AuthorizationServersClient.UpdateOAuth2ScopeAsync
  fullName: Okta.Sdk.AuthorizationServersClient.UpdateOAuth2ScopeAsync
- uid: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IAuthorizationServersClient
  isExternal: true
  name: UpdateOAuth2ScopeAsync(IOAuth2Scope, String, String, CancellationToken)
  nameWithType: IAuthorizationServersClient.UpdateOAuth2ScopeAsync(IOAuth2Scope, String, String, CancellationToken)
  fullName: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.String,System.Threading.CancellationToken)
    name: UpdateOAuth2ScopeAsync
    nameWithType: IAuthorizationServersClient.UpdateOAuth2ScopeAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync(Okta.Sdk.IOAuth2Scope,System.String,System.String,System.Threading.CancellationToken)
    name: UpdateOAuth2ScopeAsync
    nameWithType: IAuthorizationServersClient.UpdateOAuth2ScopeAsync
    fullName: Okta.Sdk.IAuthorizationServersClient.UpdateOAuth2ScopeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IOAuth2Scope
    name: IOAuth2Scope
    nameWithType: IOAuth2Scope
    fullName: Okta.Sdk.IOAuth2Scope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
