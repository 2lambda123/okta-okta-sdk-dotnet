### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.OktaApiException
  commentId: T:Okta.Sdk.OktaApiException
  id: OktaApiException
  parent: Okta.Sdk
  children:
  - Okta.Sdk.OktaApiException.#ctor(System.Int32,Okta.Sdk.IApiError)
  - Okta.Sdk.OktaApiException.Error
  - Okta.Sdk.OktaApiException.ErrorCauses
  - Okta.Sdk.OktaApiException.ErrorCode
  - Okta.Sdk.OktaApiException.ErrorId
  - Okta.Sdk.OktaApiException.ErrorLink
  - Okta.Sdk.OktaApiException.ErrorSummary
  - Okta.Sdk.OktaApiException.StatusCode
  langs:
  - csharp
  - vb
  name: OktaApiException
  nameWithType: OktaApiException
  fullName: Okta.Sdk.OktaApiException
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/OktaApiException.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: OktaApiException
    path: ../src/Okta.Sdk/OktaApiException.cs
    startLine: 14
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nAn exception wrapping an error returned by the Okta API.\n"
  example: []
  syntax:
    content: 'public class OktaApiException : OktaException, ISerializable'
    content.vb: >-
      Public Class OktaApiException

          Inherits OktaException

          Implements ISerializable
  inheritance:
  - System.Object
  - System.Exception
  - Okta.Sdk.OktaException
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.ToString
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Okta.Sdk.OktaApiException.#ctor(System.Int32,Okta.Sdk.IApiError)
  commentId: M:Okta.Sdk.OktaApiException.#ctor(System.Int32,Okta.Sdk.IApiError)
  id: '#ctor(System.Int32,Okta.Sdk.IApiError)'
  parent: Okta.Sdk.OktaApiException
  langs:
  - csharp
  - vb
  name: OktaApiException(Int32, IApiError)
  nameWithType: OktaApiException.OktaApiException(Int32, IApiError)
  fullName: Okta.Sdk.OktaApiException.OktaApiException(System.Int32, Okta.Sdk.IApiError)
  type: Constructor
  source:
    remote:
      path: src/Okta.Sdk/OktaApiException.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: .ctor
    path: ../src/Okta.Sdk/OktaApiException.cs
    startLine: 23
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nInitializes a new instance of the <xref href=\"Okta.Sdk.OktaApiException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public OktaApiException(int statusCode, IApiError error)
    parameters:
    - id: statusCode
      type: System.Int32
      description: The HTTP status code.
    - id: error
      type: Okta.Sdk.IApiError
      description: The error data.
    content.vb: Public Sub New(statusCode As Integer, error As IApiError)
  overload: Okta.Sdk.OktaApiException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.OktaApiException.Error
  commentId: P:Okta.Sdk.OktaApiException.Error
  id: Error
  parent: Okta.Sdk.OktaApiException
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: OktaApiException.Error
  fullName: Okta.Sdk.OktaApiException.Error
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaApiException.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Error
    path: ../src/Okta.Sdk/OktaApiException.cs
    startLine: 36
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the error object returned by the Okta API.\n"
  example: []
  syntax:
    content: public IApiError Error { get; }
    parameters: []
    return:
      type: Okta.Sdk.IApiError
      description: "\nThe error object returned by the Okta API.\n"
    content.vb: Public ReadOnly Property Error As IApiError
  overload: Okta.Sdk.OktaApiException.Error*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaApiException.StatusCode
  commentId: P:Okta.Sdk.OktaApiException.StatusCode
  id: StatusCode
  parent: Okta.Sdk.OktaApiException
  langs:
  - csharp
  - vb
  name: StatusCode
  nameWithType: OktaApiException.StatusCode
  fullName: Okta.Sdk.OktaApiException.StatusCode
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaApiException.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: StatusCode
    path: ../src/Okta.Sdk/OktaApiException.cs
    startLine: 44
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the HTTP status code.\n"
  example: []
  syntax:
    content: public int StatusCode { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe HTTP status code.\n"
    content.vb: Public ReadOnly Property StatusCode As Integer
  overload: Okta.Sdk.OktaApiException.StatusCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaApiException.ErrorCode
  commentId: P:Okta.Sdk.OktaApiException.ErrorCode
  id: ErrorCode
  parent: Okta.Sdk.OktaApiException
  langs:
  - csharp
  - vb
  name: ErrorCode
  nameWithType: OktaApiException.ErrorCode
  fullName: Okta.Sdk.OktaApiException.ErrorCode
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaApiException.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ErrorCode
    path: ../src/Okta.Sdk/OktaApiException.cs
    startLine: 52
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the error code from the <xref href=\"Okta.Sdk.OktaApiException.Error\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public string ErrorCode { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe error code.\n"
    content.vb: Public ReadOnly Property ErrorCode As String
  overload: Okta.Sdk.OktaApiException.ErrorCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaApiException.ErrorSummary
  commentId: P:Okta.Sdk.OktaApiException.ErrorSummary
  id: ErrorSummary
  parent: Okta.Sdk.OktaApiException
  langs:
  - csharp
  - vb
  name: ErrorSummary
  nameWithType: OktaApiException.ErrorSummary
  fullName: Okta.Sdk.OktaApiException.ErrorSummary
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaApiException.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ErrorSummary
    path: ../src/Okta.Sdk/OktaApiException.cs
    startLine: 60
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the error summary from the <xref href=\"Okta.Sdk.OktaApiException.Error\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public string ErrorSummary { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe error summary.\n"
    content.vb: Public ReadOnly Property ErrorSummary As String
  overload: Okta.Sdk.OktaApiException.ErrorSummary*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaApiException.ErrorLink
  commentId: P:Okta.Sdk.OktaApiException.ErrorLink
  id: ErrorLink
  parent: Okta.Sdk.OktaApiException
  langs:
  - csharp
  - vb
  name: ErrorLink
  nameWithType: OktaApiException.ErrorLink
  fullName: Okta.Sdk.OktaApiException.ErrorLink
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaApiException.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ErrorLink
    path: ../src/Okta.Sdk/OktaApiException.cs
    startLine: 68
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the error link from the <xref href=\"Okta.Sdk.OktaApiException.Error\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public string ErrorLink { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe error link.\n"
    content.vb: Public ReadOnly Property ErrorLink As String
  overload: Okta.Sdk.OktaApiException.ErrorLink*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaApiException.ErrorId
  commentId: P:Okta.Sdk.OktaApiException.ErrorId
  id: ErrorId
  parent: Okta.Sdk.OktaApiException
  langs:
  - csharp
  - vb
  name: ErrorId
  nameWithType: OktaApiException.ErrorId
  fullName: Okta.Sdk.OktaApiException.ErrorId
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaApiException.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ErrorId
    path: ../src/Okta.Sdk/OktaApiException.cs
    startLine: 76
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the error ID from the <xref href=\"Okta.Sdk.OktaApiException.Error\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public string ErrorId { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe error ID.\n"
    content.vb: Public ReadOnly Property ErrorId As String
  overload: Okta.Sdk.OktaApiException.ErrorId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaApiException.ErrorCauses
  commentId: P:Okta.Sdk.OktaApiException.ErrorCauses
  id: ErrorCauses
  parent: Okta.Sdk.OktaApiException
  langs:
  - csharp
  - vb
  name: ErrorCauses
  nameWithType: OktaApiException.ErrorCauses
  fullName: Okta.Sdk.OktaApiException.ErrorCauses
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaApiException.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ErrorCauses
    path: ../src/Okta.Sdk/OktaApiException.cs
    startLine: 84
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the list of error causes from the <xref href=\"Okta.Sdk.OktaApiException.Error\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public IEnumerable<IApiErrorCause> ErrorCauses { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Okta.Sdk.IApiErrorCause}
      description: "\nThe list of error causes.\n"
    content.vb: Public ReadOnly Property ErrorCauses As IEnumerable(Of IApiErrorCause)
  overload: Okta.Sdk.OktaApiException.ErrorCauses*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Okta.Sdk.OktaException
  commentId: T:Okta.Sdk.OktaException
  parent: Okta.Sdk
  name: OktaException
  nameWithType: OktaException
  fullName: Okta.Sdk.OktaException
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Okta.Sdk.OktaApiException
  commentId: T:Okta.Sdk.OktaApiException
  name: OktaApiException
  nameWithType: OktaApiException
  fullName: Okta.Sdk.OktaApiException
- uid: Okta.Sdk.OktaApiException.#ctor*
  commentId: Overload:Okta.Sdk.OktaApiException.#ctor
  name: OktaApiException
  nameWithType: OktaApiException.OktaApiException
  fullName: Okta.Sdk.OktaApiException.OktaApiException
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Okta.Sdk.IApiError
  commentId: T:Okta.Sdk.IApiError
  parent: Okta.Sdk
  name: IApiError
  nameWithType: IApiError
  fullName: Okta.Sdk.IApiError
- uid: Okta.Sdk.OktaApiException.Error*
  commentId: Overload:Okta.Sdk.OktaApiException.Error
  name: Error
  nameWithType: OktaApiException.Error
  fullName: Okta.Sdk.OktaApiException.Error
- uid: Okta.Sdk.OktaApiException.StatusCode*
  commentId: Overload:Okta.Sdk.OktaApiException.StatusCode
  name: StatusCode
  nameWithType: OktaApiException.StatusCode
  fullName: Okta.Sdk.OktaApiException.StatusCode
- uid: Okta.Sdk.OktaApiException.Error
  commentId: P:Okta.Sdk.OktaApiException.Error
  isExternal: true
- uid: Okta.Sdk.OktaApiException.ErrorCode*
  commentId: Overload:Okta.Sdk.OktaApiException.ErrorCode
  name: ErrorCode
  nameWithType: OktaApiException.ErrorCode
  fullName: Okta.Sdk.OktaApiException.ErrorCode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.OktaApiException.ErrorSummary*
  commentId: Overload:Okta.Sdk.OktaApiException.ErrorSummary
  name: ErrorSummary
  nameWithType: OktaApiException.ErrorSummary
  fullName: Okta.Sdk.OktaApiException.ErrorSummary
- uid: Okta.Sdk.OktaApiException.ErrorLink*
  commentId: Overload:Okta.Sdk.OktaApiException.ErrorLink
  name: ErrorLink
  nameWithType: OktaApiException.ErrorLink
  fullName: Okta.Sdk.OktaApiException.ErrorLink
- uid: Okta.Sdk.OktaApiException.ErrorId*
  commentId: Overload:Okta.Sdk.OktaApiException.ErrorId
  name: ErrorId
  nameWithType: OktaApiException.ErrorId
  fullName: Okta.Sdk.OktaApiException.ErrorId
- uid: Okta.Sdk.OktaApiException.ErrorCauses*
  commentId: Overload:Okta.Sdk.OktaApiException.ErrorCauses
  name: ErrorCauses
  nameWithType: OktaApiException.ErrorCauses
  fullName: Okta.Sdk.OktaApiException.ErrorCauses
- uid: System.Collections.Generic.IEnumerable{Okta.Sdk.IApiErrorCause}
  commentId: T:System.Collections.Generic.IEnumerable{Okta.Sdk.IApiErrorCause}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IApiErrorCause>
  nameWithType: IEnumerable<IApiErrorCause>
  fullName: System.Collections.Generic.IEnumerable<Okta.Sdk.IApiErrorCause>
  nameWithType.vb: IEnumerable(Of IApiErrorCause)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Okta.Sdk.IApiErrorCause)
  name.vb: IEnumerable(Of IApiErrorCause)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IApiErrorCause
    name: IApiErrorCause
    nameWithType: IApiErrorCause
    fullName: Okta.Sdk.IApiErrorCause
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IApiErrorCause
    name: IApiErrorCause
    nameWithType: IApiErrorCause
    fullName: Okta.Sdk.IApiErrorCause
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
