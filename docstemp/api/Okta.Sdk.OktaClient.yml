### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.OktaClient
  commentId: T:Okta.Sdk.OktaClient
  id: OktaClient
  parent: Okta.Sdk
  children:
  - Okta.Sdk.OktaClient.#ctor(Okta.Sdk.Configuration.OktaClientConfiguration,Microsoft.Extensions.Logging.ILogger,Okta.Sdk.Internal.ISerializer,Okta.Sdk.Internal.IOAuthTokenProvider)
  - Okta.Sdk.OktaClient.#ctor(Okta.Sdk.Configuration.OktaClientConfiguration,Okta.Sdk.Internal.IOAuthTokenProvider,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger,Okta.Sdk.IRetryStrategy,Okta.Sdk.Internal.ISerializer)
  - Okta.Sdk.OktaClient.#ctor(Okta.Sdk.Configuration.OktaClientConfiguration,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger,Okta.Sdk.IRetryStrategy,Okta.Sdk.Internal.ISerializer,Okta.Sdk.Internal.IOAuthTokenProvider)
  - Okta.Sdk.OktaClient.#ctor(Okta.Sdk.Internal.IDataStore,Okta.Sdk.Configuration.OktaClientConfiguration,Okta.Sdk.RequestContext)
  - Okta.Sdk.OktaClient.Applications
  - Okta.Sdk.OktaClient.Authenticators
  - Okta.Sdk.OktaClient.AuthorizationServers
  - Okta.Sdk.OktaClient.Brands
  - Okta.Sdk.OktaClient.Configuration
  - Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  - Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.Domains
  - Okta.Sdk.OktaClient.EventHooks
  - Okta.Sdk.OktaClient.Features
  - Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  - Okta.Sdk.OktaClient.GetCollection``1(System.String)
  - Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
  - Okta.Sdk.OktaClient.Groups
  - Okta.Sdk.OktaClient.GroupSchemas
  - Okta.Sdk.OktaClient.IdentityProviders
  - Okta.Sdk.OktaClient.InlineHooks
  - Okta.Sdk.OktaClient.LinkedObjects
  - Okta.Sdk.OktaClient.Logs
  - Okta.Sdk.OktaClient.NetworkZones
  - Okta.Sdk.OktaClient.Orgs
  - Okta.Sdk.OktaClient.Policies
  - Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.ProfileMappings
  - Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.Sessions
  - Okta.Sdk.OktaClient.Subscriptions
  - Okta.Sdk.OktaClient.Templates
  - Okta.Sdk.OktaClient.ThreatInsights
  - Okta.Sdk.OktaClient.TrustedOrigins
  - Okta.Sdk.OktaClient.UserFactors
  - Okta.Sdk.OktaClient.Users
  - Okta.Sdk.OktaClient.UserSchemas
  - Okta.Sdk.OktaClient.UserTypes
  langs:
  - csharp
  - vb
  name: OktaClient
  nameWithType: OktaClient
  fullName: Okta.Sdk.OktaClient
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: OktaClient
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 34
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nA client that communicates with the Okta management API.\n"
  example:
  - "\nInitialize an OktaClient by passing configuration via code\n<pre><code>var oktaClient = new OktaClient(new OktaClientConfiguration\n{\n  OrgUrl = &quot;https://dev-12345.oktapreview.com/&quot;,\n  Token = &quot;my_api_token&quot;\n});</code></pre>\n"
  syntax:
    content: 'public class OktaClient : IOktaClient'
    content.vb: >-
      Public Class OktaClient

          Implements IOktaClient
  inheritance:
  - System.Object
  derivedClasses:
  - Okta.Sdk.ApplicationsClient
  - Okta.Sdk.AuthenticatorsClient
  - Okta.Sdk.AuthorizationServersClient
  - Okta.Sdk.BrandsClient
  - Okta.Sdk.DomainsClient
  - Okta.Sdk.EventHooksClient
  - Okta.Sdk.FeaturesClient
  - Okta.Sdk.GroupSchemasClient
  - Okta.Sdk.GroupsClient
  - Okta.Sdk.IdentityProvidersClient
  - Okta.Sdk.InlineHooksClient
  - Okta.Sdk.LinkedObjectsClient
  - Okta.Sdk.LogsClient
  - Okta.Sdk.NetworkZonesClient
  - Okta.Sdk.OrgsClient
  - Okta.Sdk.PoliciesClient
  - Okta.Sdk.ProfileMappingsClient
  - Okta.Sdk.SessionsClient
  - Okta.Sdk.SubscriptionsClient
  - Okta.Sdk.TemplatesClient
  - Okta.Sdk.ThreatInsightsClient
  - Okta.Sdk.TrustedOriginsClient
  - Okta.Sdk.UserFactorsClient
  - Okta.Sdk.UserSchemasClient
  - Okta.Sdk.UsersClient
  - Okta.Sdk.UserTypesClient
  implements:
  - Okta.Sdk.IOktaClient
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Okta.Sdk.OktaClient.#ctor(Okta.Sdk.Configuration.OktaClientConfiguration,Okta.Sdk.Internal.IOAuthTokenProvider,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger,Okta.Sdk.IRetryStrategy,Okta.Sdk.Internal.ISerializer)
  commentId: M:Okta.Sdk.OktaClient.#ctor(Okta.Sdk.Configuration.OktaClientConfiguration,Okta.Sdk.Internal.IOAuthTokenProvider,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger,Okta.Sdk.IRetryStrategy,Okta.Sdk.Internal.ISerializer)
  id: '#ctor(Okta.Sdk.Configuration.OktaClientConfiguration,Okta.Sdk.Internal.IOAuthTokenProvider,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger,Okta.Sdk.IRetryStrategy,Okta.Sdk.Internal.ISerializer)'
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: OktaClient(OktaClientConfiguration, IOAuthTokenProvider, HttpClient, ILogger, IRetryStrategy, ISerializer)
  nameWithType: OktaClient.OktaClient(OktaClientConfiguration, IOAuthTokenProvider, HttpClient, ILogger, IRetryStrategy, ISerializer)
  fullName: Okta.Sdk.OktaClient.OktaClient(Okta.Sdk.Configuration.OktaClientConfiguration, Okta.Sdk.Internal.IOAuthTokenProvider, System.Net.Http.HttpClient, Microsoft.Extensions.Logging.ILogger, Okta.Sdk.IRetryStrategy, Okta.Sdk.Internal.ISerializer)
  type: Constructor
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: .ctor
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 52
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: protected OktaClient(OktaClientConfiguration apiClientConfiguration, IOAuthTokenProvider oAuthTokenProvider, HttpClient httpClient, ILogger logger, IRetryStrategy retryStrategy, ISerializer serializer)
    parameters:
    - id: apiClientConfiguration
      type: Okta.Sdk.Configuration.OktaClientConfiguration
    - id: oAuthTokenProvider
      type: Okta.Sdk.Internal.IOAuthTokenProvider
    - id: httpClient
      type: System.Net.Http.HttpClient
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    - id: retryStrategy
      type: Okta.Sdk.IRetryStrategy
    - id: serializer
      type: Okta.Sdk.Internal.ISerializer
    content.vb: Protected Sub New(apiClientConfiguration As OktaClientConfiguration, oAuthTokenProvider As IOAuthTokenProvider, httpClient As HttpClient, logger As ILogger, retryStrategy As IRetryStrategy, serializer As ISerializer)
  overload: Okta.Sdk.OktaClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Okta.Sdk.OktaClient.#ctor(Okta.Sdk.Configuration.OktaClientConfiguration,Microsoft.Extensions.Logging.ILogger,Okta.Sdk.Internal.ISerializer,Okta.Sdk.Internal.IOAuthTokenProvider)
  commentId: M:Okta.Sdk.OktaClient.#ctor(Okta.Sdk.Configuration.OktaClientConfiguration,Microsoft.Extensions.Logging.ILogger,Okta.Sdk.Internal.ISerializer,Okta.Sdk.Internal.IOAuthTokenProvider)
  id: '#ctor(Okta.Sdk.Configuration.OktaClientConfiguration,Microsoft.Extensions.Logging.ILogger,Okta.Sdk.Internal.ISerializer,Okta.Sdk.Internal.IOAuthTokenProvider)'
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: OktaClient(OktaClientConfiguration, ILogger, ISerializer, IOAuthTokenProvider)
  nameWithType: OktaClient.OktaClient(OktaClientConfiguration, ILogger, ISerializer, IOAuthTokenProvider)
  fullName: Okta.Sdk.OktaClient.OktaClient(Okta.Sdk.Configuration.OktaClientConfiguration, Microsoft.Extensions.Logging.ILogger, Okta.Sdk.Internal.ISerializer, Okta.Sdk.Internal.IOAuthTokenProvider)
  type: Constructor
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: .ctor
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 94
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nInitializes a new instance of the <xref href=\"Okta.Sdk.OktaClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public OktaClient(OktaClientConfiguration apiClientConfiguration = null, ILogger logger = null, ISerializer serializer = null, IOAuthTokenProvider oAuthTokenProvider = null)
    parameters:
    - id: apiClientConfiguration
      type: Okta.Sdk.Configuration.OktaClientConfiguration
      description: "\nThe client configuration. If <code>null</code>, the library will attempt to load\nconfiguration from an <code>okta.yaml</code> file or environment variables.\n"
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logging interface to use, if any.
    - id: serializer
      type: Okta.Sdk.Internal.ISerializer
      description: >
        The JSON serializer to use, if any. Using the <code>DefaultSerializer</code> is still strongly recommended since it has all the behavior this SDK needs to work properly.

        If a custom serializer is used, the developer is responsible to add the required logic for this SDK to continue working properly. See <xref href="Okta.Sdk.Internal.DefaultSerializer" data-throw-if-not-resolved="false"></xref> to check out what can be configured.

        <param name="oAuthTokenProvider">The custom token provider to renew an access token when it expires. Only works with <xref href="Okta.Sdk.Configuration.AuthorizationMode.BearerToken" data-throw-if-not-resolved="false"></xref>.</param>
    - id: oAuthTokenProvider
      type: Okta.Sdk.Internal.IOAuthTokenProvider
    content.vb: Public Sub New(apiClientConfiguration As OktaClientConfiguration = Nothing, logger As ILogger = Nothing, serializer As ISerializer = Nothing, oAuthTokenProvider As IOAuthTokenProvider = Nothing)
  overload: Okta.Sdk.OktaClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.OktaClient.#ctor(Okta.Sdk.Configuration.OktaClientConfiguration,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger,Okta.Sdk.IRetryStrategy,Okta.Sdk.Internal.ISerializer,Okta.Sdk.Internal.IOAuthTokenProvider)
  commentId: M:Okta.Sdk.OktaClient.#ctor(Okta.Sdk.Configuration.OktaClientConfiguration,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger,Okta.Sdk.IRetryStrategy,Okta.Sdk.Internal.ISerializer,Okta.Sdk.Internal.IOAuthTokenProvider)
  id: '#ctor(Okta.Sdk.Configuration.OktaClientConfiguration,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger,Okta.Sdk.IRetryStrategy,Okta.Sdk.Internal.ISerializer,Okta.Sdk.Internal.IOAuthTokenProvider)'
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: OktaClient(OktaClientConfiguration, HttpClient, ILogger, IRetryStrategy, ISerializer, IOAuthTokenProvider)
  nameWithType: OktaClient.OktaClient(OktaClientConfiguration, HttpClient, ILogger, IRetryStrategy, ISerializer, IOAuthTokenProvider)
  fullName: Okta.Sdk.OktaClient.OktaClient(Okta.Sdk.Configuration.OktaClientConfiguration, System.Net.Http.HttpClient, Microsoft.Extensions.Logging.ILogger, Okta.Sdk.IRetryStrategy, Okta.Sdk.Internal.ISerializer, Okta.Sdk.Internal.IOAuthTokenProvider)
  type: Constructor
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: .ctor
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 128
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nInitializes a new instance of the <xref href=\"Okta.Sdk.OktaClient\" data-throw-if-not-resolved=\"false\"></xref> class using the specified <xref href=\"System.Net.Http.HttpClient\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public OktaClient(OktaClientConfiguration apiClientConfiguration, HttpClient httpClient, ILogger logger = null, IRetryStrategy retryStrategy = null, ISerializer serializer = null, IOAuthTokenProvider oAuthTokenProvider = null)
    parameters:
    - id: apiClientConfiguration
      type: Okta.Sdk.Configuration.OktaClientConfiguration
      description: "\nThe client configuration. If <code>null</code>, the library will attempt to load\nconfiguration from an <code>okta.yaml</code> file or environment variables.\n"
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: The HTTP client to use for requests to the Okta API.
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logging interface to use, if any.
    - id: retryStrategy
      type: Okta.Sdk.IRetryStrategy
      description: The retry strategy interface to use, if any.
    - id: serializer
      type: Okta.Sdk.Internal.ISerializer
      description: >
        The JSON serializer to use, if any. Using the <code>DefaultSerializer</code> is still strongly recommended since it has all the behavior this SDK needs to work properly.

        If a custom serializer is used, the developer is responsible to add the required logic for this SDK to continue working properly. See <xref href="Okta.Sdk.Internal.DefaultSerializer" data-throw-if-not-resolved="false"></xref> to check out what settings can be configured.
    - id: oAuthTokenProvider
      type: Okta.Sdk.Internal.IOAuthTokenProvider
      description: The custom token provider to renew an access token when it expires. Only works with <xref href="Okta.Sdk.Configuration.AuthorizationMode.BearerToken" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(apiClientConfiguration As OktaClientConfiguration, httpClient As HttpClient, logger As ILogger = Nothing, retryStrategy As IRetryStrategy = Nothing, serializer As ISerializer = Nothing, oAuthTokenProvider As IOAuthTokenProvider = Nothing)
  overload: Okta.Sdk.OktaClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.OktaClient.#ctor(Okta.Sdk.Internal.IDataStore,Okta.Sdk.Configuration.OktaClientConfiguration,Okta.Sdk.RequestContext)
  commentId: M:Okta.Sdk.OktaClient.#ctor(Okta.Sdk.Internal.IDataStore,Okta.Sdk.Configuration.OktaClientConfiguration,Okta.Sdk.RequestContext)
  id: '#ctor(Okta.Sdk.Internal.IDataStore,Okta.Sdk.Configuration.OktaClientConfiguration,Okta.Sdk.RequestContext)'
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: OktaClient(IDataStore, OktaClientConfiguration, RequestContext)
  nameWithType: OktaClient.OktaClient(IDataStore, OktaClientConfiguration, RequestContext)
  fullName: Okta.Sdk.OktaClient.OktaClient(Okta.Sdk.Internal.IDataStore, Okta.Sdk.Configuration.OktaClientConfiguration, Okta.Sdk.RequestContext)
  type: Constructor
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: .ctor
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 140
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nInitializes a new instance of the <xref href=\"Okta.Sdk.OktaClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: This overload is used internally to create cheap copies of an existing client.
  example: []
  syntax:
    content: protected OktaClient(IDataStore dataStore, OktaClientConfiguration configuration, RequestContext requestContext)
    parameters:
    - id: dataStore
      type: Okta.Sdk.Internal.IDataStore
      description: The <xref href="Okta.Sdk.Internal.IDataStore?text=DataStore" data-throw-if-not-resolved="false"></xref> to use.
    - id: configuration
      type: Okta.Sdk.Configuration.OktaClientConfiguration
      description: The client configuration.
    - id: requestContext
      type: Okta.Sdk.RequestContext
      description: The request context, if any.
    content.vb: Protected Sub New(dataStore As IDataStore, configuration As OktaClientConfiguration, requestContext As RequestContext)
  overload: Okta.Sdk.OktaClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Okta.Sdk.OktaClient.Configuration
  commentId: P:Okta.Sdk.OktaClient.Configuration
  id: Configuration
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: OktaClient.Configuration
  fullName: Okta.Sdk.OktaClient.Configuration
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Configuration
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 175
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public OktaClientConfiguration Configuration { get; }
    parameters: []
    return:
      type: Okta.Sdk.Configuration.OktaClientConfiguration
    content.vb: Public ReadOnly Property Configuration As OktaClientConfiguration
  overload: Okta.Sdk.OktaClient.Configuration*
  implements:
  - Okta.Sdk.IOktaClient.Configuration
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  commentId: M:Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  id: CreateScoped(Okta.Sdk.RequestContext)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: CreateScoped(RequestContext)
  nameWithType: OktaClient.CreateScoped(RequestContext)
  fullName: Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateScoped
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 178
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IOktaClient CreateScoped(RequestContext requestContext)
    parameters:
    - id: requestContext
      type: Okta.Sdk.RequestContext
    return:
      type: Okta.Sdk.IOktaClient
    content.vb: Public Function CreateScoped(requestContext As RequestContext) As IOktaClient
  overload: Okta.Sdk.OktaClient.CreateScoped*
  implements:
  - Okta.Sdk.IOktaClient.CreateScoped(Okta.Sdk.RequestContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.OktaClient.Brands
  commentId: P:Okta.Sdk.OktaClient.Brands
  id: Brands
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: Brands
  nameWithType: OktaClient.Brands
  fullName: Okta.Sdk.OktaClient.Brands
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Brands
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 182
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IBrandsClient Brands { get; }
    parameters: []
    return:
      type: Okta.Sdk.IBrandsClient
    content.vb: Public ReadOnly Property Brands As IBrandsClient
  overload: Okta.Sdk.OktaClient.Brands*
  implements:
  - Okta.Sdk.IOktaClient.Brands
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.GroupSchemas
  commentId: P:Okta.Sdk.OktaClient.GroupSchemas
  id: GroupSchemas
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: GroupSchemas
  nameWithType: OktaClient.GroupSchemas
  fullName: Okta.Sdk.OktaClient.GroupSchemas
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GroupSchemas
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 185
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IGroupSchemasClient GroupSchemas { get; }
    parameters: []
    return:
      type: Okta.Sdk.IGroupSchemasClient
    content.vb: Public ReadOnly Property GroupSchemas As IGroupSchemasClient
  overload: Okta.Sdk.OktaClient.GroupSchemas*
  implements:
  - Okta.Sdk.IOktaClient.GroupSchemas
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.Authenticators
  commentId: P:Okta.Sdk.OktaClient.Authenticators
  id: Authenticators
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: Authenticators
  nameWithType: OktaClient.Authenticators
  fullName: Okta.Sdk.OktaClient.Authenticators
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Authenticators
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 188
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IAuthenticatorsClient Authenticators { get; }
    parameters: []
    return:
      type: Okta.Sdk.IAuthenticatorsClient
    content.vb: Public ReadOnly Property Authenticators As IAuthenticatorsClient
  overload: Okta.Sdk.OktaClient.Authenticators*
  implements:
  - Okta.Sdk.IOktaClient.Authenticators
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.Orgs
  commentId: P:Okta.Sdk.OktaClient.Orgs
  id: Orgs
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: Orgs
  nameWithType: OktaClient.Orgs
  fullName: Okta.Sdk.OktaClient.Orgs
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Orgs
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 191
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IOrgsClient Orgs { get; }
    parameters: []
    return:
      type: Okta.Sdk.IOrgsClient
    content.vb: Public ReadOnly Property Orgs As IOrgsClient
  overload: Okta.Sdk.OktaClient.Orgs*
  implements:
  - Okta.Sdk.IOktaClient.Orgs
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.UserTypes
  commentId: P:Okta.Sdk.OktaClient.UserTypes
  id: UserTypes
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: UserTypes
  nameWithType: OktaClient.UserTypes
  fullName: Okta.Sdk.OktaClient.UserTypes
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UserTypes
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 194
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IUserTypesClient UserTypes { get; }
    parameters: []
    return:
      type: Okta.Sdk.IUserTypesClient
    content.vb: Public ReadOnly Property UserTypes As IUserTypesClient
  overload: Okta.Sdk.OktaClient.UserTypes*
  implements:
  - Okta.Sdk.IOktaClient.UserTypes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.Users
  commentId: P:Okta.Sdk.OktaClient.Users
  id: Users
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: OktaClient.Users
  fullName: Okta.Sdk.OktaClient.Users
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Users
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 197
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IUsersClient Users { get; }
    parameters: []
    return:
      type: Okta.Sdk.IUsersClient
    content.vb: Public ReadOnly Property Users As IUsersClient
  overload: Okta.Sdk.OktaClient.Users*
  implements:
  - Okta.Sdk.IOktaClient.Users
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.UserFactors
  commentId: P:Okta.Sdk.OktaClient.UserFactors
  id: UserFactors
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: UserFactors
  nameWithType: OktaClient.UserFactors
  fullName: Okta.Sdk.OktaClient.UserFactors
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UserFactors
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 200
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IUserFactorsClient UserFactors { get; }
    parameters: []
    return:
      type: Okta.Sdk.IUserFactorsClient
    content.vb: Public ReadOnly Property UserFactors As IUserFactorsClient
  overload: Okta.Sdk.OktaClient.UserFactors*
  implements:
  - Okta.Sdk.IOktaClient.UserFactors
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.Groups
  commentId: P:Okta.Sdk.OktaClient.Groups
  id: Groups
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: Groups
  nameWithType: OktaClient.Groups
  fullName: Okta.Sdk.OktaClient.Groups
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Groups
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 203
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IGroupsClient Groups { get; }
    parameters: []
    return:
      type: Okta.Sdk.IGroupsClient
    content.vb: Public ReadOnly Property Groups As IGroupsClient
  overload: Okta.Sdk.OktaClient.Groups*
  implements:
  - Okta.Sdk.IOktaClient.Groups
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.Applications
  commentId: P:Okta.Sdk.OktaClient.Applications
  id: Applications
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: Applications
  nameWithType: OktaClient.Applications
  fullName: Okta.Sdk.OktaClient.Applications
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Applications
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 206
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IApplicationsClient Applications { get; }
    parameters: []
    return:
      type: Okta.Sdk.IApplicationsClient
    content.vb: Public ReadOnly Property Applications As IApplicationsClient
  overload: Okta.Sdk.OktaClient.Applications*
  implements:
  - Okta.Sdk.IOktaClient.Applications
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.Sessions
  commentId: P:Okta.Sdk.OktaClient.Sessions
  id: Sessions
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: Sessions
  nameWithType: OktaClient.Sessions
  fullName: Okta.Sdk.OktaClient.Sessions
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Sessions
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 209
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ISessionsClient Sessions { get; }
    parameters: []
    return:
      type: Okta.Sdk.ISessionsClient
    content.vb: Public ReadOnly Property Sessions As ISessionsClient
  overload: Okta.Sdk.OktaClient.Sessions*
  implements:
  - Okta.Sdk.IOktaClient.Sessions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.AuthorizationServers
  commentId: P:Okta.Sdk.OktaClient.AuthorizationServers
  id: AuthorizationServers
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: AuthorizationServers
  nameWithType: OktaClient.AuthorizationServers
  fullName: Okta.Sdk.OktaClient.AuthorizationServers
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AuthorizationServers
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 212
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IAuthorizationServersClient AuthorizationServers { get; }
    parameters: []
    return:
      type: Okta.Sdk.IAuthorizationServersClient
    content.vb: Public ReadOnly Property AuthorizationServers As IAuthorizationServersClient
  overload: Okta.Sdk.OktaClient.AuthorizationServers*
  implements:
  - Okta.Sdk.IOktaClient.AuthorizationServers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.Logs
  commentId: P:Okta.Sdk.OktaClient.Logs
  id: Logs
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: Logs
  nameWithType: OktaClient.Logs
  fullName: Okta.Sdk.OktaClient.Logs
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Logs
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 215
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ILogsClient Logs { get; }
    parameters: []
    return:
      type: Okta.Sdk.ILogsClient
    content.vb: Public ReadOnly Property Logs As ILogsClient
  overload: Okta.Sdk.OktaClient.Logs*
  implements:
  - Okta.Sdk.IOktaClient.Logs
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.Policies
  commentId: P:Okta.Sdk.OktaClient.Policies
  id: Policies
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: Policies
  nameWithType: OktaClient.Policies
  fullName: Okta.Sdk.OktaClient.Policies
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Policies
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 218
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IPoliciesClient Policies { get; }
    parameters: []
    return:
      type: Okta.Sdk.IPoliciesClient
    content.vb: Public ReadOnly Property Policies As IPoliciesClient
  overload: Okta.Sdk.OktaClient.Policies*
  implements:
  - Okta.Sdk.IOktaClient.Policies
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.EventHooks
  commentId: P:Okta.Sdk.OktaClient.EventHooks
  id: EventHooks
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: EventHooks
  nameWithType: OktaClient.EventHooks
  fullName: Okta.Sdk.OktaClient.EventHooks
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: EventHooks
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 221
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IEventHooksClient EventHooks { get; }
    parameters: []
    return:
      type: Okta.Sdk.IEventHooksClient
    content.vb: Public ReadOnly Property EventHooks As IEventHooksClient
  overload: Okta.Sdk.OktaClient.EventHooks*
  implements:
  - Okta.Sdk.IOktaClient.EventHooks
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.InlineHooks
  commentId: P:Okta.Sdk.OktaClient.InlineHooks
  id: InlineHooks
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: InlineHooks
  nameWithType: OktaClient.InlineHooks
  fullName: Okta.Sdk.OktaClient.InlineHooks
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: InlineHooks
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 224
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IInlineHooksClient InlineHooks { get; }
    parameters: []
    return:
      type: Okta.Sdk.IInlineHooksClient
    content.vb: Public ReadOnly Property InlineHooks As IInlineHooksClient
  overload: Okta.Sdk.OktaClient.InlineHooks*
  implements:
  - Okta.Sdk.IOktaClient.InlineHooks
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.LinkedObjects
  commentId: P:Okta.Sdk.OktaClient.LinkedObjects
  id: LinkedObjects
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: LinkedObjects
  nameWithType: OktaClient.LinkedObjects
  fullName: Okta.Sdk.OktaClient.LinkedObjects
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: LinkedObjects
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 227
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ILinkedObjectsClient LinkedObjects { get; }
    parameters: []
    return:
      type: Okta.Sdk.ILinkedObjectsClient
    content.vb: Public ReadOnly Property LinkedObjects As ILinkedObjectsClient
  overload: Okta.Sdk.OktaClient.LinkedObjects*
  implements:
  - Okta.Sdk.IOktaClient.LinkedObjects
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.TrustedOrigins
  commentId: P:Okta.Sdk.OktaClient.TrustedOrigins
  id: TrustedOrigins
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: TrustedOrigins
  nameWithType: OktaClient.TrustedOrigins
  fullName: Okta.Sdk.OktaClient.TrustedOrigins
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: TrustedOrigins
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 230
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ITrustedOriginsClient TrustedOrigins { get; }
    parameters: []
    return:
      type: Okta.Sdk.ITrustedOriginsClient
    content.vb: Public ReadOnly Property TrustedOrigins As ITrustedOriginsClient
  overload: Okta.Sdk.OktaClient.TrustedOrigins*
  implements:
  - Okta.Sdk.IOktaClient.TrustedOrigins
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.Features
  commentId: P:Okta.Sdk.OktaClient.Features
  id: Features
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: Features
  nameWithType: OktaClient.Features
  fullName: Okta.Sdk.OktaClient.Features
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Features
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 233
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IFeaturesClient Features { get; }
    parameters: []
    return:
      type: Okta.Sdk.IFeaturesClient
    content.vb: Public ReadOnly Property Features As IFeaturesClient
  overload: Okta.Sdk.OktaClient.Features*
  implements:
  - Okta.Sdk.IOktaClient.Features
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.Templates
  commentId: P:Okta.Sdk.OktaClient.Templates
  id: Templates
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: Templates
  nameWithType: OktaClient.Templates
  fullName: Okta.Sdk.OktaClient.Templates
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Templates
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 236
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ITemplatesClient Templates { get; }
    parameters: []
    return:
      type: Okta.Sdk.ITemplatesClient
    content.vb: Public ReadOnly Property Templates As ITemplatesClient
  overload: Okta.Sdk.OktaClient.Templates*
  implements:
  - Okta.Sdk.IOktaClient.Templates
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.NetworkZones
  commentId: P:Okta.Sdk.OktaClient.NetworkZones
  id: NetworkZones
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: NetworkZones
  nameWithType: OktaClient.NetworkZones
  fullName: Okta.Sdk.OktaClient.NetworkZones
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: NetworkZones
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 239
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public INetworkZonesClient NetworkZones { get; }
    parameters: []
    return:
      type: Okta.Sdk.INetworkZonesClient
    content.vb: Public ReadOnly Property NetworkZones As INetworkZonesClient
  overload: Okta.Sdk.OktaClient.NetworkZones*
  implements:
  - Okta.Sdk.IOktaClient.NetworkZones
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.Domains
  commentId: P:Okta.Sdk.OktaClient.Domains
  id: Domains
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: Domains
  nameWithType: OktaClient.Domains
  fullName: Okta.Sdk.OktaClient.Domains
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Domains
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 242
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IDomainsClient Domains { get; }
    parameters: []
    return:
      type: Okta.Sdk.IDomainsClient
    content.vb: Public ReadOnly Property Domains As IDomainsClient
  overload: Okta.Sdk.OktaClient.Domains*
  implements:
  - Okta.Sdk.IOktaClient.Domains
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.ProfileMappings
  commentId: P:Okta.Sdk.OktaClient.ProfileMappings
  id: ProfileMappings
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: ProfileMappings
  nameWithType: OktaClient.ProfileMappings
  fullName: Okta.Sdk.OktaClient.ProfileMappings
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ProfileMappings
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 245
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IProfileMappingsClient ProfileMappings { get; }
    parameters: []
    return:
      type: Okta.Sdk.IProfileMappingsClient
    content.vb: Public ReadOnly Property ProfileMappings As IProfileMappingsClient
  overload: Okta.Sdk.OktaClient.ProfileMappings*
  implements:
  - Okta.Sdk.IOktaClient.ProfileMappings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.ThreatInsights
  commentId: P:Okta.Sdk.OktaClient.ThreatInsights
  id: ThreatInsights
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: ThreatInsights
  nameWithType: OktaClient.ThreatInsights
  fullName: Okta.Sdk.OktaClient.ThreatInsights
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ThreatInsights
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 248
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IThreatInsightsClient ThreatInsights { get; }
    parameters: []
    return:
      type: Okta.Sdk.IThreatInsightsClient
    content.vb: Public ReadOnly Property ThreatInsights As IThreatInsightsClient
  overload: Okta.Sdk.OktaClient.ThreatInsights*
  implements:
  - Okta.Sdk.IOktaClient.ThreatInsights
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.IdentityProviders
  commentId: P:Okta.Sdk.OktaClient.IdentityProviders
  id: IdentityProviders
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: IdentityProviders
  nameWithType: OktaClient.IdentityProviders
  fullName: Okta.Sdk.OktaClient.IdentityProviders
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IdentityProviders
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 251
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IIdentityProvidersClient IdentityProviders { get; }
    parameters: []
    return:
      type: Okta.Sdk.IIdentityProvidersClient
    content.vb: Public ReadOnly Property IdentityProviders As IIdentityProvidersClient
  overload: Okta.Sdk.OktaClient.IdentityProviders*
  implements:
  - Okta.Sdk.IOktaClient.IdentityProviders
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.UserSchemas
  commentId: P:Okta.Sdk.OktaClient.UserSchemas
  id: UserSchemas
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: UserSchemas
  nameWithType: OktaClient.UserSchemas
  fullName: Okta.Sdk.OktaClient.UserSchemas
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UserSchemas
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 254
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IUserSchemasClient UserSchemas { get; }
    parameters: []
    return:
      type: Okta.Sdk.IUserSchemasClient
    content.vb: Public ReadOnly Property UserSchemas As IUserSchemasClient
  overload: Okta.Sdk.OktaClient.UserSchemas*
  implements:
  - Okta.Sdk.IOktaClient.UserSchemas
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.Subscriptions
  commentId: P:Okta.Sdk.OktaClient.Subscriptions
  id: Subscriptions
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: Subscriptions
  nameWithType: OktaClient.Subscriptions
  fullName: Okta.Sdk.OktaClient.Subscriptions
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Subscriptions
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 257
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ISubscriptionsClient Subscriptions { get; }
    parameters: []
    return:
      type: Okta.Sdk.ISubscriptionsClient
    content.vb: Public ReadOnly Property Subscriptions As ISubscriptionsClient
  overload: Okta.Sdk.OktaClient.Subscriptions*
  implements:
  - Okta.Sdk.IOktaClient.Subscriptions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
  commentId: M:Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
  id: GetCollectionClient``1(Okta.Sdk.HttpRequest)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: GetCollectionClient<T>(HttpRequest)
  nameWithType: OktaClient.GetCollectionClient<T>(HttpRequest)
  fullName: Okta.Sdk.OktaClient.GetCollectionClient<T>(Okta.Sdk.HttpRequest)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetCollectionClient
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 265
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nCreates a new <xref href=\"Okta.Sdk.CollectionClient%601\" data-throw-if-not-resolved=\"false\"></xref> given an initial HTTP request.\n"
  example: []
  syntax:
    content: >-
      protected CollectionClient<T> GetCollectionClient<T>(HttpRequest initialRequest)

          where T : IResource
    parameters:
    - id: initialRequest
      type: Okta.Sdk.HttpRequest
      description: The initial HTTP request.
    typeParameters:
    - id: T
      description: The collection client item type.
    return:
      type: Okta.Sdk.CollectionClient{{T}}
      description: The collection client.
    content.vb: Protected Function GetCollectionClient(Of T As IResource)(initialRequest As HttpRequest) As CollectionClient(Of T)
  overload: Okta.Sdk.OktaClient.GetCollectionClient*
  nameWithType.vb: OktaClient.GetCollectionClient(Of T)(HttpRequest)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Okta.Sdk.OktaClient.GetCollectionClient(Of T)(Okta.Sdk.HttpRequest)
  name.vb: GetCollectionClient(Of T)(HttpRequest)
- uid: Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  id: GetAsync``1(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: GetAsync<T>(String, CancellationToken)
  nameWithType: OktaClient.GetAsync<T>(String, CancellationToken)
  fullName: Okta.Sdk.OktaClient.GetAsync<T>(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAsync
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 270
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: >-
      public Task<T> GetAsync<T>(string href, CancellationToken cancellationToken = default(CancellationToken))

          where T : Resource, new()
    parameters:
    - id: href
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Public Function GetAsync(Of T As {Resource, New})(href As String, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Okta.Sdk.OktaClient.GetAsync*
  implements:
  - Okta.Sdk.IOktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.GetAsync(Of T)(String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.OktaClient.GetAsync(Of T)(System.String, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(String, CancellationToken)
- uid: Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  id: GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: GetAsync<T>(HttpRequest, CancellationToken)
  nameWithType: OktaClient.GetAsync<T>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.GetAsync<T>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAsync
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 275
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: >-
      public async Task<T> GetAsync<T>(HttpRequest request, CancellationToken cancellationToken = default(CancellationToken))

          where T : Resource, new()
    parameters:
    - id: request
      type: Okta.Sdk.HttpRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Public Function GetAsync(Of T As {Resource, New})(request As HttpRequest, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Okta.Sdk.OktaClient.GetAsync*
  implements:
  - Okta.Sdk.IOktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.GetAsync(Of T)(HttpRequest, CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.OktaClient.GetAsync(Of T)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(HttpRequest, CancellationToken)
- uid: Okta.Sdk.OktaClient.GetCollection``1(System.String)
  commentId: M:Okta.Sdk.OktaClient.GetCollection``1(System.String)
  id: GetCollection``1(System.String)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: GetCollection<T>(String)
  nameWithType: OktaClient.GetCollection<T>(String)
  fullName: Okta.Sdk.OktaClient.GetCollection<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetCollection
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 284
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: >-
      public CollectionClient<T> GetCollection<T>(string href)

          where T : IResource
    parameters:
    - id: href
      type: System.String
    typeParameters:
    - id: T
    return:
      type: Okta.Sdk.CollectionClient{{T}}
    content.vb: Public Function GetCollection(Of T As IResource)(href As String) As CollectionClient(Of T)
  overload: Okta.Sdk.OktaClient.GetCollection*
  implements:
  - Okta.Sdk.IOktaClient.GetCollection``1(System.String)
  nameWithType.vb: OktaClient.GetCollection(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.OktaClient.GetCollection(Of T)(System.String)
  name.vb: GetCollection(Of T)(String)
- uid: Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  commentId: M:Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  id: GetCollection``1(Okta.Sdk.HttpRequest)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: GetCollection<T>(HttpRequest)
  nameWithType: OktaClient.GetCollection<T>(HttpRequest)
  fullName: Okta.Sdk.OktaClient.GetCollection<T>(Okta.Sdk.HttpRequest)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetCollection
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 292
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: >-
      public CollectionClient<T> GetCollection<T>(HttpRequest request)

          where T : IResource
    parameters:
    - id: request
      type: Okta.Sdk.HttpRequest
    typeParameters:
    - id: T
    return:
      type: Okta.Sdk.CollectionClient{{T}}
    content.vb: Public Function GetCollection(Of T As IResource)(request As HttpRequest) As CollectionClient(Of T)
  overload: Okta.Sdk.OktaClient.GetCollection*
  implements:
  - Okta.Sdk.IOktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  nameWithType.vb: OktaClient.GetCollection(Of T)(HttpRequest)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.OktaClient.GetCollection(Of T)(Okta.Sdk.HttpRequest)
  name.vb: GetCollection(Of T)(HttpRequest)
- uid: Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  id: PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: PostAsync(String, Object, CancellationToken)
  nameWithType: OktaClient.PostAsync(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync(System.String, System.Object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PostAsync
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 297
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task PostAsync(string href, object model, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: href
      type: System.String
    - id: model
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function PostAsync(href As String, model As Object, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.OktaClient.PostAsync*
  implements:
  - Okta.Sdk.IOktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  id: PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: PostAsync<TResponse>(String, Object, CancellationToken)
  nameWithType: OktaClient.PostAsync<TResponse>(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync<TResponse>(System.String, System.Object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PostAsync
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 301
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: >-
      public Task<TResponse> PostAsync<TResponse>(string href, object model, CancellationToken cancellationToken = default(CancellationToken))

          where TResponse : Resource, new()
    parameters:
    - id: href
      type: System.String
    - id: model
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TResponse
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Public Function PostAsync(Of TResponse As {Resource, New})(href As String, model As Object, cancellationToken As CancellationToken = Nothing) As Task(Of TResponse)
  overload: Okta.Sdk.OktaClient.PostAsync*
  implements:
  - Okta.Sdk.IOktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PostAsync(Of TResponse)(String, Object, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.OktaClient.PostAsync(Of TResponse)(System.String, System.Object, System.Threading.CancellationToken)
  name.vb: PostAsync(Of TResponse)(String, Object, CancellationToken)
- uid: Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  id: PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: PostAsync(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PostAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PostAsync
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 306
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task PostAsync(HttpRequest request, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Okta.Sdk.HttpRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function PostAsync(request As HttpRequest, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.OktaClient.PostAsync*
  implements:
  - Okta.Sdk.IOktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  id: PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: PostAsync<TResponse>(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PostAsync<TResponse>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync<TResponse>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PostAsync
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 310
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: >-
      public async Task<TResponse> PostAsync<TResponse>(HttpRequest request, CancellationToken cancellationToken = default(CancellationToken))

          where TResponse : Resource, new()
    parameters:
    - id: request
      type: Okta.Sdk.HttpRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TResponse
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Public Function PostAsync(Of TResponse As {Resource, New})(request As HttpRequest, cancellationToken As CancellationToken = Nothing) As Task(Of TResponse)
  overload: Okta.Sdk.OktaClient.PostAsync*
  implements:
  - Okta.Sdk.IOktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PostAsync(Of TResponse)(HttpRequest, CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.OktaClient.PostAsync(Of TResponse)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: PostAsync(Of TResponse)(HttpRequest, CancellationToken)
- uid: Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  id: PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: PutAsync(String, Object, CancellationToken)
  nameWithType: OktaClient.PutAsync(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync(System.String, System.Object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PutAsync
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 319
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task PutAsync(string href, object model, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: href
      type: System.String
    - id: model
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function PutAsync(href As String, model As Object, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.OktaClient.PutAsync*
  implements:
  - Okta.Sdk.IOktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  id: PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: PutAsync<TResponse>(String, Object, CancellationToken)
  nameWithType: OktaClient.PutAsync<TResponse>(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync<TResponse>(System.String, System.Object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PutAsync
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 323
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: >-
      public Task<TResponse> PutAsync<TResponse>(string href, object model, CancellationToken cancellationToken = default(CancellationToken))

          where TResponse : Resource, new()
    parameters:
    - id: href
      type: System.String
    - id: model
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TResponse
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Public Function PutAsync(Of TResponse As {Resource, New})(href As String, model As Object, cancellationToken As CancellationToken = Nothing) As Task(Of TResponse)
  overload: Okta.Sdk.OktaClient.PutAsync*
  implements:
  - Okta.Sdk.IOktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PutAsync(Of TResponse)(String, Object, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.OktaClient.PutAsync(Of TResponse)(System.String, System.Object, System.Threading.CancellationToken)
  name.vb: PutAsync(Of TResponse)(String, Object, CancellationToken)
- uid: Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  id: PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: PutAsync(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PutAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PutAsync
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 328
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task PutAsync(HttpRequest request, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Okta.Sdk.HttpRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function PutAsync(request As HttpRequest, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.OktaClient.PutAsync*
  implements:
  - Okta.Sdk.IOktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  id: PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: PutAsync<TResponse>(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PutAsync<TResponse>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync<TResponse>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PutAsync
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 332
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: >-
      public async Task<TResponse> PutAsync<TResponse>(HttpRequest request, CancellationToken cancellationToken = default(CancellationToken))

          where TResponse : Resource, new()
    parameters:
    - id: request
      type: Okta.Sdk.HttpRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TResponse
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Public Function PutAsync(Of TResponse As {Resource, New})(request As HttpRequest, cancellationToken As CancellationToken = Nothing) As Task(Of TResponse)
  overload: Okta.Sdk.OktaClient.PutAsync*
  implements:
  - Okta.Sdk.IOktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PutAsync(Of TResponse)(HttpRequest, CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.OktaClient.PutAsync(Of TResponse)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: PutAsync(Of TResponse)(HttpRequest, CancellationToken)
- uid: Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  id: DeleteAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: DeleteAsync(String, CancellationToken)
  nameWithType: OktaClient.DeleteAsync(String, CancellationToken)
  fullName: Okta.Sdk.OktaClient.DeleteAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteAsync
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 341
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task DeleteAsync(string href, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: href
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteAsync(href As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.OktaClient.DeleteAsync*
  implements:
  - Okta.Sdk.IOktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  id: DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  langs:
  - csharp
  - vb
  name: DeleteAsync(HttpRequest, CancellationToken)
  nameWithType: OktaClient.DeleteAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/OktaClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteAsync
    path: ../src/Okta.Sdk/OktaClient.cs
    startLine: 345
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task DeleteAsync(HttpRequest request, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Okta.Sdk.HttpRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteAsync(request As HttpRequest, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.OktaClient.DeleteAsync*
  implements:
  - Okta.Sdk.IOktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Okta.Sdk.IOktaClient
  commentId: T:Okta.Sdk.IOktaClient
  parent: Okta.Sdk
  name: IOktaClient
  nameWithType: IOktaClient
  fullName: Okta.Sdk.IOktaClient
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.OktaClient.#ctor*
  commentId: Overload:Okta.Sdk.OktaClient.#ctor
  name: OktaClient
  nameWithType: OktaClient.OktaClient
  fullName: Okta.Sdk.OktaClient.OktaClient
- uid: Okta.Sdk.Configuration.OktaClientConfiguration
  commentId: T:Okta.Sdk.Configuration.OktaClientConfiguration
  parent: Okta.Sdk.Configuration
  name: OktaClientConfiguration
  nameWithType: OktaClientConfiguration
  fullName: Okta.Sdk.Configuration.OktaClientConfiguration
- uid: Okta.Sdk.Internal.IOAuthTokenProvider
  commentId: T:Okta.Sdk.Internal.IOAuthTokenProvider
  parent: Okta.Sdk.Internal
  name: IOAuthTokenProvider
  nameWithType: IOAuthTokenProvider
  fullName: Okta.Sdk.Internal.IOAuthTokenProvider
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Okta.Sdk.IRetryStrategy
  commentId: T:Okta.Sdk.IRetryStrategy
  parent: Okta.Sdk
  name: IRetryStrategy
  nameWithType: IRetryStrategy
  fullName: Okta.Sdk.IRetryStrategy
- uid: Okta.Sdk.Internal.ISerializer
  commentId: T:Okta.Sdk.Internal.ISerializer
  parent: Okta.Sdk.Internal
  name: ISerializer
  nameWithType: ISerializer
  fullName: Okta.Sdk.Internal.ISerializer
- uid: Okta.Sdk.Configuration
  commentId: N:Okta.Sdk.Configuration
  name: Okta.Sdk.Configuration
  nameWithType: Okta.Sdk.Configuration
  fullName: Okta.Sdk.Configuration
- uid: Okta.Sdk.Internal
  commentId: N:Okta.Sdk.Internal
  name: Okta.Sdk.Internal
  nameWithType: Okta.Sdk.Internal
  fullName: Okta.Sdk.Internal
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Okta.Sdk.OktaClient
  commentId: T:Okta.Sdk.OktaClient
  parent: Okta.Sdk
  name: OktaClient
  nameWithType: OktaClient
  fullName: Okta.Sdk.OktaClient
- uid: Okta.Sdk.Internal.DefaultSerializer
  commentId: T:Okta.Sdk.Internal.DefaultSerializer
  name: DefaultSerializer
  nameWithType: DefaultSerializer
  fullName: Okta.Sdk.Internal.DefaultSerializer
- uid: Okta.Sdk.Configuration.AuthorizationMode.BearerToken
  commentId: F:Okta.Sdk.Configuration.AuthorizationMode.BearerToken
  isExternal: true
- uid: Okta.Sdk.Internal.IDataStore
  commentId: T:Okta.Sdk.Internal.IDataStore
  parent: Okta.Sdk.Internal
  name: IDataStore
  nameWithType: IDataStore
  fullName: Okta.Sdk.Internal.IDataStore
- uid: Okta.Sdk.RequestContext
  commentId: T:Okta.Sdk.RequestContext
  parent: Okta.Sdk
  name: RequestContext
  nameWithType: RequestContext
  fullName: Okta.Sdk.RequestContext
- uid: Okta.Sdk.OktaClient.Configuration*
  commentId: Overload:Okta.Sdk.OktaClient.Configuration
  name: Configuration
  nameWithType: OktaClient.Configuration
  fullName: Okta.Sdk.OktaClient.Configuration
- uid: Okta.Sdk.IOktaClient.Configuration
  commentId: P:Okta.Sdk.IOktaClient.Configuration
  parent: Okta.Sdk.IOktaClient
  name: Configuration
  nameWithType: IOktaClient.Configuration
  fullName: Okta.Sdk.IOktaClient.Configuration
- uid: Okta.Sdk.OktaClient.CreateScoped*
  commentId: Overload:Okta.Sdk.OktaClient.CreateScoped
  name: CreateScoped
  nameWithType: OktaClient.CreateScoped
  fullName: Okta.Sdk.OktaClient.CreateScoped
- uid: Okta.Sdk.IOktaClient.CreateScoped(Okta.Sdk.RequestContext)
  commentId: M:Okta.Sdk.IOktaClient.CreateScoped(Okta.Sdk.RequestContext)
  parent: Okta.Sdk.IOktaClient
  name: CreateScoped(RequestContext)
  nameWithType: IOktaClient.CreateScoped(RequestContext)
  fullName: Okta.Sdk.IOktaClient.CreateScoped(Okta.Sdk.RequestContext)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.CreateScoped(Okta.Sdk.RequestContext)
    name: CreateScoped
    nameWithType: IOktaClient.CreateScoped
    fullName: Okta.Sdk.IOktaClient.CreateScoped
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.CreateScoped(Okta.Sdk.RequestContext)
    name: CreateScoped
    nameWithType: IOktaClient.CreateScoped
    fullName: Okta.Sdk.IOktaClient.CreateScoped
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.Brands*
  commentId: Overload:Okta.Sdk.OktaClient.Brands
  name: Brands
  nameWithType: OktaClient.Brands
  fullName: Okta.Sdk.OktaClient.Brands
- uid: Okta.Sdk.IOktaClient.Brands
  commentId: P:Okta.Sdk.IOktaClient.Brands
  parent: Okta.Sdk.IOktaClient
  name: Brands
  nameWithType: IOktaClient.Brands
  fullName: Okta.Sdk.IOktaClient.Brands
- uid: Okta.Sdk.IBrandsClient
  commentId: T:Okta.Sdk.IBrandsClient
  parent: Okta.Sdk
  name: IBrandsClient
  nameWithType: IBrandsClient
  fullName: Okta.Sdk.IBrandsClient
- uid: Okta.Sdk.OktaClient.GroupSchemas*
  commentId: Overload:Okta.Sdk.OktaClient.GroupSchemas
  name: GroupSchemas
  nameWithType: OktaClient.GroupSchemas
  fullName: Okta.Sdk.OktaClient.GroupSchemas
- uid: Okta.Sdk.IOktaClient.GroupSchemas
  commentId: P:Okta.Sdk.IOktaClient.GroupSchemas
  parent: Okta.Sdk.IOktaClient
  name: GroupSchemas
  nameWithType: IOktaClient.GroupSchemas
  fullName: Okta.Sdk.IOktaClient.GroupSchemas
- uid: Okta.Sdk.IGroupSchemasClient
  commentId: T:Okta.Sdk.IGroupSchemasClient
  parent: Okta.Sdk
  name: IGroupSchemasClient
  nameWithType: IGroupSchemasClient
  fullName: Okta.Sdk.IGroupSchemasClient
- uid: Okta.Sdk.OktaClient.Authenticators*
  commentId: Overload:Okta.Sdk.OktaClient.Authenticators
  name: Authenticators
  nameWithType: OktaClient.Authenticators
  fullName: Okta.Sdk.OktaClient.Authenticators
- uid: Okta.Sdk.IOktaClient.Authenticators
  commentId: P:Okta.Sdk.IOktaClient.Authenticators
  parent: Okta.Sdk.IOktaClient
  name: Authenticators
  nameWithType: IOktaClient.Authenticators
  fullName: Okta.Sdk.IOktaClient.Authenticators
- uid: Okta.Sdk.IAuthenticatorsClient
  commentId: T:Okta.Sdk.IAuthenticatorsClient
  parent: Okta.Sdk
  name: IAuthenticatorsClient
  nameWithType: IAuthenticatorsClient
  fullName: Okta.Sdk.IAuthenticatorsClient
- uid: Okta.Sdk.OktaClient.Orgs*
  commentId: Overload:Okta.Sdk.OktaClient.Orgs
  name: Orgs
  nameWithType: OktaClient.Orgs
  fullName: Okta.Sdk.OktaClient.Orgs
- uid: Okta.Sdk.IOktaClient.Orgs
  commentId: P:Okta.Sdk.IOktaClient.Orgs
  parent: Okta.Sdk.IOktaClient
  name: Orgs
  nameWithType: IOktaClient.Orgs
  fullName: Okta.Sdk.IOktaClient.Orgs
- uid: Okta.Sdk.IOrgsClient
  commentId: T:Okta.Sdk.IOrgsClient
  parent: Okta.Sdk
  name: IOrgsClient
  nameWithType: IOrgsClient
  fullName: Okta.Sdk.IOrgsClient
- uid: Okta.Sdk.OktaClient.UserTypes*
  commentId: Overload:Okta.Sdk.OktaClient.UserTypes
  name: UserTypes
  nameWithType: OktaClient.UserTypes
  fullName: Okta.Sdk.OktaClient.UserTypes
- uid: Okta.Sdk.IOktaClient.UserTypes
  commentId: P:Okta.Sdk.IOktaClient.UserTypes
  parent: Okta.Sdk.IOktaClient
  name: UserTypes
  nameWithType: IOktaClient.UserTypes
  fullName: Okta.Sdk.IOktaClient.UserTypes
- uid: Okta.Sdk.IUserTypesClient
  commentId: T:Okta.Sdk.IUserTypesClient
  parent: Okta.Sdk
  name: IUserTypesClient
  nameWithType: IUserTypesClient
  fullName: Okta.Sdk.IUserTypesClient
- uid: Okta.Sdk.OktaClient.Users*
  commentId: Overload:Okta.Sdk.OktaClient.Users
  name: Users
  nameWithType: OktaClient.Users
  fullName: Okta.Sdk.OktaClient.Users
- uid: Okta.Sdk.IOktaClient.Users
  commentId: P:Okta.Sdk.IOktaClient.Users
  parent: Okta.Sdk.IOktaClient
  name: Users
  nameWithType: IOktaClient.Users
  fullName: Okta.Sdk.IOktaClient.Users
- uid: Okta.Sdk.IUsersClient
  commentId: T:Okta.Sdk.IUsersClient
  parent: Okta.Sdk
  name: IUsersClient
  nameWithType: IUsersClient
  fullName: Okta.Sdk.IUsersClient
- uid: Okta.Sdk.OktaClient.UserFactors*
  commentId: Overload:Okta.Sdk.OktaClient.UserFactors
  name: UserFactors
  nameWithType: OktaClient.UserFactors
  fullName: Okta.Sdk.OktaClient.UserFactors
- uid: Okta.Sdk.IOktaClient.UserFactors
  commentId: P:Okta.Sdk.IOktaClient.UserFactors
  parent: Okta.Sdk.IOktaClient
  name: UserFactors
  nameWithType: IOktaClient.UserFactors
  fullName: Okta.Sdk.IOktaClient.UserFactors
- uid: Okta.Sdk.IUserFactorsClient
  commentId: T:Okta.Sdk.IUserFactorsClient
  parent: Okta.Sdk
  name: IUserFactorsClient
  nameWithType: IUserFactorsClient
  fullName: Okta.Sdk.IUserFactorsClient
- uid: Okta.Sdk.OktaClient.Groups*
  commentId: Overload:Okta.Sdk.OktaClient.Groups
  name: Groups
  nameWithType: OktaClient.Groups
  fullName: Okta.Sdk.OktaClient.Groups
- uid: Okta.Sdk.IOktaClient.Groups
  commentId: P:Okta.Sdk.IOktaClient.Groups
  parent: Okta.Sdk.IOktaClient
  name: Groups
  nameWithType: IOktaClient.Groups
  fullName: Okta.Sdk.IOktaClient.Groups
- uid: Okta.Sdk.IGroupsClient
  commentId: T:Okta.Sdk.IGroupsClient
  parent: Okta.Sdk
  name: IGroupsClient
  nameWithType: IGroupsClient
  fullName: Okta.Sdk.IGroupsClient
- uid: Okta.Sdk.OktaClient.Applications*
  commentId: Overload:Okta.Sdk.OktaClient.Applications
  name: Applications
  nameWithType: OktaClient.Applications
  fullName: Okta.Sdk.OktaClient.Applications
- uid: Okta.Sdk.IOktaClient.Applications
  commentId: P:Okta.Sdk.IOktaClient.Applications
  parent: Okta.Sdk.IOktaClient
  name: Applications
  nameWithType: IOktaClient.Applications
  fullName: Okta.Sdk.IOktaClient.Applications
- uid: Okta.Sdk.IApplicationsClient
  commentId: T:Okta.Sdk.IApplicationsClient
  parent: Okta.Sdk
  name: IApplicationsClient
  nameWithType: IApplicationsClient
  fullName: Okta.Sdk.IApplicationsClient
- uid: Okta.Sdk.OktaClient.Sessions*
  commentId: Overload:Okta.Sdk.OktaClient.Sessions
  name: Sessions
  nameWithType: OktaClient.Sessions
  fullName: Okta.Sdk.OktaClient.Sessions
- uid: Okta.Sdk.IOktaClient.Sessions
  commentId: P:Okta.Sdk.IOktaClient.Sessions
  parent: Okta.Sdk.IOktaClient
  name: Sessions
  nameWithType: IOktaClient.Sessions
  fullName: Okta.Sdk.IOktaClient.Sessions
- uid: Okta.Sdk.ISessionsClient
  commentId: T:Okta.Sdk.ISessionsClient
  parent: Okta.Sdk
  name: ISessionsClient
  nameWithType: ISessionsClient
  fullName: Okta.Sdk.ISessionsClient
- uid: Okta.Sdk.OktaClient.AuthorizationServers*
  commentId: Overload:Okta.Sdk.OktaClient.AuthorizationServers
  name: AuthorizationServers
  nameWithType: OktaClient.AuthorizationServers
  fullName: Okta.Sdk.OktaClient.AuthorizationServers
- uid: Okta.Sdk.IOktaClient.AuthorizationServers
  commentId: P:Okta.Sdk.IOktaClient.AuthorizationServers
  parent: Okta.Sdk.IOktaClient
  name: AuthorizationServers
  nameWithType: IOktaClient.AuthorizationServers
  fullName: Okta.Sdk.IOktaClient.AuthorizationServers
- uid: Okta.Sdk.IAuthorizationServersClient
  commentId: T:Okta.Sdk.IAuthorizationServersClient
  parent: Okta.Sdk
  name: IAuthorizationServersClient
  nameWithType: IAuthorizationServersClient
  fullName: Okta.Sdk.IAuthorizationServersClient
- uid: Okta.Sdk.OktaClient.Logs*
  commentId: Overload:Okta.Sdk.OktaClient.Logs
  name: Logs
  nameWithType: OktaClient.Logs
  fullName: Okta.Sdk.OktaClient.Logs
- uid: Okta.Sdk.IOktaClient.Logs
  commentId: P:Okta.Sdk.IOktaClient.Logs
  parent: Okta.Sdk.IOktaClient
  name: Logs
  nameWithType: IOktaClient.Logs
  fullName: Okta.Sdk.IOktaClient.Logs
- uid: Okta.Sdk.ILogsClient
  commentId: T:Okta.Sdk.ILogsClient
  parent: Okta.Sdk
  name: ILogsClient
  nameWithType: ILogsClient
  fullName: Okta.Sdk.ILogsClient
- uid: Okta.Sdk.OktaClient.Policies*
  commentId: Overload:Okta.Sdk.OktaClient.Policies
  name: Policies
  nameWithType: OktaClient.Policies
  fullName: Okta.Sdk.OktaClient.Policies
- uid: Okta.Sdk.IOktaClient.Policies
  commentId: P:Okta.Sdk.IOktaClient.Policies
  parent: Okta.Sdk.IOktaClient
  name: Policies
  nameWithType: IOktaClient.Policies
  fullName: Okta.Sdk.IOktaClient.Policies
- uid: Okta.Sdk.IPoliciesClient
  commentId: T:Okta.Sdk.IPoliciesClient
  parent: Okta.Sdk
  name: IPoliciesClient
  nameWithType: IPoliciesClient
  fullName: Okta.Sdk.IPoliciesClient
- uid: Okta.Sdk.OktaClient.EventHooks*
  commentId: Overload:Okta.Sdk.OktaClient.EventHooks
  name: EventHooks
  nameWithType: OktaClient.EventHooks
  fullName: Okta.Sdk.OktaClient.EventHooks
- uid: Okta.Sdk.IOktaClient.EventHooks
  commentId: P:Okta.Sdk.IOktaClient.EventHooks
  parent: Okta.Sdk.IOktaClient
  name: EventHooks
  nameWithType: IOktaClient.EventHooks
  fullName: Okta.Sdk.IOktaClient.EventHooks
- uid: Okta.Sdk.IEventHooksClient
  commentId: T:Okta.Sdk.IEventHooksClient
  parent: Okta.Sdk
  name: IEventHooksClient
  nameWithType: IEventHooksClient
  fullName: Okta.Sdk.IEventHooksClient
- uid: Okta.Sdk.OktaClient.InlineHooks*
  commentId: Overload:Okta.Sdk.OktaClient.InlineHooks
  name: InlineHooks
  nameWithType: OktaClient.InlineHooks
  fullName: Okta.Sdk.OktaClient.InlineHooks
- uid: Okta.Sdk.IOktaClient.InlineHooks
  commentId: P:Okta.Sdk.IOktaClient.InlineHooks
  parent: Okta.Sdk.IOktaClient
  name: InlineHooks
  nameWithType: IOktaClient.InlineHooks
  fullName: Okta.Sdk.IOktaClient.InlineHooks
- uid: Okta.Sdk.IInlineHooksClient
  commentId: T:Okta.Sdk.IInlineHooksClient
  parent: Okta.Sdk
  name: IInlineHooksClient
  nameWithType: IInlineHooksClient
  fullName: Okta.Sdk.IInlineHooksClient
- uid: Okta.Sdk.OktaClient.LinkedObjects*
  commentId: Overload:Okta.Sdk.OktaClient.LinkedObjects
  name: LinkedObjects
  nameWithType: OktaClient.LinkedObjects
  fullName: Okta.Sdk.OktaClient.LinkedObjects
- uid: Okta.Sdk.IOktaClient.LinkedObjects
  commentId: P:Okta.Sdk.IOktaClient.LinkedObjects
  parent: Okta.Sdk.IOktaClient
  name: LinkedObjects
  nameWithType: IOktaClient.LinkedObjects
  fullName: Okta.Sdk.IOktaClient.LinkedObjects
- uid: Okta.Sdk.ILinkedObjectsClient
  commentId: T:Okta.Sdk.ILinkedObjectsClient
  parent: Okta.Sdk
  name: ILinkedObjectsClient
  nameWithType: ILinkedObjectsClient
  fullName: Okta.Sdk.ILinkedObjectsClient
- uid: Okta.Sdk.OktaClient.TrustedOrigins*
  commentId: Overload:Okta.Sdk.OktaClient.TrustedOrigins
  name: TrustedOrigins
  nameWithType: OktaClient.TrustedOrigins
  fullName: Okta.Sdk.OktaClient.TrustedOrigins
- uid: Okta.Sdk.IOktaClient.TrustedOrigins
  commentId: P:Okta.Sdk.IOktaClient.TrustedOrigins
  parent: Okta.Sdk.IOktaClient
  name: TrustedOrigins
  nameWithType: IOktaClient.TrustedOrigins
  fullName: Okta.Sdk.IOktaClient.TrustedOrigins
- uid: Okta.Sdk.ITrustedOriginsClient
  commentId: T:Okta.Sdk.ITrustedOriginsClient
  parent: Okta.Sdk
  name: ITrustedOriginsClient
  nameWithType: ITrustedOriginsClient
  fullName: Okta.Sdk.ITrustedOriginsClient
- uid: Okta.Sdk.OktaClient.Features*
  commentId: Overload:Okta.Sdk.OktaClient.Features
  name: Features
  nameWithType: OktaClient.Features
  fullName: Okta.Sdk.OktaClient.Features
- uid: Okta.Sdk.IOktaClient.Features
  commentId: P:Okta.Sdk.IOktaClient.Features
  parent: Okta.Sdk.IOktaClient
  name: Features
  nameWithType: IOktaClient.Features
  fullName: Okta.Sdk.IOktaClient.Features
- uid: Okta.Sdk.IFeaturesClient
  commentId: T:Okta.Sdk.IFeaturesClient
  parent: Okta.Sdk
  name: IFeaturesClient
  nameWithType: IFeaturesClient
  fullName: Okta.Sdk.IFeaturesClient
- uid: Okta.Sdk.OktaClient.Templates*
  commentId: Overload:Okta.Sdk.OktaClient.Templates
  name: Templates
  nameWithType: OktaClient.Templates
  fullName: Okta.Sdk.OktaClient.Templates
- uid: Okta.Sdk.IOktaClient.Templates
  commentId: P:Okta.Sdk.IOktaClient.Templates
  parent: Okta.Sdk.IOktaClient
  name: Templates
  nameWithType: IOktaClient.Templates
  fullName: Okta.Sdk.IOktaClient.Templates
- uid: Okta.Sdk.ITemplatesClient
  commentId: T:Okta.Sdk.ITemplatesClient
  parent: Okta.Sdk
  name: ITemplatesClient
  nameWithType: ITemplatesClient
  fullName: Okta.Sdk.ITemplatesClient
- uid: Okta.Sdk.OktaClient.NetworkZones*
  commentId: Overload:Okta.Sdk.OktaClient.NetworkZones
  name: NetworkZones
  nameWithType: OktaClient.NetworkZones
  fullName: Okta.Sdk.OktaClient.NetworkZones
- uid: Okta.Sdk.IOktaClient.NetworkZones
  commentId: P:Okta.Sdk.IOktaClient.NetworkZones
  parent: Okta.Sdk.IOktaClient
  name: NetworkZones
  nameWithType: IOktaClient.NetworkZones
  fullName: Okta.Sdk.IOktaClient.NetworkZones
- uid: Okta.Sdk.INetworkZonesClient
  commentId: T:Okta.Sdk.INetworkZonesClient
  parent: Okta.Sdk
  name: INetworkZonesClient
  nameWithType: INetworkZonesClient
  fullName: Okta.Sdk.INetworkZonesClient
- uid: Okta.Sdk.OktaClient.Domains*
  commentId: Overload:Okta.Sdk.OktaClient.Domains
  name: Domains
  nameWithType: OktaClient.Domains
  fullName: Okta.Sdk.OktaClient.Domains
- uid: Okta.Sdk.IOktaClient.Domains
  commentId: P:Okta.Sdk.IOktaClient.Domains
  parent: Okta.Sdk.IOktaClient
  name: Domains
  nameWithType: IOktaClient.Domains
  fullName: Okta.Sdk.IOktaClient.Domains
- uid: Okta.Sdk.IDomainsClient
  commentId: T:Okta.Sdk.IDomainsClient
  parent: Okta.Sdk
  name: IDomainsClient
  nameWithType: IDomainsClient
  fullName: Okta.Sdk.IDomainsClient
- uid: Okta.Sdk.OktaClient.ProfileMappings*
  commentId: Overload:Okta.Sdk.OktaClient.ProfileMappings
  name: ProfileMappings
  nameWithType: OktaClient.ProfileMappings
  fullName: Okta.Sdk.OktaClient.ProfileMappings
- uid: Okta.Sdk.IOktaClient.ProfileMappings
  commentId: P:Okta.Sdk.IOktaClient.ProfileMappings
  parent: Okta.Sdk.IOktaClient
  name: ProfileMappings
  nameWithType: IOktaClient.ProfileMappings
  fullName: Okta.Sdk.IOktaClient.ProfileMappings
- uid: Okta.Sdk.IProfileMappingsClient
  commentId: T:Okta.Sdk.IProfileMappingsClient
  parent: Okta.Sdk
  name: IProfileMappingsClient
  nameWithType: IProfileMappingsClient
  fullName: Okta.Sdk.IProfileMappingsClient
- uid: Okta.Sdk.OktaClient.ThreatInsights*
  commentId: Overload:Okta.Sdk.OktaClient.ThreatInsights
  name: ThreatInsights
  nameWithType: OktaClient.ThreatInsights
  fullName: Okta.Sdk.OktaClient.ThreatInsights
- uid: Okta.Sdk.IOktaClient.ThreatInsights
  commentId: P:Okta.Sdk.IOktaClient.ThreatInsights
  parent: Okta.Sdk.IOktaClient
  name: ThreatInsights
  nameWithType: IOktaClient.ThreatInsights
  fullName: Okta.Sdk.IOktaClient.ThreatInsights
- uid: Okta.Sdk.IThreatInsightsClient
  commentId: T:Okta.Sdk.IThreatInsightsClient
  parent: Okta.Sdk
  name: IThreatInsightsClient
  nameWithType: IThreatInsightsClient
  fullName: Okta.Sdk.IThreatInsightsClient
- uid: Okta.Sdk.OktaClient.IdentityProviders*
  commentId: Overload:Okta.Sdk.OktaClient.IdentityProviders
  name: IdentityProviders
  nameWithType: OktaClient.IdentityProviders
  fullName: Okta.Sdk.OktaClient.IdentityProviders
- uid: Okta.Sdk.IOktaClient.IdentityProviders
  commentId: P:Okta.Sdk.IOktaClient.IdentityProviders
  parent: Okta.Sdk.IOktaClient
  name: IdentityProviders
  nameWithType: IOktaClient.IdentityProviders
  fullName: Okta.Sdk.IOktaClient.IdentityProviders
- uid: Okta.Sdk.IIdentityProvidersClient
  commentId: T:Okta.Sdk.IIdentityProvidersClient
  parent: Okta.Sdk
  name: IIdentityProvidersClient
  nameWithType: IIdentityProvidersClient
  fullName: Okta.Sdk.IIdentityProvidersClient
- uid: Okta.Sdk.OktaClient.UserSchemas*
  commentId: Overload:Okta.Sdk.OktaClient.UserSchemas
  name: UserSchemas
  nameWithType: OktaClient.UserSchemas
  fullName: Okta.Sdk.OktaClient.UserSchemas
- uid: Okta.Sdk.IOktaClient.UserSchemas
  commentId: P:Okta.Sdk.IOktaClient.UserSchemas
  parent: Okta.Sdk.IOktaClient
  name: UserSchemas
  nameWithType: IOktaClient.UserSchemas
  fullName: Okta.Sdk.IOktaClient.UserSchemas
- uid: Okta.Sdk.IUserSchemasClient
  commentId: T:Okta.Sdk.IUserSchemasClient
  parent: Okta.Sdk
  name: IUserSchemasClient
  nameWithType: IUserSchemasClient
  fullName: Okta.Sdk.IUserSchemasClient
- uid: Okta.Sdk.OktaClient.Subscriptions*
  commentId: Overload:Okta.Sdk.OktaClient.Subscriptions
  name: Subscriptions
  nameWithType: OktaClient.Subscriptions
  fullName: Okta.Sdk.OktaClient.Subscriptions
- uid: Okta.Sdk.IOktaClient.Subscriptions
  commentId: P:Okta.Sdk.IOktaClient.Subscriptions
  parent: Okta.Sdk.IOktaClient
  name: Subscriptions
  nameWithType: IOktaClient.Subscriptions
  fullName: Okta.Sdk.IOktaClient.Subscriptions
- uid: Okta.Sdk.ISubscriptionsClient
  commentId: T:Okta.Sdk.ISubscriptionsClient
  parent: Okta.Sdk
  name: ISubscriptionsClient
  nameWithType: ISubscriptionsClient
  fullName: Okta.Sdk.ISubscriptionsClient
- uid: Okta.Sdk.CollectionClient`1
  commentId: T:Okta.Sdk.CollectionClient`1
  name: CollectionClient<T>
  nameWithType: CollectionClient<T>
  fullName: Okta.Sdk.CollectionClient<T>
  nameWithType.vb: CollectionClient(Of T)
  fullName.vb: Okta.Sdk.CollectionClient(Of T)
  name.vb: CollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.CollectionClient`1
    name: CollectionClient
    nameWithType: CollectionClient
    fullName: Okta.Sdk.CollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.CollectionClient`1
    name: CollectionClient
    nameWithType: CollectionClient
    fullName: Okta.Sdk.CollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetCollectionClient*
  commentId: Overload:Okta.Sdk.OktaClient.GetCollectionClient
  name: GetCollectionClient
  nameWithType: OktaClient.GetCollectionClient
  fullName: Okta.Sdk.OktaClient.GetCollectionClient
- uid: Okta.Sdk.HttpRequest
  commentId: T:Okta.Sdk.HttpRequest
  parent: Okta.Sdk
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Okta.Sdk.HttpRequest
- uid: Okta.Sdk.CollectionClient{{T}}
  commentId: T:Okta.Sdk.CollectionClient{``0}
  parent: Okta.Sdk
  definition: Okta.Sdk.CollectionClient`1
  name: CollectionClient<T>
  nameWithType: CollectionClient<T>
  fullName: Okta.Sdk.CollectionClient<T>
  nameWithType.vb: CollectionClient(Of T)
  fullName.vb: Okta.Sdk.CollectionClient(Of T)
  name.vb: CollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.CollectionClient`1
    name: CollectionClient
    nameWithType: CollectionClient
    fullName: Okta.Sdk.CollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.CollectionClient`1
    name: CollectionClient
    nameWithType: CollectionClient
    fullName: Okta.Sdk.CollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetAsync*
  commentId: Overload:Okta.Sdk.OktaClient.GetAsync
  name: GetAsync
  nameWithType: OktaClient.GetAsync
  fullName: Okta.Sdk.OktaClient.GetAsync
- uid: Okta.Sdk.IOktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOktaClient
  isExternal: true
  name: GetAsync<T>(String, CancellationToken)
  nameWithType: IOktaClient.GetAsync<T>(String, CancellationToken)
  fullName: Okta.Sdk.IOktaClient.GetAsync<T>(System.String, System.Threading.CancellationToken)
  nameWithType.vb: IOktaClient.GetAsync(Of T)(String, CancellationToken)
  fullName.vb: Okta.Sdk.IOktaClient.GetAsync(Of T)(System.String, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(String, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
    name: GetAsync<T>
    nameWithType: IOktaClient.GetAsync<T>
    fullName: Okta.Sdk.IOktaClient.GetAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
    name: GetAsync(Of T)
    nameWithType: IOktaClient.GetAsync(Of T)
    fullName: Okta.Sdk.IOktaClient.GetAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.IOktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOktaClient
  isExternal: true
  name: GetAsync<T>(HttpRequest, CancellationToken)
  nameWithType: IOktaClient.GetAsync<T>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.IOktaClient.GetAsync<T>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  nameWithType.vb: IOktaClient.GetAsync(Of T)(HttpRequest, CancellationToken)
  fullName.vb: Okta.Sdk.IOktaClient.GetAsync(Of T)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(HttpRequest, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: GetAsync<T>
    nameWithType: IOktaClient.GetAsync<T>
    fullName: Okta.Sdk.IOktaClient.GetAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: GetAsync(Of T)
    nameWithType: IOktaClient.GetAsync(Of T)
    fullName: Okta.Sdk.IOktaClient.GetAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetCollection*
  commentId: Overload:Okta.Sdk.OktaClient.GetCollection
  name: GetCollection
  nameWithType: OktaClient.GetCollection
  fullName: Okta.Sdk.OktaClient.GetCollection
- uid: Okta.Sdk.IOktaClient.GetCollection``1(System.String)
  commentId: M:Okta.Sdk.IOktaClient.GetCollection``1(System.String)
  parent: Okta.Sdk.IOktaClient
  isExternal: true
  name: GetCollection<T>(String)
  nameWithType: IOktaClient.GetCollection<T>(String)
  fullName: Okta.Sdk.IOktaClient.GetCollection<T>(System.String)
  nameWithType.vb: IOktaClient.GetCollection(Of T)(String)
  fullName.vb: Okta.Sdk.IOktaClient.GetCollection(Of T)(System.String)
  name.vb: GetCollection(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.GetCollection``1(System.String)
    name: GetCollection<T>
    nameWithType: IOktaClient.GetCollection<T>
    fullName: Okta.Sdk.IOktaClient.GetCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.GetCollection``1(System.String)
    name: GetCollection(Of T)
    nameWithType: IOktaClient.GetCollection(Of T)
    fullName: Okta.Sdk.IOktaClient.GetCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  commentId: M:Okta.Sdk.IOktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  parent: Okta.Sdk.IOktaClient
  name: GetCollection<T>(HttpRequest)
  nameWithType: IOktaClient.GetCollection<T>(HttpRequest)
  fullName: Okta.Sdk.IOktaClient.GetCollection<T>(Okta.Sdk.HttpRequest)
  nameWithType.vb: IOktaClient.GetCollection(Of T)(HttpRequest)
  fullName.vb: Okta.Sdk.IOktaClient.GetCollection(Of T)(Okta.Sdk.HttpRequest)
  name.vb: GetCollection(Of T)(HttpRequest)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
    name: GetCollection<T>
    nameWithType: IOktaClient.GetCollection<T>
    fullName: Okta.Sdk.IOktaClient.GetCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
    name: GetCollection(Of T)
    nameWithType: IOktaClient.GetCollection(Of T)
    fullName: Okta.Sdk.IOktaClient.GetCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PostAsync*
  commentId: Overload:Okta.Sdk.OktaClient.PostAsync
  name: PostAsync
  nameWithType: OktaClient.PostAsync
  fullName: Okta.Sdk.OktaClient.PostAsync
- uid: Okta.Sdk.IOktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOktaClient
  isExternal: true
  name: PostAsync(String, Object, CancellationToken)
  nameWithType: IOktaClient.PostAsync(String, Object, CancellationToken)
  fullName: Okta.Sdk.IOktaClient.PostAsync(System.String, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: IOktaClient.PostAsync
    fullName: Okta.Sdk.IOktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: IOktaClient.PostAsync
    fullName: Okta.Sdk.IOktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Okta.Sdk.IOktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOktaClient
  isExternal: true
  name: PostAsync<TResponse>(String, Object, CancellationToken)
  nameWithType: IOktaClient.PostAsync<TResponse>(String, Object, CancellationToken)
  fullName: Okta.Sdk.IOktaClient.PostAsync<TResponse>(System.String, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: IOktaClient.PostAsync(Of TResponse)(String, Object, CancellationToken)
  fullName.vb: Okta.Sdk.IOktaClient.PostAsync(Of TResponse)(System.String, System.Object, System.Threading.CancellationToken)
  name.vb: PostAsync(Of TResponse)(String, Object, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync<TResponse>
    nameWithType: IOktaClient.PostAsync<TResponse>
    fullName: Okta.Sdk.IOktaClient.PostAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync(Of TResponse)
    nameWithType: IOktaClient.PostAsync(Of TResponse)
    fullName: Okta.Sdk.IOktaClient.PostAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TResponse}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResponse>
  nameWithType: Task<TResponse>
  fullName: System.Threading.Tasks.Task<TResponse>
  nameWithType.vb: Task(Of TResponse)
  fullName.vb: System.Threading.Tasks.Task(Of TResponse)
  name.vb: Task(Of TResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOktaClient
  isExternal: true
  name: PostAsync(HttpRequest, CancellationToken)
  nameWithType: IOktaClient.PostAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.IOktaClient.PostAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: IOktaClient.PostAsync
    fullName: Okta.Sdk.IOktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: IOktaClient.PostAsync
    fullName: Okta.Sdk.IOktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOktaClient
  isExternal: true
  name: PostAsync<TResponse>(HttpRequest, CancellationToken)
  nameWithType: IOktaClient.PostAsync<TResponse>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.IOktaClient.PostAsync<TResponse>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  nameWithType.vb: IOktaClient.PostAsync(Of TResponse)(HttpRequest, CancellationToken)
  fullName.vb: Okta.Sdk.IOktaClient.PostAsync(Of TResponse)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: PostAsync(Of TResponse)(HttpRequest, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync<TResponse>
    nameWithType: IOktaClient.PostAsync<TResponse>
    fullName: Okta.Sdk.IOktaClient.PostAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync(Of TResponse)
    nameWithType: IOktaClient.PostAsync(Of TResponse)
    fullName: Okta.Sdk.IOktaClient.PostAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PutAsync*
  commentId: Overload:Okta.Sdk.OktaClient.PutAsync
  name: PutAsync
  nameWithType: OktaClient.PutAsync
  fullName: Okta.Sdk.OktaClient.PutAsync
- uid: Okta.Sdk.IOktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOktaClient
  isExternal: true
  name: PutAsync(String, Object, CancellationToken)
  nameWithType: IOktaClient.PutAsync(String, Object, CancellationToken)
  fullName: Okta.Sdk.IOktaClient.PutAsync(System.String, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: IOktaClient.PutAsync
    fullName: Okta.Sdk.IOktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: IOktaClient.PutAsync
    fullName: Okta.Sdk.IOktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOktaClient
  isExternal: true
  name: PutAsync<TResponse>(String, Object, CancellationToken)
  nameWithType: IOktaClient.PutAsync<TResponse>(String, Object, CancellationToken)
  fullName: Okta.Sdk.IOktaClient.PutAsync<TResponse>(System.String, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: IOktaClient.PutAsync(Of TResponse)(String, Object, CancellationToken)
  fullName.vb: Okta.Sdk.IOktaClient.PutAsync(Of TResponse)(System.String, System.Object, System.Threading.CancellationToken)
  name.vb: PutAsync(Of TResponse)(String, Object, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync<TResponse>
    nameWithType: IOktaClient.PutAsync<TResponse>
    fullName: Okta.Sdk.IOktaClient.PutAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync(Of TResponse)
    nameWithType: IOktaClient.PutAsync(Of TResponse)
    fullName: Okta.Sdk.IOktaClient.PutAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOktaClient
  isExternal: true
  name: PutAsync(HttpRequest, CancellationToken)
  nameWithType: IOktaClient.PutAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.IOktaClient.PutAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: IOktaClient.PutAsync
    fullName: Okta.Sdk.IOktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: IOktaClient.PutAsync
    fullName: Okta.Sdk.IOktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOktaClient
  isExternal: true
  name: PutAsync<TResponse>(HttpRequest, CancellationToken)
  nameWithType: IOktaClient.PutAsync<TResponse>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.IOktaClient.PutAsync<TResponse>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  nameWithType.vb: IOktaClient.PutAsync(Of TResponse)(HttpRequest, CancellationToken)
  fullName.vb: Okta.Sdk.IOktaClient.PutAsync(Of TResponse)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: PutAsync(Of TResponse)(HttpRequest, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync<TResponse>
    nameWithType: IOktaClient.PutAsync<TResponse>
    fullName: Okta.Sdk.IOktaClient.PutAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync(Of TResponse)
    nameWithType: IOktaClient.PutAsync(Of TResponse)
    fullName: Okta.Sdk.IOktaClient.PutAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.DeleteAsync*
  commentId: Overload:Okta.Sdk.OktaClient.DeleteAsync
  name: DeleteAsync
  nameWithType: OktaClient.DeleteAsync
  fullName: Okta.Sdk.OktaClient.DeleteAsync
- uid: Okta.Sdk.IOktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOktaClient
  isExternal: true
  name: DeleteAsync(String, CancellationToken)
  nameWithType: IOktaClient.DeleteAsync(String, CancellationToken)
  fullName: Okta.Sdk.IOktaClient.DeleteAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IOktaClient.DeleteAsync
    fullName: Okta.Sdk.IOktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IOktaClient.DeleteAsync
    fullName: Okta.Sdk.IOktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IOktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.IOktaClient
  isExternal: true
  name: DeleteAsync(HttpRequest, CancellationToken)
  nameWithType: IOktaClient.DeleteAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.IOktaClient.DeleteAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IOktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IOktaClient.DeleteAsync
    fullName: Okta.Sdk.IOktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IOktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IOktaClient.DeleteAsync
    fullName: Okta.Sdk.IOktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
