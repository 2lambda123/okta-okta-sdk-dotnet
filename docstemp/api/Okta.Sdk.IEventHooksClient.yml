### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IEventHooksClient
  commentId: T:Okta.Sdk.IEventHooksClient
  id: IEventHooksClient
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IEventHooksClient.ActivateEventHookAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IEventHooksClient.CreateEventHookAsync(Okta.Sdk.IEventHook,System.Threading.CancellationToken)
  - Okta.Sdk.IEventHooksClient.DeactivateEventHookAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IEventHooksClient.DeleteEventHookAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IEventHooksClient.GetEventHookAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IEventHooksClient.ListEventHooks
  - Okta.Sdk.IEventHooksClient.UpdateEventHookAsync(Okta.Sdk.IEventHook,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IEventHooksClient.VerifyEventHookAsync(System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IEventHooksClient
  nameWithType: IEventHooksClient
  fullName: Okta.Sdk.IEventHooksClient
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IEventHooksClient
    path: ../src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
    startLine: 15
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: A client that works with Okta EventHook resources.
  example: []
  syntax:
    content: public interface IEventHooksClient
    content.vb: Public Interface IEventHooksClient
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IEventHooksClient.ListEventHooks
  commentId: M:Okta.Sdk.IEventHooksClient.ListEventHooks
  id: ListEventHooks
  parent: Okta.Sdk.IEventHooksClient
  langs:
  - csharp
  - vb
  name: ListEventHooks()
  nameWithType: IEventHooksClient.ListEventHooks()
  fullName: Okta.Sdk.IEventHooksClient.ListEventHooks()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListEventHooks
    path: ../src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
    startLine: 21
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: ICollectionClient<IEventHook> ListEventHooks()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IEventHook}
      description: A collection of <xref href="Okta.Sdk.IEventHook" data-throw-if-not-resolved="false"></xref> that can be enumerated asynchronously.
    content.vb: Function ListEventHooks As ICollectionClient(Of IEventHook)
  overload: Okta.Sdk.IEventHooksClient.ListEventHooks*
- uid: Okta.Sdk.IEventHooksClient.CreateEventHookAsync(Okta.Sdk.IEventHook,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IEventHooksClient.CreateEventHookAsync(Okta.Sdk.IEventHook,System.Threading.CancellationToken)
  id: CreateEventHookAsync(Okta.Sdk.IEventHook,System.Threading.CancellationToken)
  parent: Okta.Sdk.IEventHooksClient
  langs:
  - csharp
  - vb
  name: CreateEventHookAsync(IEventHook, CancellationToken)
  nameWithType: IEventHooksClient.CreateEventHookAsync(IEventHook, CancellationToken)
  fullName: Okta.Sdk.IEventHooksClient.CreateEventHookAsync(Okta.Sdk.IEventHook, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateEventHookAsync
    path: ../src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
    startLine: 29
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IEventHook> CreateEventHookAsync(IEventHook eventHook, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: eventHook
      type: Okta.Sdk.IEventHook
      description: The <xref href="Okta.Sdk.IEventHook" data-throw-if-not-resolved="false"></xref> resource.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IEventHook}
      description: The <xref href="Okta.Sdk.IEventHook" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function CreateEventHookAsync(eventHook As IEventHook, cancellationToken As CancellationToken = Nothing) As Task(Of IEventHook)
  overload: Okta.Sdk.IEventHooksClient.CreateEventHookAsync*
- uid: Okta.Sdk.IEventHooksClient.DeleteEventHookAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IEventHooksClient.DeleteEventHookAsync(System.String,System.Threading.CancellationToken)
  id: DeleteEventHookAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IEventHooksClient
  langs:
  - csharp
  - vb
  name: DeleteEventHookAsync(String, CancellationToken)
  nameWithType: IEventHooksClient.DeleteEventHookAsync(String, CancellationToken)
  fullName: Okta.Sdk.IEventHooksClient.DeleteEventHookAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteEventHookAsync
    path: ../src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
    startLine: 37
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task DeleteEventHookAsync(string eventHookId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: eventHookId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that represents the asynchronous operation.
    content.vb: Function DeleteEventHookAsync(eventHookId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.IEventHooksClient.DeleteEventHookAsync*
- uid: Okta.Sdk.IEventHooksClient.GetEventHookAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IEventHooksClient.GetEventHookAsync(System.String,System.Threading.CancellationToken)
  id: GetEventHookAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IEventHooksClient
  langs:
  - csharp
  - vb
  name: GetEventHookAsync(String, CancellationToken)
  nameWithType: IEventHooksClient.GetEventHookAsync(String, CancellationToken)
  fullName: Okta.Sdk.IEventHooksClient.GetEventHookAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetEventHookAsync
    path: ../src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
    startLine: 45
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IEventHook> GetEventHookAsync(string eventHookId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: eventHookId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IEventHook}
      description: The <xref href="Okta.Sdk.IEventHook" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetEventHookAsync(eventHookId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEventHook)
  overload: Okta.Sdk.IEventHooksClient.GetEventHookAsync*
- uid: Okta.Sdk.IEventHooksClient.UpdateEventHookAsync(Okta.Sdk.IEventHook,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IEventHooksClient.UpdateEventHookAsync(Okta.Sdk.IEventHook,System.String,System.Threading.CancellationToken)
  id: UpdateEventHookAsync(Okta.Sdk.IEventHook,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IEventHooksClient
  langs:
  - csharp
  - vb
  name: UpdateEventHookAsync(IEventHook, String, CancellationToken)
  nameWithType: IEventHooksClient.UpdateEventHookAsync(IEventHook, String, CancellationToken)
  fullName: Okta.Sdk.IEventHooksClient.UpdateEventHookAsync(Okta.Sdk.IEventHook, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateEventHookAsync
    path: ../src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
    startLine: 54
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IEventHook> UpdateEventHookAsync(IEventHook eventHook, string eventHookId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: eventHook
      type: Okta.Sdk.IEventHook
      description: The <xref href="Okta.Sdk.IEventHook" data-throw-if-not-resolved="false"></xref> resource.
    - id: eventHookId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IEventHook}
      description: The <xref href="Okta.Sdk.IEventHook" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdateEventHookAsync(eventHook As IEventHook, eventHookId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEventHook)
  overload: Okta.Sdk.IEventHooksClient.UpdateEventHookAsync*
- uid: Okta.Sdk.IEventHooksClient.ActivateEventHookAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IEventHooksClient.ActivateEventHookAsync(System.String,System.Threading.CancellationToken)
  id: ActivateEventHookAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IEventHooksClient
  langs:
  - csharp
  - vb
  name: ActivateEventHookAsync(String, CancellationToken)
  nameWithType: IEventHooksClient.ActivateEventHookAsync(String, CancellationToken)
  fullName: Okta.Sdk.IEventHooksClient.ActivateEventHookAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateEventHookAsync
    path: ../src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
    startLine: 62
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IEventHook> ActivateEventHookAsync(string eventHookId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: eventHookId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IEventHook}
      description: The <xref href="Okta.Sdk.IEventHook" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function ActivateEventHookAsync(eventHookId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEventHook)
  overload: Okta.Sdk.IEventHooksClient.ActivateEventHookAsync*
- uid: Okta.Sdk.IEventHooksClient.DeactivateEventHookAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IEventHooksClient.DeactivateEventHookAsync(System.String,System.Threading.CancellationToken)
  id: DeactivateEventHookAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IEventHooksClient
  langs:
  - csharp
  - vb
  name: DeactivateEventHookAsync(String, CancellationToken)
  nameWithType: IEventHooksClient.DeactivateEventHookAsync(String, CancellationToken)
  fullName: Okta.Sdk.IEventHooksClient.DeactivateEventHookAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateEventHookAsync
    path: ../src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
    startLine: 70
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IEventHook> DeactivateEventHookAsync(string eventHookId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: eventHookId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IEventHook}
      description: The <xref href="Okta.Sdk.IEventHook" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function DeactivateEventHookAsync(eventHookId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEventHook)
  overload: Okta.Sdk.IEventHooksClient.DeactivateEventHookAsync*
- uid: Okta.Sdk.IEventHooksClient.VerifyEventHookAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IEventHooksClient.VerifyEventHookAsync(System.String,System.Threading.CancellationToken)
  id: VerifyEventHookAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IEventHooksClient
  langs:
  - csharp
  - vb
  name: VerifyEventHookAsync(String, CancellationToken)
  nameWithType: IEventHooksClient.VerifyEventHookAsync(String, CancellationToken)
  fullName: Okta.Sdk.IEventHooksClient.VerifyEventHookAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: VerifyEventHookAsync
    path: ../src/Okta.Sdk/Generated/IEventHooksClient.Generated.cs
    startLine: 78
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSuccess\n"
  example: []
  syntax:
    content: Task<IEventHook> VerifyEventHookAsync(string eventHookId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: eventHookId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IEventHook}
      description: The <xref href="Okta.Sdk.IEventHook" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function VerifyEventHookAsync(eventHookId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEventHook)
  overload: Okta.Sdk.IEventHooksClient.VerifyEventHookAsync*
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IEventHook
  commentId: T:Okta.Sdk.IEventHook
  parent: Okta.Sdk
  name: IEventHook
  nameWithType: IEventHook
  fullName: Okta.Sdk.IEventHook
- uid: Okta.Sdk.IEventHooksClient.ListEventHooks*
  commentId: Overload:Okta.Sdk.IEventHooksClient.ListEventHooks
  name: ListEventHooks
  nameWithType: IEventHooksClient.ListEventHooks
  fullName: Okta.Sdk.IEventHooksClient.ListEventHooks
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IEventHook}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IEventHook}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IEventHook>
  nameWithType: ICollectionClient<IEventHook>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IEventHook>
  nameWithType.vb: ICollectionClient(Of IEventHook)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IEventHook)
  name.vb: ICollectionClient(Of IEventHook)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IEventHook
    name: IEventHook
    nameWithType: IEventHook
    fullName: Okta.Sdk.IEventHook
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IEventHook
    name: IEventHook
    nameWithType: IEventHook
    fullName: Okta.Sdk.IEventHook
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IEventHooksClient.CreateEventHookAsync*
  commentId: Overload:Okta.Sdk.IEventHooksClient.CreateEventHookAsync
  name: CreateEventHookAsync
  nameWithType: IEventHooksClient.CreateEventHookAsync
  fullName: Okta.Sdk.IEventHooksClient.CreateEventHookAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.IEventHook}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IEventHook}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEventHook>
  nameWithType: Task<IEventHook>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IEventHook>
  nameWithType.vb: Task(Of IEventHook)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IEventHook)
  name.vb: Task(Of IEventHook)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IEventHook
    name: IEventHook
    nameWithType: IEventHook
    fullName: Okta.Sdk.IEventHook
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IEventHook
    name: IEventHook
    nameWithType: IEventHook
    fullName: Okta.Sdk.IEventHook
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.IEventHooksClient.DeleteEventHookAsync*
  commentId: Overload:Okta.Sdk.IEventHooksClient.DeleteEventHookAsync
  name: DeleteEventHookAsync
  nameWithType: IEventHooksClient.DeleteEventHookAsync
  fullName: Okta.Sdk.IEventHooksClient.DeleteEventHookAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.IEventHooksClient.GetEventHookAsync*
  commentId: Overload:Okta.Sdk.IEventHooksClient.GetEventHookAsync
  name: GetEventHookAsync
  nameWithType: IEventHooksClient.GetEventHookAsync
  fullName: Okta.Sdk.IEventHooksClient.GetEventHookAsync
- uid: Okta.Sdk.IEventHooksClient.UpdateEventHookAsync*
  commentId: Overload:Okta.Sdk.IEventHooksClient.UpdateEventHookAsync
  name: UpdateEventHookAsync
  nameWithType: IEventHooksClient.UpdateEventHookAsync
  fullName: Okta.Sdk.IEventHooksClient.UpdateEventHookAsync
- uid: Okta.Sdk.IEventHooksClient.ActivateEventHookAsync*
  commentId: Overload:Okta.Sdk.IEventHooksClient.ActivateEventHookAsync
  name: ActivateEventHookAsync
  nameWithType: IEventHooksClient.ActivateEventHookAsync
  fullName: Okta.Sdk.IEventHooksClient.ActivateEventHookAsync
- uid: Okta.Sdk.IEventHooksClient.DeactivateEventHookAsync*
  commentId: Overload:Okta.Sdk.IEventHooksClient.DeactivateEventHookAsync
  name: DeactivateEventHookAsync
  nameWithType: IEventHooksClient.DeactivateEventHookAsync
  fullName: Okta.Sdk.IEventHooksClient.DeactivateEventHookAsync
- uid: Okta.Sdk.IEventHooksClient.VerifyEventHookAsync*
  commentId: Overload:Okta.Sdk.IEventHooksClient.VerifyEventHookAsync
  name: VerifyEventHookAsync
  nameWithType: IEventHooksClient.VerifyEventHookAsync
  fullName: Okta.Sdk.IEventHooksClient.VerifyEventHookAsync
