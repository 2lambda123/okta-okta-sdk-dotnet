### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  commentId: T:Okta.Sdk.Configuration.JsonWebKeyConfiguration
  id: JsonWebKeyConfiguration
  parent: Okta.Sdk.Configuration
  children:
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.#ctor
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.#ctor(System.String)
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.Crv
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.D
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dp
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dq
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.E
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kid
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kty
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.N
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.P
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.Q
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.Qi
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.X
  - Okta.Sdk.Configuration.JsonWebKeyConfiguration.Y
  langs:
  - csharp
  - vb
  name: JsonWebKeyConfiguration
  nameWithType: JsonWebKeyConfiguration
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: JsonWebKeyConfiguration
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 13
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nJWK configuration for private key when using OAuth strategy.\n"
  example: []
  syntax:
    content: public class JsonWebKeyConfiguration
    content.vb: Public Class JsonWebKeyConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kid
  commentId: P:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kid
  id: Kid
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: Kid
  nameWithType: JsonWebKeyConfiguration.Kid
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kid
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Kid
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 18
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the key id. Optional.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("kid")]

      public string Kid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("kid")>

      Public Property Kid As String
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kid*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: kid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kty
  commentId: P:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kty
  id: Kty
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: Kty
  nameWithType: JsonWebKeyConfiguration.Kty
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kty
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Kty
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 24
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the key type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("kty")]

      public string Kty { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("kty")>

      Public Property Kty As String
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kty*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: kty
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.N
  commentId: P:Okta.Sdk.Configuration.JsonWebKeyConfiguration.N
  id: N
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: N
  nameWithType: JsonWebKeyConfiguration.N
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.N
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: N
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 30
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the RSA modulus\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("n")]

      public string N { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("n")>

      Public Property N As String
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.N*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: n
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.E
  commentId: P:Okta.Sdk.Configuration.JsonWebKeyConfiguration.E
  id: E
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: E
  nameWithType: JsonWebKeyConfiguration.E
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.E
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: E
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 36
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the RSA public exponent\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("e")]

      public string E { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("e")>

      Public Property E As String
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.E*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: e
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.P
  commentId: P:Okta.Sdk.Configuration.JsonWebKeyConfiguration.P
  id: P
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: P
  nameWithType: JsonWebKeyConfiguration.P
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.P
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: P
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 42
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the RSA secret prime &apos;p&apos;\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("p")]

      public string P { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("p")>

      Public Property P As String
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.P*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: p
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Q
  commentId: P:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Q
  id: Q
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: Q
  nameWithType: JsonWebKeyConfiguration.Q
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Q
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Q
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 48
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the RSA secret prime &apos;q&apos;\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("q")]

      public string Q { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("q")>

      Public Property Q As String
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Q*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: q
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Qi
  commentId: P:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Qi
  id: Qi
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: Qi
  nameWithType: JsonWebKeyConfiguration.Qi
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Qi
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Qi
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 54
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the RSA &apos;qi&apos; parameter.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("qi")]

      public string Qi { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("qi")>

      Public Property Qi As String
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Qi*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: qi
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dq
  commentId: P:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dq
  id: Dq
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: Dq
  nameWithType: JsonWebKeyConfiguration.Dq
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dq
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Dq
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 60
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the RSA exponent &apos;dq&apos;\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("dq")]

      public string Dq { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("dq")>

      Public Property Dq As String
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dq*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dq
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dp
  commentId: P:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dp
  id: Dp
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: Dp
  nameWithType: JsonWebKeyConfiguration.Dp
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dp
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Dp
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 66
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the RSA exponent &apos;dp&apos;\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("dp")]

      public string Dp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("dp")>

      Public Property Dp As String
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dp*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dp
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.D
  commentId: P:Okta.Sdk.Configuration.JsonWebKeyConfiguration.D
  id: D
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: D
  nameWithType: JsonWebKeyConfiguration.D
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.D
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: D
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 72
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the &apos;d&apos; parameter. EC Private Key or RSA Private Exponent.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("d")]

      public string D { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("d")>

      Public Property D As String
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.D*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: d
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Crv
  commentId: P:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Crv
  id: Crv
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: Crv
  nameWithType: JsonWebKeyConfiguration.Crv
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Crv
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Crv
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 78
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the elliptic curve field and equation used\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("crv")]

      public string Crv { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("crv")>

      Public Property Crv As String
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Crv*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: crv
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.X
  commentId: P:Okta.Sdk.Configuration.JsonWebKeyConfiguration.X
  id: X
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: X
  nameWithType: JsonWebKeyConfiguration.X
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.X
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: X
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 84
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the &apos;x&apos; coordinate for the elliptic curve point\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("x")]

      public string X { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("x")>

      Public Property X As String
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.X*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: x
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Y
  commentId: P:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Y
  id: Y
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: JsonWebKeyConfiguration.Y
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Y
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Y
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 90
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the &apos;y&apos; coordinate for the elliptic curve point\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("y")]

      public string Y { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("y")>

      Public Property Y As String
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Y*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: y
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.#ctor
  commentId: M:Okta.Sdk.Configuration.JsonWebKeyConfiguration.#ctor
  id: '#ctor'
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: JsonWebKeyConfiguration()
  nameWithType: JsonWebKeyConfiguration.JsonWebKeyConfiguration()
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.JsonWebKeyConfiguration()
  type: Constructor
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: .ctor
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 96
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nInitializes a new instance of the <xref href=\"Okta.Sdk.Configuration.JsonWebKeyConfiguration\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public JsonWebKeyConfiguration()
    content.vb: Public Sub New
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.#ctor(System.String)
  commentId: M:Okta.Sdk.Configuration.JsonWebKeyConfiguration.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  langs:
  - csharp
  - vb
  name: JsonWebKeyConfiguration(String)
  nameWithType: JsonWebKeyConfiguration.JsonWebKeyConfiguration(String)
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.JsonWebKeyConfiguration(System.String)
  type: Constructor
  source:
    remote:
      path: src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: .ctor
    path: ../src/Okta.Sdk/Configuration/JsonWebKeyConfiguration.cs
    startLine: 104
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nInitializes a new instance of the <xref href=\"Okta.Sdk.Configuration.JsonWebKeyConfiguration\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public JsonWebKeyConfiguration(string json)
    parameters:
    - id: json
      type: System.String
      description: The private key in json format.
    content.vb: Public Sub New(json As String)
  overload: Okta.Sdk.Configuration.JsonWebKeyConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk.Configuration
  commentId: N:Okta.Sdk.Configuration
  name: Okta.Sdk.Configuration
  nameWithType: Okta.Sdk.Configuration
  fullName: Okta.Sdk.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kid*
  commentId: Overload:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kid
  name: Kid
  nameWithType: JsonWebKeyConfiguration.Kid
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kty*
  commentId: Overload:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kty
  name: Kty
  nameWithType: JsonWebKeyConfiguration.Kty
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Kty
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.N*
  commentId: Overload:Okta.Sdk.Configuration.JsonWebKeyConfiguration.N
  name: N
  nameWithType: JsonWebKeyConfiguration.N
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.N
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.E*
  commentId: Overload:Okta.Sdk.Configuration.JsonWebKeyConfiguration.E
  name: E
  nameWithType: JsonWebKeyConfiguration.E
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.E
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.P*
  commentId: Overload:Okta.Sdk.Configuration.JsonWebKeyConfiguration.P
  name: P
  nameWithType: JsonWebKeyConfiguration.P
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.P
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Q*
  commentId: Overload:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Q
  name: Q
  nameWithType: JsonWebKeyConfiguration.Q
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Q
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Qi*
  commentId: Overload:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Qi
  name: Qi
  nameWithType: JsonWebKeyConfiguration.Qi
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Qi
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dq*
  commentId: Overload:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dq
  name: Dq
  nameWithType: JsonWebKeyConfiguration.Dq
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dq
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dp*
  commentId: Overload:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dp
  name: Dp
  nameWithType: JsonWebKeyConfiguration.Dp
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Dp
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.D*
  commentId: Overload:Okta.Sdk.Configuration.JsonWebKeyConfiguration.D
  name: D
  nameWithType: JsonWebKeyConfiguration.D
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.D
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Crv*
  commentId: Overload:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Crv
  name: Crv
  nameWithType: JsonWebKeyConfiguration.Crv
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Crv
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.X*
  commentId: Overload:Okta.Sdk.Configuration.JsonWebKeyConfiguration.X
  name: X
  nameWithType: JsonWebKeyConfiguration.X
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.X
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Y*
  commentId: Overload:Okta.Sdk.Configuration.JsonWebKeyConfiguration.Y
  name: Y
  nameWithType: JsonWebKeyConfiguration.Y
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.Y
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration
  commentId: T:Okta.Sdk.Configuration.JsonWebKeyConfiguration
  parent: Okta.Sdk.Configuration
  name: JsonWebKeyConfiguration
  nameWithType: JsonWebKeyConfiguration
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration
- uid: Okta.Sdk.Configuration.JsonWebKeyConfiguration.#ctor*
  commentId: Overload:Okta.Sdk.Configuration.JsonWebKeyConfiguration.#ctor
  name: JsonWebKeyConfiguration
  nameWithType: JsonWebKeyConfiguration.JsonWebKeyConfiguration
  fullName: Okta.Sdk.Configuration.JsonWebKeyConfiguration.JsonWebKeyConfiguration
