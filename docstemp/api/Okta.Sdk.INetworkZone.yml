### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.INetworkZone
  commentId: T:Okta.Sdk.INetworkZone
  id: INetworkZone
  parent: Okta.Sdk
  children:
  - Okta.Sdk.INetworkZone.ActivateAsync(System.Threading.CancellationToken)
  - Okta.Sdk.INetworkZone.Asns
  - Okta.Sdk.INetworkZone.Created
  - Okta.Sdk.INetworkZone.DeactivateAsync(System.Threading.CancellationToken)
  - Okta.Sdk.INetworkZone.Gateways
  - Okta.Sdk.INetworkZone.Id
  - Okta.Sdk.INetworkZone.LastUpdated
  - Okta.Sdk.INetworkZone.Locations
  - Okta.Sdk.INetworkZone.Name
  - Okta.Sdk.INetworkZone.Proxies
  - Okta.Sdk.INetworkZone.ProxyType
  - Okta.Sdk.INetworkZone.Status
  - Okta.Sdk.INetworkZone.System
  - Okta.Sdk.INetworkZone.Type
  - Okta.Sdk.INetworkZone.Usage
  langs:
  - csharp
  - vb
  name: INetworkZone
  nameWithType: INetworkZone
  fullName: Okta.Sdk.INetworkZone
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: INetworkZone
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 15
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: Represents a NetworkZone resource in the Okta API.
  example: []
  syntax:
    content: 'public interface INetworkZone : IResource'
    content.vb: >-
      Public Interface INetworkZone

          Inherits IResource
  inheritedMembers:
  - Okta.Sdk.IResource.Item(System.String)
  - Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  - Okta.Sdk.IResource.GetData
  - Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  - Okta.Sdk.IResource.GetProperty``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.INetworkZone.Asns
  commentId: P:Okta.Sdk.INetworkZone.Asns
  id: Asns
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: Asns
  nameWithType: INetworkZone.Asns
  fullName: Okta.Sdk.INetworkZone.Asns
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Asns
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 17
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IList<string> Asns { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Property Asns As IList(Of String)
  overload: Okta.Sdk.INetworkZone.Asns*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.INetworkZone.Created
  commentId: P:Okta.Sdk.INetworkZone.Created
  id: Created
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: INetworkZone.Created
  fullName: Okta.Sdk.INetworkZone.Created
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Created
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: DateTimeOffset? Created { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: ReadOnly Property Created As DateTimeOffset?
  overload: Okta.Sdk.INetworkZone.Created*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.INetworkZone.Gateways
  commentId: P:Okta.Sdk.INetworkZone.Gateways
  id: Gateways
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: Gateways
  nameWithType: INetworkZone.Gateways
  fullName: Okta.Sdk.INetworkZone.Gateways
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Gateways
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 21
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IList<INetworkZoneAddress> Gateways { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Okta.Sdk.INetworkZoneAddress}
    content.vb: Property Gateways As IList(Of INetworkZoneAddress)
  overload: Okta.Sdk.INetworkZone.Gateways*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.INetworkZone.Id
  commentId: P:Okta.Sdk.INetworkZone.Id
  id: Id
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: INetworkZone.Id
  fullName: Okta.Sdk.INetworkZone.Id
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Id
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 23
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Okta.Sdk.INetworkZone.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.INetworkZone.LastUpdated
  commentId: P:Okta.Sdk.INetworkZone.LastUpdated
  id: LastUpdated
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: LastUpdated
  nameWithType: INetworkZone.LastUpdated
  fullName: Okta.Sdk.INetworkZone.LastUpdated
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: LastUpdated
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 25
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: DateTimeOffset? LastUpdated { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: ReadOnly Property LastUpdated As DateTimeOffset?
  overload: Okta.Sdk.INetworkZone.LastUpdated*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.INetworkZone.Locations
  commentId: P:Okta.Sdk.INetworkZone.Locations
  id: Locations
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: Locations
  nameWithType: INetworkZone.Locations
  fullName: Okta.Sdk.INetworkZone.Locations
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Locations
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 27
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IList<INetworkZoneLocation> Locations { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Okta.Sdk.INetworkZoneLocation}
    content.vb: Property Locations As IList(Of INetworkZoneLocation)
  overload: Okta.Sdk.INetworkZone.Locations*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.INetworkZone.Name
  commentId: P:Okta.Sdk.INetworkZone.Name
  id: Name
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: INetworkZone.Name
  fullName: Okta.Sdk.INetworkZone.Name
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Name
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 29
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Name As String
  overload: Okta.Sdk.INetworkZone.Name*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.INetworkZone.Proxies
  commentId: P:Okta.Sdk.INetworkZone.Proxies
  id: Proxies
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: Proxies
  nameWithType: INetworkZone.Proxies
  fullName: Okta.Sdk.INetworkZone.Proxies
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Proxies
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 31
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IList<INetworkZoneAddress> Proxies { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Okta.Sdk.INetworkZoneAddress}
    content.vb: Property Proxies As IList(Of INetworkZoneAddress)
  overload: Okta.Sdk.INetworkZone.Proxies*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.INetworkZone.ProxyType
  commentId: P:Okta.Sdk.INetworkZone.ProxyType
  id: ProxyType
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: ProxyType
  nameWithType: INetworkZone.ProxyType
  fullName: Okta.Sdk.INetworkZone.ProxyType
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ProxyType
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 33
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string ProxyType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ProxyType As String
  overload: Okta.Sdk.INetworkZone.ProxyType*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.INetworkZone.Status
  commentId: P:Okta.Sdk.INetworkZone.Status
  id: Status
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: INetworkZone.Status
  fullName: Okta.Sdk.INetworkZone.Status
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Status
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 35
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: NetworkZoneStatus Status { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.NetworkZoneStatus
    content.vb: Property Status As NetworkZoneStatus
  overload: Okta.Sdk.INetworkZone.Status*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.INetworkZone.System
  commentId: P:Okta.Sdk.INetworkZone.System
  id: System
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: System
  nameWithType: INetworkZone.System
  fullName: Okta.Sdk.INetworkZone.System
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: System
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 37
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: bool? System { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Property System As Boolean?
  overload: Okta.Sdk.INetworkZone.System*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.INetworkZone.Type
  commentId: P:Okta.Sdk.INetworkZone.Type
  id: Type
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: INetworkZone.Type
  fullName: Okta.Sdk.INetworkZone.Type
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Type
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 39
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: NetworkZoneType Type { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.NetworkZoneType
    content.vb: Property Type As NetworkZoneType
  overload: Okta.Sdk.INetworkZone.Type*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.INetworkZone.Usage
  commentId: P:Okta.Sdk.INetworkZone.Usage
  id: Usage
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: Usage
  nameWithType: INetworkZone.Usage
  fullName: Okta.Sdk.INetworkZone.Usage
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Usage
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 41
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: NetworkZoneUsage Usage { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.NetworkZoneUsage
    content.vb: Property Usage As NetworkZoneUsage
  overload: Okta.Sdk.INetworkZone.Usage*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.INetworkZone.ActivateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.INetworkZone.ActivateAsync(System.Threading.CancellationToken)
  id: ActivateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: ActivateAsync(CancellationToken)
  nameWithType: INetworkZone.ActivateAsync(CancellationToken)
  fullName: Okta.Sdk.INetworkZone.ActivateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateAsync
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 43
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<INetworkZone> ActivateAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.INetworkZone}
    content.vb: Function ActivateAsync(cancellationToken As CancellationToken = Nothing) As Task(Of INetworkZone)
  overload: Okta.Sdk.INetworkZone.ActivateAsync*
- uid: Okta.Sdk.INetworkZone.DeactivateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.INetworkZone.DeactivateAsync(System.Threading.CancellationToken)
  id: DeactivateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.INetworkZone
  langs:
  - csharp
  - vb
  name: DeactivateAsync(CancellationToken)
  nameWithType: INetworkZone.DeactivateAsync(CancellationToken)
  fullName: Okta.Sdk.INetworkZone.DeactivateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/INetworkZone.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateAsync
    path: ../src/Okta.Sdk/Generated/INetworkZone.Generated.cs
    startLine: 46
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: Task<INetworkZone> DeactivateAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.INetworkZone}
    content.vb: Function DeactivateAsync(cancellationToken As CancellationToken = Nothing) As Task(Of INetworkZone)
  overload: Okta.Sdk.INetworkZone.DeactivateAsync*
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IResource.Item(System.String)
  commentId: P:Okta.Sdk.IResource.Item(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: Item[String]
  nameWithType: IResource.Item[String]
  fullName: Okta.Sdk.IResource.Item[System.String]
  nameWithType.vb: IResource.Item(String)
  fullName.vb: Okta.Sdk.IResource.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetArrayProperty<T>(String)
  nameWithType: IResource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetArrayProperty<T>(System.String)
  nameWithType.vb: IResource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty<T>
    nameWithType: IResource.GetArrayProperty<T>
    fullName: Okta.Sdk.IResource.GetArrayProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty(Of T)
    nameWithType: IResource.GetArrayProperty(Of T)
    fullName: Okta.Sdk.IResource.GetArrayProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetData
  commentId: M:Okta.Sdk.IResource.GetData
  parent: Okta.Sdk.IResource
  name: GetData()
  nameWithType: IResource.GetData()
  fullName: Okta.Sdk.IResource.GetData()
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: IResource.SetProperty(String, Object)
  fullName: Okta.Sdk.IResource.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: IResource.GetProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetProperty<T>(System.String)
  nameWithType.vb: IResource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: IResource.GetProperty<T>
    fullName: Okta.Sdk.IResource.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: IResource.GetProperty(Of T)
    fullName: Okta.Sdk.IResource.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  parent: Okta.Sdk
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
- uid: Okta.Sdk.INetworkZone.Asns*
  commentId: Overload:Okta.Sdk.INetworkZone.Asns
  name: Asns
  nameWithType: INetworkZone.Asns
  fullName: Okta.Sdk.INetworkZone.Asns
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.INetworkZone.Created*
  commentId: Overload:Okta.Sdk.INetworkZone.Created
  name: Created
  nameWithType: INetworkZone.Created
  fullName: Okta.Sdk.INetworkZone.Created
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.INetworkZone.Gateways*
  commentId: Overload:Okta.Sdk.INetworkZone.Gateways
  name: Gateways
  nameWithType: INetworkZone.Gateways
  fullName: Okta.Sdk.INetworkZone.Gateways
- uid: System.Collections.Generic.IList{Okta.Sdk.INetworkZoneAddress}
  commentId: T:System.Collections.Generic.IList{Okta.Sdk.INetworkZoneAddress}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<INetworkZoneAddress>
  nameWithType: IList<INetworkZoneAddress>
  fullName: System.Collections.Generic.IList<Okta.Sdk.INetworkZoneAddress>
  nameWithType.vb: IList(Of INetworkZoneAddress)
  fullName.vb: System.Collections.Generic.IList(Of Okta.Sdk.INetworkZoneAddress)
  name.vb: IList(Of INetworkZoneAddress)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.INetworkZoneAddress
    name: INetworkZoneAddress
    nameWithType: INetworkZoneAddress
    fullName: Okta.Sdk.INetworkZoneAddress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.INetworkZoneAddress
    name: INetworkZoneAddress
    nameWithType: INetworkZoneAddress
    fullName: Okta.Sdk.INetworkZoneAddress
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.INetworkZone.Id*
  commentId: Overload:Okta.Sdk.INetworkZone.Id
  name: Id
  nameWithType: INetworkZone.Id
  fullName: Okta.Sdk.INetworkZone.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.INetworkZone.LastUpdated*
  commentId: Overload:Okta.Sdk.INetworkZone.LastUpdated
  name: LastUpdated
  nameWithType: INetworkZone.LastUpdated
  fullName: Okta.Sdk.INetworkZone.LastUpdated
- uid: Okta.Sdk.INetworkZone.Locations*
  commentId: Overload:Okta.Sdk.INetworkZone.Locations
  name: Locations
  nameWithType: INetworkZone.Locations
  fullName: Okta.Sdk.INetworkZone.Locations
- uid: System.Collections.Generic.IList{Okta.Sdk.INetworkZoneLocation}
  commentId: T:System.Collections.Generic.IList{Okta.Sdk.INetworkZoneLocation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<INetworkZoneLocation>
  nameWithType: IList<INetworkZoneLocation>
  fullName: System.Collections.Generic.IList<Okta.Sdk.INetworkZoneLocation>
  nameWithType.vb: IList(Of INetworkZoneLocation)
  fullName.vb: System.Collections.Generic.IList(Of Okta.Sdk.INetworkZoneLocation)
  name.vb: IList(Of INetworkZoneLocation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.INetworkZoneLocation
    name: INetworkZoneLocation
    nameWithType: INetworkZoneLocation
    fullName: Okta.Sdk.INetworkZoneLocation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.INetworkZoneLocation
    name: INetworkZoneLocation
    nameWithType: INetworkZoneLocation
    fullName: Okta.Sdk.INetworkZoneLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.INetworkZone.Name*
  commentId: Overload:Okta.Sdk.INetworkZone.Name
  name: Name
  nameWithType: INetworkZone.Name
  fullName: Okta.Sdk.INetworkZone.Name
- uid: Okta.Sdk.INetworkZone.Proxies*
  commentId: Overload:Okta.Sdk.INetworkZone.Proxies
  name: Proxies
  nameWithType: INetworkZone.Proxies
  fullName: Okta.Sdk.INetworkZone.Proxies
- uid: Okta.Sdk.INetworkZone.ProxyType*
  commentId: Overload:Okta.Sdk.INetworkZone.ProxyType
  name: ProxyType
  nameWithType: INetworkZone.ProxyType
  fullName: Okta.Sdk.INetworkZone.ProxyType
- uid: Okta.Sdk.INetworkZone.Status*
  commentId: Overload:Okta.Sdk.INetworkZone.Status
  name: Status
  nameWithType: INetworkZone.Status
  fullName: Okta.Sdk.INetworkZone.Status
- uid: Okta.Sdk.NetworkZoneStatus
  commentId: T:Okta.Sdk.NetworkZoneStatus
  parent: Okta.Sdk
  name: NetworkZoneStatus
  nameWithType: NetworkZoneStatus
  fullName: Okta.Sdk.NetworkZoneStatus
- uid: Okta.Sdk.INetworkZone.System*
  commentId: Overload:Okta.Sdk.INetworkZone.System
  name: System
  nameWithType: INetworkZone.System
  fullName: Okta.Sdk.INetworkZone.System
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.INetworkZone.Type*
  commentId: Overload:Okta.Sdk.INetworkZone.Type
  name: Type
  nameWithType: INetworkZone.Type
  fullName: Okta.Sdk.INetworkZone.Type
- uid: Okta.Sdk.NetworkZoneType
  commentId: T:Okta.Sdk.NetworkZoneType
  parent: Okta.Sdk
  name: NetworkZoneType
  nameWithType: NetworkZoneType
  fullName: Okta.Sdk.NetworkZoneType
- uid: Okta.Sdk.INetworkZone.Usage*
  commentId: Overload:Okta.Sdk.INetworkZone.Usage
  name: Usage
  nameWithType: INetworkZone.Usage
  fullName: Okta.Sdk.INetworkZone.Usage
- uid: Okta.Sdk.NetworkZoneUsage
  commentId: T:Okta.Sdk.NetworkZoneUsage
  parent: Okta.Sdk
  name: NetworkZoneUsage
  nameWithType: NetworkZoneUsage
  fullName: Okta.Sdk.NetworkZoneUsage
- uid: Okta.Sdk.INetworkZone.ActivateAsync*
  commentId: Overload:Okta.Sdk.INetworkZone.ActivateAsync
  name: ActivateAsync
  nameWithType: INetworkZone.ActivateAsync
  fullName: Okta.Sdk.INetworkZone.ActivateAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.INetworkZone}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.INetworkZone}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<INetworkZone>
  nameWithType: Task<INetworkZone>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.INetworkZone>
  nameWithType.vb: Task(Of INetworkZone)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.INetworkZone)
  name.vb: Task(Of INetworkZone)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.INetworkZone
    name: INetworkZone
    nameWithType: INetworkZone
    fullName: Okta.Sdk.INetworkZone
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.INetworkZone
    name: INetworkZone
    nameWithType: INetworkZone
    fullName: Okta.Sdk.INetworkZone
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.INetworkZone.DeactivateAsync*
  commentId: Overload:Okta.Sdk.INetworkZone.DeactivateAsync
  name: DeactivateAsync
  nameWithType: INetworkZone.DeactivateAsync
  fullName: Okta.Sdk.INetworkZone.DeactivateAsync
