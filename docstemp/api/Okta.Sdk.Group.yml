### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.Group
  commentId: T:Okta.Sdk.Group
  id: Group
  parent: Okta.Sdk
  children:
  - Okta.Sdk.Group.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.Group.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Group.Created
  - Okta.Sdk.Group.DeleteAsync(System.Threading.CancellationToken)
  - Okta.Sdk.Group.Id
  - Okta.Sdk.Group.LastMembershipUpdated
  - Okta.Sdk.Group.LastUpdated
  - Okta.Sdk.Group.ListApplications(System.String,System.Nullable{System.Int32})
  - Okta.Sdk.Group.ObjectClass
  - Okta.Sdk.Group.Profile
  - Okta.Sdk.Group.RemoveUserAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Group.Type
  - Okta.Sdk.Group.UpdateAsync(System.Threading.CancellationToken)
  - Okta.Sdk.Group.Users
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: Group
  fullName: Okta.Sdk.Group
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/Group.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Group
    path: ../src/Okta.Sdk/Group.cs
    startLine: 12
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: 'public sealed class Group : Resource, IGroup, IResource'
    content.vb: >-
      Public NotInheritable Class Group

          Inherits Resource

          Implements IGroup, IResource
  inheritance:
  - System.Object
  - Okta.Sdk.Resource
  implements:
  - Okta.Sdk.IGroup
  - Okta.Sdk.IResource
  inheritedMembers:
  - Okta.Sdk.Resource.GetClient
  - Okta.Sdk.Resource.GetData
  - Okta.Sdk.Resource.Item(System.String)
  - Okta.Sdk.Resource.GetProperty``1(System.String)
  - Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  - Okta.Sdk.Resource.GetStringProperty(System.String)
  - Okta.Sdk.Resource.GetBooleanProperty(System.String)
  - Okta.Sdk.Resource.GetIntegerProperty(System.String)
  - Okta.Sdk.Resource.GetLongProperty(System.String)
  - Okta.Sdk.Resource.GetDoubleProperty(System.String)
  - Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  - Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  - Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  - Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Okta.Sdk.Group.Created
  commentId: P:Okta.Sdk.Group.Created
  id: Created
  parent: Okta.Sdk.Group
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: Group.Created
  fullName: Okta.Sdk.Group.Created
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Group.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Created
    path: ../src/Okta.Sdk/Generated/Group.Generated.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public DateTimeOffset? Created { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public ReadOnly Property Created As DateTimeOffset?
  overload: Okta.Sdk.Group.Created*
  implements:
  - Okta.Sdk.IGroup.Created
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Group.Id
  commentId: P:Okta.Sdk.Group.Id
  id: Id
  parent: Okta.Sdk.Group
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Group.Id
  fullName: Okta.Sdk.Group.Id
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Group.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Id
    path: ../src/Okta.Sdk/Generated/Group.Generated.cs
    startLine: 22
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Id As String
  overload: Okta.Sdk.Group.Id*
  implements:
  - Okta.Sdk.IGroup.Id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Group.LastMembershipUpdated
  commentId: P:Okta.Sdk.Group.LastMembershipUpdated
  id: LastMembershipUpdated
  parent: Okta.Sdk.Group
  langs:
  - csharp
  - vb
  name: LastMembershipUpdated
  nameWithType: Group.LastMembershipUpdated
  fullName: Okta.Sdk.Group.LastMembershipUpdated
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Group.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: LastMembershipUpdated
    path: ../src/Okta.Sdk/Generated/Group.Generated.cs
    startLine: 25
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public DateTimeOffset? LastMembershipUpdated { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public ReadOnly Property LastMembershipUpdated As DateTimeOffset?
  overload: Okta.Sdk.Group.LastMembershipUpdated*
  implements:
  - Okta.Sdk.IGroup.LastMembershipUpdated
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Group.LastUpdated
  commentId: P:Okta.Sdk.Group.LastUpdated
  id: LastUpdated
  parent: Okta.Sdk.Group
  langs:
  - csharp
  - vb
  name: LastUpdated
  nameWithType: Group.LastUpdated
  fullName: Okta.Sdk.Group.LastUpdated
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Group.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: LastUpdated
    path: ../src/Okta.Sdk/Generated/Group.Generated.cs
    startLine: 28
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public DateTimeOffset? LastUpdated { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public ReadOnly Property LastUpdated As DateTimeOffset?
  overload: Okta.Sdk.Group.LastUpdated*
  implements:
  - Okta.Sdk.IGroup.LastUpdated
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Group.ObjectClass
  commentId: P:Okta.Sdk.Group.ObjectClass
  id: ObjectClass
  parent: Okta.Sdk.Group
  langs:
  - csharp
  - vb
  name: ObjectClass
  nameWithType: Group.ObjectClass
  fullName: Okta.Sdk.Group.ObjectClass
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Group.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ObjectClass
    path: ../src/Okta.Sdk/Generated/Group.Generated.cs
    startLine: 31
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IList<string> ObjectClass { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public ReadOnly Property ObjectClass As IList(Of String)
  overload: Okta.Sdk.Group.ObjectClass*
  implements:
  - Okta.Sdk.IGroup.ObjectClass
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Group.Profile
  commentId: P:Okta.Sdk.Group.Profile
  id: Profile
  parent: Okta.Sdk.Group
  langs:
  - csharp
  - vb
  name: Profile
  nameWithType: Group.Profile
  fullName: Okta.Sdk.Group.Profile
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Group.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Profile
    path: ../src/Okta.Sdk/Generated/Group.Generated.cs
    startLine: 34
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IGroupProfile Profile { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IGroupProfile
    content.vb: Public Property Profile As IGroupProfile
  overload: Okta.Sdk.Group.Profile*
  implements:
  - Okta.Sdk.IGroup.Profile
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Group.Type
  commentId: P:Okta.Sdk.Group.Type
  id: Type
  parent: Okta.Sdk.Group
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Group.Type
  fullName: Okta.Sdk.Group.Type
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Group.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Type
    path: ../src/Okta.Sdk/Generated/Group.Generated.cs
    startLine: 41
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public GroupType Type { get; }
    parameters: []
    return:
      type: Okta.Sdk.GroupType
    content.vb: Public ReadOnly Property Type As GroupType
  overload: Okta.Sdk.Group.Type*
  implements:
  - Okta.Sdk.IGroup.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Group.RemoveUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Group.RemoveUserAsync(System.String,System.Threading.CancellationToken)
  id: RemoveUserAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Group
  langs:
  - csharp
  - vb
  name: RemoveUserAsync(String, CancellationToken)
  nameWithType: Group.RemoveUserAsync(String, CancellationToken)
  fullName: Okta.Sdk.Group.RemoveUserAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Group.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveUserAsync
    path: ../src/Okta.Sdk/Generated/Group.Generated.cs
    startLine: 44
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task RemoveUserAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveUserAsync(userId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Group.RemoveUserAsync*
  implements:
  - Okta.Sdk.IGroup.RemoveUserAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Group.ListApplications(System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.Group.ListApplications(System.String,System.Nullable{System.Int32})
  id: ListApplications(System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.Group
  langs:
  - csharp
  - vb
  name: ListApplications(String, Nullable<Int32>)
  nameWithType: Group.ListApplications(String, Nullable<Int32>)
  fullName: Okta.Sdk.Group.ListApplications(System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Group.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListApplications
    path: ../src/Okta.Sdk/Generated/Group.Generated.cs
    startLine: 49
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IApplication> ListApplications(string after = null, int? limit = 20)
    parameters:
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IApplication}
    content.vb: Public Function ListApplications(after As String = Nothing, limit As Integer? = 20) As ICollectionClient(Of IApplication)
  overload: Okta.Sdk.Group.ListApplications*
  implements:
  - Okta.Sdk.IGroup.ListApplications(System.String,System.Nullable{System.Int32})
  nameWithType.vb: Group.ListApplications(String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Group.ListApplications(System.String, System.Nullable(Of System.Int32))
  name.vb: ListApplications(String, Nullable(Of Int32))
- uid: Okta.Sdk.Group.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Group.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.Group
  langs:
  - csharp
  - vb
  name: AssignRoleAsync(IAssignRoleRequest, Nullable<Boolean>, CancellationToken)
  nameWithType: Group.AssignRoleAsync(IAssignRoleRequest, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.Group.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Group.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AssignRoleAsync
    path: ../src/Okta.Sdk/Generated/Group.Generated.cs
    startLine: 54
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IRole> AssignRoleAsync(IAssignRoleRequest assignRoleRequest, bool? disableNotifications = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: assignRoleRequest
      type: Okta.Sdk.IAssignRoleRequest
    - id: disableNotifications
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IRole}
    content.vb: Public Function AssignRoleAsync(assignRoleRequest As IAssignRoleRequest, disableNotifications As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IRole)
  overload: Okta.Sdk.Group.AssignRoleAsync*
  implements:
  - Okta.Sdk.IGroup.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: Group.AssignRoleAsync(IAssignRoleRequest, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Group.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: AssignRoleAsync(IAssignRoleRequest, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.Group.Users
  commentId: P:Okta.Sdk.Group.Users
  id: Users
  parent: Okta.Sdk.Group
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: Group.Users
  fullName: Okta.Sdk.Group.Users
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Group.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Users
    path: ../src/Okta.Sdk/Group.cs
    startLine: 15
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IAsyncEnumerable<IUser> Users { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IUser}
    content.vb: Public ReadOnly Property Users As IAsyncEnumerable(Of IUser)
  overload: Okta.Sdk.Group.Users*
  implements:
  - Okta.Sdk.IGroup.Users
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Group.DeleteAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Group.DeleteAsync(System.Threading.CancellationToken)
  id: DeleteAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.Group
  langs:
  - csharp
  - vb
  name: DeleteAsync(CancellationToken)
  nameWithType: Group.DeleteAsync(CancellationToken)
  fullName: Okta.Sdk.Group.DeleteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Group.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteAsync
    path: ../src/Okta.Sdk/Group.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task DeleteAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Group.DeleteAsync*
  implements:
  - Okta.Sdk.IGroup.DeleteAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Group.UpdateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Group.UpdateAsync(System.Threading.CancellationToken)
  id: UpdateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.Group
  langs:
  - csharp
  - vb
  name: UpdateAsync(CancellationToken)
  nameWithType: Group.UpdateAsync(CancellationToken)
  fullName: Okta.Sdk.Group.UpdateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Group.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateAsync
    path: ../src/Okta.Sdk/Group.cs
    startLine: 23
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IGroup> UpdateAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IGroup}
    content.vb: Public Function UpdateAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IGroup)
  overload: Okta.Sdk.Group.UpdateAsync*
  implements:
  - Okta.Sdk.IGroup.UpdateAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Group.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Group.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Threading.CancellationToken)
  id: AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Group
  langs:
  - csharp
  - vb
  name: AssignRoleAsync(IAssignRoleRequest, String, CancellationToken)
  nameWithType: Group.AssignRoleAsync(IAssignRoleRequest, String, CancellationToken)
  fullName: Okta.Sdk.Group.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Group.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AssignRoleAsync
    path: ../src/Okta.Sdk/Group.cs
    startLine: 27
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IRole> AssignRoleAsync(IAssignRoleRequest assignRoleRequest, string disableNotifications, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: assignRoleRequest
      type: Okta.Sdk.IAssignRoleRequest
    - id: disableNotifications
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IRole}
    content.vb: Public Function AssignRoleAsync(assignRoleRequest As IAssignRoleRequest, disableNotifications As String, cancellationToken As CancellationToken = Nothing) As Task(Of IRole)
  overload: Okta.Sdk.Group.AssignRoleAsync*
  implements:
  - Okta.Sdk.IGroup.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Okta.Sdk.Resource
  commentId: T:Okta.Sdk.Resource
  parent: Okta.Sdk
  name: Resource
  nameWithType: Resource
  fullName: Okta.Sdk.Resource
- uid: Okta.Sdk.IGroup
  commentId: T:Okta.Sdk.IGroup
  parent: Okta.Sdk
  name: IGroup
  nameWithType: IGroup
  fullName: Okta.Sdk.IGroup
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  parent: Okta.Sdk
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
- uid: Okta.Sdk.Resource.GetClient
  commentId: M:Okta.Sdk.Resource.GetClient
  parent: Okta.Sdk.Resource
  name: GetClient()
  nameWithType: Resource.GetClient()
  fullName: Okta.Sdk.Resource.GetClient()
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetClient
    name: GetClient
    nameWithType: Resource.GetClient
    fullName: Okta.Sdk.Resource.GetClient
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetClient
    name: GetClient
    nameWithType: Resource.GetClient
    fullName: Okta.Sdk.Resource.GetClient
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetData
  commentId: M:Okta.Sdk.Resource.GetData
  parent: Okta.Sdk.Resource
  name: GetData()
  nameWithType: Resource.GetData()
  fullName: Okta.Sdk.Resource.GetData()
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetData
    name: GetData
    nameWithType: Resource.GetData
    fullName: Okta.Sdk.Resource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetData
    name: GetData
    nameWithType: Resource.GetData
    fullName: Okta.Sdk.Resource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.Item(System.String)
  commentId: P:Okta.Sdk.Resource.Item(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: Item[String]
  nameWithType: Resource.Item[String]
  fullName: Okta.Sdk.Resource.Item[System.String]
  nameWithType.vb: Resource.Item(String)
  fullName.vb: Okta.Sdk.Resource.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.Item(System.String)
    name: Item
    nameWithType: Resource.Item
    fullName: Okta.Sdk.Resource.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Okta.Sdk.Resource.Item(System.String)
    name: Item
    nameWithType: Resource.Item
    fullName: Okta.Sdk.Resource.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: Resource.GetProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetProperty<T>(System.String)
  nameWithType.vb: Resource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: Resource.GetProperty<T>
    fullName: Okta.Sdk.Resource.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: Resource.GetProperty(Of T)
    fullName: Okta.Sdk.Resource.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: Resource.SetProperty(String, Object)
  fullName: Okta.Sdk.Resource.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: Resource.SetProperty
    fullName: Okta.Sdk.Resource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: Resource.SetProperty
    fullName: Okta.Sdk.Resource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetStringProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetStringProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetStringProperty(String)
  nameWithType: Resource.GetStringProperty(String)
  fullName: Okta.Sdk.Resource.GetStringProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetStringProperty(System.String)
    name: GetStringProperty
    nameWithType: Resource.GetStringProperty
    fullName: Okta.Sdk.Resource.GetStringProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetStringProperty(System.String)
    name: GetStringProperty
    nameWithType: Resource.GetStringProperty
    fullName: Okta.Sdk.Resource.GetStringProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetBooleanProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetBooleanProperty(String)
  nameWithType: Resource.GetBooleanProperty(String)
  fullName: Okta.Sdk.Resource.GetBooleanProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
    name: GetBooleanProperty
    nameWithType: Resource.GetBooleanProperty
    fullName: Okta.Sdk.Resource.GetBooleanProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
    name: GetBooleanProperty
    nameWithType: Resource.GetBooleanProperty
    fullName: Okta.Sdk.Resource.GetBooleanProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetIntegerProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetIntegerProperty(String)
  nameWithType: Resource.GetIntegerProperty(String)
  fullName: Okta.Sdk.Resource.GetIntegerProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
    name: GetIntegerProperty
    nameWithType: Resource.GetIntegerProperty
    fullName: Okta.Sdk.Resource.GetIntegerProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
    name: GetIntegerProperty
    nameWithType: Resource.GetIntegerProperty
    fullName: Okta.Sdk.Resource.GetIntegerProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetLongProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetLongProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetLongProperty(String)
  nameWithType: Resource.GetLongProperty(String)
  fullName: Okta.Sdk.Resource.GetLongProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetLongProperty(System.String)
    name: GetLongProperty
    nameWithType: Resource.GetLongProperty
    fullName: Okta.Sdk.Resource.GetLongProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetLongProperty(System.String)
    name: GetLongProperty
    nameWithType: Resource.GetLongProperty
    fullName: Okta.Sdk.Resource.GetLongProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetDoubleProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetDoubleProperty(String)
  nameWithType: Resource.GetDoubleProperty(String)
  fullName: Okta.Sdk.Resource.GetDoubleProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
    name: GetDoubleProperty
    nameWithType: Resource.GetDoubleProperty
    fullName: Okta.Sdk.Resource.GetDoubleProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
    name: GetDoubleProperty
    nameWithType: Resource.GetDoubleProperty
    fullName: Okta.Sdk.Resource.GetDoubleProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetDateTimeProperty(String)
  nameWithType: Resource.GetDateTimeProperty(String)
  fullName: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
    name: GetDateTimeProperty
    nameWithType: Resource.GetDateTimeProperty
    fullName: Okta.Sdk.Resource.GetDateTimeProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
    name: GetDateTimeProperty
    nameWithType: Resource.GetDateTimeProperty
    fullName: Okta.Sdk.Resource.GetDateTimeProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetArrayProperty<T>(String)
  nameWithType: Resource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetArrayProperty<T>(System.String)
  nameWithType.vb: Resource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
    name: GetArrayProperty<T>
    nameWithType: Resource.GetArrayProperty<T>
    fullName: Okta.Sdk.Resource.GetArrayProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
    name: GetArrayProperty(Of T)
    nameWithType: Resource.GetArrayProperty(Of T)
    fullName: Okta.Sdk.Resource.GetArrayProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetEnumProperty<TEnum>(String)
  nameWithType: Resource.GetEnumProperty<TEnum>(String)
  fullName: Okta.Sdk.Resource.GetEnumProperty<TEnum>(System.String)
  nameWithType.vb: Resource.GetEnumProperty(Of TEnum)(String)
  fullName.vb: Okta.Sdk.Resource.GetEnumProperty(Of TEnum)(System.String)
  name.vb: GetEnumProperty(Of TEnum)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
    name: GetEnumProperty<TEnum>
    nameWithType: Resource.GetEnumProperty<TEnum>
    fullName: Okta.Sdk.Resource.GetEnumProperty<TEnum>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
    name: GetEnumProperty(Of TEnum)
    nameWithType: Resource.GetEnumProperty(Of TEnum)
    fullName: Okta.Sdk.Resource.GetEnumProperty(Of TEnum)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetResourceProperty<T>(String)
  nameWithType: Resource.GetResourceProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetResourceProperty<T>(System.String)
  nameWithType.vb: Resource.GetResourceProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetResourceProperty(Of T)(System.String)
  name.vb: GetResourceProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
    name: GetResourceProperty<T>
    nameWithType: Resource.GetResourceProperty<T>
    fullName: Okta.Sdk.Resource.GetResourceProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
    name: GetResourceProperty(Of T)
    nameWithType: Resource.GetResourceProperty(Of T)
    fullName: Okta.Sdk.Resource.GetResourceProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.Group.Created*
  commentId: Overload:Okta.Sdk.Group.Created
  name: Created
  nameWithType: Group.Created
  fullName: Okta.Sdk.Group.Created
- uid: Okta.Sdk.IGroup.Created
  commentId: P:Okta.Sdk.IGroup.Created
  parent: Okta.Sdk.IGroup
  name: Created
  nameWithType: IGroup.Created
  fullName: Okta.Sdk.IGroup.Created
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Group.Id*
  commentId: Overload:Okta.Sdk.Group.Id
  name: Id
  nameWithType: Group.Id
  fullName: Okta.Sdk.Group.Id
- uid: Okta.Sdk.IGroup.Id
  commentId: P:Okta.Sdk.IGroup.Id
  parent: Okta.Sdk.IGroup
  name: Id
  nameWithType: IGroup.Id
  fullName: Okta.Sdk.IGroup.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.Group.LastMembershipUpdated*
  commentId: Overload:Okta.Sdk.Group.LastMembershipUpdated
  name: LastMembershipUpdated
  nameWithType: Group.LastMembershipUpdated
  fullName: Okta.Sdk.Group.LastMembershipUpdated
- uid: Okta.Sdk.IGroup.LastMembershipUpdated
  commentId: P:Okta.Sdk.IGroup.LastMembershipUpdated
  parent: Okta.Sdk.IGroup
  name: LastMembershipUpdated
  nameWithType: IGroup.LastMembershipUpdated
  fullName: Okta.Sdk.IGroup.LastMembershipUpdated
- uid: Okta.Sdk.Group.LastUpdated*
  commentId: Overload:Okta.Sdk.Group.LastUpdated
  name: LastUpdated
  nameWithType: Group.LastUpdated
  fullName: Okta.Sdk.Group.LastUpdated
- uid: Okta.Sdk.IGroup.LastUpdated
  commentId: P:Okta.Sdk.IGroup.LastUpdated
  parent: Okta.Sdk.IGroup
  name: LastUpdated
  nameWithType: IGroup.LastUpdated
  fullName: Okta.Sdk.IGroup.LastUpdated
- uid: Okta.Sdk.Group.ObjectClass*
  commentId: Overload:Okta.Sdk.Group.ObjectClass
  name: ObjectClass
  nameWithType: Group.ObjectClass
  fullName: Okta.Sdk.Group.ObjectClass
- uid: Okta.Sdk.IGroup.ObjectClass
  commentId: P:Okta.Sdk.IGroup.ObjectClass
  parent: Okta.Sdk.IGroup
  name: ObjectClass
  nameWithType: IGroup.ObjectClass
  fullName: Okta.Sdk.IGroup.ObjectClass
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.Group.Profile*
  commentId: Overload:Okta.Sdk.Group.Profile
  name: Profile
  nameWithType: Group.Profile
  fullName: Okta.Sdk.Group.Profile
- uid: Okta.Sdk.IGroup.Profile
  commentId: P:Okta.Sdk.IGroup.Profile
  parent: Okta.Sdk.IGroup
  name: Profile
  nameWithType: IGroup.Profile
  fullName: Okta.Sdk.IGroup.Profile
- uid: Okta.Sdk.IGroupProfile
  commentId: T:Okta.Sdk.IGroupProfile
  parent: Okta.Sdk
  name: IGroupProfile
  nameWithType: IGroupProfile
  fullName: Okta.Sdk.IGroupProfile
- uid: Okta.Sdk.Group.Type*
  commentId: Overload:Okta.Sdk.Group.Type
  name: Type
  nameWithType: Group.Type
  fullName: Okta.Sdk.Group.Type
- uid: Okta.Sdk.IGroup.Type
  commentId: P:Okta.Sdk.IGroup.Type
  parent: Okta.Sdk.IGroup
  name: Type
  nameWithType: IGroup.Type
  fullName: Okta.Sdk.IGroup.Type
- uid: Okta.Sdk.GroupType
  commentId: T:Okta.Sdk.GroupType
  parent: Okta.Sdk
  name: GroupType
  nameWithType: GroupType
  fullName: Okta.Sdk.GroupType
- uid: Okta.Sdk.Group.RemoveUserAsync*
  commentId: Overload:Okta.Sdk.Group.RemoveUserAsync
  name: RemoveUserAsync
  nameWithType: Group.RemoveUserAsync
  fullName: Okta.Sdk.Group.RemoveUserAsync
- uid: Okta.Sdk.IGroup.RemoveUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroup.RemoveUserAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroup
  isExternal: true
  name: RemoveUserAsync(String, CancellationToken)
  nameWithType: IGroup.RemoveUserAsync(String, CancellationToken)
  fullName: Okta.Sdk.IGroup.RemoveUserAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroup.RemoveUserAsync(System.String,System.Threading.CancellationToken)
    name: RemoveUserAsync
    nameWithType: IGroup.RemoveUserAsync
    fullName: Okta.Sdk.IGroup.RemoveUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroup.RemoveUserAsync(System.String,System.Threading.CancellationToken)
    name: RemoveUserAsync
    nameWithType: IGroup.RemoveUserAsync
    fullName: Okta.Sdk.IGroup.RemoveUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.Group.ListApplications*
  commentId: Overload:Okta.Sdk.Group.ListApplications
  name: ListApplications
  nameWithType: Group.ListApplications
  fullName: Okta.Sdk.Group.ListApplications
- uid: Okta.Sdk.IGroup.ListApplications(System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IGroup.ListApplications(System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IGroup
  isExternal: true
  name: ListApplications(String, Nullable<Int32>)
  nameWithType: IGroup.ListApplications(String, Nullable<Int32>)
  fullName: Okta.Sdk.IGroup.ListApplications(System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IGroup.ListApplications(String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IGroup.ListApplications(System.String, System.Nullable(Of System.Int32))
  name.vb: ListApplications(String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IGroup.ListApplications(System.String,System.Nullable{System.Int32})
    name: ListApplications
    nameWithType: IGroup.ListApplications
    fullName: Okta.Sdk.IGroup.ListApplications
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroup.ListApplications(System.String,System.Nullable{System.Int32})
    name: ListApplications
    nameWithType: IGroup.ListApplications
    fullName: Okta.Sdk.IGroup.ListApplications
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IApplication}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IApplication}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IApplication>
  nameWithType: ICollectionClient<IApplication>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IApplication>
  nameWithType.vb: ICollectionClient(Of IApplication)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IApplication)
  name.vb: ICollectionClient(Of IApplication)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IApplication
    name: IApplication
    nameWithType: IApplication
    fullName: Okta.Sdk.IApplication
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IApplication
    name: IApplication
    nameWithType: IApplication
    fullName: Okta.Sdk.IApplication
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Group.AssignRoleAsync*
  commentId: Overload:Okta.Sdk.Group.AssignRoleAsync
  name: AssignRoleAsync
  nameWithType: Group.AssignRoleAsync
  fullName: Okta.Sdk.Group.AssignRoleAsync
- uid: Okta.Sdk.IGroup.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroup.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroup
  isExternal: true
  name: AssignRoleAsync(IAssignRoleRequest, Nullable<Boolean>, CancellationToken)
  nameWithType: IGroup.AssignRoleAsync(IAssignRoleRequest, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IGroup.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IGroup.AssignRoleAsync(IAssignRoleRequest, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IGroup.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: AssignRoleAsync(IAssignRoleRequest, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroup.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: AssignRoleAsync
    nameWithType: IGroup.AssignRoleAsync
    fullName: Okta.Sdk.IGroup.AssignRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAssignRoleRequest
    name: IAssignRoleRequest
    nameWithType: IAssignRoleRequest
    fullName: Okta.Sdk.IAssignRoleRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroup.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: AssignRoleAsync
    nameWithType: IGroup.AssignRoleAsync
    fullName: Okta.Sdk.IGroup.AssignRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAssignRoleRequest
    name: IAssignRoleRequest
    nameWithType: IAssignRoleRequest
    fullName: Okta.Sdk.IAssignRoleRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAssignRoleRequest
  commentId: T:Okta.Sdk.IAssignRoleRequest
  parent: Okta.Sdk
  name: IAssignRoleRequest
  nameWithType: IAssignRoleRequest
  fullName: Okta.Sdk.IAssignRoleRequest
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IRole}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IRole}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IRole>
  nameWithType: Task<IRole>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IRole>
  nameWithType.vb: Task(Of IRole)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IRole)
  name.vb: Task(Of IRole)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Group.Users*
  commentId: Overload:Okta.Sdk.Group.Users
  name: Users
  nameWithType: Group.Users
  fullName: Okta.Sdk.Group.Users
- uid: Okta.Sdk.IGroup.Users
  commentId: P:Okta.Sdk.IGroup.Users
  parent: Okta.Sdk.IGroup
  name: Users
  nameWithType: IGroup.Users
  fullName: Okta.Sdk.IGroup.Users
- uid: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IUser}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IUser}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<IUser>
  nameWithType: IAsyncEnumerable<IUser>
  fullName: System.Collections.Generic.IAsyncEnumerable<Okta.Sdk.IUser>
  nameWithType.vb: IAsyncEnumerable(Of IUser)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Okta.Sdk.IUser)
  name.vb: IAsyncEnumerable(Of IUser)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Group.DeleteAsync*
  commentId: Overload:Okta.Sdk.Group.DeleteAsync
  name: DeleteAsync
  nameWithType: Group.DeleteAsync
  fullName: Okta.Sdk.Group.DeleteAsync
- uid: Okta.Sdk.IGroup.DeleteAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroup.DeleteAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroup
  isExternal: true
  name: DeleteAsync(CancellationToken)
  nameWithType: IGroup.DeleteAsync(CancellationToken)
  fullName: Okta.Sdk.IGroup.DeleteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroup.DeleteAsync(System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IGroup.DeleteAsync
    fullName: Okta.Sdk.IGroup.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroup.DeleteAsync(System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IGroup.DeleteAsync
    fullName: Okta.Sdk.IGroup.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Group.UpdateAsync*
  commentId: Overload:Okta.Sdk.Group.UpdateAsync
  name: UpdateAsync
  nameWithType: Group.UpdateAsync
  fullName: Okta.Sdk.Group.UpdateAsync
- uid: Okta.Sdk.IGroup.UpdateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroup.UpdateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroup
  isExternal: true
  name: UpdateAsync(CancellationToken)
  nameWithType: IGroup.UpdateAsync(CancellationToken)
  fullName: Okta.Sdk.IGroup.UpdateAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroup.UpdateAsync(System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: IGroup.UpdateAsync
    fullName: Okta.Sdk.IGroup.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroup.UpdateAsync(System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: IGroup.UpdateAsync
    fullName: Okta.Sdk.IGroup.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IGroup}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IGroup}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IGroup>
  nameWithType: Task<IGroup>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IGroup>
  nameWithType.vb: Task(Of IGroup)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IGroup)
  name.vb: Task(Of IGroup)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IGroup.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroup.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroup
  isExternal: true
  name: AssignRoleAsync(IAssignRoleRequest, String, CancellationToken)
  nameWithType: IGroup.AssignRoleAsync(IAssignRoleRequest, String, CancellationToken)
  fullName: Okta.Sdk.IGroup.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroup.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Threading.CancellationToken)
    name: AssignRoleAsync
    nameWithType: IGroup.AssignRoleAsync
    fullName: Okta.Sdk.IGroup.AssignRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAssignRoleRequest
    name: IAssignRoleRequest
    nameWithType: IAssignRoleRequest
    fullName: Okta.Sdk.IAssignRoleRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroup.AssignRoleAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Threading.CancellationToken)
    name: AssignRoleAsync
    nameWithType: IGroup.AssignRoleAsync
    fullName: Okta.Sdk.IGroup.AssignRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAssignRoleRequest
    name: IAssignRoleRequest
    nameWithType: IAssignRoleRequest
    fullName: Okta.Sdk.IAssignRoleRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
