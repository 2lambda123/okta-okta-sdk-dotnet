### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.HttpRequest
  commentId: T:Okta.Sdk.HttpRequest
  id: HttpRequest
  parent: Okta.Sdk
  children:
  - Okta.Sdk.HttpRequest.#ctor
  - Okta.Sdk.HttpRequest.ContentTransferEncoding
  - Okta.Sdk.HttpRequest.ContentType
  - Okta.Sdk.HttpRequest.GetBody
  - Okta.Sdk.HttpRequest.Headers
  - Okta.Sdk.HttpRequest.PathParameters
  - Okta.Sdk.HttpRequest.Payload
  - Okta.Sdk.HttpRequest.PayloadHandler
  - Okta.Sdk.HttpRequest.QueryParameters
  - Okta.Sdk.HttpRequest.SetHttpRequestMessageContent(System.Net.Http.HttpRequestMessage)
  - Okta.Sdk.HttpRequest.Uri
  - Okta.Sdk.HttpRequest.Verb
  langs:
  - csharp
  - vb
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Okta.Sdk.HttpRequest
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/HttpRequest.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: HttpRequest
    path: ../src/Okta.Sdk/HttpRequest.cs
    startLine: 16
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRepresents an HTTP request with a URI and optional payload and parameters.\n"
  example: []
  syntax:
    content: public class HttpRequest
    content.vb: Public Class HttpRequest
  inheritance:
  - System.Object
  derivedClasses:
  - Okta.Sdk.MultipartHttpRequest
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Okta.Sdk.HttpRequest.#ctor
  commentId: M:Okta.Sdk.HttpRequest.#ctor
  id: '#ctor'
  parent: Okta.Sdk.HttpRequest
  langs:
  - csharp
  - vb
  name: HttpRequest()
  nameWithType: HttpRequest.HttpRequest()
  fullName: Okta.Sdk.HttpRequest.HttpRequest()
  type: Constructor
  source:
    remote:
      path: src/Okta.Sdk/HttpRequest.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: .ctor
    path: ../src/Okta.Sdk/HttpRequest.cs
    startLine: 24
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nInitializes a new instance of the <xref href=\"Okta.Sdk.HttpRequest\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public HttpRequest()
    content.vb: Public Sub New
  overload: Okta.Sdk.HttpRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.HttpRequest.PayloadHandler
  commentId: P:Okta.Sdk.HttpRequest.PayloadHandler
  id: PayloadHandler
  parent: Okta.Sdk.HttpRequest
  langs:
  - csharp
  - vb
  name: PayloadHandler
  nameWithType: HttpRequest.PayloadHandler
  fullName: Okta.Sdk.HttpRequest.PayloadHandler
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/HttpRequest.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PayloadHandler
    path: ../src/Okta.Sdk/HttpRequest.cs
    startLine: 32
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the payload handler.\n"
  example: []
  syntax:
    content: protected IPayloadHandler PayloadHandler { get; }
    parameters: []
    return:
      type: Okta.Sdk.Internal.IPayloadHandler
    content.vb: Protected ReadOnly Property PayloadHandler As IPayloadHandler
  overload: Okta.Sdk.HttpRequest.PayloadHandler*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Okta.Sdk.HttpRequest.Verb
  commentId: P:Okta.Sdk.HttpRequest.Verb
  id: Verb
  parent: Okta.Sdk.HttpRequest
  langs:
  - csharp
  - vb
  name: Verb
  nameWithType: HttpRequest.Verb
  fullName: Okta.Sdk.HttpRequest.Verb
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/HttpRequest.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Verb
    path: ../src/Okta.Sdk/HttpRequest.cs
    startLine: 40
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the Http verb, also known as the request method.\n"
  example: []
  syntax:
    content: public HttpVerb Verb { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.HttpVerb
      description: "\nThe request verb.\n"
    content.vb: Public Property Verb As HttpVerb
  overload: Okta.Sdk.HttpRequest.Verb*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.HttpRequest.Uri
  commentId: P:Okta.Sdk.HttpRequest.Uri
  id: Uri
  parent: Okta.Sdk.HttpRequest
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: HttpRequest.Uri
  fullName: Okta.Sdk.HttpRequest.Uri
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/HttpRequest.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Uri
    path: ../src/Okta.Sdk/HttpRequest.cs
    startLine: 48
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the request URI.\n"
  example: []
  syntax:
    content: public string Uri { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe request URI.\n"
    content.vb: Public Property Uri As String
  overload: Okta.Sdk.HttpRequest.Uri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.HttpRequest.Payload
  commentId: P:Okta.Sdk.HttpRequest.Payload
  id: Payload
  parent: Okta.Sdk.HttpRequest
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: HttpRequest.Payload
  fullName: Okta.Sdk.HttpRequest.Payload
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/HttpRequest.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Payload
    path: ../src/Okta.Sdk/HttpRequest.cs
    startLine: 56
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the request payload.\n"
  example: []
  syntax:
    content: public object Payload { get; set; }
    parameters: []
    return:
      type: System.Object
      description: "\nThe request payload.\n"
    content.vb: Public Property Payload As Object
  overload: Okta.Sdk.HttpRequest.Payload*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.HttpRequest.ContentType
  commentId: P:Okta.Sdk.HttpRequest.ContentType
  id: ContentType
  parent: Okta.Sdk.HttpRequest
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: HttpRequest.ContentType
  fullName: Okta.Sdk.HttpRequest.ContentType
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/HttpRequest.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ContentType
    path: ../src/Okta.Sdk/HttpRequest.cs
    startLine: 61
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the content type.\n"
  example: []
  syntax:
    content: public string ContentType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContentType As String
  overload: Okta.Sdk.HttpRequest.ContentType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.HttpRequest.ContentTransferEncoding
  commentId: P:Okta.Sdk.HttpRequest.ContentTransferEncoding
  id: ContentTransferEncoding
  parent: Okta.Sdk.HttpRequest
  langs:
  - csharp
  - vb
  name: ContentTransferEncoding
  nameWithType: HttpRequest.ContentTransferEncoding
  fullName: Okta.Sdk.HttpRequest.ContentTransferEncoding
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/HttpRequest.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ContentTransferEncoding
    path: ../src/Okta.Sdk/HttpRequest.cs
    startLine: 74
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the content encoding.\n"
  example: []
  syntax:
    content: public string ContentTransferEncoding { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContentTransferEncoding As String
  overload: Okta.Sdk.HttpRequest.ContentTransferEncoding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.HttpRequest.QueryParameters
  commentId: P:Okta.Sdk.HttpRequest.QueryParameters
  id: QueryParameters
  parent: Okta.Sdk.HttpRequest
  langs:
  - csharp
  - vb
  name: QueryParameters
  nameWithType: HttpRequest.QueryParameters
  fullName: Okta.Sdk.HttpRequest.QueryParameters
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/HttpRequest.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: QueryParameters
    path: ../src/Okta.Sdk/HttpRequest.cs
    startLine: 86
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the set of query parameters to send with the request.\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<string, object>> QueryParameters { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "\nThe set of query parameters to send with the request.\n"
    content.vb: Public Property QueryParameters As IEnumerable(Of KeyValuePair(Of String, Object))
  overload: Okta.Sdk.HttpRequest.QueryParameters*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.HttpRequest.PathParameters
  commentId: P:Okta.Sdk.HttpRequest.PathParameters
  id: PathParameters
  parent: Okta.Sdk.HttpRequest
  langs:
  - csharp
  - vb
  name: PathParameters
  nameWithType: HttpRequest.PathParameters
  fullName: Okta.Sdk.HttpRequest.PathParameters
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/HttpRequest.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PathParameters
    path: ../src/Okta.Sdk/HttpRequest.cs
    startLine: 95
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the set of path parameters to apply to the request URI.\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<string, object>> PathParameters { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "\nThe set of path parameters to apply to the request URI.\n"
    content.vb: Public Property PathParameters As IEnumerable(Of KeyValuePair(Of String, Object))
  overload: Okta.Sdk.HttpRequest.PathParameters*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.HttpRequest.Headers
  commentId: P:Okta.Sdk.HttpRequest.Headers
  id: Headers
  parent: Okta.Sdk.HttpRequest
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: HttpRequest.Headers
  fullName: Okta.Sdk.HttpRequest.Headers
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/HttpRequest.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Headers
    path: ../src/Okta.Sdk/HttpRequest.cs
    startLine: 104
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the headers to send with the request.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Headers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "\nThe headers to send with the request.\n"
    content.vb: Public Property Headers As IDictionary(Of String, String)
  overload: Okta.Sdk.HttpRequest.Headers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.HttpRequest.GetBody
  commentId: M:Okta.Sdk.HttpRequest.GetBody
  id: GetBody
  parent: Okta.Sdk.HttpRequest
  langs:
  - csharp
  - vb
  name: GetBody()
  nameWithType: HttpRequest.GetBody()
  fullName: Okta.Sdk.HttpRequest.GetBody()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/HttpRequest.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetBody
    path: ../src/Okta.Sdk/HttpRequest.cs
    startLine: 111
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the request body.\n"
  example: []
  syntax:
    content: public string GetBody()
    return:
      type: System.String
      description: The HTTP request body.
    content.vb: Public Function GetBody As String
  overload: Okta.Sdk.HttpRequest.GetBody*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.HttpRequest.SetHttpRequestMessageContent(System.Net.Http.HttpRequestMessage)
  commentId: M:Okta.Sdk.HttpRequest.SetHttpRequestMessageContent(System.Net.Http.HttpRequestMessage)
  id: SetHttpRequestMessageContent(System.Net.Http.HttpRequestMessage)
  parent: Okta.Sdk.HttpRequest
  langs:
  - csharp
  - vb
  name: SetHttpRequestMessageContent(HttpRequestMessage)
  nameWithType: HttpRequest.SetHttpRequestMessageContent(HttpRequestMessage)
  fullName: Okta.Sdk.HttpRequest.SetHttpRequestMessageContent(System.Net.Http.HttpRequestMessage)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/HttpRequest.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: SetHttpRequestMessageContent
    path: ../src/Okta.Sdk/HttpRequest.cs
    startLine: 128
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nSets the content of the specified message.\n"
  example: []
  syntax:
    content: public virtual void SetHttpRequestMessageContent(HttpRequestMessage httpRequestMessage)
    parameters:
    - id: httpRequestMessage
      type: System.Net.Http.HttpRequestMessage
      description: The message whose content is set.
    content.vb: Public Overridable Sub SetHttpRequestMessageContent(httpRequestMessage As HttpRequestMessage)
  overload: Okta.Sdk.HttpRequest.SetHttpRequestMessageContent*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.HttpRequest
  commentId: T:Okta.Sdk.HttpRequest
  parent: Okta.Sdk
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Okta.Sdk.HttpRequest
- uid: Okta.Sdk.HttpRequest.#ctor*
  commentId: Overload:Okta.Sdk.HttpRequest.#ctor
  name: HttpRequest
  nameWithType: HttpRequest.HttpRequest
  fullName: Okta.Sdk.HttpRequest.HttpRequest
- uid: Okta.Sdk.HttpRequest.PayloadHandler*
  commentId: Overload:Okta.Sdk.HttpRequest.PayloadHandler
  name: PayloadHandler
  nameWithType: HttpRequest.PayloadHandler
  fullName: Okta.Sdk.HttpRequest.PayloadHandler
- uid: Okta.Sdk.Internal.IPayloadHandler
  commentId: T:Okta.Sdk.Internal.IPayloadHandler
  parent: Okta.Sdk.Internal
  name: IPayloadHandler
  nameWithType: IPayloadHandler
  fullName: Okta.Sdk.Internal.IPayloadHandler
- uid: Okta.Sdk.Internal
  commentId: N:Okta.Sdk.Internal
  name: Okta.Sdk.Internal
  nameWithType: Okta.Sdk.Internal
  fullName: Okta.Sdk.Internal
- uid: Okta.Sdk.HttpRequest.Verb*
  commentId: Overload:Okta.Sdk.HttpRequest.Verb
  name: Verb
  nameWithType: HttpRequest.Verb
  fullName: Okta.Sdk.HttpRequest.Verb
- uid: Okta.Sdk.HttpVerb
  commentId: T:Okta.Sdk.HttpVerb
  parent: Okta.Sdk
  name: HttpVerb
  nameWithType: HttpVerb
  fullName: Okta.Sdk.HttpVerb
- uid: Okta.Sdk.HttpRequest.Uri*
  commentId: Overload:Okta.Sdk.HttpRequest.Uri
  name: Uri
  nameWithType: HttpRequest.Uri
  fullName: Okta.Sdk.HttpRequest.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.HttpRequest.Payload*
  commentId: Overload:Okta.Sdk.HttpRequest.Payload
  name: Payload
  nameWithType: HttpRequest.Payload
  fullName: Okta.Sdk.HttpRequest.Payload
- uid: Okta.Sdk.HttpRequest.ContentType*
  commentId: Overload:Okta.Sdk.HttpRequest.ContentType
  name: ContentType
  nameWithType: HttpRequest.ContentType
  fullName: Okta.Sdk.HttpRequest.ContentType
- uid: Okta.Sdk.HttpRequest.ContentTransferEncoding*
  commentId: Overload:Okta.Sdk.HttpRequest.ContentTransferEncoding
  name: ContentTransferEncoding
  nameWithType: HttpRequest.ContentTransferEncoding
  fullName: Okta.Sdk.HttpRequest.ContentTransferEncoding
- uid: Okta.Sdk.HttpRequest.QueryParameters*
  commentId: Overload:Okta.Sdk.HttpRequest.QueryParameters
  name: QueryParameters
  nameWithType: HttpRequest.QueryParameters
  fullName: Okta.Sdk.HttpRequest.QueryParameters
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, Object>>
  nameWithType: IEnumerable<KeyValuePair<String, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: IEnumerable(Of KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.HttpRequest.PathParameters*
  commentId: Overload:Okta.Sdk.HttpRequest.PathParameters
  name: PathParameters
  nameWithType: HttpRequest.PathParameters
  fullName: Okta.Sdk.HttpRequest.PathParameters
- uid: Okta.Sdk.HttpRequest.Headers*
  commentId: Overload:Okta.Sdk.HttpRequest.Headers
  name: Headers
  nameWithType: HttpRequest.Headers
  fullName: Okta.Sdk.HttpRequest.Headers
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.HttpRequest.GetBody*
  commentId: Overload:Okta.Sdk.HttpRequest.GetBody
  name: GetBody
  nameWithType: HttpRequest.GetBody
  fullName: Okta.Sdk.HttpRequest.GetBody
- uid: Okta.Sdk.HttpRequest.SetHttpRequestMessageContent*
  commentId: Overload:Okta.Sdk.HttpRequest.SetHttpRequestMessageContent
  name: SetHttpRequestMessageContent
  nameWithType: HttpRequest.SetHttpRequestMessageContent
  fullName: Okta.Sdk.HttpRequest.SetHttpRequestMessageContent
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
