### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.GroupsClient
  commentId: T:Okta.Sdk.GroupsClient
  id: GroupsClient
  parent: Okta.Sdk
  children:
  - Okta.Sdk.GroupsClient.ActivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.AddUserToGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.AssignRoleToGroupAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.CreateGroupAsync(Okta.Sdk.CreateGroupOptions,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.CreateGroupAsync(Okta.Sdk.IGroup,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.CreateGroupRuleAsync(Okta.Sdk.IGroupRule,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.DeactivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.DeleteGroupAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.DeleteGroupRuleAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.DeleteGroupRuleAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.GetAsyncEnumerator(System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.GetGroupAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.GetGroupRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.GetRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.GroupsClient.ListAssignedApplicationsForGroup(System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.GroupsClient.ListGroupAssignedRoles(System.String,System.String)
  - Okta.Sdk.GroupsClient.ListGroupRules(System.Nullable{System.Int32},System.String,System.String,System.String)
  - Okta.Sdk.GroupsClient.ListGroups(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
  - Okta.Sdk.GroupsClient.ListGroupTargetsForGroupRole(System.String,System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.GroupsClient.ListGroupUsers(System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.GroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.RemoveRoleFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.RemoveUserFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.UpdateGroupAsync(Okta.Sdk.IGroup,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.GroupsClient.UpdateGroupRuleAsync(Okta.Sdk.IGroupRule,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: GroupsClient
  nameWithType: GroupsClient
  fullName: Okta.Sdk.GroupsClient
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/GroupsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GroupsClient
    path: ../src/Okta.Sdk/GroupsClient.cs
    startLine: 14
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nProvides methods that manipulate Group resources, by communicating with the Okta Groups API.\n"
  example: []
  syntax:
    content: 'public sealed class GroupsClient : OktaClient, IOktaClient, IGroupsClient, IAsyncEnumerable<IGroup>'
    content.vb: >-
      Public NotInheritable Class GroupsClient

          Inherits OktaClient

          Implements IOktaClient, IGroupsClient, IAsyncEnumerable(Of IGroup)
  inheritance:
  - System.Object
  - Okta.Sdk.OktaClient
  implements:
  - Okta.Sdk.IOktaClient
  - Okta.Sdk.IGroupsClient
  - System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IGroup}
  inheritedMembers:
  - Okta.Sdk.OktaClient.Configuration
  - Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  - Okta.Sdk.OktaClient.Brands
  - Okta.Sdk.OktaClient.GroupSchemas
  - Okta.Sdk.OktaClient.Authenticators
  - Okta.Sdk.OktaClient.Orgs
  - Okta.Sdk.OktaClient.UserTypes
  - Okta.Sdk.OktaClient.Users
  - Okta.Sdk.OktaClient.UserFactors
  - Okta.Sdk.OktaClient.Groups
  - Okta.Sdk.OktaClient.Applications
  - Okta.Sdk.OktaClient.Sessions
  - Okta.Sdk.OktaClient.AuthorizationServers
  - Okta.Sdk.OktaClient.Logs
  - Okta.Sdk.OktaClient.Policies
  - Okta.Sdk.OktaClient.EventHooks
  - Okta.Sdk.OktaClient.InlineHooks
  - Okta.Sdk.OktaClient.LinkedObjects
  - Okta.Sdk.OktaClient.TrustedOrigins
  - Okta.Sdk.OktaClient.Features
  - Okta.Sdk.OktaClient.Templates
  - Okta.Sdk.OktaClient.NetworkZones
  - Okta.Sdk.OktaClient.Domains
  - Okta.Sdk.OktaClient.ProfileMappings
  - Okta.Sdk.OktaClient.ThreatInsights
  - Okta.Sdk.OktaClient.IdentityProviders
  - Okta.Sdk.OktaClient.UserSchemas
  - Okta.Sdk.OktaClient.Subscriptions
  - Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
  - Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.GetCollection``1(System.String)
  - Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  - Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Okta.Sdk.GroupsClient.ListGroups(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
  commentId: M:Okta.Sdk.GroupsClient.ListGroups(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
  id: ListGroups(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: ListGroups(String, String, String, Nullable<Int32>, String)
  nameWithType: GroupsClient.ListGroups(String, String, String, Nullable<Int32>, String)
  fullName: Okta.Sdk.GroupsClient.ListGroups(System.String, System.String, System.String, System.Nullable<System.Int32>, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListGroups
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 31
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IGroup> ListGroups(string q = null, string search = null, string after = null, int? limit = 10000, string expand = null)
    parameters:
    - id: q
      type: System.String
    - id: search
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    - id: expand
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IGroup}
    content.vb: Public Function ListGroups(q As String = Nothing, search As String = Nothing, after As String = Nothing, limit As Integer? = 10000, expand As String = Nothing) As ICollectionClient(Of IGroup)
  overload: Okta.Sdk.GroupsClient.ListGroups*
  implements:
  - Okta.Sdk.IGroupsClient.ListGroups(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
  nameWithType.vb: GroupsClient.ListGroups(String, String, String, Nullable(Of Int32), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.GroupsClient.ListGroups(System.String, System.String, System.String, System.Nullable(Of System.Int32), System.String)
  name.vb: ListGroups(String, String, String, Nullable(Of Int32), String)
- uid: Okta.Sdk.GroupsClient.CreateGroupAsync(Okta.Sdk.IGroup,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.CreateGroupAsync(Okta.Sdk.IGroup,System.Threading.CancellationToken)
  id: CreateGroupAsync(Okta.Sdk.IGroup,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: CreateGroupAsync(IGroup, CancellationToken)
  nameWithType: GroupsClient.CreateGroupAsync(IGroup, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.CreateGroupAsync(Okta.Sdk.IGroup, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateGroupAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 48
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IGroup> CreateGroupAsync(IGroup group, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: group
      type: Okta.Sdk.IGroup
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IGroup}
    content.vb: Public Function CreateGroupAsync(group As IGroup, cancellationToken As CancellationToken = Nothing) As Task(Of IGroup)
  overload: Okta.Sdk.GroupsClient.CreateGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.CreateGroupAsync(Okta.Sdk.IGroup,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.ListGroupRules(System.Nullable{System.Int32},System.String,System.String,System.String)
  commentId: M:Okta.Sdk.GroupsClient.ListGroupRules(System.Nullable{System.Int32},System.String,System.String,System.String)
  id: ListGroupRules(System.Nullable{System.Int32},System.String,System.String,System.String)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: ListGroupRules(Nullable<Int32>, String, String, String)
  nameWithType: GroupsClient.ListGroupRules(Nullable<Int32>, String, String, String)
  fullName: Okta.Sdk.GroupsClient.ListGroupRules(System.Nullable<System.Int32>, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListGroupRules
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 57
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IGroupRule> ListGroupRules(int? limit = 50, string after = null, string search = null, string expand = null)
    parameters:
    - id: limit
      type: System.Nullable{System.Int32}
    - id: after
      type: System.String
    - id: search
      type: System.String
    - id: expand
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IGroupRule}
    content.vb: Public Function ListGroupRules(limit As Integer? = 50, after As String = Nothing, search As String = Nothing, expand As String = Nothing) As ICollectionClient(Of IGroupRule)
  overload: Okta.Sdk.GroupsClient.ListGroupRules*
  implements:
  - Okta.Sdk.IGroupsClient.ListGroupRules(System.Nullable{System.Int32},System.String,System.String,System.String)
  nameWithType.vb: GroupsClient.ListGroupRules(Nullable(Of Int32), String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.GroupsClient.ListGroupRules(System.Nullable(Of System.Int32), System.String, System.String, System.String)
  name.vb: ListGroupRules(Nullable(Of Int32), String, String, String)
- uid: Okta.Sdk.GroupsClient.CreateGroupRuleAsync(Okta.Sdk.IGroupRule,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.CreateGroupRuleAsync(Okta.Sdk.IGroupRule,System.Threading.CancellationToken)
  id: CreateGroupRuleAsync(Okta.Sdk.IGroupRule,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: CreateGroupRuleAsync(IGroupRule, CancellationToken)
  nameWithType: GroupsClient.CreateGroupRuleAsync(IGroupRule, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.CreateGroupRuleAsync(Okta.Sdk.IGroupRule, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateGroupRuleAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 73
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IGroupRule> CreateGroupRuleAsync(IGroupRule groupRule, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupRule
      type: Okta.Sdk.IGroupRule
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IGroupRule}
    content.vb: Public Function CreateGroupRuleAsync(groupRule As IGroupRule, cancellationToken As CancellationToken = Nothing) As Task(Of IGroupRule)
  overload: Okta.Sdk.GroupsClient.CreateGroupRuleAsync*
  implements:
  - Okta.Sdk.IGroupsClient.CreateGroupRuleAsync(Okta.Sdk.IGroupRule,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.DeleteGroupRuleAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.DeleteGroupRuleAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: DeleteGroupRuleAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: DeleteGroupRuleAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: GroupsClient.DeleteGroupRuleAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.DeleteGroupRuleAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteGroupRuleAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 82
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task DeleteGroupRuleAsync(string ruleId, bool? removeUsers = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: ruleId
      type: System.String
    - id: removeUsers
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteGroupRuleAsync(ruleId As String, removeUsers As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.GroupsClient.DeleteGroupRuleAsync*
  implements:
  - Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: GroupsClient.DeleteGroupRuleAsync(String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.GroupsClient.DeleteGroupRuleAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: DeleteGroupRuleAsync(String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.GroupsClient.GetGroupRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.GetGroupRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetGroupRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: GetGroupRuleAsync(String, String, CancellationToken)
  nameWithType: GroupsClient.GetGroupRuleAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.GetGroupRuleAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetGroupRuleAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 99
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IGroupRule> GetGroupRuleAsync(string ruleId, string expand = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: ruleId
      type: System.String
    - id: expand
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IGroupRule}
    content.vb: Public Function GetGroupRuleAsync(ruleId As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IGroupRule)
  overload: Okta.Sdk.GroupsClient.GetGroupRuleAsync*
  implements:
  - Okta.Sdk.IGroupsClient.GetGroupRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.UpdateGroupRuleAsync(Okta.Sdk.IGroupRule,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.UpdateGroupRuleAsync(Okta.Sdk.IGroupRule,System.String,System.Threading.CancellationToken)
  id: UpdateGroupRuleAsync(Okta.Sdk.IGroupRule,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: UpdateGroupRuleAsync(IGroupRule, String, CancellationToken)
  nameWithType: GroupsClient.UpdateGroupRuleAsync(IGroupRule, String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.UpdateGroupRuleAsync(Okta.Sdk.IGroupRule, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateGroupRuleAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 116
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IGroupRule> UpdateGroupRuleAsync(IGroupRule groupRule, string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupRule
      type: Okta.Sdk.IGroupRule
    - id: ruleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IGroupRule}
    content.vb: Public Function UpdateGroupRuleAsync(groupRule As IGroupRule, ruleId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IGroupRule)
  overload: Okta.Sdk.GroupsClient.UpdateGroupRuleAsync*
  implements:
  - Okta.Sdk.IGroupsClient.UpdateGroupRuleAsync(Okta.Sdk.IGroupRule,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.ActivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.ActivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
  id: ActivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: ActivateGroupRuleAsync(String, CancellationToken)
  nameWithType: GroupsClient.ActivateGroupRuleAsync(String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.ActivateGroupRuleAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateGroupRuleAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 129
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task ActivateGroupRuleAsync(string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: ruleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ActivateGroupRuleAsync(ruleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.GroupsClient.ActivateGroupRuleAsync*
  implements:
  - Okta.Sdk.IGroupsClient.ActivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.DeactivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.DeactivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
  id: DeactivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: DeactivateGroupRuleAsync(String, CancellationToken)
  nameWithType: GroupsClient.DeactivateGroupRuleAsync(String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.DeactivateGroupRuleAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateGroupRuleAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 142
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task DeactivateGroupRuleAsync(string ruleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: ruleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeactivateGroupRuleAsync(ruleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.GroupsClient.DeactivateGroupRuleAsync*
  implements:
  - Okta.Sdk.IGroupsClient.DeactivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.DeleteGroupAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.DeleteGroupAsync(System.String,System.Threading.CancellationToken)
  id: DeleteGroupAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: DeleteGroupAsync(String, CancellationToken)
  nameWithType: GroupsClient.DeleteGroupAsync(String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.DeleteGroupAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteGroupAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 155
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task DeleteGroupAsync(string groupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteGroupAsync(groupId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.GroupsClient.DeleteGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.DeleteGroupAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.GetGroupAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.GetGroupAsync(System.String,System.Threading.CancellationToken)
  id: GetGroupAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: GetGroupAsync(String, CancellationToken)
  nameWithType: GroupsClient.GetGroupAsync(String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.GetGroupAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetGroupAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 168
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IGroup> GetGroupAsync(string groupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IGroup}
    content.vb: Public Function GetGroupAsync(groupId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IGroup)
  overload: Okta.Sdk.GroupsClient.GetGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.GetGroupAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.UpdateGroupAsync(Okta.Sdk.IGroup,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.UpdateGroupAsync(Okta.Sdk.IGroup,System.String,System.Threading.CancellationToken)
  id: UpdateGroupAsync(Okta.Sdk.IGroup,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: UpdateGroupAsync(IGroup, String, CancellationToken)
  nameWithType: GroupsClient.UpdateGroupAsync(IGroup, String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.UpdateGroupAsync(Okta.Sdk.IGroup, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateGroupAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 181
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IGroup> UpdateGroupAsync(IGroup group, string groupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: group
      type: Okta.Sdk.IGroup
    - id: groupId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IGroup}
    content.vb: Public Function UpdateGroupAsync(group As IGroup, groupId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IGroup)
  overload: Okta.Sdk.GroupsClient.UpdateGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.UpdateGroupAsync(Okta.Sdk.IGroup,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.ListAssignedApplicationsForGroup(System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.GroupsClient.ListAssignedApplicationsForGroup(System.String,System.String,System.Nullable{System.Int32})
  id: ListAssignedApplicationsForGroup(System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: ListAssignedApplicationsForGroup(String, String, Nullable<Int32>)
  nameWithType: GroupsClient.ListAssignedApplicationsForGroup(String, String, Nullable<Int32>)
  fullName: Okta.Sdk.GroupsClient.ListAssignedApplicationsForGroup(System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListAssignedApplicationsForGroup
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 194
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IApplication> ListAssignedApplicationsForGroup(string groupId, string after = null, int? limit = 20)
    parameters:
    - id: groupId
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IApplication}
    content.vb: Public Function ListAssignedApplicationsForGroup(groupId As String, after As String = Nothing, limit As Integer? = 20) As ICollectionClient(Of IApplication)
  overload: Okta.Sdk.GroupsClient.ListAssignedApplicationsForGroup*
  implements:
  - Okta.Sdk.IGroupsClient.ListAssignedApplicationsForGroup(System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: GroupsClient.ListAssignedApplicationsForGroup(String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.GroupsClient.ListAssignedApplicationsForGroup(System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListAssignedApplicationsForGroup(String, String, Nullable(Of Int32))
- uid: Okta.Sdk.GroupsClient.ListGroupAssignedRoles(System.String,System.String)
  commentId: M:Okta.Sdk.GroupsClient.ListGroupAssignedRoles(System.String,System.String)
  id: ListGroupAssignedRoles(System.String,System.String)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: ListGroupAssignedRoles(String, String)
  nameWithType: GroupsClient.ListGroupAssignedRoles(String, String)
  fullName: Okta.Sdk.GroupsClient.ListGroupAssignedRoles(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListGroupAssignedRoles
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 212
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IRole> ListGroupAssignedRoles(string groupId, string expand = null)
    parameters:
    - id: groupId
      type: System.String
    - id: expand
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IRole}
    content.vb: Public Function ListGroupAssignedRoles(groupId As String, expand As String = Nothing) As ICollectionClient(Of IRole)
  overload: Okta.Sdk.GroupsClient.ListGroupAssignedRoles*
  implements:
  - Okta.Sdk.IGroupsClient.ListGroupAssignedRoles(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.AssignRoleToGroupAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.AssignRoleToGroupAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: AssignRoleToGroupAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: AssignRoleToGroupAsync(IAssignRoleRequest, String, Nullable<Boolean>, CancellationToken)
  nameWithType: GroupsClient.AssignRoleToGroupAsync(IAssignRoleRequest, String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.AssignRoleToGroupAsync(Okta.Sdk.IAssignRoleRequest, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AssignRoleToGroupAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 229
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IRole> AssignRoleToGroupAsync(IAssignRoleRequest assignRoleRequest, string groupId, bool? disableNotifications = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: assignRoleRequest
      type: Okta.Sdk.IAssignRoleRequest
    - id: groupId
      type: System.String
    - id: disableNotifications
      type: System.Nullable{System.Boolean}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IRole}
    content.vb: Public Function AssignRoleToGroupAsync(assignRoleRequest As IAssignRoleRequest, groupId As String, disableNotifications As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IRole)
  overload: Okta.Sdk.GroupsClient.AssignRoleToGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.AssignRoleToGroupAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: GroupsClient.AssignRoleToGroupAsync(IAssignRoleRequest, String, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.GroupsClient.AssignRoleToGroupAsync(Okta.Sdk.IAssignRoleRequest, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: AssignRoleToGroupAsync(IAssignRoleRequest, String, Nullable(Of Boolean), CancellationToken)
- uid: Okta.Sdk.GroupsClient.RemoveRoleFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.RemoveRoleFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RemoveRoleFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: RemoveRoleFromGroupAsync(String, String, CancellationToken)
  nameWithType: GroupsClient.RemoveRoleFromGroupAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.RemoveRoleFromGroupAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveRoleFromGroupAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 246
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RemoveRoleFromGroupAsync(string groupId, string roleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: roleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveRoleFromGroupAsync(groupId As String, roleId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.GroupsClient.RemoveRoleFromGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.RemoveRoleFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.GetRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.GetRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: GetRoleAsync(String, String, CancellationToken)
  nameWithType: GroupsClient.GetRoleAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.GetRoleAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetRoleAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 260
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task<IRole> GetRoleAsync(string groupId, string roleId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: roleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IRole}
    content.vb: Public Function GetRoleAsync(groupId As String, roleId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IRole)
  overload: Okta.Sdk.GroupsClient.GetRoleAsync*
  implements:
  - Okta.Sdk.IGroupsClient.GetRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.GroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListApplicationTargetsForApplicationAdministratorRoleForGroup(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: ListApplicationTargetsForApplicationAdministratorRoleForGroup(String, String, String, Nullable<Int32>)
  nameWithType: GroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.GroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListApplicationTargetsForApplicationAdministratorRoleForGroup
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 274
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<ICatalogApplication> ListApplicationTargetsForApplicationAdministratorRoleForGroup(string groupId, string roleId, string after = null, int? limit = 20)
    parameters:
    - id: groupId
      type: System.String
    - id: roleId
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.ICatalogApplication}
    content.vb: Public Function ListApplicationTargetsForApplicationAdministratorRoleForGroup(groupId As String, roleId As String, after As String = Nothing, limit As Integer? = 20) As ICollectionClient(Of ICatalogApplication)
  overload: Okta.Sdk.GroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup*
  implements:
  - Okta.Sdk.IGroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(System.String,System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: GroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(String, String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.GroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListApplicationTargetsForApplicationAdministratorRoleForGroup(String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.GroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(String, String, String, CancellationToken)
  nameWithType: GroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 293
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(string groupId, string roleId, string appName, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: roleId
      type: System.String
    - id: appName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(groupId As String, roleId As String, appName As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.GroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: AddApplicationTargetToAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: AddApplicationTargetToAdminRoleGivenToGroupAsync(String, String, String, CancellationToken)
  nameWithType: GroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddApplicationTargetToAdminRoleGivenToGroupAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 308
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task AddApplicationTargetToAdminRoleGivenToGroupAsync(string groupId, string roleId, string appName, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: roleId
      type: System.String
    - id: appName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddApplicationTargetToAdminRoleGivenToGroupAsync(groupId As String, roleId As String, appName As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.GroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(String, String, String, String, CancellationToken)
  nameWithType: GroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(String, String, String, String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 323
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(string groupId, string roleId, string appName, string applicationId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: roleId
      type: System.String
    - id: appName
      type: System.String
    - id: applicationId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(groupId As String, roleId As String, appName As String, applicationId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.GroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(String, String, String, String, CancellationToken)
  nameWithType: GroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(String, String, String, String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 339
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(string groupId, string roleId, string appName, string applicationId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: roleId
      type: System.String
    - id: appName
      type: System.String
    - id: applicationId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(groupId As String, roleId As String, appName As String, applicationId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.GroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.ListGroupTargetsForGroupRole(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.GroupsClient.ListGroupTargetsForGroupRole(System.String,System.String,System.String,System.Nullable{System.Int32})
  id: ListGroupTargetsForGroupRole(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: ListGroupTargetsForGroupRole(String, String, String, Nullable<Int32>)
  nameWithType: GroupsClient.ListGroupTargetsForGroupRole(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.GroupsClient.ListGroupTargetsForGroupRole(System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListGroupTargetsForGroupRole
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 355
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IGroup> ListGroupTargetsForGroupRole(string groupId, string roleId, string after = null, int? limit = 20)
    parameters:
    - id: groupId
      type: System.String
    - id: roleId
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IGroup}
    content.vb: Public Function ListGroupTargetsForGroupRole(groupId As String, roleId As String, after As String = Nothing, limit As Integer? = 20) As ICollectionClient(Of IGroup)
  overload: Okta.Sdk.GroupsClient.ListGroupTargetsForGroupRole*
  implements:
  - Okta.Sdk.IGroupsClient.ListGroupTargetsForGroupRole(System.String,System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: GroupsClient.ListGroupTargetsForGroupRole(String, String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.GroupsClient.ListGroupTargetsForGroupRole(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListGroupTargetsForGroupRole(String, String, String, Nullable(Of Int32))
- uid: Okta.Sdk.GroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(String, String, String, CancellationToken)
  nameWithType: GroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 374
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(string groupId, string roleId, string targetGroupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: roleId
      type: System.String
    - id: targetGroupId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(groupId As String, roleId As String, targetGroupId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.GroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: AddGroupTargetToGroupAdministratorRoleForGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: AddGroupTargetToGroupAdministratorRoleForGroupAsync(String, String, String, CancellationToken)
  nameWithType: GroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddGroupTargetToGroupAdministratorRoleForGroupAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 389
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task AddGroupTargetToGroupAdministratorRoleForGroupAsync(string groupId, string roleId, string targetGroupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: roleId
      type: System.String
    - id: targetGroupId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddGroupTargetToGroupAdministratorRoleForGroupAsync(groupId As String, roleId As String, targetGroupId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.GroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.ListGroupUsers(System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.GroupsClient.ListGroupUsers(System.String,System.String,System.Nullable{System.Int32})
  id: ListGroupUsers(System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: ListGroupUsers(String, String, Nullable<Int32>)
  nameWithType: GroupsClient.ListGroupUsers(String, String, Nullable<Int32>)
  fullName: Okta.Sdk.GroupsClient.ListGroupUsers(System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListGroupUsers
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 404
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IUser> ListGroupUsers(string groupId, string after = null, int? limit = 1000)
    parameters:
    - id: groupId
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IUser}
    content.vb: Public Function ListGroupUsers(groupId As String, after As String = Nothing, limit As Integer? = 1000) As ICollectionClient(Of IUser)
  overload: Okta.Sdk.GroupsClient.ListGroupUsers*
  implements:
  - Okta.Sdk.IGroupsClient.ListGroupUsers(System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: GroupsClient.ListGroupUsers(String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.GroupsClient.ListGroupUsers(System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListGroupUsers(String, String, Nullable(Of Int32))
- uid: Okta.Sdk.GroupsClient.RemoveUserFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.RemoveUserFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RemoveUserFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: RemoveUserFromGroupAsync(String, String, CancellationToken)
  nameWithType: GroupsClient.RemoveUserFromGroupAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.RemoveUserFromGroupAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RemoveUserFromGroupAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 422
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task RemoveUserFromGroupAsync(string groupId, string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemoveUserFromGroupAsync(groupId As String, userId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.GroupsClient.RemoveUserFromGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.RemoveUserFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.AddUserToGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.AddUserToGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  id: AddUserToGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: AddUserToGroupAsync(String, String, CancellationToken)
  nameWithType: GroupsClient.AddUserToGroupAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.AddUserToGroupAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/GroupsClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AddUserToGroupAsync
    path: ../src/Okta.Sdk/Generated/GroupsClient.Generated.cs
    startLine: 436
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public async Task AddUserToGroupAsync(string groupId, string userId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddUserToGroupAsync(groupId As String, userId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.GroupsClient.AddUserToGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.AddUserToGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.CreateGroupAsync(Okta.Sdk.CreateGroupOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.CreateGroupAsync(Okta.Sdk.CreateGroupOptions,System.Threading.CancellationToken)
  id: CreateGroupAsync(Okta.Sdk.CreateGroupOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: CreateGroupAsync(CreateGroupOptions, CancellationToken)
  nameWithType: GroupsClient.CreateGroupAsync(CreateGroupOptions, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.CreateGroupAsync(Okta.Sdk.CreateGroupOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/GroupsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateGroupAsync
    path: ../src/Okta.Sdk/GroupsClient.cs
    startLine: 17
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IGroup> CreateGroupAsync(CreateGroupOptions options, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: options
      type: Okta.Sdk.CreateGroupOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IGroup}
    content.vb: Public Function CreateGroupAsync(options As CreateGroupOptions, cancellationToken As CancellationToken = Nothing) As Task(Of IGroup)
  overload: Okta.Sdk.GroupsClient.CreateGroupAsync*
  implements:
  - Okta.Sdk.IGroupsClient.CreateGroupAsync(Okta.Sdk.CreateGroupOptions,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.DeleteGroupRuleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.DeleteGroupRuleAsync(System.String,System.Threading.CancellationToken)
  id: DeleteGroupRuleAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: DeleteGroupRuleAsync(String, CancellationToken)
  nameWithType: GroupsClient.DeleteGroupRuleAsync(String, CancellationToken)
  fullName: Okta.Sdk.GroupsClient.DeleteGroupRuleAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/GroupsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeleteGroupRuleAsync
    path: ../src/Okta.Sdk/GroupsClient.cs
    startLine: 32
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task DeleteGroupRuleAsync(string ruleId, CancellationToken cancellationToken)
    parameters:
    - id: ruleId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteGroupRuleAsync(ruleId As String, cancellationToken As CancellationToken) As Task
  overload: Okta.Sdk.GroupsClient.DeleteGroupRuleAsync*
  implements:
  - Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.GroupsClient.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.GroupsClient.GetAsyncEnumerator(System.Threading.CancellationToken)
  id: GetAsyncEnumerator(System.Threading.CancellationToken)
  parent: Okta.Sdk.GroupsClient
  langs:
  - csharp
  - vb
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: GroupsClient.GetAsyncEnumerator(CancellationToken)
  fullName: Okta.Sdk.GroupsClient.GetAsyncEnumerator(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/GroupsClient.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAsyncEnumerator
    path: ../src/Okta.Sdk/GroupsClient.cs
    startLine: 36
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IAsyncEnumerator<IGroup> GetAsyncEnumerator(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Collections.Generic.IAsyncEnumerator{Okta.Sdk.IGroup}
    content.vb: Public Function GetAsyncEnumerator(cancellationToken As CancellationToken = Nothing) As IAsyncEnumerator(Of IGroup)
  overload: Okta.Sdk.GroupsClient.GetAsyncEnumerator*
  implements:
  - System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IGroup}.GetAsyncEnumerator(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Okta.Sdk.OktaClient
  commentId: T:Okta.Sdk.OktaClient
  parent: Okta.Sdk
  name: OktaClient
  nameWithType: OktaClient
  fullName: Okta.Sdk.OktaClient
- uid: Okta.Sdk.IOktaClient
  commentId: T:Okta.Sdk.IOktaClient
  parent: Okta.Sdk
  name: IOktaClient
  nameWithType: IOktaClient
  fullName: Okta.Sdk.IOktaClient
- uid: Okta.Sdk.IGroupsClient
  commentId: T:Okta.Sdk.IGroupsClient
  parent: Okta.Sdk
  name: IGroupsClient
  nameWithType: IGroupsClient
  fullName: Okta.Sdk.IGroupsClient
- uid: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IGroup}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<IGroup>
  nameWithType: IAsyncEnumerable<IGroup>
  fullName: System.Collections.Generic.IAsyncEnumerable<Okta.Sdk.IGroup>
  nameWithType.vb: IAsyncEnumerable(Of IGroup)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Okta.Sdk.IGroup)
  name.vb: IAsyncEnumerable(Of IGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.Configuration
  commentId: P:Okta.Sdk.OktaClient.Configuration
  parent: Okta.Sdk.OktaClient
  name: Configuration
  nameWithType: OktaClient.Configuration
  fullName: Okta.Sdk.OktaClient.Configuration
- uid: Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  commentId: M:Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  parent: Okta.Sdk.OktaClient
  name: CreateScoped(RequestContext)
  nameWithType: OktaClient.CreateScoped(RequestContext)
  fullName: Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
    name: CreateScoped
    nameWithType: OktaClient.CreateScoped
    fullName: Okta.Sdk.OktaClient.CreateScoped
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.CreateScoped(Okta.Sdk.RequestContext)
    name: CreateScoped
    nameWithType: OktaClient.CreateScoped
    fullName: Okta.Sdk.OktaClient.CreateScoped
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.RequestContext
    name: RequestContext
    nameWithType: RequestContext
    fullName: Okta.Sdk.RequestContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.Brands
  commentId: P:Okta.Sdk.OktaClient.Brands
  parent: Okta.Sdk.OktaClient
  name: Brands
  nameWithType: OktaClient.Brands
  fullName: Okta.Sdk.OktaClient.Brands
- uid: Okta.Sdk.OktaClient.GroupSchemas
  commentId: P:Okta.Sdk.OktaClient.GroupSchemas
  parent: Okta.Sdk.OktaClient
  name: GroupSchemas
  nameWithType: OktaClient.GroupSchemas
  fullName: Okta.Sdk.OktaClient.GroupSchemas
- uid: Okta.Sdk.OktaClient.Authenticators
  commentId: P:Okta.Sdk.OktaClient.Authenticators
  parent: Okta.Sdk.OktaClient
  name: Authenticators
  nameWithType: OktaClient.Authenticators
  fullName: Okta.Sdk.OktaClient.Authenticators
- uid: Okta.Sdk.OktaClient.Orgs
  commentId: P:Okta.Sdk.OktaClient.Orgs
  parent: Okta.Sdk.OktaClient
  name: Orgs
  nameWithType: OktaClient.Orgs
  fullName: Okta.Sdk.OktaClient.Orgs
- uid: Okta.Sdk.OktaClient.UserTypes
  commentId: P:Okta.Sdk.OktaClient.UserTypes
  parent: Okta.Sdk.OktaClient
  name: UserTypes
  nameWithType: OktaClient.UserTypes
  fullName: Okta.Sdk.OktaClient.UserTypes
- uid: Okta.Sdk.OktaClient.Users
  commentId: P:Okta.Sdk.OktaClient.Users
  parent: Okta.Sdk.OktaClient
  name: Users
  nameWithType: OktaClient.Users
  fullName: Okta.Sdk.OktaClient.Users
- uid: Okta.Sdk.OktaClient.UserFactors
  commentId: P:Okta.Sdk.OktaClient.UserFactors
  parent: Okta.Sdk.OktaClient
  name: UserFactors
  nameWithType: OktaClient.UserFactors
  fullName: Okta.Sdk.OktaClient.UserFactors
- uid: Okta.Sdk.OktaClient.Groups
  commentId: P:Okta.Sdk.OktaClient.Groups
  parent: Okta.Sdk.OktaClient
  name: Groups
  nameWithType: OktaClient.Groups
  fullName: Okta.Sdk.OktaClient.Groups
- uid: Okta.Sdk.OktaClient.Applications
  commentId: P:Okta.Sdk.OktaClient.Applications
  parent: Okta.Sdk.OktaClient
  name: Applications
  nameWithType: OktaClient.Applications
  fullName: Okta.Sdk.OktaClient.Applications
- uid: Okta.Sdk.OktaClient.Sessions
  commentId: P:Okta.Sdk.OktaClient.Sessions
  parent: Okta.Sdk.OktaClient
  name: Sessions
  nameWithType: OktaClient.Sessions
  fullName: Okta.Sdk.OktaClient.Sessions
- uid: Okta.Sdk.OktaClient.AuthorizationServers
  commentId: P:Okta.Sdk.OktaClient.AuthorizationServers
  parent: Okta.Sdk.OktaClient
  name: AuthorizationServers
  nameWithType: OktaClient.AuthorizationServers
  fullName: Okta.Sdk.OktaClient.AuthorizationServers
- uid: Okta.Sdk.OktaClient.Logs
  commentId: P:Okta.Sdk.OktaClient.Logs
  parent: Okta.Sdk.OktaClient
  name: Logs
  nameWithType: OktaClient.Logs
  fullName: Okta.Sdk.OktaClient.Logs
- uid: Okta.Sdk.OktaClient.Policies
  commentId: P:Okta.Sdk.OktaClient.Policies
  parent: Okta.Sdk.OktaClient
  name: Policies
  nameWithType: OktaClient.Policies
  fullName: Okta.Sdk.OktaClient.Policies
- uid: Okta.Sdk.OktaClient.EventHooks
  commentId: P:Okta.Sdk.OktaClient.EventHooks
  parent: Okta.Sdk.OktaClient
  name: EventHooks
  nameWithType: OktaClient.EventHooks
  fullName: Okta.Sdk.OktaClient.EventHooks
- uid: Okta.Sdk.OktaClient.InlineHooks
  commentId: P:Okta.Sdk.OktaClient.InlineHooks
  parent: Okta.Sdk.OktaClient
  name: InlineHooks
  nameWithType: OktaClient.InlineHooks
  fullName: Okta.Sdk.OktaClient.InlineHooks
- uid: Okta.Sdk.OktaClient.LinkedObjects
  commentId: P:Okta.Sdk.OktaClient.LinkedObjects
  parent: Okta.Sdk.OktaClient
  name: LinkedObjects
  nameWithType: OktaClient.LinkedObjects
  fullName: Okta.Sdk.OktaClient.LinkedObjects
- uid: Okta.Sdk.OktaClient.TrustedOrigins
  commentId: P:Okta.Sdk.OktaClient.TrustedOrigins
  parent: Okta.Sdk.OktaClient
  name: TrustedOrigins
  nameWithType: OktaClient.TrustedOrigins
  fullName: Okta.Sdk.OktaClient.TrustedOrigins
- uid: Okta.Sdk.OktaClient.Features
  commentId: P:Okta.Sdk.OktaClient.Features
  parent: Okta.Sdk.OktaClient
  name: Features
  nameWithType: OktaClient.Features
  fullName: Okta.Sdk.OktaClient.Features
- uid: Okta.Sdk.OktaClient.Templates
  commentId: P:Okta.Sdk.OktaClient.Templates
  parent: Okta.Sdk.OktaClient
  name: Templates
  nameWithType: OktaClient.Templates
  fullName: Okta.Sdk.OktaClient.Templates
- uid: Okta.Sdk.OktaClient.NetworkZones
  commentId: P:Okta.Sdk.OktaClient.NetworkZones
  parent: Okta.Sdk.OktaClient
  name: NetworkZones
  nameWithType: OktaClient.NetworkZones
  fullName: Okta.Sdk.OktaClient.NetworkZones
- uid: Okta.Sdk.OktaClient.Domains
  commentId: P:Okta.Sdk.OktaClient.Domains
  parent: Okta.Sdk.OktaClient
  name: Domains
  nameWithType: OktaClient.Domains
  fullName: Okta.Sdk.OktaClient.Domains
- uid: Okta.Sdk.OktaClient.ProfileMappings
  commentId: P:Okta.Sdk.OktaClient.ProfileMappings
  parent: Okta.Sdk.OktaClient
  name: ProfileMappings
  nameWithType: OktaClient.ProfileMappings
  fullName: Okta.Sdk.OktaClient.ProfileMappings
- uid: Okta.Sdk.OktaClient.ThreatInsights
  commentId: P:Okta.Sdk.OktaClient.ThreatInsights
  parent: Okta.Sdk.OktaClient
  name: ThreatInsights
  nameWithType: OktaClient.ThreatInsights
  fullName: Okta.Sdk.OktaClient.ThreatInsights
- uid: Okta.Sdk.OktaClient.IdentityProviders
  commentId: P:Okta.Sdk.OktaClient.IdentityProviders
  parent: Okta.Sdk.OktaClient
  name: IdentityProviders
  nameWithType: OktaClient.IdentityProviders
  fullName: Okta.Sdk.OktaClient.IdentityProviders
- uid: Okta.Sdk.OktaClient.UserSchemas
  commentId: P:Okta.Sdk.OktaClient.UserSchemas
  parent: Okta.Sdk.OktaClient
  name: UserSchemas
  nameWithType: OktaClient.UserSchemas
  fullName: Okta.Sdk.OktaClient.UserSchemas
- uid: Okta.Sdk.OktaClient.Subscriptions
  commentId: P:Okta.Sdk.OktaClient.Subscriptions
  parent: Okta.Sdk.OktaClient
  name: Subscriptions
  nameWithType: OktaClient.Subscriptions
  fullName: Okta.Sdk.OktaClient.Subscriptions
- uid: Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
  commentId: M:Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
  parent: Okta.Sdk.OktaClient
  name: GetCollectionClient<T>(HttpRequest)
  nameWithType: OktaClient.GetCollectionClient<T>(HttpRequest)
  fullName: Okta.Sdk.OktaClient.GetCollectionClient<T>(Okta.Sdk.HttpRequest)
  nameWithType.vb: OktaClient.GetCollectionClient(Of T)(HttpRequest)
  fullName.vb: Okta.Sdk.OktaClient.GetCollectionClient(Of T)(Okta.Sdk.HttpRequest)
  name.vb: GetCollectionClient(Of T)(HttpRequest)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
    name: GetCollectionClient<T>
    nameWithType: OktaClient.GetCollectionClient<T>
    fullName: Okta.Sdk.OktaClient.GetCollectionClient<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetCollectionClient``1(Okta.Sdk.HttpRequest)
    name: GetCollectionClient(Of T)
    nameWithType: OktaClient.GetCollectionClient(Of T)
    fullName: Okta.Sdk.OktaClient.GetCollectionClient(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: GetAsync<T>(String, CancellationToken)
  nameWithType: OktaClient.GetAsync<T>(String, CancellationToken)
  fullName: Okta.Sdk.OktaClient.GetAsync<T>(System.String, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.GetAsync(Of T)(String, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.GetAsync(Of T)(System.String, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(String, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
    name: GetAsync<T>
    nameWithType: OktaClient.GetAsync<T>
    fullName: Okta.Sdk.OktaClient.GetAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetAsync``1(System.String,System.Threading.CancellationToken)
    name: GetAsync(Of T)
    nameWithType: OktaClient.GetAsync(Of T)
    fullName: Okta.Sdk.OktaClient.GetAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: GetAsync<T>(HttpRequest, CancellationToken)
  nameWithType: OktaClient.GetAsync<T>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.GetAsync<T>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.GetAsync(Of T)(HttpRequest, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.GetAsync(Of T)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(HttpRequest, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: GetAsync<T>
    nameWithType: OktaClient.GetAsync<T>
    fullName: Okta.Sdk.OktaClient.GetAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: GetAsync(Of T)
    nameWithType: OktaClient.GetAsync(Of T)
    fullName: Okta.Sdk.OktaClient.GetAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetCollection``1(System.String)
  commentId: M:Okta.Sdk.OktaClient.GetCollection``1(System.String)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: GetCollection<T>(String)
  nameWithType: OktaClient.GetCollection<T>(String)
  fullName: Okta.Sdk.OktaClient.GetCollection<T>(System.String)
  nameWithType.vb: OktaClient.GetCollection(Of T)(String)
  fullName.vb: Okta.Sdk.OktaClient.GetCollection(Of T)(System.String)
  name.vb: GetCollection(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetCollection``1(System.String)
    name: GetCollection<T>
    nameWithType: OktaClient.GetCollection<T>
    fullName: Okta.Sdk.OktaClient.GetCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetCollection``1(System.String)
    name: GetCollection(Of T)
    nameWithType: OktaClient.GetCollection(Of T)
    fullName: Okta.Sdk.OktaClient.GetCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  commentId: M:Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
  parent: Okta.Sdk.OktaClient
  name: GetCollection<T>(HttpRequest)
  nameWithType: OktaClient.GetCollection<T>(HttpRequest)
  fullName: Okta.Sdk.OktaClient.GetCollection<T>(Okta.Sdk.HttpRequest)
  nameWithType.vb: OktaClient.GetCollection(Of T)(HttpRequest)
  fullName.vb: Okta.Sdk.OktaClient.GetCollection(Of T)(Okta.Sdk.HttpRequest)
  name.vb: GetCollection(Of T)(HttpRequest)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
    name: GetCollection<T>
    nameWithType: OktaClient.GetCollection<T>
    fullName: Okta.Sdk.OktaClient.GetCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.GetCollection``1(Okta.Sdk.HttpRequest)
    name: GetCollection(Of T)
    nameWithType: OktaClient.GetCollection(Of T)
    fullName: Okta.Sdk.OktaClient.GetCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PostAsync(String, Object, CancellationToken)
  nameWithType: OktaClient.PostAsync(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync(System.String, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: OktaClient.PostAsync
    fullName: Okta.Sdk.OktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PostAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: OktaClient.PostAsync
    fullName: Okta.Sdk.OktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PostAsync<TResponse>(String, Object, CancellationToken)
  nameWithType: OktaClient.PostAsync<TResponse>(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync<TResponse>(System.String, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PostAsync(Of TResponse)(String, Object, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.PostAsync(Of TResponse)(System.String, System.Object, System.Threading.CancellationToken)
  name.vb: PostAsync(Of TResponse)(String, Object, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync<TResponse>
    nameWithType: OktaClient.PostAsync<TResponse>
    fullName: Okta.Sdk.OktaClient.PostAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PostAsync(Of TResponse)
    nameWithType: OktaClient.PostAsync(Of TResponse)
    fullName: Okta.Sdk.OktaClient.PostAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PostAsync(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PostAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: OktaClient.PostAsync
    fullName: Okta.Sdk.OktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PostAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync
    nameWithType: OktaClient.PostAsync
    fullName: Okta.Sdk.OktaClient.PostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PostAsync<TResponse>(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PostAsync<TResponse>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PostAsync<TResponse>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PostAsync(Of TResponse)(HttpRequest, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.PostAsync(Of TResponse)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: PostAsync(Of TResponse)(HttpRequest, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync<TResponse>
    nameWithType: OktaClient.PostAsync<TResponse>
    fullName: Okta.Sdk.OktaClient.PostAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PostAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PostAsync(Of TResponse)
    nameWithType: OktaClient.PostAsync(Of TResponse)
    fullName: Okta.Sdk.OktaClient.PostAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PutAsync(String, Object, CancellationToken)
  nameWithType: OktaClient.PutAsync(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync(System.String, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: OktaClient.PutAsync
    fullName: Okta.Sdk.OktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PutAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: OktaClient.PutAsync
    fullName: Okta.Sdk.OktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PutAsync<TResponse>(String, Object, CancellationToken)
  nameWithType: OktaClient.PutAsync<TResponse>(String, Object, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync<TResponse>(System.String, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PutAsync(Of TResponse)(String, Object, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.PutAsync(Of TResponse)(System.String, System.Object, System.Threading.CancellationToken)
  name.vb: PutAsync(Of TResponse)(String, Object, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync<TResponse>
    nameWithType: OktaClient.PutAsync<TResponse>
    fullName: Okta.Sdk.OktaClient.PutAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: PutAsync(Of TResponse)
    nameWithType: OktaClient.PutAsync(Of TResponse)
    fullName: Okta.Sdk.OktaClient.PutAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PutAsync(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PutAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: OktaClient.PutAsync
    fullName: Okta.Sdk.OktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PutAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync
    nameWithType: OktaClient.PutAsync
    fullName: Okta.Sdk.OktaClient.PutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: PutAsync<TResponse>(HttpRequest, CancellationToken)
  nameWithType: OktaClient.PutAsync<TResponse>(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.PutAsync<TResponse>(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  nameWithType.vb: OktaClient.PutAsync(Of TResponse)(HttpRequest, CancellationToken)
  fullName.vb: Okta.Sdk.OktaClient.PutAsync(Of TResponse)(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  name.vb: PutAsync(Of TResponse)(HttpRequest, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync<TResponse>
    nameWithType: OktaClient.PutAsync<TResponse>
    fullName: Okta.Sdk.OktaClient.PutAsync<TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.PutAsync``1(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: PutAsync(Of TResponse)
    nameWithType: OktaClient.PutAsync(Of TResponse)
    fullName: Okta.Sdk.OktaClient.PutAsync(Of TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: DeleteAsync(String, CancellationToken)
  nameWithType: OktaClient.DeleteAsync(String, CancellationToken)
  fullName: Okta.Sdk.OktaClient.DeleteAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: OktaClient.DeleteAsync
    fullName: Okta.Sdk.OktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.DeleteAsync(System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: OktaClient.DeleteAsync
    fullName: Okta.Sdk.OktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
  parent: Okta.Sdk.OktaClient
  isExternal: true
  name: DeleteAsync(HttpRequest, CancellationToken)
  nameWithType: OktaClient.DeleteAsync(HttpRequest, CancellationToken)
  fullName: Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: OktaClient.DeleteAsync
    fullName: Okta.Sdk.OktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.OktaClient.DeleteAsync(Okta.Sdk.HttpRequest,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: OktaClient.DeleteAsync
    fullName: Okta.Sdk.OktaClient.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Okta.Sdk.HttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.GroupsClient.ListGroups*
  commentId: Overload:Okta.Sdk.GroupsClient.ListGroups
  name: ListGroups
  nameWithType: GroupsClient.ListGroups
  fullName: Okta.Sdk.GroupsClient.ListGroups
- uid: Okta.Sdk.IGroupsClient.ListGroups(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
  commentId: M:Okta.Sdk.IGroupsClient.ListGroups(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: ListGroups(String, String, String, Nullable<Int32>, String)
  nameWithType: IGroupsClient.ListGroups(String, String, String, Nullable<Int32>, String)
  fullName: Okta.Sdk.IGroupsClient.ListGroups(System.String, System.String, System.String, System.Nullable<System.Int32>, System.String)
  nameWithType.vb: IGroupsClient.ListGroups(String, String, String, Nullable(Of Int32), String)
  fullName.vb: Okta.Sdk.IGroupsClient.ListGroups(System.String, System.String, System.String, System.Nullable(Of System.Int32), System.String)
  name.vb: ListGroups(String, String, String, Nullable(Of Int32), String)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.ListGroups(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
    name: ListGroups
    nameWithType: IGroupsClient.ListGroups
    fullName: Okta.Sdk.IGroupsClient.ListGroups
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.ListGroups(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)
    name: ListGroups
    nameWithType: IGroupsClient.ListGroups
    fullName: Okta.Sdk.IGroupsClient.ListGroups
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IGroup}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IGroup}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IGroup>
  nameWithType: ICollectionClient<IGroup>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IGroup>
  nameWithType.vb: ICollectionClient(Of IGroup)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IGroup)
  name.vb: ICollectionClient(Of IGroup)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.CreateGroupAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.CreateGroupAsync
  name: CreateGroupAsync
  nameWithType: GroupsClient.CreateGroupAsync
  fullName: Okta.Sdk.GroupsClient.CreateGroupAsync
- uid: Okta.Sdk.IGroupsClient.CreateGroupAsync(Okta.Sdk.IGroup,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.CreateGroupAsync(Okta.Sdk.IGroup,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: CreateGroupAsync(IGroup, CancellationToken)
  nameWithType: IGroupsClient.CreateGroupAsync(IGroup, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.CreateGroupAsync(Okta.Sdk.IGroup, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.CreateGroupAsync(Okta.Sdk.IGroup,System.Threading.CancellationToken)
    name: CreateGroupAsync
    nameWithType: IGroupsClient.CreateGroupAsync
    fullName: Okta.Sdk.IGroupsClient.CreateGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.CreateGroupAsync(Okta.Sdk.IGroup,System.Threading.CancellationToken)
    name: CreateGroupAsync
    nameWithType: IGroupsClient.CreateGroupAsync
    fullName: Okta.Sdk.IGroupsClient.CreateGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IGroup
  commentId: T:Okta.Sdk.IGroup
  parent: Okta.Sdk
  name: IGroup
  nameWithType: IGroup
  fullName: Okta.Sdk.IGroup
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.IGroup}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IGroup}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IGroup>
  nameWithType: Task<IGroup>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IGroup>
  nameWithType.vb: Task(Of IGroup)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IGroup)
  name.vb: Task(Of IGroup)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.GroupsClient.ListGroupRules*
  commentId: Overload:Okta.Sdk.GroupsClient.ListGroupRules
  name: ListGroupRules
  nameWithType: GroupsClient.ListGroupRules
  fullName: Okta.Sdk.GroupsClient.ListGroupRules
- uid: Okta.Sdk.IGroupsClient.ListGroupRules(System.Nullable{System.Int32},System.String,System.String,System.String)
  commentId: M:Okta.Sdk.IGroupsClient.ListGroupRules(System.Nullable{System.Int32},System.String,System.String,System.String)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: ListGroupRules(Nullable<Int32>, String, String, String)
  nameWithType: IGroupsClient.ListGroupRules(Nullable<Int32>, String, String, String)
  fullName: Okta.Sdk.IGroupsClient.ListGroupRules(System.Nullable<System.Int32>, System.String, System.String, System.String)
  nameWithType.vb: IGroupsClient.ListGroupRules(Nullable(Of Int32), String, String, String)
  fullName.vb: Okta.Sdk.IGroupsClient.ListGroupRules(System.Nullable(Of System.Int32), System.String, System.String, System.String)
  name.vb: ListGroupRules(Nullable(Of Int32), String, String, String)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.ListGroupRules(System.Nullable{System.Int32},System.String,System.String,System.String)
    name: ListGroupRules
    nameWithType: IGroupsClient.ListGroupRules
    fullName: Okta.Sdk.IGroupsClient.ListGroupRules
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.ListGroupRules(System.Nullable{System.Int32},System.String,System.String,System.String)
    name: ListGroupRules
    nameWithType: IGroupsClient.ListGroupRules
    fullName: Okta.Sdk.IGroupsClient.ListGroupRules
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IGroupRule}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IGroupRule}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IGroupRule>
  nameWithType: ICollectionClient<IGroupRule>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IGroupRule>
  nameWithType.vb: ICollectionClient(Of IGroupRule)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IGroupRule)
  name.vb: ICollectionClient(Of IGroupRule)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IGroupRule
    name: IGroupRule
    nameWithType: IGroupRule
    fullName: Okta.Sdk.IGroupRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IGroupRule
    name: IGroupRule
    nameWithType: IGroupRule
    fullName: Okta.Sdk.IGroupRule
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.CreateGroupRuleAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.CreateGroupRuleAsync
  name: CreateGroupRuleAsync
  nameWithType: GroupsClient.CreateGroupRuleAsync
  fullName: Okta.Sdk.GroupsClient.CreateGroupRuleAsync
- uid: Okta.Sdk.IGroupsClient.CreateGroupRuleAsync(Okta.Sdk.IGroupRule,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.CreateGroupRuleAsync(Okta.Sdk.IGroupRule,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: CreateGroupRuleAsync(IGroupRule, CancellationToken)
  nameWithType: IGroupsClient.CreateGroupRuleAsync(IGroupRule, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.CreateGroupRuleAsync(Okta.Sdk.IGroupRule, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.CreateGroupRuleAsync(Okta.Sdk.IGroupRule,System.Threading.CancellationToken)
    name: CreateGroupRuleAsync
    nameWithType: IGroupsClient.CreateGroupRuleAsync
    fullName: Okta.Sdk.IGroupsClient.CreateGroupRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IGroupRule
    name: IGroupRule
    nameWithType: IGroupRule
    fullName: Okta.Sdk.IGroupRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.CreateGroupRuleAsync(Okta.Sdk.IGroupRule,System.Threading.CancellationToken)
    name: CreateGroupRuleAsync
    nameWithType: IGroupsClient.CreateGroupRuleAsync
    fullName: Okta.Sdk.IGroupsClient.CreateGroupRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IGroupRule
    name: IGroupRule
    nameWithType: IGroupRule
    fullName: Okta.Sdk.IGroupRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IGroupRule
  commentId: T:Okta.Sdk.IGroupRule
  parent: Okta.Sdk
  name: IGroupRule
  nameWithType: IGroupRule
  fullName: Okta.Sdk.IGroupRule
- uid: System.Threading.Tasks.Task{Okta.Sdk.IGroupRule}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IGroupRule}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IGroupRule>
  nameWithType: Task<IGroupRule>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IGroupRule>
  nameWithType.vb: Task(Of IGroupRule)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IGroupRule)
  name.vb: Task(Of IGroupRule)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IGroupRule
    name: IGroupRule
    nameWithType: IGroupRule
    fullName: Okta.Sdk.IGroupRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IGroupRule
    name: IGroupRule
    nameWithType: IGroupRule
    fullName: Okta.Sdk.IGroupRule
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.DeleteGroupRuleAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.DeleteGroupRuleAsync
  name: DeleteGroupRuleAsync
  nameWithType: GroupsClient.DeleteGroupRuleAsync
  fullName: Okta.Sdk.GroupsClient.DeleteGroupRuleAsync
- uid: Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: DeleteGroupRuleAsync(String, Nullable<Boolean>, CancellationToken)
  nameWithType: IGroupsClient.DeleteGroupRuleAsync(String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync(System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IGroupsClient.DeleteGroupRuleAsync(String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync(System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: DeleteGroupRuleAsync(String, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: DeleteGroupRuleAsync
    nameWithType: IGroupsClient.DeleteGroupRuleAsync
    fullName: Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: DeleteGroupRuleAsync
    nameWithType: IGroupsClient.DeleteGroupRuleAsync
    fullName: Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Okta.Sdk.GroupsClient.GetGroupRuleAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.GetGroupRuleAsync
  name: GetGroupRuleAsync
  nameWithType: GroupsClient.GetGroupRuleAsync
  fullName: Okta.Sdk.GroupsClient.GetGroupRuleAsync
- uid: Okta.Sdk.IGroupsClient.GetGroupRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.GetGroupRuleAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: GetGroupRuleAsync(String, String, CancellationToken)
  nameWithType: IGroupsClient.GetGroupRuleAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.GetGroupRuleAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.GetGroupRuleAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetGroupRuleAsync
    nameWithType: IGroupsClient.GetGroupRuleAsync
    fullName: Okta.Sdk.IGroupsClient.GetGroupRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.GetGroupRuleAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetGroupRuleAsync
    nameWithType: IGroupsClient.GetGroupRuleAsync
    fullName: Okta.Sdk.IGroupsClient.GetGroupRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.UpdateGroupRuleAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.UpdateGroupRuleAsync
  name: UpdateGroupRuleAsync
  nameWithType: GroupsClient.UpdateGroupRuleAsync
  fullName: Okta.Sdk.GroupsClient.UpdateGroupRuleAsync
- uid: Okta.Sdk.IGroupsClient.UpdateGroupRuleAsync(Okta.Sdk.IGroupRule,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.UpdateGroupRuleAsync(Okta.Sdk.IGroupRule,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: UpdateGroupRuleAsync(IGroupRule, String, CancellationToken)
  nameWithType: IGroupsClient.UpdateGroupRuleAsync(IGroupRule, String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.UpdateGroupRuleAsync(Okta.Sdk.IGroupRule, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.UpdateGroupRuleAsync(Okta.Sdk.IGroupRule,System.String,System.Threading.CancellationToken)
    name: UpdateGroupRuleAsync
    nameWithType: IGroupsClient.UpdateGroupRuleAsync
    fullName: Okta.Sdk.IGroupsClient.UpdateGroupRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IGroupRule
    name: IGroupRule
    nameWithType: IGroupRule
    fullName: Okta.Sdk.IGroupRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.UpdateGroupRuleAsync(Okta.Sdk.IGroupRule,System.String,System.Threading.CancellationToken)
    name: UpdateGroupRuleAsync
    nameWithType: IGroupsClient.UpdateGroupRuleAsync
    fullName: Okta.Sdk.IGroupsClient.UpdateGroupRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IGroupRule
    name: IGroupRule
    nameWithType: IGroupRule
    fullName: Okta.Sdk.IGroupRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.ActivateGroupRuleAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.ActivateGroupRuleAsync
  name: ActivateGroupRuleAsync
  nameWithType: GroupsClient.ActivateGroupRuleAsync
  fullName: Okta.Sdk.GroupsClient.ActivateGroupRuleAsync
- uid: Okta.Sdk.IGroupsClient.ActivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.ActivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: ActivateGroupRuleAsync(String, CancellationToken)
  nameWithType: IGroupsClient.ActivateGroupRuleAsync(String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.ActivateGroupRuleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.ActivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
    name: ActivateGroupRuleAsync
    nameWithType: IGroupsClient.ActivateGroupRuleAsync
    fullName: Okta.Sdk.IGroupsClient.ActivateGroupRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.ActivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
    name: ActivateGroupRuleAsync
    nameWithType: IGroupsClient.ActivateGroupRuleAsync
    fullName: Okta.Sdk.IGroupsClient.ActivateGroupRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.DeactivateGroupRuleAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.DeactivateGroupRuleAsync
  name: DeactivateGroupRuleAsync
  nameWithType: GroupsClient.DeactivateGroupRuleAsync
  fullName: Okta.Sdk.GroupsClient.DeactivateGroupRuleAsync
- uid: Okta.Sdk.IGroupsClient.DeactivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.DeactivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: DeactivateGroupRuleAsync(String, CancellationToken)
  nameWithType: IGroupsClient.DeactivateGroupRuleAsync(String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.DeactivateGroupRuleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.DeactivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
    name: DeactivateGroupRuleAsync
    nameWithType: IGroupsClient.DeactivateGroupRuleAsync
    fullName: Okta.Sdk.IGroupsClient.DeactivateGroupRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.DeactivateGroupRuleAsync(System.String,System.Threading.CancellationToken)
    name: DeactivateGroupRuleAsync
    nameWithType: IGroupsClient.DeactivateGroupRuleAsync
    fullName: Okta.Sdk.IGroupsClient.DeactivateGroupRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.DeleteGroupAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.DeleteGroupAsync
  name: DeleteGroupAsync
  nameWithType: GroupsClient.DeleteGroupAsync
  fullName: Okta.Sdk.GroupsClient.DeleteGroupAsync
- uid: Okta.Sdk.IGroupsClient.DeleteGroupAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.DeleteGroupAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: DeleteGroupAsync(String, CancellationToken)
  nameWithType: IGroupsClient.DeleteGroupAsync(String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.DeleteGroupAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.DeleteGroupAsync(System.String,System.Threading.CancellationToken)
    name: DeleteGroupAsync
    nameWithType: IGroupsClient.DeleteGroupAsync
    fullName: Okta.Sdk.IGroupsClient.DeleteGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.DeleteGroupAsync(System.String,System.Threading.CancellationToken)
    name: DeleteGroupAsync
    nameWithType: IGroupsClient.DeleteGroupAsync
    fullName: Okta.Sdk.IGroupsClient.DeleteGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.GetGroupAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.GetGroupAsync
  name: GetGroupAsync
  nameWithType: GroupsClient.GetGroupAsync
  fullName: Okta.Sdk.GroupsClient.GetGroupAsync
- uid: Okta.Sdk.IGroupsClient.GetGroupAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.GetGroupAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: GetGroupAsync(String, CancellationToken)
  nameWithType: IGroupsClient.GetGroupAsync(String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.GetGroupAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.GetGroupAsync(System.String,System.Threading.CancellationToken)
    name: GetGroupAsync
    nameWithType: IGroupsClient.GetGroupAsync
    fullName: Okta.Sdk.IGroupsClient.GetGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.GetGroupAsync(System.String,System.Threading.CancellationToken)
    name: GetGroupAsync
    nameWithType: IGroupsClient.GetGroupAsync
    fullName: Okta.Sdk.IGroupsClient.GetGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.UpdateGroupAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.UpdateGroupAsync
  name: UpdateGroupAsync
  nameWithType: GroupsClient.UpdateGroupAsync
  fullName: Okta.Sdk.GroupsClient.UpdateGroupAsync
- uid: Okta.Sdk.IGroupsClient.UpdateGroupAsync(Okta.Sdk.IGroup,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.UpdateGroupAsync(Okta.Sdk.IGroup,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: UpdateGroupAsync(IGroup, String, CancellationToken)
  nameWithType: IGroupsClient.UpdateGroupAsync(IGroup, String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.UpdateGroupAsync(Okta.Sdk.IGroup, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.UpdateGroupAsync(Okta.Sdk.IGroup,System.String,System.Threading.CancellationToken)
    name: UpdateGroupAsync
    nameWithType: IGroupsClient.UpdateGroupAsync
    fullName: Okta.Sdk.IGroupsClient.UpdateGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.UpdateGroupAsync(Okta.Sdk.IGroup,System.String,System.Threading.CancellationToken)
    name: UpdateGroupAsync
    nameWithType: IGroupsClient.UpdateGroupAsync
    fullName: Okta.Sdk.IGroupsClient.UpdateGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.ListAssignedApplicationsForGroup*
  commentId: Overload:Okta.Sdk.GroupsClient.ListAssignedApplicationsForGroup
  name: ListAssignedApplicationsForGroup
  nameWithType: GroupsClient.ListAssignedApplicationsForGroup
  fullName: Okta.Sdk.GroupsClient.ListAssignedApplicationsForGroup
- uid: Okta.Sdk.IGroupsClient.ListAssignedApplicationsForGroup(System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IGroupsClient.ListAssignedApplicationsForGroup(System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: ListAssignedApplicationsForGroup(String, String, Nullable<Int32>)
  nameWithType: IGroupsClient.ListAssignedApplicationsForGroup(String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IGroupsClient.ListAssignedApplicationsForGroup(System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IGroupsClient.ListAssignedApplicationsForGroup(String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IGroupsClient.ListAssignedApplicationsForGroup(System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListAssignedApplicationsForGroup(String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.ListAssignedApplicationsForGroup(System.String,System.String,System.Nullable{System.Int32})
    name: ListAssignedApplicationsForGroup
    nameWithType: IGroupsClient.ListAssignedApplicationsForGroup
    fullName: Okta.Sdk.IGroupsClient.ListAssignedApplicationsForGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.ListAssignedApplicationsForGroup(System.String,System.String,System.Nullable{System.Int32})
    name: ListAssignedApplicationsForGroup
    nameWithType: IGroupsClient.ListAssignedApplicationsForGroup
    fullName: Okta.Sdk.IGroupsClient.ListAssignedApplicationsForGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IApplication}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IApplication}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IApplication>
  nameWithType: ICollectionClient<IApplication>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IApplication>
  nameWithType.vb: ICollectionClient(Of IApplication)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IApplication)
  name.vb: ICollectionClient(Of IApplication)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IApplication
    name: IApplication
    nameWithType: IApplication
    fullName: Okta.Sdk.IApplication
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IApplication
    name: IApplication
    nameWithType: IApplication
    fullName: Okta.Sdk.IApplication
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.ListGroupAssignedRoles*
  commentId: Overload:Okta.Sdk.GroupsClient.ListGroupAssignedRoles
  name: ListGroupAssignedRoles
  nameWithType: GroupsClient.ListGroupAssignedRoles
  fullName: Okta.Sdk.GroupsClient.ListGroupAssignedRoles
- uid: Okta.Sdk.IGroupsClient.ListGroupAssignedRoles(System.String,System.String)
  commentId: M:Okta.Sdk.IGroupsClient.ListGroupAssignedRoles(System.String,System.String)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: ListGroupAssignedRoles(String, String)
  nameWithType: IGroupsClient.ListGroupAssignedRoles(String, String)
  fullName: Okta.Sdk.IGroupsClient.ListGroupAssignedRoles(System.String, System.String)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.ListGroupAssignedRoles(System.String,System.String)
    name: ListGroupAssignedRoles
    nameWithType: IGroupsClient.ListGroupAssignedRoles
    fullName: Okta.Sdk.IGroupsClient.ListGroupAssignedRoles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.ListGroupAssignedRoles(System.String,System.String)
    name: ListGroupAssignedRoles
    nameWithType: IGroupsClient.ListGroupAssignedRoles
    fullName: Okta.Sdk.IGroupsClient.ListGroupAssignedRoles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IRole}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IRole}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IRole>
  nameWithType: ICollectionClient<IRole>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IRole>
  nameWithType.vb: ICollectionClient(Of IRole)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IRole)
  name.vb: ICollectionClient(Of IRole)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.AssignRoleToGroupAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.AssignRoleToGroupAsync
  name: AssignRoleToGroupAsync
  nameWithType: GroupsClient.AssignRoleToGroupAsync
  fullName: Okta.Sdk.GroupsClient.AssignRoleToGroupAsync
- uid: Okta.Sdk.IGroupsClient.AssignRoleToGroupAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.AssignRoleToGroupAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: AssignRoleToGroupAsync(IAssignRoleRequest, String, Nullable<Boolean>, CancellationToken)
  nameWithType: IGroupsClient.AssignRoleToGroupAsync(IAssignRoleRequest, String, Nullable<Boolean>, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.AssignRoleToGroupAsync(Okta.Sdk.IAssignRoleRequest, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  nameWithType.vb: IGroupsClient.AssignRoleToGroupAsync(IAssignRoleRequest, String, Nullable(Of Boolean), CancellationToken)
  fullName.vb: Okta.Sdk.IGroupsClient.AssignRoleToGroupAsync(Okta.Sdk.IAssignRoleRequest, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: AssignRoleToGroupAsync(IAssignRoleRequest, String, Nullable(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.AssignRoleToGroupAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: AssignRoleToGroupAsync
    nameWithType: IGroupsClient.AssignRoleToGroupAsync
    fullName: Okta.Sdk.IGroupsClient.AssignRoleToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAssignRoleRequest
    name: IAssignRoleRequest
    nameWithType: IAssignRoleRequest
    fullName: Okta.Sdk.IAssignRoleRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.AssignRoleToGroupAsync(Okta.Sdk.IAssignRoleRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
    name: AssignRoleToGroupAsync
    nameWithType: IGroupsClient.AssignRoleToGroupAsync
    fullName: Okta.Sdk.IGroupsClient.AssignRoleToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAssignRoleRequest
    name: IAssignRoleRequest
    nameWithType: IAssignRoleRequest
    fullName: Okta.Sdk.IAssignRoleRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAssignRoleRequest
  commentId: T:Okta.Sdk.IAssignRoleRequest
  parent: Okta.Sdk
  name: IAssignRoleRequest
  nameWithType: IAssignRoleRequest
  fullName: Okta.Sdk.IAssignRoleRequest
- uid: System.Threading.Tasks.Task{Okta.Sdk.IRole}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IRole}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IRole>
  nameWithType: Task<IRole>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IRole>
  nameWithType.vb: Task(Of IRole)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IRole)
  name.vb: Task(Of IRole)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IRole
    name: IRole
    nameWithType: IRole
    fullName: Okta.Sdk.IRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.RemoveRoleFromGroupAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.RemoveRoleFromGroupAsync
  name: RemoveRoleFromGroupAsync
  nameWithType: GroupsClient.RemoveRoleFromGroupAsync
  fullName: Okta.Sdk.GroupsClient.RemoveRoleFromGroupAsync
- uid: Okta.Sdk.IGroupsClient.RemoveRoleFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.RemoveRoleFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: RemoveRoleFromGroupAsync(String, String, CancellationToken)
  nameWithType: IGroupsClient.RemoveRoleFromGroupAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.RemoveRoleFromGroupAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.RemoveRoleFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RemoveRoleFromGroupAsync
    nameWithType: IGroupsClient.RemoveRoleFromGroupAsync
    fullName: Okta.Sdk.IGroupsClient.RemoveRoleFromGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.RemoveRoleFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RemoveRoleFromGroupAsync
    nameWithType: IGroupsClient.RemoveRoleFromGroupAsync
    fullName: Okta.Sdk.IGroupsClient.RemoveRoleFromGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.GetRoleAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.GetRoleAsync
  name: GetRoleAsync
  nameWithType: GroupsClient.GetRoleAsync
  fullName: Okta.Sdk.GroupsClient.GetRoleAsync
- uid: Okta.Sdk.IGroupsClient.GetRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.GetRoleAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: GetRoleAsync(String, String, CancellationToken)
  nameWithType: IGroupsClient.GetRoleAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.GetRoleAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.GetRoleAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetRoleAsync
    nameWithType: IGroupsClient.GetRoleAsync
    fullName: Okta.Sdk.IGroupsClient.GetRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.GetRoleAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetRoleAsync
    nameWithType: IGroupsClient.GetRoleAsync
    fullName: Okta.Sdk.IGroupsClient.GetRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup*
  commentId: Overload:Okta.Sdk.GroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup
  name: ListApplicationTargetsForApplicationAdministratorRoleForGroup
  nameWithType: GroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup
  fullName: Okta.Sdk.GroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup
- uid: Okta.Sdk.IGroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IGroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: ListApplicationTargetsForApplicationAdministratorRoleForGroup(String, String, String, Nullable<Int32>)
  nameWithType: IGroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IGroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(System.String, System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IGroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IGroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListApplicationTargetsForApplicationAdministratorRoleForGroup(String, String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListApplicationTargetsForApplicationAdministratorRoleForGroup
    nameWithType: IGroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup
    fullName: Okta.Sdk.IGroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup(System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListApplicationTargetsForApplicationAdministratorRoleForGroup
    nameWithType: IGroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup
    fullName: Okta.Sdk.IGroupsClient.ListApplicationTargetsForApplicationAdministratorRoleForGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.ICatalogApplication}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.ICatalogApplication}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<ICatalogApplication>
  nameWithType: ICollectionClient<ICatalogApplication>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.ICatalogApplication>
  nameWithType.vb: ICollectionClient(Of ICatalogApplication)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.ICatalogApplication)
  name.vb: ICollectionClient(Of ICatalogApplication)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.ICatalogApplication
    name: ICatalogApplication
    nameWithType: ICatalogApplication
    fullName: Okta.Sdk.ICatalogApplication
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.ICatalogApplication
    name: ICatalogApplication
    nameWithType: ICatalogApplication
    fullName: Okta.Sdk.ICatalogApplication
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync
  name: RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync
  nameWithType: GroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync
  fullName: Okta.Sdk.GroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync
- uid: Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(String, String, String, CancellationToken)
  nameWithType: IGroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync
    nameWithType: IGroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync
    fullName: Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync
    nameWithType: IGroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync
    fullName: Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromApplicationAdministratorRoleGivenToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync
  name: AddApplicationTargetToAdminRoleGivenToGroupAsync
  nameWithType: GroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync
  fullName: Okta.Sdk.GroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync
- uid: Okta.Sdk.IGroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: AddApplicationTargetToAdminRoleGivenToGroupAsync(String, String, String, CancellationToken)
  nameWithType: IGroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddApplicationTargetToAdminRoleGivenToGroupAsync
    nameWithType: IGroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync
    fullName: Okta.Sdk.IGroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddApplicationTargetToAdminRoleGivenToGroupAsync
    nameWithType: IGroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync
    fullName: Okta.Sdk.IGroupsClient.AddApplicationTargetToAdminRoleGivenToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync
  name: RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync
  nameWithType: GroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync
  fullName: Okta.Sdk.GroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync
- uid: Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(String, String, String, String, CancellationToken)
  nameWithType: IGroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(String, String, String, String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync
    nameWithType: IGroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync
    fullName: Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync
    nameWithType: IGroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync
    fullName: Okta.Sdk.IGroupsClient.RemoveApplicationTargetFromAdministratorRoleGivenToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync
  name: AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync
  nameWithType: GroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync
  fullName: Okta.Sdk.GroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync
- uid: Okta.Sdk.IGroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(String, String, String, String, CancellationToken)
  nameWithType: IGroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(String, String, String, String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync
    nameWithType: IGroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync
    fullName: Okta.Sdk.IGroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync
    nameWithType: IGroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync
    fullName: Okta.Sdk.IGroupsClient.AddApplicationInstanceTargetToAppAdminRoleGivenToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.ListGroupTargetsForGroupRole*
  commentId: Overload:Okta.Sdk.GroupsClient.ListGroupTargetsForGroupRole
  name: ListGroupTargetsForGroupRole
  nameWithType: GroupsClient.ListGroupTargetsForGroupRole
  fullName: Okta.Sdk.GroupsClient.ListGroupTargetsForGroupRole
- uid: Okta.Sdk.IGroupsClient.ListGroupTargetsForGroupRole(System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IGroupsClient.ListGroupTargetsForGroupRole(System.String,System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: ListGroupTargetsForGroupRole(String, String, String, Nullable<Int32>)
  nameWithType: IGroupsClient.ListGroupTargetsForGroupRole(String, String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IGroupsClient.ListGroupTargetsForGroupRole(System.String, System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IGroupsClient.ListGroupTargetsForGroupRole(String, String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IGroupsClient.ListGroupTargetsForGroupRole(System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListGroupTargetsForGroupRole(String, String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.ListGroupTargetsForGroupRole(System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListGroupTargetsForGroupRole
    nameWithType: IGroupsClient.ListGroupTargetsForGroupRole
    fullName: Okta.Sdk.IGroupsClient.ListGroupTargetsForGroupRole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.ListGroupTargetsForGroupRole(System.String,System.String,System.String,System.Nullable{System.Int32})
    name: ListGroupTargetsForGroupRole
    nameWithType: IGroupsClient.ListGroupTargetsForGroupRole
    fullName: Okta.Sdk.IGroupsClient.ListGroupTargetsForGroupRole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync
  name: RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync
  nameWithType: GroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync
  fullName: Okta.Sdk.GroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync
- uid: Okta.Sdk.IGroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(String, String, String, CancellationToken)
  nameWithType: IGroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync
    nameWithType: IGroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync
    fullName: Okta.Sdk.IGroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync
    nameWithType: IGroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync
    fullName: Okta.Sdk.IGroupsClient.RemoveGroupTargetFromGroupAdministratorRoleGivenToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync
  name: AddGroupTargetToGroupAdministratorRoleForGroupAsync
  nameWithType: GroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync
  fullName: Okta.Sdk.GroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync
- uid: Okta.Sdk.IGroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: AddGroupTargetToGroupAdministratorRoleForGroupAsync(String, String, String, CancellationToken)
  nameWithType: IGroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync(String, String, String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddGroupTargetToGroupAdministratorRoleForGroupAsync
    nameWithType: IGroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync
    fullName: Okta.Sdk.IGroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: AddGroupTargetToGroupAdministratorRoleForGroupAsync
    nameWithType: IGroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync
    fullName: Okta.Sdk.IGroupsClient.AddGroupTargetToGroupAdministratorRoleForGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.ListGroupUsers*
  commentId: Overload:Okta.Sdk.GroupsClient.ListGroupUsers
  name: ListGroupUsers
  nameWithType: GroupsClient.ListGroupUsers
  fullName: Okta.Sdk.GroupsClient.ListGroupUsers
- uid: Okta.Sdk.IGroupsClient.ListGroupUsers(System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IGroupsClient.ListGroupUsers(System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: ListGroupUsers(String, String, Nullable<Int32>)
  nameWithType: IGroupsClient.ListGroupUsers(String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IGroupsClient.ListGroupUsers(System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IGroupsClient.ListGroupUsers(String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IGroupsClient.ListGroupUsers(System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListGroupUsers(String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.ListGroupUsers(System.String,System.String,System.Nullable{System.Int32})
    name: ListGroupUsers
    nameWithType: IGroupsClient.ListGroupUsers
    fullName: Okta.Sdk.IGroupsClient.ListGroupUsers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.ListGroupUsers(System.String,System.String,System.Nullable{System.Int32})
    name: ListGroupUsers
    nameWithType: IGroupsClient.ListGroupUsers
    fullName: Okta.Sdk.IGroupsClient.ListGroupUsers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IUser}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IUser}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IUser>
  nameWithType: ICollectionClient<IUser>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IUser>
  nameWithType.vb: ICollectionClient(Of IUser)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IUser)
  name.vb: ICollectionClient(Of IUser)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUser
    name: IUser
    nameWithType: IUser
    fullName: Okta.Sdk.IUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.RemoveUserFromGroupAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.RemoveUserFromGroupAsync
  name: RemoveUserFromGroupAsync
  nameWithType: GroupsClient.RemoveUserFromGroupAsync
  fullName: Okta.Sdk.GroupsClient.RemoveUserFromGroupAsync
- uid: Okta.Sdk.IGroupsClient.RemoveUserFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.RemoveUserFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: RemoveUserFromGroupAsync(String, String, CancellationToken)
  nameWithType: IGroupsClient.RemoveUserFromGroupAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.RemoveUserFromGroupAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.RemoveUserFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RemoveUserFromGroupAsync
    nameWithType: IGroupsClient.RemoveUserFromGroupAsync
    fullName: Okta.Sdk.IGroupsClient.RemoveUserFromGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.RemoveUserFromGroupAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RemoveUserFromGroupAsync
    nameWithType: IGroupsClient.RemoveUserFromGroupAsync
    fullName: Okta.Sdk.IGroupsClient.RemoveUserFromGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.AddUserToGroupAsync*
  commentId: Overload:Okta.Sdk.GroupsClient.AddUserToGroupAsync
  name: AddUserToGroupAsync
  nameWithType: GroupsClient.AddUserToGroupAsync
  fullName: Okta.Sdk.GroupsClient.AddUserToGroupAsync
- uid: Okta.Sdk.IGroupsClient.AddUserToGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.AddUserToGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: AddUserToGroupAsync(String, String, CancellationToken)
  nameWithType: IGroupsClient.AddUserToGroupAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.AddUserToGroupAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.AddUserToGroupAsync(System.String,System.String,System.Threading.CancellationToken)
    name: AddUserToGroupAsync
    nameWithType: IGroupsClient.AddUserToGroupAsync
    fullName: Okta.Sdk.IGroupsClient.AddUserToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.AddUserToGroupAsync(System.String,System.String,System.Threading.CancellationToken)
    name: AddUserToGroupAsync
    nameWithType: IGroupsClient.AddUserToGroupAsync
    fullName: Okta.Sdk.IGroupsClient.AddUserToGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IGroupsClient.CreateGroupAsync(Okta.Sdk.CreateGroupOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.CreateGroupAsync(Okta.Sdk.CreateGroupOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: CreateGroupAsync(CreateGroupOptions, CancellationToken)
  nameWithType: IGroupsClient.CreateGroupAsync(CreateGroupOptions, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.CreateGroupAsync(Okta.Sdk.CreateGroupOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.CreateGroupAsync(Okta.Sdk.CreateGroupOptions,System.Threading.CancellationToken)
    name: CreateGroupAsync
    nameWithType: IGroupsClient.CreateGroupAsync
    fullName: Okta.Sdk.IGroupsClient.CreateGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateGroupOptions
    name: CreateGroupOptions
    nameWithType: CreateGroupOptions
    fullName: Okta.Sdk.CreateGroupOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.CreateGroupAsync(Okta.Sdk.CreateGroupOptions,System.Threading.CancellationToken)
    name: CreateGroupAsync
    nameWithType: IGroupsClient.CreateGroupAsync
    fullName: Okta.Sdk.IGroupsClient.CreateGroupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateGroupOptions
    name: CreateGroupOptions
    nameWithType: CreateGroupOptions
    fullName: Okta.Sdk.CreateGroupOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.CreateGroupOptions
  commentId: T:Okta.Sdk.CreateGroupOptions
  parent: Okta.Sdk
  name: CreateGroupOptions
  nameWithType: CreateGroupOptions
  fullName: Okta.Sdk.CreateGroupOptions
- uid: Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IGroupsClient
  isExternal: true
  name: DeleteGroupRuleAsync(String, CancellationToken)
  nameWithType: IGroupsClient.DeleteGroupRuleAsync(String, CancellationToken)
  fullName: Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync(System.String,System.Threading.CancellationToken)
    name: DeleteGroupRuleAsync
    nameWithType: IGroupsClient.DeleteGroupRuleAsync
    fullName: Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync(System.String,System.Threading.CancellationToken)
    name: DeleteGroupRuleAsync
    nameWithType: IGroupsClient.DeleteGroupRuleAsync
    fullName: Okta.Sdk.IGroupsClient.DeleteGroupRuleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.GroupsClient.GetAsyncEnumerator*
  commentId: Overload:Okta.Sdk.GroupsClient.GetAsyncEnumerator
  name: GetAsyncEnumerator
  nameWithType: GroupsClient.GetAsyncEnumerator
  fullName: Okta.Sdk.GroupsClient.GetAsyncEnumerator
- uid: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IGroup}.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IGroup}.GetAsyncEnumerator(System.Threading.CancellationToken)
  parent: System.Collections.Generic.IAsyncEnumerable{Okta.Sdk.IGroup}
  definition: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: IAsyncEnumerable<IGroup>.GetAsyncEnumerator(CancellationToken)
  fullName: System.Collections.Generic.IAsyncEnumerable<Okta.Sdk.IGroup>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: IAsyncEnumerable(Of IGroup).GetAsyncEnumerator(CancellationToken)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Okta.Sdk.IGroup).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable<IGroup>.GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable<Okta.Sdk.IGroup>.GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable(Of IGroup).GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable(Of Okta.Sdk.IGroup).GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerator{Okta.Sdk.IGroup}
  commentId: T:System.Collections.Generic.IAsyncEnumerator{Okta.Sdk.IGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerator`1
  name: IAsyncEnumerator<IGroup>
  nameWithType: IAsyncEnumerator<IGroup>
  fullName: System.Collections.Generic.IAsyncEnumerator<Okta.Sdk.IGroup>
  nameWithType.vb: IAsyncEnumerator(Of IGroup)
  fullName.vb: System.Collections.Generic.IAsyncEnumerator(Of Okta.Sdk.IGroup)
  name.vb: IAsyncEnumerator(Of IGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IGroup
    name: IGroup
    nameWithType: IGroup
    fullName: Okta.Sdk.IGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  isExternal: true
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator(CancellationToken)
  fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: IAsyncEnumerable(Of T).GetAsyncEnumerator(CancellationToken)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable(Of T).GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerator`1
  commentId: T:System.Collections.Generic.IAsyncEnumerator`1
  isExternal: true
  name: IAsyncEnumerator<T>
  nameWithType: IAsyncEnumerator<T>
  fullName: System.Collections.Generic.IAsyncEnumerator<T>
  nameWithType.vb: IAsyncEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerator(Of T)
  name.vb: IAsyncEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
