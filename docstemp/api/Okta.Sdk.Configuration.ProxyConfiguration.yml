### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.Configuration.ProxyConfiguration
  commentId: T:Okta.Sdk.Configuration.ProxyConfiguration
  id: ProxyConfiguration
  parent: Okta.Sdk.Configuration
  children:
  - Okta.Sdk.Configuration.ProxyConfiguration.DeepClone
  - Okta.Sdk.Configuration.ProxyConfiguration.Host
  - Okta.Sdk.Configuration.ProxyConfiguration.Password
  - Okta.Sdk.Configuration.ProxyConfiguration.Port
  - Okta.Sdk.Configuration.ProxyConfiguration.Username
  langs:
  - csharp
  - vb
  name: ProxyConfiguration
  nameWithType: ProxyConfiguration
  fullName: Okta.Sdk.Configuration.ProxyConfiguration
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/Configuration/ProxyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ProxyConfiguration
    path: ../src/Okta.Sdk/Configuration/ProxyConfiguration.cs
    startLine: 13
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nHTTP proxy configuration for an <xref href=\"Okta.Sdk.IOktaClient?text=OktaClient\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public sealed class ProxyConfiguration : IDeepCloneable<ProxyConfiguration>'
    content.vb: >-
      Public NotInheritable Class ProxyConfiguration

          Implements IDeepCloneable(Of ProxyConfiguration)
  inheritance:
  - System.Object
  implements:
  - Okta.Sdk.Internal.IDeepCloneable{Okta.Sdk.Configuration.ProxyConfiguration}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Okta.Sdk.Configuration.ProxyConfiguration.Port
  commentId: P:Okta.Sdk.Configuration.ProxyConfiguration.Port
  id: Port
  parent: Okta.Sdk.Configuration.ProxyConfiguration
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: ProxyConfiguration.Port
  fullName: Okta.Sdk.Configuration.ProxyConfiguration.Port
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/ProxyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Port
    path: ../src/Okta.Sdk/Configuration/ProxyConfiguration.cs
    startLine: 21
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the proxy port.\n"
  example: []
  syntax:
    content: public int? Port { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nThe proxy port.\n"
    content.vb: Public Property Port As Integer?
  overload: Okta.Sdk.Configuration.ProxyConfiguration.Port*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.ProxyConfiguration.Host
  commentId: P:Okta.Sdk.Configuration.ProxyConfiguration.Host
  id: Host
  parent: Okta.Sdk.Configuration.ProxyConfiguration
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: ProxyConfiguration.Host
  fullName: Okta.Sdk.Configuration.ProxyConfiguration.Host
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/ProxyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Host
    path: ../src/Okta.Sdk/Configuration/ProxyConfiguration.cs
    startLine: 29
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the proxy hostname.\n"
  example: []
  syntax:
    content: public string Host { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe proxy hostname.\n"
    content.vb: Public Property Host As String
  overload: Okta.Sdk.Configuration.ProxyConfiguration.Host*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.ProxyConfiguration.Username
  commentId: P:Okta.Sdk.Configuration.ProxyConfiguration.Username
  id: Username
  parent: Okta.Sdk.Configuration.ProxyConfiguration
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: ProxyConfiguration.Username
  fullName: Okta.Sdk.Configuration.ProxyConfiguration.Username
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/ProxyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Username
    path: ../src/Okta.Sdk/Configuration/ProxyConfiguration.cs
    startLine: 37
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the proxy username.\n"
  example: []
  syntax:
    content: public string Username { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe proxy username.\n"
    content.vb: Public Property Username As String
  overload: Okta.Sdk.Configuration.ProxyConfiguration.Username*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.ProxyConfiguration.Password
  commentId: P:Okta.Sdk.Configuration.ProxyConfiguration.Password
  id: Password
  parent: Okta.Sdk.Configuration.ProxyConfiguration
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: ProxyConfiguration.Password
  fullName: Okta.Sdk.Configuration.ProxyConfiguration.Password
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Configuration/ProxyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Password
    path: ../src/Okta.Sdk/Configuration/ProxyConfiguration.cs
    startLine: 45
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  summary: "\nGets or sets the proxy password.\n"
  example: []
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe proxy password.\n"
    content.vb: Public Property Password As String
  overload: Okta.Sdk.Configuration.ProxyConfiguration.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Configuration.ProxyConfiguration.DeepClone
  commentId: M:Okta.Sdk.Configuration.ProxyConfiguration.DeepClone
  id: DeepClone
  parent: Okta.Sdk.Configuration.ProxyConfiguration
  langs:
  - csharp
  - vb
  name: DeepClone()
  nameWithType: ProxyConfiguration.DeepClone()
  fullName: Okta.Sdk.Configuration.ProxyConfiguration.DeepClone()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Configuration/ProxyConfiguration.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeepClone
    path: ../src/Okta.Sdk/Configuration/ProxyConfiguration.cs
    startLine: 48
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk.Configuration
  example: []
  syntax:
    content: public ProxyConfiguration DeepClone()
    return:
      type: Okta.Sdk.Configuration.ProxyConfiguration
    content.vb: Public Function DeepClone As ProxyConfiguration
  overload: Okta.Sdk.Configuration.ProxyConfiguration.DeepClone*
  implements:
  - Okta.Sdk.Internal.IDeepCloneable{Okta.Sdk.Configuration.ProxyConfiguration}.DeepClone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk.IOktaClient
  commentId: T:Okta.Sdk.IOktaClient
  parent: Okta.Sdk
  name: IOktaClient
  nameWithType: IOktaClient
  fullName: Okta.Sdk.IOktaClient
- uid: Okta.Sdk.Configuration
  commentId: N:Okta.Sdk.Configuration
  name: Okta.Sdk.Configuration
  nameWithType: Okta.Sdk.Configuration
  fullName: Okta.Sdk.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Okta.Sdk.Internal.IDeepCloneable{Okta.Sdk.Configuration.ProxyConfiguration}
  commentId: T:Okta.Sdk.Internal.IDeepCloneable{Okta.Sdk.Configuration.ProxyConfiguration}
  parent: Okta.Sdk.Internal
  definition: Okta.Sdk.Internal.IDeepCloneable`1
  name: IDeepCloneable<ProxyConfiguration>
  nameWithType: IDeepCloneable<ProxyConfiguration>
  fullName: Okta.Sdk.Internal.IDeepCloneable<Okta.Sdk.Configuration.ProxyConfiguration>
  nameWithType.vb: IDeepCloneable(Of ProxyConfiguration)
  fullName.vb: Okta.Sdk.Internal.IDeepCloneable(Of Okta.Sdk.Configuration.ProxyConfiguration)
  name.vb: IDeepCloneable(Of ProxyConfiguration)
  spec.csharp:
  - uid: Okta.Sdk.Internal.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Okta.Sdk.Internal.IDeepCloneable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.Configuration.ProxyConfiguration
    name: ProxyConfiguration
    nameWithType: ProxyConfiguration
    fullName: Okta.Sdk.Configuration.ProxyConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.Internal.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Okta.Sdk.Internal.IDeepCloneable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.Configuration.ProxyConfiguration
    name: ProxyConfiguration
    nameWithType: ProxyConfiguration
    fullName: Okta.Sdk.Configuration.ProxyConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.Internal.IDeepCloneable`1
  commentId: T:Okta.Sdk.Internal.IDeepCloneable`1
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Okta.Sdk.Internal.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Okta.Sdk.Internal.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Okta.Sdk.Internal.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Okta.Sdk.Internal.IDeepCloneable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.Internal.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Okta.Sdk.Internal.IDeepCloneable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Internal
  commentId: N:Okta.Sdk.Internal
  name: Okta.Sdk.Internal
  nameWithType: Okta.Sdk.Internal
  fullName: Okta.Sdk.Internal
- uid: Okta.Sdk.Configuration.ProxyConfiguration.Port*
  commentId: Overload:Okta.Sdk.Configuration.ProxyConfiguration.Port
  name: Port
  nameWithType: ProxyConfiguration.Port
  fullName: Okta.Sdk.Configuration.ProxyConfiguration.Port
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Configuration.ProxyConfiguration.Host*
  commentId: Overload:Okta.Sdk.Configuration.ProxyConfiguration.Host
  name: Host
  nameWithType: ProxyConfiguration.Host
  fullName: Okta.Sdk.Configuration.ProxyConfiguration.Host
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.Configuration.ProxyConfiguration.Username*
  commentId: Overload:Okta.Sdk.Configuration.ProxyConfiguration.Username
  name: Username
  nameWithType: ProxyConfiguration.Username
  fullName: Okta.Sdk.Configuration.ProxyConfiguration.Username
- uid: Okta.Sdk.Configuration.ProxyConfiguration.Password*
  commentId: Overload:Okta.Sdk.Configuration.ProxyConfiguration.Password
  name: Password
  nameWithType: ProxyConfiguration.Password
  fullName: Okta.Sdk.Configuration.ProxyConfiguration.Password
- uid: Okta.Sdk.Configuration.ProxyConfiguration.DeepClone*
  commentId: Overload:Okta.Sdk.Configuration.ProxyConfiguration.DeepClone
  name: DeepClone
  nameWithType: ProxyConfiguration.DeepClone
  fullName: Okta.Sdk.Configuration.ProxyConfiguration.DeepClone
- uid: Okta.Sdk.Internal.IDeepCloneable{Okta.Sdk.Configuration.ProxyConfiguration}.DeepClone
  commentId: M:Okta.Sdk.Internal.IDeepCloneable{Okta.Sdk.Configuration.ProxyConfiguration}.DeepClone
  parent: Okta.Sdk.Internal.IDeepCloneable{Okta.Sdk.Configuration.ProxyConfiguration}
  definition: Okta.Sdk.Internal.IDeepCloneable`1.DeepClone
  name: DeepClone()
  nameWithType: IDeepCloneable<ProxyConfiguration>.DeepClone()
  fullName: Okta.Sdk.Internal.IDeepCloneable<Okta.Sdk.Configuration.ProxyConfiguration>.DeepClone()
  nameWithType.vb: IDeepCloneable(Of ProxyConfiguration).DeepClone()
  fullName.vb: Okta.Sdk.Internal.IDeepCloneable(Of Okta.Sdk.Configuration.ProxyConfiguration).DeepClone()
  spec.csharp:
  - uid: Okta.Sdk.Internal.IDeepCloneable`1.DeepClone
    name: DeepClone
    nameWithType: IDeepCloneable<ProxyConfiguration>.DeepClone
    fullName: Okta.Sdk.Internal.IDeepCloneable<Okta.Sdk.Configuration.ProxyConfiguration>.DeepClone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Internal.IDeepCloneable`1.DeepClone
    name: DeepClone
    nameWithType: IDeepCloneable(Of ProxyConfiguration).DeepClone
    fullName: Okta.Sdk.Internal.IDeepCloneable(Of Okta.Sdk.Configuration.ProxyConfiguration).DeepClone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Configuration.ProxyConfiguration
  commentId: T:Okta.Sdk.Configuration.ProxyConfiguration
  parent: Okta.Sdk.Configuration
  name: ProxyConfiguration
  nameWithType: ProxyConfiguration
  fullName: Okta.Sdk.Configuration.ProxyConfiguration
- uid: Okta.Sdk.Internal.IDeepCloneable`1.DeepClone
  commentId: M:Okta.Sdk.Internal.IDeepCloneable`1.DeepClone
  name: DeepClone()
  nameWithType: IDeepCloneable<T>.DeepClone()
  fullName: Okta.Sdk.Internal.IDeepCloneable<T>.DeepClone()
  nameWithType.vb: IDeepCloneable(Of T).DeepClone()
  fullName.vb: Okta.Sdk.Internal.IDeepCloneable(Of T).DeepClone()
  spec.csharp:
  - uid: Okta.Sdk.Internal.IDeepCloneable`1.DeepClone
    name: DeepClone
    nameWithType: IDeepCloneable<T>.DeepClone
    fullName: Okta.Sdk.Internal.IDeepCloneable<T>.DeepClone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Internal.IDeepCloneable`1.DeepClone
    name: DeepClone
    nameWithType: IDeepCloneable(Of T).DeepClone
    fullName: Okta.Sdk.Internal.IDeepCloneable(Of T).DeepClone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
