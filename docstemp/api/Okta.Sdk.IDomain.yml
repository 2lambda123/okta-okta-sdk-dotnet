### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IDomain
  commentId: T:Okta.Sdk.IDomain
  id: IDomain
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IDomain.CertificateSourceType
  - Okta.Sdk.IDomain.DnsRecords
  - Okta.Sdk.IDomain.DomainName
  - Okta.Sdk.IDomain.Id
  - Okta.Sdk.IDomain.PublicCertificate
  - Okta.Sdk.IDomain.ValidationStatus
  langs:
  - csharp
  - vb
  name: IDomain
  nameWithType: IDomain
  fullName: Okta.Sdk.IDomain
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomain.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IDomain
    path: ../src/Okta.Sdk/Generated/IDomain.Generated.cs
    startLine: 15
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: Represents a Domain resource in the Okta API.
  example: []
  syntax:
    content: 'public interface IDomain : IResource'
    content.vb: >-
      Public Interface IDomain

          Inherits IResource
  inheritedMembers:
  - Okta.Sdk.IResource.Item(System.String)
  - Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  - Okta.Sdk.IResource.GetData
  - Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  - Okta.Sdk.IResource.GetProperty``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IDomain.CertificateSourceType
  commentId: P:Okta.Sdk.IDomain.CertificateSourceType
  id: CertificateSourceType
  parent: Okta.Sdk.IDomain
  langs:
  - csharp
  - vb
  name: CertificateSourceType
  nameWithType: IDomain.CertificateSourceType
  fullName: Okta.Sdk.IDomain.CertificateSourceType
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomain.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CertificateSourceType
    path: ../src/Okta.Sdk/Generated/IDomain.Generated.cs
    startLine: 17
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: DomainCertificateSourceType CertificateSourceType { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.DomainCertificateSourceType
    content.vb: Property CertificateSourceType As DomainCertificateSourceType
  overload: Okta.Sdk.IDomain.CertificateSourceType*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IDomain.DnsRecords
  commentId: P:Okta.Sdk.IDomain.DnsRecords
  id: DnsRecords
  parent: Okta.Sdk.IDomain
  langs:
  - csharp
  - vb
  name: DnsRecords
  nameWithType: IDomain.DnsRecords
  fullName: Okta.Sdk.IDomain.DnsRecords
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomain.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DnsRecords
    path: ../src/Okta.Sdk/Generated/IDomain.Generated.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IList<IDnsRecord> DnsRecords { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Okta.Sdk.IDnsRecord}
    content.vb: Property DnsRecords As IList(Of IDnsRecord)
  overload: Okta.Sdk.IDomain.DnsRecords*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IDomain.DomainName
  commentId: P:Okta.Sdk.IDomain.DomainName
  id: DomainName
  parent: Okta.Sdk.IDomain
  langs:
  - csharp
  - vb
  name: DomainName
  nameWithType: IDomain.DomainName
  fullName: Okta.Sdk.IDomain.DomainName
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomain.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DomainName
    path: ../src/Okta.Sdk/Generated/IDomain.Generated.cs
    startLine: 21
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string DomainName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property DomainName As String
  overload: Okta.Sdk.IDomain.DomainName*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IDomain.Id
  commentId: P:Okta.Sdk.IDomain.Id
  id: Id
  parent: Okta.Sdk.IDomain
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IDomain.Id
  fullName: Okta.Sdk.IDomain.Id
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomain.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Id
    path: ../src/Okta.Sdk/Generated/IDomain.Generated.cs
    startLine: 23
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Okta.Sdk.IDomain.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Okta.Sdk.IDomain.PublicCertificate
  commentId: P:Okta.Sdk.IDomain.PublicCertificate
  id: PublicCertificate
  parent: Okta.Sdk.IDomain
  langs:
  - csharp
  - vb
  name: PublicCertificate
  nameWithType: IDomain.PublicCertificate
  fullName: Okta.Sdk.IDomain.PublicCertificate
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomain.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PublicCertificate
    path: ../src/Okta.Sdk/Generated/IDomain.Generated.cs
    startLine: 25
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: IDomainCertificateMetadata PublicCertificate { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IDomainCertificateMetadata
    content.vb: Property PublicCertificate As IDomainCertificateMetadata
  overload: Okta.Sdk.IDomain.PublicCertificate*
  modifiers.csharp:
  - get
  - set
- uid: Okta.Sdk.IDomain.ValidationStatus
  commentId: P:Okta.Sdk.IDomain.ValidationStatus
  id: ValidationStatus
  parent: Okta.Sdk.IDomain
  langs:
  - csharp
  - vb
  name: ValidationStatus
  nameWithType: IDomain.ValidationStatus
  fullName: Okta.Sdk.IDomain.ValidationStatus
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/IDomain.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ValidationStatus
    path: ../src/Okta.Sdk/Generated/IDomain.Generated.cs
    startLine: 27
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  syntax:
    content: DomainValidationStatus ValidationStatus { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.DomainValidationStatus
    content.vb: Property ValidationStatus As DomainValidationStatus
  overload: Okta.Sdk.IDomain.ValidationStatus*
  modifiers.csharp:
  - get
  - set
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IResource.Item(System.String)
  commentId: P:Okta.Sdk.IResource.Item(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: Item[String]
  nameWithType: IResource.Item[String]
  fullName: Okta.Sdk.IResource.Item[System.String]
  nameWithType.vb: IResource.Item(String)
  fullName.vb: Okta.Sdk.IResource.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetArrayProperty<T>(String)
  nameWithType: IResource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetArrayProperty<T>(System.String)
  nameWithType.vb: IResource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty<T>
    nameWithType: IResource.GetArrayProperty<T>
    fullName: Okta.Sdk.IResource.GetArrayProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty(Of T)
    nameWithType: IResource.GetArrayProperty(Of T)
    fullName: Okta.Sdk.IResource.GetArrayProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetData
  commentId: M:Okta.Sdk.IResource.GetData
  parent: Okta.Sdk.IResource
  name: GetData()
  nameWithType: IResource.GetData()
  fullName: Okta.Sdk.IResource.GetData()
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: IResource.SetProperty(String, Object)
  fullName: Okta.Sdk.IResource.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: IResource.GetProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetProperty<T>(System.String)
  nameWithType.vb: IResource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: IResource.GetProperty<T>
    fullName: Okta.Sdk.IResource.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: IResource.GetProperty(Of T)
    fullName: Okta.Sdk.IResource.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  parent: Okta.Sdk
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
- uid: Okta.Sdk.IDomain.CertificateSourceType*
  commentId: Overload:Okta.Sdk.IDomain.CertificateSourceType
  name: CertificateSourceType
  nameWithType: IDomain.CertificateSourceType
  fullName: Okta.Sdk.IDomain.CertificateSourceType
- uid: Okta.Sdk.DomainCertificateSourceType
  commentId: T:Okta.Sdk.DomainCertificateSourceType
  parent: Okta.Sdk
  name: DomainCertificateSourceType
  nameWithType: DomainCertificateSourceType
  fullName: Okta.Sdk.DomainCertificateSourceType
- uid: Okta.Sdk.IDomain.DnsRecords*
  commentId: Overload:Okta.Sdk.IDomain.DnsRecords
  name: DnsRecords
  nameWithType: IDomain.DnsRecords
  fullName: Okta.Sdk.IDomain.DnsRecords
- uid: System.Collections.Generic.IList{Okta.Sdk.IDnsRecord}
  commentId: T:System.Collections.Generic.IList{Okta.Sdk.IDnsRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IDnsRecord>
  nameWithType: IList<IDnsRecord>
  fullName: System.Collections.Generic.IList<Okta.Sdk.IDnsRecord>
  nameWithType.vb: IList(Of IDnsRecord)
  fullName.vb: System.Collections.Generic.IList(Of Okta.Sdk.IDnsRecord)
  name.vb: IList(Of IDnsRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IDnsRecord
    name: IDnsRecord
    nameWithType: IDnsRecord
    fullName: Okta.Sdk.IDnsRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IDnsRecord
    name: IDnsRecord
    nameWithType: IDnsRecord
    fullName: Okta.Sdk.IDnsRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.IDomain.DomainName*
  commentId: Overload:Okta.Sdk.IDomain.DomainName
  name: DomainName
  nameWithType: IDomain.DomainName
  fullName: Okta.Sdk.IDomain.DomainName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.IDomain.Id*
  commentId: Overload:Okta.Sdk.IDomain.Id
  name: Id
  nameWithType: IDomain.Id
  fullName: Okta.Sdk.IDomain.Id
- uid: Okta.Sdk.IDomain.PublicCertificate*
  commentId: Overload:Okta.Sdk.IDomain.PublicCertificate
  name: PublicCertificate
  nameWithType: IDomain.PublicCertificate
  fullName: Okta.Sdk.IDomain.PublicCertificate
- uid: Okta.Sdk.IDomainCertificateMetadata
  commentId: T:Okta.Sdk.IDomainCertificateMetadata
  parent: Okta.Sdk
  name: IDomainCertificateMetadata
  nameWithType: IDomainCertificateMetadata
  fullName: Okta.Sdk.IDomainCertificateMetadata
- uid: Okta.Sdk.IDomain.ValidationStatus*
  commentId: Overload:Okta.Sdk.IDomain.ValidationStatus
  name: ValidationStatus
  nameWithType: IDomain.ValidationStatus
  fullName: Okta.Sdk.IDomain.ValidationStatus
- uid: Okta.Sdk.DomainValidationStatus
  commentId: T:Okta.Sdk.DomainValidationStatus
  parent: Okta.Sdk
  name: DomainValidationStatus
  nameWithType: DomainValidationStatus
  fullName: Okta.Sdk.DomainValidationStatus
