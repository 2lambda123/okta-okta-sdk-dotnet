### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.CreateUserWithPasswordOptions
  commentId: T:Okta.Sdk.CreateUserWithPasswordOptions
  id: CreateUserWithPasswordOptions
  parent: Okta.Sdk
  children:
  - Okta.Sdk.CreateUserWithPasswordOptions.Activate
  - Okta.Sdk.CreateUserWithPasswordOptions.Password
  - Okta.Sdk.CreateUserWithPasswordOptions.Profile
  - Okta.Sdk.CreateUserWithPasswordOptions.RecoveryAnswer
  - Okta.Sdk.CreateUserWithPasswordOptions.RecoveryQuestion
  langs:
  - csharp
  - vb
  name: CreateUserWithPasswordOptions
  nameWithType: CreateUserWithPasswordOptions
  fullName: Okta.Sdk.CreateUserWithPasswordOptions
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/CreateUserWithPasswordOptions.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateUserWithPasswordOptions
    path: ../src/Okta.Sdk/CreateUserWithPasswordOptions.cs
    startLine: 12
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nContains the options for creating a new <xref href=\"Okta.Sdk.IUser?text=User\" data-throw-if-not-resolved=\"false\"></xref> with a password.\nUsed with <xref href=\"Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: See <a href="https://developer.okta.com/docs/api/resources/users.html#create-user-with-password">Create User with Password</a> in the documentation.
  example: []
  syntax:
    content: public sealed class CreateUserWithPasswordOptions
    content.vb: Public NotInheritable Class CreateUserWithPasswordOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Okta.Sdk.CreateUserWithPasswordOptions.Profile
  commentId: P:Okta.Sdk.CreateUserWithPasswordOptions.Profile
  id: Profile
  parent: Okta.Sdk.CreateUserWithPasswordOptions
  langs:
  - csharp
  - vb
  name: Profile
  nameWithType: CreateUserWithPasswordOptions.Profile
  fullName: Okta.Sdk.CreateUserWithPasswordOptions.Profile
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateUserWithPasswordOptions.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Profile
    path: ../src/Okta.Sdk/CreateUserWithPasswordOptions.cs
    startLine: 20
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the new user&apos;s profile.\n"
  example: []
  syntax:
    content: public UserProfile Profile { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.UserProfile
      description: "\nThe user&apos;s profile.\n"
    content.vb: Public Property Profile As UserProfile
  overload: Okta.Sdk.CreateUserWithPasswordOptions.Profile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateUserWithPasswordOptions.Activate
  commentId: P:Okta.Sdk.CreateUserWithPasswordOptions.Activate
  id: Activate
  parent: Okta.Sdk.CreateUserWithPasswordOptions
  langs:
  - csharp
  - vb
  name: Activate
  nameWithType: CreateUserWithPasswordOptions.Activate
  fullName: Okta.Sdk.CreateUserWithPasswordOptions.Activate
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateUserWithPasswordOptions.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Activate
    path: ../src/Okta.Sdk/CreateUserWithPasswordOptions.cs
    startLine: 29
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets a value indicating whether the new user should be activated immediately.\n"
  remarks: The default value is <code>true</code> (users will be activated immediately).
  example: []
  syntax:
    content: public bool Activate { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\nWhether the new user should be activated immediately.\n"
    content.vb: Public Property Activate As Boolean
  overload: Okta.Sdk.CreateUserWithPasswordOptions.Activate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateUserWithPasswordOptions.Password
  commentId: P:Okta.Sdk.CreateUserWithPasswordOptions.Password
  id: Password
  parent: Okta.Sdk.CreateUserWithPasswordOptions
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: CreateUserWithPasswordOptions.Password
  fullName: Okta.Sdk.CreateUserWithPasswordOptions.Password
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateUserWithPasswordOptions.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Password
    path: ../src/Okta.Sdk/CreateUserWithPasswordOptions.cs
    startLine: 37
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the new user&apos;s password.\n"
  example: []
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe new user&apos;s password.\n"
    content.vb: Public Property Password As String
  overload: Okta.Sdk.CreateUserWithPasswordOptions.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateUserWithPasswordOptions.RecoveryQuestion
  commentId: P:Okta.Sdk.CreateUserWithPasswordOptions.RecoveryQuestion
  id: RecoveryQuestion
  parent: Okta.Sdk.CreateUserWithPasswordOptions
  langs:
  - csharp
  - vb
  name: RecoveryQuestion
  nameWithType: CreateUserWithPasswordOptions.RecoveryQuestion
  fullName: Okta.Sdk.CreateUserWithPasswordOptions.RecoveryQuestion
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateUserWithPasswordOptions.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RecoveryQuestion
    path: ../src/Okta.Sdk/CreateUserWithPasswordOptions.cs
    startLine: 43
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the new user&apos;s recovery question.\n"
  example: []
  syntax:
    content: public string RecoveryQuestion { get; set; }
    parameters: []
    return:
      type: System.String
      description: The new user&apos;s recovery question.
    content.vb: Public Property RecoveryQuestion As String
  overload: Okta.Sdk.CreateUserWithPasswordOptions.RecoveryQuestion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.CreateUserWithPasswordOptions.RecoveryAnswer
  commentId: P:Okta.Sdk.CreateUserWithPasswordOptions.RecoveryAnswer
  id: RecoveryAnswer
  parent: Okta.Sdk.CreateUserWithPasswordOptions
  langs:
  - csharp
  - vb
  name: RecoveryAnswer
  nameWithType: CreateUserWithPasswordOptions.RecoveryAnswer
  fullName: Okta.Sdk.CreateUserWithPasswordOptions.RecoveryAnswer
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/CreateUserWithPasswordOptions.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RecoveryAnswer
    path: ../src/Okta.Sdk/CreateUserWithPasswordOptions.cs
    startLine: 49
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets or sets the new user&apos;s recovery answer.\n"
  example: []
  syntax:
    content: public string RecoveryAnswer { get; set; }
    parameters: []
    return:
      type: System.String
      description: The new user&apos;s recovery answer.
    content.vb: Public Property RecoveryAnswer As String
  overload: Okta.Sdk.CreateUserWithPasswordOptions.RecoveryAnswer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk.IUser
  commentId: T:Okta.Sdk.IUser
  parent: Okta.Sdk
  name: IUser
  nameWithType: IUser
  fullName: Okta.Sdk.IUser
- uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUsersClient
  isExternal: true
  name: CreateUserAsync(CreateUserWithPasswordOptions, CancellationToken)
  nameWithType: IUsersClient.CreateUserAsync(CreateUserWithPasswordOptions, CancellationToken)
  fullName: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateUserWithPasswordOptions
    name: CreateUserWithPasswordOptions
    nameWithType: CreateUserWithPasswordOptions
    fullName: Okta.Sdk.CreateUserWithPasswordOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IUsersClient.CreateUserAsync(Okta.Sdk.CreateUserWithPasswordOptions,System.Threading.CancellationToken)
    name: CreateUserAsync
    nameWithType: IUsersClient.CreateUserAsync
    fullName: Okta.Sdk.IUsersClient.CreateUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.CreateUserWithPasswordOptions
    name: CreateUserWithPasswordOptions
    nameWithType: CreateUserWithPasswordOptions
    fullName: Okta.Sdk.CreateUserWithPasswordOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IUsersClient
  commentId: T:Okta.Sdk.IUsersClient
  parent: Okta.Sdk
  name: IUsersClient
  nameWithType: IUsersClient
  fullName: Okta.Sdk.IUsersClient
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.CreateUserWithPasswordOptions.Profile*
  commentId: Overload:Okta.Sdk.CreateUserWithPasswordOptions.Profile
  name: Profile
  nameWithType: CreateUserWithPasswordOptions.Profile
  fullName: Okta.Sdk.CreateUserWithPasswordOptions.Profile
- uid: Okta.Sdk.UserProfile
  commentId: T:Okta.Sdk.UserProfile
  parent: Okta.Sdk
  name: UserProfile
  nameWithType: UserProfile
  fullName: Okta.Sdk.UserProfile
- uid: Okta.Sdk.CreateUserWithPasswordOptions.Activate*
  commentId: Overload:Okta.Sdk.CreateUserWithPasswordOptions.Activate
  name: Activate
  nameWithType: CreateUserWithPasswordOptions.Activate
  fullName: Okta.Sdk.CreateUserWithPasswordOptions.Activate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Okta.Sdk.CreateUserWithPasswordOptions.Password*
  commentId: Overload:Okta.Sdk.CreateUserWithPasswordOptions.Password
  name: Password
  nameWithType: CreateUserWithPasswordOptions.Password
  fullName: Okta.Sdk.CreateUserWithPasswordOptions.Password
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.CreateUserWithPasswordOptions.RecoveryQuestion*
  commentId: Overload:Okta.Sdk.CreateUserWithPasswordOptions.RecoveryQuestion
  name: RecoveryQuestion
  nameWithType: CreateUserWithPasswordOptions.RecoveryQuestion
  fullName: Okta.Sdk.CreateUserWithPasswordOptions.RecoveryQuestion
- uid: Okta.Sdk.CreateUserWithPasswordOptions.RecoveryAnswer*
  commentId: Overload:Okta.Sdk.CreateUserWithPasswordOptions.RecoveryAnswer
  name: RecoveryAnswer
  nameWithType: CreateUserWithPasswordOptions.RecoveryAnswer
  fullName: Okta.Sdk.CreateUserWithPasswordOptions.RecoveryAnswer
