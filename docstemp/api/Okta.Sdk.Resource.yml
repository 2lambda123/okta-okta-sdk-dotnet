### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.Resource
  commentId: T:Okta.Sdk.Resource
  id: Resource
  parent: Okta.Sdk
  children:
  - Okta.Sdk.Resource.#ctor
  - Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  - Okta.Sdk.Resource.GetBooleanProperty(System.String)
  - Okta.Sdk.Resource.GetClient
  - Okta.Sdk.Resource.GetData
  - Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  - Okta.Sdk.Resource.GetDoubleProperty(System.String)
  - Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  - Okta.Sdk.Resource.GetIntegerProperty(System.String)
  - Okta.Sdk.Resource.GetLongProperty(System.String)
  - Okta.Sdk.Resource.GetProperty``1(System.String)
  - Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  - Okta.Sdk.Resource.GetStringProperty(System.String)
  - Okta.Sdk.Resource.Item(System.String)
  - Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: Resource
  nameWithType: Resource
  fullName: Okta.Sdk.Resource
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Resource
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 17
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nRepresents a resource in the Okta API.\n"
  example: []
  syntax:
    content: 'public class Resource : IResource'
    content.vb: >-
      Public Class Resource

          Implements IResource
  inheritance:
  - System.Object
  derivedClasses:
  - Okta.Sdk.AccessPolicyConstraint
  - Okta.Sdk.AccessPolicyConstraints
  - Okta.Sdk.AccessPolicyRuleApplicationSignOn
  - Okta.Sdk.AccessPolicyRuleCustomCondition
  - Okta.Sdk.AcsEndpoint
  - Okta.Sdk.ActivateFactorRequest
  - Okta.Sdk.ApiError
  - Okta.Sdk.ApiErrorCause
  - Okta.Sdk.AppAndInstanceConditionEvaluatorAppOrInstance
  - Okta.Sdk.AppAndInstancePolicyRuleCondition
  - Okta.Sdk.AppInstancePolicyRuleCondition
  - Okta.Sdk.Application
  - Okta.Sdk.ApplicationAccessibility
  - Okta.Sdk.ApplicationCredentials
  - Okta.Sdk.ApplicationCredentialsOAuthClient
  - Okta.Sdk.ApplicationCredentialsSigning
  - Okta.Sdk.ApplicationCredentialsUsernameTemplate
  - Okta.Sdk.ApplicationFeature
  - Okta.Sdk.ApplicationGroupAssignment
  - Okta.Sdk.ApplicationLicensing
  - Okta.Sdk.ApplicationSettings
  - Okta.Sdk.ApplicationSettingsApplication
  - Okta.Sdk.ApplicationSettingsNotes
  - Okta.Sdk.ApplicationSettingsNotifications
  - Okta.Sdk.ApplicationSettingsNotificationsVpn
  - Okta.Sdk.ApplicationSettingsNotificationsVpnNetwork
  - Okta.Sdk.ApplicationVisibility
  - Okta.Sdk.ApplicationVisibilityHide
  - Okta.Sdk.AppLink
  - Okta.Sdk.AppUser
  - Okta.Sdk.AppUserCredentials
  - Okta.Sdk.AppUserPasswordCredential
  - Okta.Sdk.AssignRoleRequest
  - Okta.Sdk.AuthenticationProvider
  - Okta.Sdk.Authenticator
  - Okta.Sdk.AuthenticatorProvider
  - Okta.Sdk.AuthenticatorProviderConfiguration
  - Okta.Sdk.AuthenticatorProviderConfigurationUserNameTemplate
  - Okta.Sdk.AuthenticatorSettings
  - Okta.Sdk.AuthorizationServer
  - Okta.Sdk.AuthorizationServerCredentials
  - Okta.Sdk.AuthorizationServerCredentialsSigningConfig
  - Okta.Sdk.AuthorizationServerPolicy
  - Okta.Sdk.AuthorizationServerPolicyRule
  - Okta.Sdk.AuthorizationServerPolicyRuleActions
  - Okta.Sdk.AuthorizationServerPolicyRuleConditions
  - Okta.Sdk.AutoLoginApplicationSettingsSignOn
  - Okta.Sdk.BeforeScheduledActionPolicyRuleCondition
  - Okta.Sdk.Brand
  - Okta.Sdk.CallUserFactorProfile
  - Okta.Sdk.CapabilitiesCreateObject
  - Okta.Sdk.CapabilitiesObject
  - Okta.Sdk.CapabilitiesUpdateObject
  - Okta.Sdk.CatalogApplication
  - Okta.Sdk.ChangePasswordRequest
  - Okta.Sdk.ChannelBinding
  - Okta.Sdk.ClientPolicyCondition
  - Okta.Sdk.Compliance
  - Okta.Sdk.ContextPolicyRuleCondition
  - Okta.Sdk.CreateSessionRequest
  - Okta.Sdk.CreateUserRequest
  - Okta.Sdk.Csr
  - Okta.Sdk.CsrMetadata
  - Okta.Sdk.CsrMetadataSubject
  - Okta.Sdk.CsrMetadataSubjectAltNames
  - Okta.Sdk.CustomHotpUserFactorProfile
  - Okta.Sdk.DevicePolicyRuleCondition
  - Okta.Sdk.DevicePolicyRuleConditionPlatform
  - Okta.Sdk.DnsRecord
  - Okta.Sdk.Domain
  - Okta.Sdk.DomainCertificate
  - Okta.Sdk.DomainCertificateMetadata
  - Okta.Sdk.DomainListResponse
  - Okta.Sdk.Duration
  - Okta.Sdk.EmailTemplate
  - Okta.Sdk.EmailTemplateContent
  - Okta.Sdk.EmailTemplateCustomization
  - Okta.Sdk.EmailTemplateCustomizationRequest
  - Okta.Sdk.EmailTemplateTestRequest
  - Okta.Sdk.EmailUserFactorProfile
  - Okta.Sdk.EventHook
  - Okta.Sdk.EventHookChannel
  - Okta.Sdk.EventHookChannelConfig
  - Okta.Sdk.EventHookChannelConfigAuthScheme
  - Okta.Sdk.EventHookChannelConfigHeader
  - Okta.Sdk.EventSubscriptions
  - Okta.Sdk.Feature
  - Okta.Sdk.FeatureStage
  - Okta.Sdk.ForgotPasswordResponse
  - Okta.Sdk.GrantTypePolicyRuleCondition
  - Okta.Sdk.Group
  - Okta.Sdk.GroupCondition
  - Okta.Sdk.GroupPolicyRuleCondition
  - Okta.Sdk.GroupProfile
  - Okta.Sdk.GroupRule
  - Okta.Sdk.GroupRuleAction
  - Okta.Sdk.GroupRuleConditions
  - Okta.Sdk.GroupRuleExpression
  - Okta.Sdk.GroupRuleGroupAssignment
  - Okta.Sdk.GroupRuleGroupCondition
  - Okta.Sdk.GroupRulePeopleCondition
  - Okta.Sdk.GroupRuleUserCondition
  - Okta.Sdk.GroupSchema
  - Okta.Sdk.GroupSchemaAttribute
  - Okta.Sdk.GroupSchemaBase
  - Okta.Sdk.GroupSchemaBaseProperties
  - Okta.Sdk.GroupSchemaCustom
  - Okta.Sdk.GroupSchemaDefinitions
  - Okta.Sdk.HardwareUserFactorProfile
  - Okta.Sdk.IdentityProvider
  - Okta.Sdk.IdentityProviderApplicationUser
  - Okta.Sdk.IdentityProviderCredentials
  - Okta.Sdk.IdentityProviderCredentialsClient
  - Okta.Sdk.IdentityProviderCredentialsSigning
  - Okta.Sdk.IdentityProviderCredentialsTrust
  - Okta.Sdk.IdentityProviderPolicyRuleCondition
  - Okta.Sdk.IdpPolicyRuleAction
  - Okta.Sdk.IdpPolicyRuleActionProvider
  - Okta.Sdk.ImageUploadResponse
  - Okta.Sdk.InactivityPolicyRuleCondition
  - Okta.Sdk.InlineHook
  - Okta.Sdk.InlineHookChannel
  - Okta.Sdk.InlineHookChannelConfig
  - Okta.Sdk.InlineHookChannelConfigAuthScheme
  - Okta.Sdk.InlineHookChannelConfigHeaders
  - Okta.Sdk.InlineHookPayload
  - Okta.Sdk.InlineHookResponse
  - Okta.Sdk.InlineHookResponseCommands
  - Okta.Sdk.InlineHookResponseCommandValue
  - Okta.Sdk.IonField
  - Okta.Sdk.IonForm
  - Okta.Sdk.JsonWebKey
  - Okta.Sdk.JwkUse
  - Okta.Sdk.LifecycleCreateSettingObject
  - Okta.Sdk.LifecycleDeactivateSettingObject
  - Okta.Sdk.LifecycleExpirationPolicyRuleCondition
  - Okta.Sdk.LinkedObject
  - Okta.Sdk.LinkedObjectDetails
  - Okta.Sdk.LogActor
  - Okta.Sdk.LogAuthenticationContext
  - Okta.Sdk.LogClientInfo
  - Okta.Sdk.LogDebugContext
  - Okta.Sdk.LogEvent
  - Okta.Sdk.LogGeographicalContext
  - Okta.Sdk.LogGeolocation
  - Okta.Sdk.LogIpAddress
  - Okta.Sdk.LogIssuer
  - Okta.Sdk.LogOutcome
  - Okta.Sdk.LogRequest
  - Okta.Sdk.LogSecurityContext
  - Okta.Sdk.LogTarget
  - Okta.Sdk.LogTransaction
  - Okta.Sdk.LogUserAgent
  - Okta.Sdk.MDMEnrollmentPolicyRuleCondition
  - Okta.Sdk.NetworkZone
  - Okta.Sdk.NetworkZoneAddress
  - Okta.Sdk.NetworkZoneLocation
  - Okta.Sdk.OAuth2Actor
  - Okta.Sdk.OAuth2Claim
  - Okta.Sdk.OAuth2ClaimConditions
  - Okta.Sdk.OAuth2Client
  - Okta.Sdk.OAuth2RefreshToken
  - Okta.Sdk.OAuth2Scope
  - Okta.Sdk.OAuth2ScopeConsentGrant
  - Okta.Sdk.OAuth2ScopesMediationPolicyRuleCondition
  - Okta.Sdk.OAuth2Token
  - Okta.Sdk.OAuthApiError
  - Okta.Sdk.OktaSignOnPolicyRuleSignonActions
  - Okta.Sdk.OktaSignOnPolicyRuleSignonSessionActions
  - Okta.Sdk.OpenIdConnectApplicationIdpInitiatedLogin
  - Okta.Sdk.OpenIdConnectApplicationSettingsClient
  - Okta.Sdk.OpenIdConnectApplicationSettingsClientKeys
  - Okta.Sdk.OpenIdConnectApplicationSettingsRefreshToken
  - Okta.Sdk.OrgContactTypeObj
  - Okta.Sdk.OrgContactUser
  - Okta.Sdk.OrgOktaCommunicationSetting
  - Okta.Sdk.OrgOktaSupportSettingsObj
  - Okta.Sdk.OrgPreferences
  - Okta.Sdk.OrgSetting
  - Okta.Sdk.PasswordCredential
  - Okta.Sdk.PasswordCredentialHash
  - Okta.Sdk.PasswordCredentialHook
  - Okta.Sdk.PasswordDictionary
  - Okta.Sdk.PasswordDictionaryCommon
  - Okta.Sdk.PasswordExpirationPolicyRuleCondition
  - Okta.Sdk.PasswordPolicyAuthenticationProviderCondition
  - Okta.Sdk.PasswordPolicyDelegationSettings
  - Okta.Sdk.PasswordPolicyDelegationSettingsOptions
  - Okta.Sdk.PasswordPolicyPasswordSettings
  - Okta.Sdk.PasswordPolicyPasswordSettingsAge
  - Okta.Sdk.PasswordPolicyPasswordSettingsComplexity
  - Okta.Sdk.PasswordPolicyPasswordSettingsLockout
  - Okta.Sdk.PasswordPolicyRecoveryEmail
  - Okta.Sdk.PasswordPolicyRecoveryEmailProperties
  - Okta.Sdk.PasswordPolicyRecoveryEmailRecoveryToken
  - Okta.Sdk.PasswordPolicyRecoveryFactors
  - Okta.Sdk.PasswordPolicyRecoveryFactorSettings
  - Okta.Sdk.PasswordPolicyRecoveryQuestion
  - Okta.Sdk.PasswordPolicyRecoveryQuestionComplexity
  - Okta.Sdk.PasswordPolicyRecoveryQuestionProperties
  - Okta.Sdk.PasswordPolicyRecoverySettings
  - Okta.Sdk.PasswordPolicyRuleAction
  - Okta.Sdk.PasswordPolicySettings
  - Okta.Sdk.PasswordSettingObject
  - Okta.Sdk.PlatformConditionEvaluatorPlatform
  - Okta.Sdk.PlatformConditionEvaluatorPlatformOperatingSystem
  - Okta.Sdk.PlatformConditionEvaluatorPlatformOperatingSystemVersion
  - Okta.Sdk.PlatformPolicyRuleCondition
  - Okta.Sdk.Policy
  - Okta.Sdk.PolicyAccountLink
  - Okta.Sdk.PolicyAccountLinkFilter
  - Okta.Sdk.PolicyAccountLinkFilterGroups
  - Okta.Sdk.PolicyNetworkCondition
  - Okta.Sdk.PolicyPeopleCondition
  - Okta.Sdk.PolicyRule
  - Okta.Sdk.PolicyRuleActions
  - Okta.Sdk.PolicyRuleActionsEnroll
  - Okta.Sdk.PolicyRuleAuthContextCondition
  - Okta.Sdk.PolicyRuleConditions
  - Okta.Sdk.PolicySubject
  - Okta.Sdk.PolicyUserNameTemplate
  - Okta.Sdk.PreRegistrationInlineHook
  - Okta.Sdk.ProfileEnrollmentPolicyRuleAction
  - Okta.Sdk.ProfileEnrollmentPolicyRuleActivationRequirement
  - Okta.Sdk.ProfileEnrollmentPolicyRuleProfileAttribute
  - Okta.Sdk.ProfileMapping
  - Okta.Sdk.ProfileMappingProperty
  - Okta.Sdk.ProfileMappingSource
  - Okta.Sdk.ProfileSettingObject
  - Okta.Sdk.Protocol
  - Okta.Sdk.ProtocolAlgorithms
  - Okta.Sdk.ProtocolAlgorithmType
  - Okta.Sdk.ProtocolAlgorithmTypeSignature
  - Okta.Sdk.ProtocolEndpoint
  - Okta.Sdk.ProtocolEndpoints
  - Okta.Sdk.ProtocolRelayState
  - Okta.Sdk.ProtocolSettings
  - Okta.Sdk.Provisioning
  - Okta.Sdk.ProvisioningConditions
  - Okta.Sdk.ProvisioningConnection
  - Okta.Sdk.ProvisioningConnectionProfile
  - Okta.Sdk.ProvisioningConnectionRequest
  - Okta.Sdk.ProvisioningDeprovisionedCondition
  - Okta.Sdk.ProvisioningGroups
  - Okta.Sdk.ProvisioningSuspendedCondition
  - Okta.Sdk.PushUserFactorProfile
  - Okta.Sdk.RecoveryQuestionCredential
  - Okta.Sdk.ResetPasswordToken
  - Okta.Sdk.ResponseLinks
  - Okta.Sdk.RiskPolicyRuleCondition
  - Okta.Sdk.RiskScorePolicyRuleCondition
  - Okta.Sdk.Role
  - Okta.Sdk.SamlApplicationSettingsSignOn
  - Okta.Sdk.SamlAttributeStatement
  - Okta.Sdk.ScheduledUserLifecycleAction
  - Okta.Sdk.Scope
  - Okta.Sdk.SecurityQuestion
  - Okta.Sdk.SecurityQuestionUserFactorProfile
  - Okta.Sdk.Session
  - Okta.Sdk.SessionIdentityProvider
  - Okta.Sdk.SignOnInlineHook
  - Okta.Sdk.SingleLogout
  - Okta.Sdk.SmsTemplate
  - Okta.Sdk.SmsTemplateTranslations
  - Okta.Sdk.SmsUserFactorProfile
  - Okta.Sdk.SocialAuthToken
  - Okta.Sdk.SpCertificate
  - Okta.Sdk.Subscription
  - Okta.Sdk.TempPassword
  - Okta.Sdk.Theme
  - Okta.Sdk.ThemeResponse
  - Okta.Sdk.ThreatInsightConfiguration
  - Okta.Sdk.TokenAuthorizationServerPolicyRuleAction
  - Okta.Sdk.TokenAuthorizationServerPolicyRuleActionInlineHook
  - Okta.Sdk.TokenUserFactorProfile
  - Okta.Sdk.TotpUserFactorProfile
  - Okta.Sdk.TrustedOrigin
  - Okta.Sdk.U2fUserFactorProfile
  - Okta.Sdk.User
  - Okta.Sdk.UserActivationToken
  - Okta.Sdk.UserCondition
  - Okta.Sdk.UserCredentials
  - Okta.Sdk.UserFactor
  - Okta.Sdk.UserIdentifierConditionEvaluatorPattern
  - Okta.Sdk.UserIdentifierPolicyRuleCondition
  - Okta.Sdk.UserIdentityProviderLinkRequest
  - Okta.Sdk.UserLifecycleAttributePolicyRuleCondition
  - Okta.Sdk.UserPolicyRuleCondition
  - Okta.Sdk.UserProfile
  - Okta.Sdk.UserSchema
  - Okta.Sdk.UserSchemaAttribute
  - Okta.Sdk.UserSchemaAttributeEnum
  - Okta.Sdk.UserSchemaAttributeItems
  - Okta.Sdk.UserSchemaAttributeMaster
  - Okta.Sdk.UserSchemaAttributeMasterPriority
  - Okta.Sdk.UserSchemaAttributePermission
  - Okta.Sdk.UserSchemaBase
  - Okta.Sdk.UserSchemaBaseProperties
  - Okta.Sdk.UserSchemaDefinitions
  - Okta.Sdk.UserSchemaProperties
  - Okta.Sdk.UserSchemaPropertiesProfile
  - Okta.Sdk.UserSchemaPropertiesProfileItem
  - Okta.Sdk.UserSchemaPublic
  - Okta.Sdk.UserStatusPolicyRuleCondition
  - Okta.Sdk.UserType
  - Okta.Sdk.UserTypeCondition
  - Okta.Sdk.VerificationMethod
  - Okta.Sdk.VerifyFactorRequest
  - Okta.Sdk.VerifyUserFactorResponse
  - Okta.Sdk.WebAuthnUserFactorProfile
  - Okta.Sdk.WebUserFactorProfile
  implements:
  - Okta.Sdk.IResource
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Okta.Sdk.Resource.#ctor
  commentId: M:Okta.Sdk.Resource.#ctor
  id: '#ctor'
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: Resource()
  nameWithType: Resource.Resource()
  fullName: Okta.Sdk.Resource.Resource()
  type: Constructor
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: .ctor
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 29
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nInitializes a new instance of the <xref href=\"Okta.Sdk.Resource\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Resource()
    content.vb: Public Sub New
  overload: Okta.Sdk.Resource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Resource.GetClient
  commentId: M:Okta.Sdk.Resource.GetClient
  id: GetClient
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: GetClient()
  nameWithType: Resource.GetClient()
  fullName: Okta.Sdk.Resource.GetClient()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetClient
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 50
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets the <xref href=\"Okta.Sdk.IOktaClient?text=OktaClient\" data-throw-if-not-resolved=\"false\"></xref> that created this resource.\n"
  example: []
  syntax:
    content: protected IOktaClient GetClient()
    return:
      type: Okta.Sdk.IOktaClient
      description: The <xref href="Okta.Sdk.IOktaClient?text=OktaClient" data-throw-if-not-resolved="false"></xref> that created this resource.
    content.vb: Protected Function GetClient As IOktaClient
  overload: Okta.Sdk.Resource.GetClient*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Okta.Sdk.Resource.GetData
  commentId: M:Okta.Sdk.Resource.GetData
  id: GetData
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: GetData()
  nameWithType: Resource.GetData()
  fullName: Okta.Sdk.Resource.GetData()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetData
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 56
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IDictionary<string, object> GetData()
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Function GetData As IDictionary(Of String, Object)
  overload: Okta.Sdk.Resource.GetData*
  implements:
  - Okta.Sdk.IResource.GetData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Resource.Item(System.String)
  commentId: P:Okta.Sdk.Resource.Item(System.String)
  id: Item(System.String)
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: Resource.Item[String]
  fullName: Okta.Sdk.Resource.Item[System.String]
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: this[]
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 60
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Object
    content.vb: Public Property Item(name As String) As Object
  overload: Okta.Sdk.Resource.Item*
  implements:
  - Okta.Sdk.IResource.Item(System.String)
  nameWithType.vb: Resource.Item(String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Resource.Item(System.String)
  name.vb: Item(String)
- uid: Okta.Sdk.Resource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetProperty``1(System.String)
  id: GetProperty``1(System.String)
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: GetProperty<T>(String)
  nameWithType: Resource.GetProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetProperty<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetProperty
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 67
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public T GetProperty<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetProperty(Of T)(name As String) As T
  overload: Okta.Sdk.Resource.GetProperty*
  implements:
  - Okta.Sdk.IResource.GetProperty``1(System.String)
  nameWithType.vb: Resource.GetProperty(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Resource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
- uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  id: SetProperty(System.String,System.Object)
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: SetProperty(String, Object)
  nameWithType: Resource.SetProperty(String, Object)
  fullName: Okta.Sdk.Resource.SetProperty(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: SetProperty
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 149
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public void SetProperty(string name, object value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Sub SetProperty(name As String, value As Object)
  overload: Okta.Sdk.Resource.SetProperty*
  implements:
  - Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Resource.GetStringProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetStringProperty(System.String)
  id: GetStringProperty(System.String)
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: GetStringProperty(String)
  nameWithType: Resource.GetStringProperty(String)
  fullName: Okta.Sdk.Resource.GetStringProperty(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetStringProperty
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 172
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> property from the resource by name.\n"
  example: []
  syntax:
    content: protected string GetStringProperty(string name)
    parameters:
    - id: name
      type: System.String
      description: The property name.
    return:
      type: System.String
      description: The property value as a <xref href="System.String" data-throw-if-not-resolved="false"></xref>, or <code>null</code>.
    content.vb: Protected Function GetStringProperty(name As String) As String
  overload: Okta.Sdk.Resource.GetStringProperty*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetBooleanProperty(System.String)
  id: GetBooleanProperty(System.String)
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: GetBooleanProperty(String)
  nameWithType: Resource.GetBooleanProperty(String)
  fullName: Okta.Sdk.Resource.GetBooleanProperty(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetBooleanProperty
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 181
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> property from the resource by name.\n"
  example: []
  syntax:
    content: protected bool? GetBooleanProperty(string name)
    parameters:
    - id: name
      type: System.String
      description: The property name.
    return:
      type: System.Nullable{System.Boolean}
      description: The property value as a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>, or <code>null</code>.
    content.vb: Protected Function GetBooleanProperty(name As String) As Boolean?
  overload: Okta.Sdk.Resource.GetBooleanProperty*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The value is not equal to the value of the <xref href="System.Boolean.TrueString" data-throw-if-not-resolved="false"></xref> or <xref href="System.Boolean.FalseString" data-throw-if-not-resolved="false"></xref> field.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetIntegerProperty(System.String)
  id: GetIntegerProperty(System.String)
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: GetIntegerProperty(String)
  nameWithType: Resource.GetIntegerProperty(String)
  fullName: Okta.Sdk.Resource.GetIntegerProperty(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetIntegerProperty
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 199
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets an <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> property from the resource by name.\n"
  example: []
  syntax:
    content: protected int? GetIntegerProperty(string name)
    parameters:
    - id: name
      type: System.String
      description: The property name.
    return:
      type: System.Nullable{System.Int32}
      description: The property value as an <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>, or <code>null</code>.
    content.vb: Protected Function GetIntegerProperty(name As String) As Integer?
  overload: Okta.Sdk.Resource.GetIntegerProperty*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The value is not in the correct format.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: The value represents a number less than <xref href="System.Int32.MinValue" data-throw-if-not-resolved="false"></xref> or greater than <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Okta.Sdk.Resource.GetLongProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetLongProperty(System.String)
  id: GetLongProperty(System.String)
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: GetLongProperty(String)
  nameWithType: Resource.GetLongProperty(String)
  fullName: Okta.Sdk.Resource.GetLongProperty(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetLongProperty
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 217
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> property from the resource by name.\n"
  example: []
  syntax:
    content: protected long? GetLongProperty(string name)
    parameters:
    - id: name
      type: System.String
      description: The property name.
    return:
      type: System.Nullable{System.Int64}
      description: The property value as a <xref href="System.Int64" data-throw-if-not-resolved="false"></xref>, or <code>null</code>.
    content.vb: Protected Function GetLongProperty(name As String) As Long?
  overload: Okta.Sdk.Resource.GetLongProperty*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The value is not in the correct format.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: The value represents a number less than <xref href="System.Int64.MinValue" data-throw-if-not-resolved="false"></xref> or greater than <xref href="System.Int64.MaxValue" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetDoubleProperty(System.String)
  id: GetDoubleProperty(System.String)
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: GetDoubleProperty(String)
  nameWithType: Resource.GetDoubleProperty(String)
  fullName: Okta.Sdk.Resource.GetDoubleProperty(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetDoubleProperty
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 235
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> property from the resource by name.\n"
  example: []
  syntax:
    content: protected double? GetDoubleProperty(string name)
    parameters:
    - id: name
      type: System.String
      description: The property name.
    return:
      type: System.Nullable{System.Double}
      description: The property value as a <xref href="System.Double" data-throw-if-not-resolved="false"></xref>, or <code>null</code>.
    content.vb: Protected Function GetDoubleProperty(name As String) As Double?
  overload: Okta.Sdk.Resource.GetDoubleProperty*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The value is not in the correct format.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: The value represents a number less than <xref href="System.Double.MinValue" data-throw-if-not-resolved="false"></xref> or greater than <xref href="System.Double.MaxValue" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  id: GetDateTimeProperty(System.String)
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: GetDateTimeProperty(String)
  nameWithType: Resource.GetDateTimeProperty(String)
  fullName: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetDateTimeProperty
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 256
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a datetime property from the resource by name.\n"
  example: []
  syntax:
    content: protected DateTimeOffset? GetDateTimeProperty(string name)
    parameters:
    - id: name
      type: System.String
      description: The property name.
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: The property value as a <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref>, or <code>null</code>.
    content.vb: Protected Function GetDateTimeProperty(name As String) As DateTimeOffset?
  overload: Okta.Sdk.Resource.GetDateTimeProperty*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The offset is greater than 14 hours or less than -14 hours.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\nThe value does not contain a valid string representation of a date and time, or the value\ncontains the string representation of an offset value without a date or time.\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  id: GetArrayProperty``1(System.String)
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: GetArrayProperty<T>(String)
  nameWithType: Resource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetArrayProperty<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetArrayProperty
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 269
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IList<T> GetArrayProperty<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IList{{T}}
    content.vb: Public Function GetArrayProperty(Of T)(name As String) As IList(Of T)
  overload: Okta.Sdk.Resource.GetArrayProperty*
  implements:
  - Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  nameWithType.vb: Resource.GetArrayProperty(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Resource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
- uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  id: GetEnumProperty``1(System.String)
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: GetEnumProperty<TEnum>(String)
  nameWithType: Resource.GetEnumProperty<TEnum>(String)
  fullName: Okta.Sdk.Resource.GetEnumProperty<TEnum>(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetEnumProperty
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 283
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets a string enum property from the resource by name.\n"
  example: []
  syntax:
    content: >-
      protected TEnum GetEnumProperty<TEnum>(string name)

          where TEnum : StringEnum
    parameters:
    - id: name
      type: System.String
      description: The property name.
    typeParameters:
    - id: TEnum
      description: The enum type.
    return:
      type: '{TEnum}'
      description: The property value wrapped in the specified enum type, or <code>null</code>.
    content.vb: Protected Function GetEnumProperty(Of TEnum As StringEnum)(name As String) As TEnum
  overload: Okta.Sdk.Resource.GetEnumProperty*
  exceptions:
  - type: Okta.Sdk.OktaException
    commentId: T:Okta.Sdk.OktaException
    description: The enum type could not be created.
  nameWithType.vb: Resource.GetEnumProperty(Of TEnum)(String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Okta.Sdk.Resource.GetEnumProperty(Of TEnum)(System.String)
  name.vb: GetEnumProperty(Of TEnum)(String)
- uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  id: GetResourceProperty``1(System.String)
  parent: Okta.Sdk.Resource
  langs:
  - csharp
  - vb
  name: GetResourceProperty<T>(String)
  nameWithType: Resource.GetResourceProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetResourceProperty<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Resource.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetResourceProperty
    path: ../src/Okta.Sdk/Resource.cs
    startLine: 311
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nGets an embedded resource property by name.\n"
  example: []
  syntax:
    content: >-
      protected T GetResourceProperty<T>(string name)

          where T : Resource, new()
    parameters:
    - id: name
      type: System.String
      description: The property name.
    typeParameters:
    - id: T
      description: The type of the embedded resource.
    return:
      type: '{T}'
      description: The embedded resource, or <code>null</code>.
    content.vb: Protected Function GetResourceProperty(Of T As {Resource, New})(name As String) As T
  overload: Okta.Sdk.Resource.GetResourceProperty*
  nameWithType.vb: Resource.GetResourceProperty(Of T)(String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Okta.Sdk.Resource.GetResourceProperty(Of T)(System.String)
  name.vb: GetResourceProperty(Of T)(String)
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  parent: Okta.Sdk
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.Resource
  commentId: T:Okta.Sdk.Resource
  parent: Okta.Sdk
  name: Resource
  nameWithType: Resource
  fullName: Okta.Sdk.Resource
- uid: Okta.Sdk.Resource.#ctor*
  commentId: Overload:Okta.Sdk.Resource.#ctor
  name: Resource
  nameWithType: Resource.Resource
  fullName: Okta.Sdk.Resource.Resource
- uid: Okta.Sdk.IOktaClient
  commentId: T:Okta.Sdk.IOktaClient
  parent: Okta.Sdk
  name: IOktaClient
  nameWithType: IOktaClient
  fullName: Okta.Sdk.IOktaClient
- uid: Okta.Sdk.Resource.GetClient*
  commentId: Overload:Okta.Sdk.Resource.GetClient
  name: GetClient
  nameWithType: Resource.GetClient
  fullName: Okta.Sdk.Resource.GetClient
- uid: Okta.Sdk.Resource.GetData*
  commentId: Overload:Okta.Sdk.Resource.GetData
  name: GetData
  nameWithType: Resource.GetData
  fullName: Okta.Sdk.Resource.GetData
- uid: Okta.Sdk.IResource.GetData
  commentId: M:Okta.Sdk.IResource.GetData
  parent: Okta.Sdk.IResource
  name: GetData()
  nameWithType: IResource.GetData()
  fullName: Okta.Sdk.IResource.GetData()
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetData
    name: GetData
    nameWithType: IResource.GetData
    fullName: Okta.Sdk.IResource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.Resource.Item*
  commentId: Overload:Okta.Sdk.Resource.Item
  name: Item
  nameWithType: Resource.Item
  fullName: Okta.Sdk.Resource.Item
- uid: Okta.Sdk.IResource.Item(System.String)
  commentId: P:Okta.Sdk.IResource.Item(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: Item[String]
  nameWithType: IResource.Item[String]
  fullName: Okta.Sdk.IResource.Item[System.String]
  nameWithType.vb: IResource.Item(String)
  fullName.vb: Okta.Sdk.IResource.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Okta.Sdk.IResource.Item(System.String)
    name: Item
    nameWithType: IResource.Item
    fullName: Okta.Sdk.IResource.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.Resource.GetProperty*
  commentId: Overload:Okta.Sdk.Resource.GetProperty
  name: GetProperty
  nameWithType: Resource.GetProperty
  fullName: Okta.Sdk.Resource.GetProperty
- uid: Okta.Sdk.IResource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: IResource.GetProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetProperty<T>(System.String)
  nameWithType.vb: IResource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: IResource.GetProperty<T>
    fullName: Okta.Sdk.IResource.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: IResource.GetProperty(Of T)
    fullName: Okta.Sdk.IResource.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Okta.Sdk.Resource.SetProperty*
  commentId: Overload:Okta.Sdk.Resource.SetProperty
  name: SetProperty
  nameWithType: Resource.SetProperty
  fullName: Okta.Sdk.Resource.SetProperty
- uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.IResource.SetProperty(System.String,System.Object)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: IResource.SetProperty(String, Object)
  fullName: Okta.Sdk.IResource.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: IResource.SetProperty
    fullName: Okta.Sdk.IResource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetStringProperty*
  commentId: Overload:Okta.Sdk.Resource.GetStringProperty
  name: GetStringProperty
  nameWithType: Resource.GetStringProperty
  fullName: Okta.Sdk.Resource.GetStringProperty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Boolean.TrueString
  commentId: F:System.Boolean.TrueString
  isExternal: true
- uid: System.Boolean.FalseString
  commentId: F:System.Boolean.FalseString
  isExternal: true
- uid: System.FormatException
  commentId: T:System.FormatException
  isExternal: true
- uid: Okta.Sdk.Resource.GetBooleanProperty*
  commentId: Overload:Okta.Sdk.Resource.GetBooleanProperty
  name: GetBooleanProperty
  nameWithType: Resource.GetBooleanProperty
  fullName: Okta.Sdk.Resource.GetBooleanProperty
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32.MinValue
  commentId: F:System.Int32.MinValue
  isExternal: true
- uid: System.Int32.MaxValue
  commentId: F:System.Int32.MaxValue
  isExternal: true
- uid: System.OverflowException
  commentId: T:System.OverflowException
  isExternal: true
- uid: Okta.Sdk.Resource.GetIntegerProperty*
  commentId: Overload:Okta.Sdk.Resource.GetIntegerProperty
  name: GetIntegerProperty
  nameWithType: Resource.GetIntegerProperty
  fullName: Okta.Sdk.Resource.GetIntegerProperty
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  isExternal: true
- uid: System.Int64.MinValue
  commentId: F:System.Int64.MinValue
  isExternal: true
- uid: System.Int64.MaxValue
  commentId: F:System.Int64.MaxValue
  isExternal: true
- uid: Okta.Sdk.Resource.GetLongProperty*
  commentId: Overload:Okta.Sdk.Resource.GetLongProperty
  name: GetLongProperty
  nameWithType: Resource.GetLongProperty
  fullName: Okta.Sdk.Resource.GetLongProperty
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  isExternal: true
- uid: System.Double.MinValue
  commentId: F:System.Double.MinValue
  isExternal: true
- uid: System.Double.MaxValue
  commentId: F:System.Double.MaxValue
  isExternal: true
- uid: Okta.Sdk.Resource.GetDoubleProperty*
  commentId: Overload:Okta.Sdk.Resource.GetDoubleProperty
  name: GetDoubleProperty
  nameWithType: Resource.GetDoubleProperty
  fullName: Okta.Sdk.Resource.GetDoubleProperty
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Okta.Sdk.Resource.GetDateTimeProperty*
  commentId: Overload:Okta.Sdk.Resource.GetDateTimeProperty
  name: GetDateTimeProperty
  nameWithType: Resource.GetDateTimeProperty
  fullName: Okta.Sdk.Resource.GetDateTimeProperty
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetArrayProperty*
  commentId: Overload:Okta.Sdk.Resource.GetArrayProperty
  name: GetArrayProperty
  nameWithType: Resource.GetArrayProperty
  fullName: Okta.Sdk.Resource.GetArrayProperty
- uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.IResource.GetArrayProperty``1(System.String)
  parent: Okta.Sdk.IResource
  isExternal: true
  name: GetArrayProperty<T>(String)
  nameWithType: IResource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.IResource.GetArrayProperty<T>(System.String)
  nameWithType.vb: IResource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.IResource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty<T>
    nameWithType: IResource.GetArrayProperty<T>
    fullName: Okta.Sdk.IResource.GetArrayProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IResource.GetArrayProperty``1(System.String)
    name: GetArrayProperty(Of T)
    nameWithType: IResource.GetArrayProperty(Of T)
    fullName: Okta.Sdk.IResource.GetArrayProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.OktaException
  commentId: T:Okta.Sdk.OktaException
  parent: Okta.Sdk
  name: OktaException
  nameWithType: OktaException
  fullName: Okta.Sdk.OktaException
- uid: Okta.Sdk.Resource.GetEnumProperty*
  commentId: Overload:Okta.Sdk.Resource.GetEnumProperty
  name: GetEnumProperty
  nameWithType: Resource.GetEnumProperty
  fullName: Okta.Sdk.Resource.GetEnumProperty
- uid: '{TEnum}'
  commentId: '!:TEnum'
  definition: TEnum
  name: TEnum
  nameWithType: TEnum
  fullName: TEnum
- uid: TEnum
  commentId: '!:TEnum'
  name: TEnum
  nameWithType: TEnum
  fullName: TEnum
- uid: Okta.Sdk.Resource.GetResourceProperty*
  commentId: Overload:Okta.Sdk.Resource.GetResourceProperty
  name: GetResourceProperty
  nameWithType: Resource.GetResourceProperty
  fullName: Okta.Sdk.Resource.GetResourceProperty
