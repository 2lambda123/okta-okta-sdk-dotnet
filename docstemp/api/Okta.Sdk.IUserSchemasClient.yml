### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.IUserSchemasClient
  commentId: T:Okta.Sdk.IUserSchemasClient
  id: IUserSchemasClient
  parent: Okta.Sdk
  children:
  - Okta.Sdk.IUserSchemasClient.GetApplicationUserSchemaAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IUserSchemasClient.GetUserSchemaAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IUserSchemasClient.UpdateApplicationUserProfileAsync(Okta.Sdk.IUserSchema,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.IUserSchemasClient.UpdateUserProfileAsync(Okta.Sdk.IUserSchema,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IUserSchemasClient
  nameWithType: IUserSchemasClient
  fullName: Okta.Sdk.IUserSchemasClient
  type: Interface
  source:
    remote:
      path: src/Okta.Sdk/Generated/IUserSchemasClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: IUserSchemasClient
    path: ../src/Okta.Sdk/Generated/IUserSchemasClient.Generated.cs
    startLine: 15
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: A client that works with Okta UserSchema resources.
  example: []
  syntax:
    content: public interface IUserSchemasClient
    content.vb: Public Interface IUserSchemasClient
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Okta.Sdk.IUserSchemasClient.GetApplicationUserSchemaAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUserSchemasClient.GetApplicationUserSchemaAsync(System.String,System.Threading.CancellationToken)
  id: GetApplicationUserSchemaAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUserSchemasClient
  langs:
  - csharp
  - vb
  name: GetApplicationUserSchemaAsync(String, CancellationToken)
  nameWithType: IUserSchemasClient.GetApplicationUserSchemaAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUserSchemasClient.GetApplicationUserSchemaAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IUserSchemasClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetApplicationUserSchemaAsync
    path: ../src/Okta.Sdk/Generated/IUserSchemasClient.Generated.cs
    startLine: 23
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nFetches the Schema for an App User\n"
  example: []
  syntax:
    content: Task<IUserSchema> GetApplicationUserSchemaAsync(string appInstanceId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appInstanceId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserSchema}
      description: The <xref href="Okta.Sdk.IUserSchema" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetApplicationUserSchemaAsync(appInstanceId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IUserSchema)
  overload: Okta.Sdk.IUserSchemasClient.GetApplicationUserSchemaAsync*
- uid: Okta.Sdk.IUserSchemasClient.UpdateApplicationUserProfileAsync(Okta.Sdk.IUserSchema,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUserSchemasClient.UpdateApplicationUserProfileAsync(Okta.Sdk.IUserSchema,System.String,System.Threading.CancellationToken)
  id: UpdateApplicationUserProfileAsync(Okta.Sdk.IUserSchema,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUserSchemasClient
  langs:
  - csharp
  - vb
  name: UpdateApplicationUserProfileAsync(IUserSchema, String, CancellationToken)
  nameWithType: IUserSchemasClient.UpdateApplicationUserProfileAsync(IUserSchema, String, CancellationToken)
  fullName: Okta.Sdk.IUserSchemasClient.UpdateApplicationUserProfileAsync(Okta.Sdk.IUserSchema, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IUserSchemasClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateApplicationUserProfileAsync
    path: ../src/Okta.Sdk/Generated/IUserSchemasClient.Generated.cs
    startLine: 32
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nPartial updates on the User Profile properties of the Application User Schema.\n"
  example: []
  syntax:
    content: Task<IUserSchema> UpdateApplicationUserProfileAsync(IUserSchema body, string appInstanceId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: body
      type: Okta.Sdk.IUserSchema
      description: The <xref href="Okta.Sdk.IUserSchema" data-throw-if-not-resolved="false"></xref> resource.
    - id: appInstanceId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserSchema}
      description: The <xref href="Okta.Sdk.IUserSchema" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdateApplicationUserProfileAsync(body As IUserSchema, appInstanceId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IUserSchema)
  overload: Okta.Sdk.IUserSchemasClient.UpdateApplicationUserProfileAsync*
- uid: Okta.Sdk.IUserSchemasClient.GetUserSchemaAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUserSchemasClient.GetUserSchemaAsync(System.String,System.Threading.CancellationToken)
  id: GetUserSchemaAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUserSchemasClient
  langs:
  - csharp
  - vb
  name: GetUserSchemaAsync(String, CancellationToken)
  nameWithType: IUserSchemasClient.GetUserSchemaAsync(String, CancellationToken)
  fullName: Okta.Sdk.IUserSchemasClient.GetUserSchemaAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IUserSchemasClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetUserSchemaAsync
    path: ../src/Okta.Sdk/Generated/IUserSchemasClient.Generated.cs
    startLine: 40
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nFetches the schema for a Schema Id.\n"
  example: []
  syntax:
    content: Task<IUserSchema> GetUserSchemaAsync(string schemaId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: schemaId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserSchema}
      description: The <xref href="Okta.Sdk.IUserSchema" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function GetUserSchemaAsync(schemaId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IUserSchema)
  overload: Okta.Sdk.IUserSchemasClient.GetUserSchemaAsync*
- uid: Okta.Sdk.IUserSchemasClient.UpdateUserProfileAsync(Okta.Sdk.IUserSchema,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IUserSchemasClient.UpdateUserProfileAsync(Okta.Sdk.IUserSchema,System.String,System.Threading.CancellationToken)
  id: UpdateUserProfileAsync(Okta.Sdk.IUserSchema,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IUserSchemasClient
  langs:
  - csharp
  - vb
  name: UpdateUserProfileAsync(IUserSchema, String, CancellationToken)
  nameWithType: IUserSchemasClient.UpdateUserProfileAsync(IUserSchema, String, CancellationToken)
  fullName: Okta.Sdk.IUserSchemasClient.UpdateUserProfileAsync(Okta.Sdk.IUserSchema, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/IUserSchemasClient.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateUserProfileAsync
    path: ../src/Okta.Sdk/Generated/IUserSchemasClient.Generated.cs
    startLine: 49
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  summary: "\nPartial updates on the User Profile properties of the user schema.\n"
  example: []
  syntax:
    content: Task<IUserSchema> UpdateUserProfileAsync(IUserSchema userSchema, string schemaId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userSchema
      type: Okta.Sdk.IUserSchema
      description: The <xref href="Okta.Sdk.IUserSchema" data-throw-if-not-resolved="false"></xref> resource.
    - id: schemaId
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IUserSchema}
      description: The <xref href="Okta.Sdk.IUserSchema" data-throw-if-not-resolved="false"></xref> response.
    content.vb: Function UpdateUserProfileAsync(userSchema As IUserSchema, schemaId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IUserSchema)
  overload: Okta.Sdk.IUserSchemasClient.UpdateUserProfileAsync*
references:
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: Okta.Sdk.IUserSchema
  commentId: T:Okta.Sdk.IUserSchema
  parent: Okta.Sdk
  name: IUserSchema
  nameWithType: IUserSchema
  fullName: Okta.Sdk.IUserSchema
- uid: Okta.Sdk.IUserSchemasClient.GetApplicationUserSchemaAsync*
  commentId: Overload:Okta.Sdk.IUserSchemasClient.GetApplicationUserSchemaAsync
  name: GetApplicationUserSchemaAsync
  nameWithType: IUserSchemasClient.GetApplicationUserSchemaAsync
  fullName: Okta.Sdk.IUserSchemasClient.GetApplicationUserSchemaAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Okta.Sdk.IUserSchema}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IUserSchema}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IUserSchema>
  nameWithType: Task<IUserSchema>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IUserSchema>
  nameWithType.vb: Task(Of IUserSchema)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IUserSchema)
  name.vb: Task(Of IUserSchema)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IUserSchema
    name: IUserSchema
    nameWithType: IUserSchema
    fullName: Okta.Sdk.IUserSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IUserSchema
    name: IUserSchema
    nameWithType: IUserSchema
    fullName: Okta.Sdk.IUserSchema
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.IUserSchemasClient.UpdateApplicationUserProfileAsync*
  commentId: Overload:Okta.Sdk.IUserSchemasClient.UpdateApplicationUserProfileAsync
  name: UpdateApplicationUserProfileAsync
  nameWithType: IUserSchemasClient.UpdateApplicationUserProfileAsync
  fullName: Okta.Sdk.IUserSchemasClient.UpdateApplicationUserProfileAsync
- uid: Okta.Sdk.IUserSchemasClient.GetUserSchemaAsync*
  commentId: Overload:Okta.Sdk.IUserSchemasClient.GetUserSchemaAsync
  name: GetUserSchemaAsync
  nameWithType: IUserSchemasClient.GetUserSchemaAsync
  fullName: Okta.Sdk.IUserSchemasClient.GetUserSchemaAsync
- uid: Okta.Sdk.IUserSchemasClient.UpdateUserProfileAsync*
  commentId: Overload:Okta.Sdk.IUserSchemasClient.UpdateUserProfileAsync
  name: UpdateUserProfileAsync
  nameWithType: IUserSchemasClient.UpdateUserProfileAsync
  fullName: Okta.Sdk.IUserSchemasClient.UpdateUserProfileAsync
