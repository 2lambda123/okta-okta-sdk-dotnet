### YamlMime:ManagedReference
items:
- uid: Okta.Sdk.Application
  commentId: T:Okta.Sdk.Application
  id: Application
  parent: Okta.Sdk
  children:
  - Okta.Sdk.Application.Accessibility
  - Okta.Sdk.Application.ActivateAsync(System.Threading.CancellationToken)
  - Okta.Sdk.Application.AssignUserToApplicationAsync(Okta.Sdk.IAppUser,System.Threading.CancellationToken)
  - Okta.Sdk.Application.CloneApplicationKeyAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.Created
  - Okta.Sdk.Application.Credentials
  - Okta.Sdk.Application.DeactivateAsync(System.Threading.CancellationToken)
  - Okta.Sdk.Application.Features
  - Okta.Sdk.Application.GenerateCsrAsync(Okta.Sdk.ICsrMetadata,System.Threading.CancellationToken)
  - Okta.Sdk.Application.GenerateKeyAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)
  - Okta.Sdk.Application.GetAccessPolicyId
  - Okta.Sdk.Application.GetApplicationGroupAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.GetApplicationKeyAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.GetApplicationUserAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.GetCsrAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.GetFeatureForApplicationAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.GetOAuth2TokenAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.GetScopeConsentGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant,System.Threading.CancellationToken)
  - Okta.Sdk.Application.Id
  - Okta.Sdk.Application.Label
  - Okta.Sdk.Application.LastUpdated
  - Okta.Sdk.Application.Licensing
  - Okta.Sdk.Application.ListApplicationUsers(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  - Okta.Sdk.Application.ListCsrs
  - Okta.Sdk.Application.ListGroupAssignments(System.String,System.String,System.Nullable{System.Int32},System.String)
  - Okta.Sdk.Application.ListKeys
  - Okta.Sdk.Application.ListOAuth2Tokens(System.String,System.String,System.Nullable{System.Int32})
  - Okta.Sdk.Application.ListScopeConsentGrants(System.String)
  - Okta.Sdk.Application.Name
  - Okta.Sdk.Application.Profile
  - Okta.Sdk.Application.PublishBinaryCerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.PublishBinaryDerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.PublishBinaryPemCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.PublishCerCertAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.PublishDerCertAsync(System.String,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.RevokeCsrAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.RevokeOAuth2TokenForApplicationAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.RevokeOAuth2TokensAsync(System.Threading.CancellationToken)
  - Okta.Sdk.Application.RevokeScopeConsentGrantAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.Settings
  - Okta.Sdk.Application.SignOnMode
  - Okta.Sdk.Application.Status
  - Okta.Sdk.Application.UpdateApplicationPolicyAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject,System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.UploadApplicationLogoAsync(System.String,System.Threading.CancellationToken)
  - Okta.Sdk.Application.Visibility
  langs:
  - csharp
  - vb
  name: Application
  nameWithType: Application
  fullName: Okta.Sdk.Application
  type: Class
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Application
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 16
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: 'public class Application : Resource, IApplication, IResource'
    content.vb: >-
      Public Class Application

          Inherits Resource

          Implements IApplication, IResource
  inheritance:
  - System.Object
  - Okta.Sdk.Resource
  derivedClasses:
  - Okta.Sdk.AutoLoginApplication
  - Okta.Sdk.BasicAuthApplication
  - Okta.Sdk.BookmarkApplication
  - Okta.Sdk.BrowserPluginApplication
  - Okta.Sdk.OpenIdConnectApplication
  - Okta.Sdk.SamlApplication
  - Okta.Sdk.SecurePasswordStoreApplication
  - Okta.Sdk.WsFederationApplication
  implements:
  - Okta.Sdk.IApplication
  - Okta.Sdk.IResource
  inheritedMembers:
  - Okta.Sdk.Resource.GetClient
  - Okta.Sdk.Resource.GetData
  - Okta.Sdk.Resource.Item(System.String)
  - Okta.Sdk.Resource.GetProperty``1(System.String)
  - Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  - Okta.Sdk.Resource.GetStringProperty(System.String)
  - Okta.Sdk.Resource.GetBooleanProperty(System.String)
  - Okta.Sdk.Resource.GetIntegerProperty(System.String)
  - Okta.Sdk.Resource.GetLongProperty(System.String)
  - Okta.Sdk.Resource.GetDoubleProperty(System.String)
  - Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  - Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  - Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  - Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Okta.Sdk.Application.GetAccessPolicyId
  commentId: M:Okta.Sdk.Application.GetAccessPolicyId
  id: GetAccessPolicyId
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: GetAccessPolicyId()
  nameWithType: Application.GetAccessPolicyId()
  fullName: Okta.Sdk.Application.GetAccessPolicyId()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Application.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetAccessPolicyId
    path: ../src/Okta.Sdk/Application.cs
    startLine: 13
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public string GetAccessPolicyId()
    return:
      type: System.String
    content.vb: Public Function GetAccessPolicyId As String
  overload: Okta.Sdk.Application.GetAccessPolicyId*
  implements:
  - Okta.Sdk.IApplication.GetAccessPolicyId
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.Accessibility
  commentId: P:Okta.Sdk.Application.Accessibility
  id: Accessibility
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: Accessibility
  nameWithType: Application.Accessibility
  fullName: Okta.Sdk.Application.Accessibility
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Accessibility
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 19
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IApplicationAccessibility Accessibility { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IApplicationAccessibility
    content.vb: Public Property Accessibility As IApplicationAccessibility
  overload: Okta.Sdk.Application.Accessibility*
  implements:
  - Okta.Sdk.IApplication.Accessibility
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.Created
  commentId: P:Okta.Sdk.Application.Created
  id: Created
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: Application.Created
  fullName: Okta.Sdk.Application.Created
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Created
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 26
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public DateTimeOffset? Created { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public ReadOnly Property Created As DateTimeOffset?
  overload: Okta.Sdk.Application.Created*
  implements:
  - Okta.Sdk.IApplication.Created
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Application.Credentials
  commentId: P:Okta.Sdk.Application.Credentials
  id: Credentials
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: Application.Credentials
  fullName: Okta.Sdk.Application.Credentials
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Credentials
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 29
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IApplicationCredentials Credentials { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IApplicationCredentials
    content.vb: Public Property Credentials As IApplicationCredentials
  overload: Okta.Sdk.Application.Credentials*
  implements:
  - Okta.Sdk.IApplication.Credentials
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.Features
  commentId: P:Okta.Sdk.Application.Features
  id: Features
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: Features
  nameWithType: Application.Features
  fullName: Okta.Sdk.Application.Features
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Features
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 36
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IList<string> Features { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property Features As IList(Of String)
  overload: Okta.Sdk.Application.Features*
  implements:
  - Okta.Sdk.IApplication.Features
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.Id
  commentId: P:Okta.Sdk.Application.Id
  id: Id
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Application.Id
  fullName: Okta.Sdk.Application.Id
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Id
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 43
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Id As String
  overload: Okta.Sdk.Application.Id*
  implements:
  - Okta.Sdk.IApplication.Id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Application.Label
  commentId: P:Okta.Sdk.Application.Label
  id: Label
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: Application.Label
  fullName: Okta.Sdk.Application.Label
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Label
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 46
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public string Label { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Label As String
  overload: Okta.Sdk.Application.Label*
  implements:
  - Okta.Sdk.IApplication.Label
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.LastUpdated
  commentId: P:Okta.Sdk.Application.LastUpdated
  id: LastUpdated
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: LastUpdated
  nameWithType: Application.LastUpdated
  fullName: Okta.Sdk.Application.LastUpdated
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: LastUpdated
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 53
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public DateTimeOffset? LastUpdated { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public ReadOnly Property LastUpdated As DateTimeOffset?
  overload: Okta.Sdk.Application.LastUpdated*
  implements:
  - Okta.Sdk.IApplication.LastUpdated
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Application.Licensing
  commentId: P:Okta.Sdk.Application.Licensing
  id: Licensing
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: Licensing
  nameWithType: Application.Licensing
  fullName: Okta.Sdk.Application.Licensing
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Licensing
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 56
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IApplicationLicensing Licensing { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IApplicationLicensing
    content.vb: Public Property Licensing As IApplicationLicensing
  overload: Okta.Sdk.Application.Licensing*
  implements:
  - Okta.Sdk.IApplication.Licensing
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.Name
  commentId: P:Okta.Sdk.Application.Name
  id: Name
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Application.Name
  fullName: Okta.Sdk.Application.Name
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Name
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 63
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Okta.Sdk.Application.Name*
  implements:
  - Okta.Sdk.IApplication.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Application.Profile
  commentId: P:Okta.Sdk.Application.Profile
  id: Profile
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: Profile
  nameWithType: Application.Profile
  fullName: Okta.Sdk.Application.Profile
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Profile
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 66
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Resource Profile { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.Resource
    content.vb: Public Property Profile As Resource
  overload: Okta.Sdk.Application.Profile*
  implements:
  - Okta.Sdk.IApplication.Profile
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.Settings
  commentId: P:Okta.Sdk.Application.Settings
  id: Settings
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: Application.Settings
  fullName: Okta.Sdk.Application.Settings
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Settings
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 73
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IApplicationSettings Settings { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IApplicationSettings
    content.vb: Public Property Settings As IApplicationSettings
  overload: Okta.Sdk.Application.Settings*
  implements:
  - Okta.Sdk.IApplication.Settings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.SignOnMode
  commentId: P:Okta.Sdk.Application.SignOnMode
  id: SignOnMode
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: SignOnMode
  nameWithType: Application.SignOnMode
  fullName: Okta.Sdk.Application.SignOnMode
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: SignOnMode
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 80
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ApplicationSignOnMode SignOnMode { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.ApplicationSignOnMode
    content.vb: Public Property SignOnMode As ApplicationSignOnMode
  overload: Okta.Sdk.Application.SignOnMode*
  implements:
  - Okta.Sdk.IApplication.SignOnMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.Status
  commentId: P:Okta.Sdk.Application.Status
  id: Status
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Application.Status
  fullName: Okta.Sdk.Application.Status
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Status
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 87
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public string Status { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Status As String
  overload: Okta.Sdk.Application.Status*
  implements:
  - Okta.Sdk.IApplication.Status
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Okta.Sdk.Application.Visibility
  commentId: P:Okta.Sdk.Application.Visibility
  id: Visibility
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: Visibility
  nameWithType: Application.Visibility
  fullName: Okta.Sdk.Application.Visibility
  type: Property
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: Visibility
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 90
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public IApplicationVisibility Visibility { get; set; }
    parameters: []
    return:
      type: Okta.Sdk.IApplicationVisibility
    content.vb: Public Property Visibility As IApplicationVisibility
  overload: Okta.Sdk.Application.Visibility*
  implements:
  - Okta.Sdk.IApplication.Visibility
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.ActivateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.ActivateAsync(System.Threading.CancellationToken)
  id: ActivateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: ActivateAsync(CancellationToken)
  nameWithType: Application.ActivateAsync(CancellationToken)
  fullName: Okta.Sdk.Application.ActivateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ActivateAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 97
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task ActivateAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ActivateAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Application.ActivateAsync*
  implements:
  - Okta.Sdk.IApplication.ActivateAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.DeactivateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.DeactivateAsync(System.Threading.CancellationToken)
  id: DeactivateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: DeactivateAsync(CancellationToken)
  nameWithType: Application.DeactivateAsync(CancellationToken)
  fullName: Okta.Sdk.Application.DeactivateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: DeactivateAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 102
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task DeactivateAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeactivateAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Application.DeactivateAsync*
  implements:
  - Okta.Sdk.IApplication.DeactivateAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.ListApplicationUsers(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  commentId: M:Okta.Sdk.Application.ListApplicationUsers(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  id: ListApplicationUsers(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: ListApplicationUsers(String, String, String, Nullable<Int32>, String, String)
  nameWithType: Application.ListApplicationUsers(String, String, String, Nullable<Int32>, String, String)
  fullName: Okta.Sdk.Application.ListApplicationUsers(System.String, System.String, System.String, System.Nullable<System.Int32>, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListApplicationUsers
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 107
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IAppUser> ListApplicationUsers(string q = null, string query_scope = null, string after = null, int? limit = -1, string filter = null, string expand = null)
    parameters:
    - id: q
      type: System.String
    - id: query_scope
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    - id: filter
      type: System.String
    - id: expand
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IAppUser}
    content.vb: Public Function ListApplicationUsers(q As String = Nothing, query_scope As String = Nothing, after As String = Nothing, limit As Integer? = -1, filter As String = Nothing, expand As String = Nothing) As ICollectionClient(Of IAppUser)
  overload: Okta.Sdk.Application.ListApplicationUsers*
  implements:
  - Okta.Sdk.IApplication.ListApplicationUsers(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  nameWithType.vb: Application.ListApplicationUsers(String, String, String, Nullable(Of Int32), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Application.ListApplicationUsers(System.String, System.String, System.String, System.Nullable(Of System.Int32), System.String, System.String)
  name.vb: ListApplicationUsers(String, String, String, Nullable(Of Int32), String, String)
- uid: Okta.Sdk.Application.AssignUserToApplicationAsync(Okta.Sdk.IAppUser,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.AssignUserToApplicationAsync(Okta.Sdk.IAppUser,System.Threading.CancellationToken)
  id: AssignUserToApplicationAsync(Okta.Sdk.IAppUser,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: AssignUserToApplicationAsync(IAppUser, CancellationToken)
  nameWithType: Application.AssignUserToApplicationAsync(IAppUser, CancellationToken)
  fullName: Okta.Sdk.Application.AssignUserToApplicationAsync(Okta.Sdk.IAppUser, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: AssignUserToApplicationAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 112
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IAppUser> AssignUserToApplicationAsync(IAppUser appUser, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appUser
      type: Okta.Sdk.IAppUser
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAppUser}
    content.vb: Public Function AssignUserToApplicationAsync(appUser As IAppUser, cancellationToken As CancellationToken = Nothing) As Task(Of IAppUser)
  overload: Okta.Sdk.Application.AssignUserToApplicationAsync*
  implements:
  - Okta.Sdk.IApplication.AssignUserToApplicationAsync(Okta.Sdk.IAppUser,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.GetApplicationUserAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.GetApplicationUserAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetApplicationUserAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: GetApplicationUserAsync(String, String, CancellationToken)
  nameWithType: Application.GetApplicationUserAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Application.GetApplicationUserAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetApplicationUserAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 117
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IAppUser> GetApplicationUserAsync(string userId, string expand = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userId
      type: System.String
    - id: expand
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IAppUser}
    content.vb: Public Function GetApplicationUserAsync(userId As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IAppUser)
  overload: Okta.Sdk.Application.GetApplicationUserAsync*
  implements:
  - Okta.Sdk.IApplication.GetApplicationUserAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment,System.String,System.Threading.CancellationToken)
  id: CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: CreateApplicationGroupAssignmentAsync(IApplicationGroupAssignment, String, CancellationToken)
  nameWithType: Application.CreateApplicationGroupAssignmentAsync(IApplicationGroupAssignment, String, CancellationToken)
  fullName: Okta.Sdk.Application.CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CreateApplicationGroupAssignmentAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 122
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IApplicationGroupAssignment> CreateApplicationGroupAssignmentAsync(IApplicationGroupAssignment applicationGroupAssignment, string groupId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: applicationGroupAssignment
      type: Okta.Sdk.IApplicationGroupAssignment
    - id: groupId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplicationGroupAssignment}
    content.vb: Public Function CreateApplicationGroupAssignmentAsync(applicationGroupAssignment As IApplicationGroupAssignment, groupId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IApplicationGroupAssignment)
  overload: Okta.Sdk.Application.CreateApplicationGroupAssignmentAsync*
  implements:
  - Okta.Sdk.IApplication.CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.GetApplicationGroupAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.GetApplicationGroupAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetApplicationGroupAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: GetApplicationGroupAssignmentAsync(String, String, CancellationToken)
  nameWithType: Application.GetApplicationGroupAssignmentAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Application.GetApplicationGroupAssignmentAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetApplicationGroupAssignmentAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 127
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IApplicationGroupAssignment> GetApplicationGroupAssignmentAsync(string groupId, string expand = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: groupId
      type: System.String
    - id: expand
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplicationGroupAssignment}
    content.vb: Public Function GetApplicationGroupAssignmentAsync(groupId As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IApplicationGroupAssignment)
  overload: Okta.Sdk.Application.GetApplicationGroupAssignmentAsync*
  implements:
  - Okta.Sdk.IApplication.GetApplicationGroupAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.CloneApplicationKeyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.CloneApplicationKeyAsync(System.String,System.String,System.Threading.CancellationToken)
  id: CloneApplicationKeyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: CloneApplicationKeyAsync(String, String, CancellationToken)
  nameWithType: Application.CloneApplicationKeyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Application.CloneApplicationKeyAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: CloneApplicationKeyAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 132
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IJsonWebKey> CloneApplicationKeyAsync(string keyId, string targetAid, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: keyId
      type: System.String
    - id: targetAid
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
    content.vb: Public Function CloneApplicationKeyAsync(keyId As String, targetAid As String, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.Application.CloneApplicationKeyAsync*
  implements:
  - Okta.Sdk.IApplication.CloneApplicationKeyAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.GetApplicationKeyAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.GetApplicationKeyAsync(System.String,System.Threading.CancellationToken)
  id: GetApplicationKeyAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: GetApplicationKeyAsync(String, CancellationToken)
  nameWithType: Application.GetApplicationKeyAsync(String, CancellationToken)
  fullName: Okta.Sdk.Application.GetApplicationKeyAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetApplicationKeyAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 137
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IJsonWebKey> GetApplicationKeyAsync(string keyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: keyId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
    content.vb: Public Function GetApplicationKeyAsync(keyId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.Application.GetApplicationKeyAsync*
  implements:
  - Okta.Sdk.IApplication.GetApplicationKeyAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.ListGroupAssignments(System.String,System.String,System.Nullable{System.Int32},System.String)
  commentId: M:Okta.Sdk.Application.ListGroupAssignments(System.String,System.String,System.Nullable{System.Int32},System.String)
  id: ListGroupAssignments(System.String,System.String,System.Nullable{System.Int32},System.String)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: ListGroupAssignments(String, String, Nullable<Int32>, String)
  nameWithType: Application.ListGroupAssignments(String, String, Nullable<Int32>, String)
  fullName: Okta.Sdk.Application.ListGroupAssignments(System.String, System.String, System.Nullable<System.Int32>, System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListGroupAssignments
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 142
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IApplicationGroupAssignment> ListGroupAssignments(string q = null, string after = null, int? limit = -1, string expand = null)
    parameters:
    - id: q
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    - id: expand
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IApplicationGroupAssignment}
    content.vb: Public Function ListGroupAssignments(q As String = Nothing, after As String = Nothing, limit As Integer? = -1, expand As String = Nothing) As ICollectionClient(Of IApplicationGroupAssignment)
  overload: Okta.Sdk.Application.ListGroupAssignments*
  implements:
  - Okta.Sdk.IApplication.ListGroupAssignments(System.String,System.String,System.Nullable{System.Int32},System.String)
  nameWithType.vb: Application.ListGroupAssignments(String, String, Nullable(Of Int32), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Application.ListGroupAssignments(System.String, System.String, System.Nullable(Of System.Int32), System.String)
  name.vb: ListGroupAssignments(String, String, Nullable(Of Int32), String)
- uid: Okta.Sdk.Application.ListKeys
  commentId: M:Okta.Sdk.Application.ListKeys
  id: ListKeys
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: ListKeys()
  nameWithType: Application.ListKeys()
  fullName: Okta.Sdk.Application.ListKeys()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListKeys
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 147
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IJsonWebKey> ListKeys()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
    content.vb: Public Function ListKeys As ICollectionClient(Of IJsonWebKey)
  overload: Okta.Sdk.Application.ListKeys*
  implements:
  - Okta.Sdk.IApplication.ListKeys
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.GenerateKeyAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.GenerateKeyAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)
  id: GenerateKeyAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: GenerateKeyAsync(Nullable<Int32>, CancellationToken)
  nameWithType: Application.GenerateKeyAsync(Nullable<Int32>, CancellationToken)
  fullName: Okta.Sdk.Application.GenerateKeyAsync(System.Nullable<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GenerateKeyAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 152
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IJsonWebKey> GenerateKeyAsync(int? validityYears = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: validityYears
      type: System.Nullable{System.Int32}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
    content.vb: Public Function GenerateKeyAsync(validityYears As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.Application.GenerateKeyAsync*
  implements:
  - Okta.Sdk.IApplication.GenerateKeyAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)
  nameWithType.vb: Application.GenerateKeyAsync(Nullable(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Application.GenerateKeyAsync(System.Nullable(Of System.Int32), System.Threading.CancellationToken)
  name.vb: GenerateKeyAsync(Nullable(Of Int32), CancellationToken)
- uid: Okta.Sdk.Application.GenerateCsrAsync(Okta.Sdk.ICsrMetadata,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.GenerateCsrAsync(Okta.Sdk.ICsrMetadata,System.Threading.CancellationToken)
  id: GenerateCsrAsync(Okta.Sdk.ICsrMetadata,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: GenerateCsrAsync(ICsrMetadata, CancellationToken)
  nameWithType: Application.GenerateCsrAsync(ICsrMetadata, CancellationToken)
  fullName: Okta.Sdk.Application.GenerateCsrAsync(Okta.Sdk.ICsrMetadata, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GenerateCsrAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 157
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<ICsr> GenerateCsrAsync(ICsrMetadata metadata, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: metadata
      type: Okta.Sdk.ICsrMetadata
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.ICsr}
    content.vb: Public Function GenerateCsrAsync(metadata As ICsrMetadata, cancellationToken As CancellationToken = Nothing) As Task(Of ICsr)
  overload: Okta.Sdk.Application.GenerateCsrAsync*
  implements:
  - Okta.Sdk.IApplication.GenerateCsrAsync(Okta.Sdk.ICsrMetadata,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.GetCsrAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.GetCsrAsync(System.String,System.Threading.CancellationToken)
  id: GetCsrAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: GetCsrAsync(String, CancellationToken)
  nameWithType: Application.GetCsrAsync(String, CancellationToken)
  fullName: Okta.Sdk.Application.GetCsrAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetCsrAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 162
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<ICsr> GetCsrAsync(string csrId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: csrId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.ICsr}
    content.vb: Public Function GetCsrAsync(csrId As String, cancellationToken As CancellationToken = Nothing) As Task(Of ICsr)
  overload: Okta.Sdk.Application.GetCsrAsync*
  implements:
  - Okta.Sdk.IApplication.GetCsrAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.RevokeCsrAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.RevokeCsrAsync(System.String,System.Threading.CancellationToken)
  id: RevokeCsrAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: RevokeCsrAsync(String, CancellationToken)
  nameWithType: Application.RevokeCsrAsync(String, CancellationToken)
  fullName: Okta.Sdk.Application.RevokeCsrAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeCsrAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 167
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task RevokeCsrAsync(string csrId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: csrId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeCsrAsync(csrId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Application.RevokeCsrAsync*
  implements:
  - Okta.Sdk.IApplication.RevokeCsrAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.ListCsrs
  commentId: M:Okta.Sdk.Application.ListCsrs
  id: ListCsrs
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: ListCsrs()
  nameWithType: Application.ListCsrs()
  fullName: Okta.Sdk.Application.ListCsrs()
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListCsrs
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 172
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<ICsr> ListCsrs()
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.ICsr}
    content.vb: Public Function ListCsrs As ICollectionClient(Of ICsr)
  overload: Okta.Sdk.Application.ListCsrs*
  implements:
  - Okta.Sdk.IApplication.ListCsrs
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.PublishCerCertAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.PublishCerCertAsync(System.String,System.String,System.Threading.CancellationToken)
  id: PublishCerCertAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: PublishCerCertAsync(String, String, CancellationToken)
  nameWithType: Application.PublishCerCertAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Application.PublishCerCertAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PublishCerCertAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 177
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IJsonWebKey> PublishCerCertAsync(string certificate, string csrId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: certificate
      type: System.String
    - id: csrId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
    content.vb: Public Function PublishCerCertAsync(certificate As String, csrId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.Application.PublishCerCertAsync*
  implements:
  - Okta.Sdk.IApplication.PublishCerCertAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.PublishBinaryCerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.PublishBinaryCerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  id: PublishBinaryCerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: PublishBinaryCerCertAsync(Byte[], String, CancellationToken)
  nameWithType: Application.PublishBinaryCerCertAsync(Byte[], String, CancellationToken)
  fullName: Okta.Sdk.Application.PublishBinaryCerCertAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PublishBinaryCerCertAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 182
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IJsonWebKey> PublishBinaryCerCertAsync(byte[] certificate, string csrId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: certificate
      type: System.Byte[]
    - id: csrId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
    content.vb: Public Function PublishBinaryCerCertAsync(certificate As Byte(), csrId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.Application.PublishBinaryCerCertAsync*
  implements:
  - Okta.Sdk.IApplication.PublishBinaryCerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  nameWithType.vb: Application.PublishBinaryCerCertAsync(Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Application.PublishBinaryCerCertAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: PublishBinaryCerCertAsync(Byte(), String, CancellationToken)
- uid: Okta.Sdk.Application.PublishDerCertAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.PublishDerCertAsync(System.String,System.String,System.Threading.CancellationToken)
  id: PublishDerCertAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: PublishDerCertAsync(String, String, CancellationToken)
  nameWithType: Application.PublishDerCertAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Application.PublishDerCertAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PublishDerCertAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 187
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IJsonWebKey> PublishDerCertAsync(string certificate, string csrId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: certificate
      type: System.String
    - id: csrId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
    content.vb: Public Function PublishDerCertAsync(certificate As String, csrId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.Application.PublishDerCertAsync*
  implements:
  - Okta.Sdk.IApplication.PublishDerCertAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.PublishBinaryDerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.PublishBinaryDerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  id: PublishBinaryDerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: PublishBinaryDerCertAsync(Byte[], String, CancellationToken)
  nameWithType: Application.PublishBinaryDerCertAsync(Byte[], String, CancellationToken)
  fullName: Okta.Sdk.Application.PublishBinaryDerCertAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PublishBinaryDerCertAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 192
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IJsonWebKey> PublishBinaryDerCertAsync(byte[] certificate, string csrId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: certificate
      type: System.Byte[]
    - id: csrId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
    content.vb: Public Function PublishBinaryDerCertAsync(certificate As Byte(), csrId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.Application.PublishBinaryDerCertAsync*
  implements:
  - Okta.Sdk.IApplication.PublishBinaryDerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  nameWithType.vb: Application.PublishBinaryDerCertAsync(Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Application.PublishBinaryDerCertAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: PublishBinaryDerCertAsync(Byte(), String, CancellationToken)
- uid: Okta.Sdk.Application.PublishBinaryPemCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.PublishBinaryPemCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  id: PublishBinaryPemCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: PublishBinaryPemCertAsync(Byte[], String, CancellationToken)
  nameWithType: Application.PublishBinaryPemCertAsync(Byte[], String, CancellationToken)
  fullName: Okta.Sdk.Application.PublishBinaryPemCertAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: PublishBinaryPemCertAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 197
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IJsonWebKey> PublishBinaryPemCertAsync(byte[] certificate, string csrId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: certificate
      type: System.Byte[]
    - id: csrId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
    content.vb: Public Function PublishBinaryPemCertAsync(certificate As Byte(), csrId As String, cancellationToken As CancellationToken = Nothing) As Task(Of IJsonWebKey)
  overload: Okta.Sdk.Application.PublishBinaryPemCertAsync*
  implements:
  - Okta.Sdk.IApplication.PublishBinaryPemCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  nameWithType.vb: Application.PublishBinaryPemCertAsync(Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Application.PublishBinaryPemCertAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: PublishBinaryPemCertAsync(Byte(), String, CancellationToken)
- uid: Okta.Sdk.Application.ListOAuth2Tokens(System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.Application.ListOAuth2Tokens(System.String,System.String,System.Nullable{System.Int32})
  id: ListOAuth2Tokens(System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: ListOAuth2Tokens(String, String, Nullable<Int32>)
  nameWithType: Application.ListOAuth2Tokens(String, String, Nullable<Int32>)
  fullName: Okta.Sdk.Application.ListOAuth2Tokens(System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListOAuth2Tokens
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 202
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IOAuth2Token> ListOAuth2Tokens(string expand = null, string after = null, int? limit = 20)
    parameters:
    - id: expand
      type: System.String
    - id: after
      type: System.String
    - id: limit
      type: System.Nullable{System.Int32}
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Token}
    content.vb: Public Function ListOAuth2Tokens(expand As String = Nothing, after As String = Nothing, limit As Integer? = 20) As ICollectionClient(Of IOAuth2Token)
  overload: Okta.Sdk.Application.ListOAuth2Tokens*
  implements:
  - Okta.Sdk.IApplication.ListOAuth2Tokens(System.String,System.String,System.Nullable{System.Int32})
  nameWithType.vb: Application.ListOAuth2Tokens(String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Okta.Sdk.Application.ListOAuth2Tokens(System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListOAuth2Tokens(String, String, Nullable(Of Int32))
- uid: Okta.Sdk.Application.RevokeOAuth2TokenForApplicationAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.RevokeOAuth2TokenForApplicationAsync(System.String,System.Threading.CancellationToken)
  id: RevokeOAuth2TokenForApplicationAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: RevokeOAuth2TokenForApplicationAsync(String, CancellationToken)
  nameWithType: Application.RevokeOAuth2TokenForApplicationAsync(String, CancellationToken)
  fullName: Okta.Sdk.Application.RevokeOAuth2TokenForApplicationAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeOAuth2TokenForApplicationAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 207
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task RevokeOAuth2TokenForApplicationAsync(string tokenId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: tokenId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeOAuth2TokenForApplicationAsync(tokenId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Application.RevokeOAuth2TokenForApplicationAsync*
  implements:
  - Okta.Sdk.IApplication.RevokeOAuth2TokenForApplicationAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.GetOAuth2TokenAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.GetOAuth2TokenAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetOAuth2TokenAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: GetOAuth2TokenAsync(String, String, CancellationToken)
  nameWithType: Application.GetOAuth2TokenAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Application.GetOAuth2TokenAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetOAuth2TokenAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 212
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IOAuth2Token> GetOAuth2TokenAsync(string tokenId, string expand = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: tokenId
      type: System.String
    - id: expand
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Token}
    content.vb: Public Function GetOAuth2TokenAsync(tokenId As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2Token)
  overload: Okta.Sdk.Application.GetOAuth2TokenAsync*
  implements:
  - Okta.Sdk.IApplication.GetOAuth2TokenAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.RevokeOAuth2TokensAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.RevokeOAuth2TokensAsync(System.Threading.CancellationToken)
  id: RevokeOAuth2TokensAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: RevokeOAuth2TokensAsync(CancellationToken)
  nameWithType: Application.RevokeOAuth2TokensAsync(CancellationToken)
  fullName: Okta.Sdk.Application.RevokeOAuth2TokensAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeOAuth2TokensAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 217
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task RevokeOAuth2TokensAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeOAuth2TokensAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Application.RevokeOAuth2TokensAsync*
  implements:
  - Okta.Sdk.IApplication.RevokeOAuth2TokensAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.ListScopeConsentGrants(System.String)
  commentId: M:Okta.Sdk.Application.ListScopeConsentGrants(System.String)
  id: ListScopeConsentGrants(System.String)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: ListScopeConsentGrants(String)
  nameWithType: Application.ListScopeConsentGrants(String)
  fullName: Okta.Sdk.Application.ListScopeConsentGrants(System.String)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: ListScopeConsentGrants
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 222
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public ICollectionClient<IOAuth2ScopeConsentGrant> ListScopeConsentGrants(string expand = null)
    parameters:
    - id: expand
      type: System.String
    return:
      type: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2ScopeConsentGrant}
    content.vb: Public Function ListScopeConsentGrants(expand As String = Nothing) As ICollectionClient(Of IOAuth2ScopeConsentGrant)
  overload: Okta.Sdk.Application.ListScopeConsentGrants*
  implements:
  - Okta.Sdk.IApplication.ListScopeConsentGrants(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant,System.Threading.CancellationToken)
  id: GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: GrantConsentToScopeAsync(IOAuth2ScopeConsentGrant, CancellationToken)
  nameWithType: Application.GrantConsentToScopeAsync(IOAuth2ScopeConsentGrant, CancellationToken)
  fullName: Okta.Sdk.Application.GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GrantConsentToScopeAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 227
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IOAuth2ScopeConsentGrant> GrantConsentToScopeAsync(IOAuth2ScopeConsentGrant oAuth2ScopeConsentGrant, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: oAuth2ScopeConsentGrant
      type: Okta.Sdk.IOAuth2ScopeConsentGrant
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2ScopeConsentGrant}
    content.vb: Public Function GrantConsentToScopeAsync(oAuth2ScopeConsentGrant As IOAuth2ScopeConsentGrant, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2ScopeConsentGrant)
  overload: Okta.Sdk.Application.GrantConsentToScopeAsync*
  implements:
  - Okta.Sdk.IApplication.GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.RevokeScopeConsentGrantAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.RevokeScopeConsentGrantAsync(System.String,System.Threading.CancellationToken)
  id: RevokeScopeConsentGrantAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: RevokeScopeConsentGrantAsync(String, CancellationToken)
  nameWithType: Application.RevokeScopeConsentGrantAsync(String, CancellationToken)
  fullName: Okta.Sdk.Application.RevokeScopeConsentGrantAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: RevokeScopeConsentGrantAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 232
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task RevokeScopeConsentGrantAsync(string grantId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: grantId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeScopeConsentGrantAsync(grantId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Application.RevokeScopeConsentGrantAsync*
  implements:
  - Okta.Sdk.IApplication.RevokeScopeConsentGrantAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.GetScopeConsentGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.GetScopeConsentGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetScopeConsentGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: GetScopeConsentGrantAsync(String, String, CancellationToken)
  nameWithType: Application.GetScopeConsentGrantAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.Application.GetScopeConsentGrantAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetScopeConsentGrantAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 237
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IOAuth2ScopeConsentGrant> GetScopeConsentGrantAsync(string grantId, string expand = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: grantId
      type: System.String
    - id: expand
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2ScopeConsentGrant}
    content.vb: Public Function GetScopeConsentGrantAsync(grantId As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IOAuth2ScopeConsentGrant)
  overload: Okta.Sdk.Application.GetScopeConsentGrantAsync*
  implements:
  - Okta.Sdk.IApplication.GetScopeConsentGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.UploadApplicationLogoAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.UploadApplicationLogoAsync(System.String,System.Threading.CancellationToken)
  id: UploadApplicationLogoAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: UploadApplicationLogoAsync(String, CancellationToken)
  nameWithType: Application.UploadApplicationLogoAsync(String, CancellationToken)
  fullName: Okta.Sdk.Application.UploadApplicationLogoAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UploadApplicationLogoAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 242
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task UploadApplicationLogoAsync(string appId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: appId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UploadApplicationLogoAsync(appId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Application.UploadApplicationLogoAsync*
  implements:
  - Okta.Sdk.IApplication.UploadApplicationLogoAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.GetFeatureForApplicationAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.GetFeatureForApplicationAsync(System.String,System.Threading.CancellationToken)
  id: GetFeatureForApplicationAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: GetFeatureForApplicationAsync(String, CancellationToken)
  nameWithType: Application.GetFeatureForApplicationAsync(String, CancellationToken)
  fullName: Okta.Sdk.Application.GetFeatureForApplicationAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: GetFeatureForApplicationAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 247
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IApplicationFeature> GetFeatureForApplicationAsync(string name, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: name
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplicationFeature}
    content.vb: Public Function GetFeatureForApplicationAsync(name As String, cancellationToken As CancellationToken = Nothing) As Task(Of IApplicationFeature)
  overload: Okta.Sdk.Application.GetFeatureForApplicationAsync*
  implements:
  - Okta.Sdk.IApplication.GetFeatureForApplicationAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject,System.String,System.Threading.CancellationToken)
  id: UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: UpdateFeatureForApplicationAsync(ICapabilitiesObject, String, CancellationToken)
  nameWithType: Application.UpdateFeatureForApplicationAsync(ICapabilitiesObject, String, CancellationToken)
  fullName: Okta.Sdk.Application.UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateFeatureForApplicationAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 252
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task<IApplicationFeature> UpdateFeatureForApplicationAsync(ICapabilitiesObject capabilities, string name, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: capabilities
      type: Okta.Sdk.ICapabilitiesObject
    - id: name
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Okta.Sdk.IApplicationFeature}
    content.vb: Public Function UpdateFeatureForApplicationAsync(capabilities As ICapabilitiesObject, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of IApplicationFeature)
  overload: Okta.Sdk.Application.UpdateFeatureForApplicationAsync*
  implements:
  - Okta.Sdk.IApplication.UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Okta.Sdk.Application.UpdateApplicationPolicyAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.Application.UpdateApplicationPolicyAsync(System.String,System.Threading.CancellationToken)
  id: UpdateApplicationPolicyAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.Application
  langs:
  - csharp
  - vb
  name: UpdateApplicationPolicyAsync(String, CancellationToken)
  nameWithType: Application.UpdateApplicationPolicyAsync(String, CancellationToken)
  fullName: Okta.Sdk.Application.UpdateApplicationPolicyAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Okta.Sdk/Generated/Application.Generated.cs
      branch: lr-docfx-gh-actions
      repo: https://github.com/okta/okta-sdk-dotnet.git
    id: UpdateApplicationPolicyAsync
    path: ../src/Okta.Sdk/Generated/Application.Generated.cs
    startLine: 257
  assemblies:
  - Okta.Sdk
  namespace: Okta.Sdk
  example: []
  syntax:
    content: public Task UpdateApplicationPolicyAsync(string policyId, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: policyId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UpdateApplicationPolicyAsync(policyId As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Okta.Sdk.Application.UpdateApplicationPolicyAsync*
  implements:
  - Okta.Sdk.IApplication.UpdateApplicationPolicyAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Okta.Sdk.Application
  commentId: T:Okta.Sdk.Application
  parent: Okta.Sdk
  name: Application
  nameWithType: Application
  fullName: Okta.Sdk.Application
- uid: Okta.Sdk
  commentId: N:Okta.Sdk
  name: Okta.Sdk
  nameWithType: Okta.Sdk
  fullName: Okta.Sdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Okta.Sdk.Resource
  commentId: T:Okta.Sdk.Resource
  parent: Okta.Sdk
  name: Resource
  nameWithType: Resource
  fullName: Okta.Sdk.Resource
- uid: Okta.Sdk.IApplication
  commentId: T:Okta.Sdk.IApplication
  parent: Okta.Sdk
  name: IApplication
  nameWithType: IApplication
  fullName: Okta.Sdk.IApplication
- uid: Okta.Sdk.IResource
  commentId: T:Okta.Sdk.IResource
  parent: Okta.Sdk
  name: IResource
  nameWithType: IResource
  fullName: Okta.Sdk.IResource
- uid: Okta.Sdk.Resource.GetClient
  commentId: M:Okta.Sdk.Resource.GetClient
  parent: Okta.Sdk.Resource
  name: GetClient()
  nameWithType: Resource.GetClient()
  fullName: Okta.Sdk.Resource.GetClient()
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetClient
    name: GetClient
    nameWithType: Resource.GetClient
    fullName: Okta.Sdk.Resource.GetClient
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetClient
    name: GetClient
    nameWithType: Resource.GetClient
    fullName: Okta.Sdk.Resource.GetClient
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetData
  commentId: M:Okta.Sdk.Resource.GetData
  parent: Okta.Sdk.Resource
  name: GetData()
  nameWithType: Resource.GetData()
  fullName: Okta.Sdk.Resource.GetData()
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetData
    name: GetData
    nameWithType: Resource.GetData
    fullName: Okta.Sdk.Resource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetData
    name: GetData
    nameWithType: Resource.GetData
    fullName: Okta.Sdk.Resource.GetData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.Item(System.String)
  commentId: P:Okta.Sdk.Resource.Item(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: Item[String]
  nameWithType: Resource.Item[String]
  fullName: Okta.Sdk.Resource.Item[System.String]
  nameWithType.vb: Resource.Item(String)
  fullName.vb: Okta.Sdk.Resource.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.Item(System.String)
    name: Item
    nameWithType: Resource.Item
    fullName: Okta.Sdk.Resource.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Okta.Sdk.Resource.Item(System.String)
    name: Item
    nameWithType: Resource.Item
    fullName: Okta.Sdk.Resource.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: Resource.GetProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetProperty<T>(System.String)
  nameWithType.vb: Resource.GetProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: Resource.GetProperty<T>
    fullName: Okta.Sdk.Resource.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: Resource.GetProperty(Of T)
    fullName: Okta.Sdk.Resource.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  commentId: M:Okta.Sdk.Resource.SetProperty(System.String,System.Object)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: Resource.SetProperty(String, Object)
  fullName: Okta.Sdk.Resource.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: Resource.SetProperty
    fullName: Okta.Sdk.Resource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: Resource.SetProperty
    fullName: Okta.Sdk.Resource.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetStringProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetStringProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetStringProperty(String)
  nameWithType: Resource.GetStringProperty(String)
  fullName: Okta.Sdk.Resource.GetStringProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetStringProperty(System.String)
    name: GetStringProperty
    nameWithType: Resource.GetStringProperty
    fullName: Okta.Sdk.Resource.GetStringProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetStringProperty(System.String)
    name: GetStringProperty
    nameWithType: Resource.GetStringProperty
    fullName: Okta.Sdk.Resource.GetStringProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetBooleanProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetBooleanProperty(String)
  nameWithType: Resource.GetBooleanProperty(String)
  fullName: Okta.Sdk.Resource.GetBooleanProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
    name: GetBooleanProperty
    nameWithType: Resource.GetBooleanProperty
    fullName: Okta.Sdk.Resource.GetBooleanProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetBooleanProperty(System.String)
    name: GetBooleanProperty
    nameWithType: Resource.GetBooleanProperty
    fullName: Okta.Sdk.Resource.GetBooleanProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetIntegerProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetIntegerProperty(String)
  nameWithType: Resource.GetIntegerProperty(String)
  fullName: Okta.Sdk.Resource.GetIntegerProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
    name: GetIntegerProperty
    nameWithType: Resource.GetIntegerProperty
    fullName: Okta.Sdk.Resource.GetIntegerProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetIntegerProperty(System.String)
    name: GetIntegerProperty
    nameWithType: Resource.GetIntegerProperty
    fullName: Okta.Sdk.Resource.GetIntegerProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetLongProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetLongProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetLongProperty(String)
  nameWithType: Resource.GetLongProperty(String)
  fullName: Okta.Sdk.Resource.GetLongProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetLongProperty(System.String)
    name: GetLongProperty
    nameWithType: Resource.GetLongProperty
    fullName: Okta.Sdk.Resource.GetLongProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetLongProperty(System.String)
    name: GetLongProperty
    nameWithType: Resource.GetLongProperty
    fullName: Okta.Sdk.Resource.GetLongProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetDoubleProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetDoubleProperty(String)
  nameWithType: Resource.GetDoubleProperty(String)
  fullName: Okta.Sdk.Resource.GetDoubleProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
    name: GetDoubleProperty
    nameWithType: Resource.GetDoubleProperty
    fullName: Okta.Sdk.Resource.GetDoubleProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetDoubleProperty(System.String)
    name: GetDoubleProperty
    nameWithType: Resource.GetDoubleProperty
    fullName: Okta.Sdk.Resource.GetDoubleProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  commentId: M:Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetDateTimeProperty(String)
  nameWithType: Resource.GetDateTimeProperty(String)
  fullName: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
    name: GetDateTimeProperty
    nameWithType: Resource.GetDateTimeProperty
    fullName: Okta.Sdk.Resource.GetDateTimeProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetDateTimeProperty(System.String)
    name: GetDateTimeProperty
    nameWithType: Resource.GetDateTimeProperty
    fullName: Okta.Sdk.Resource.GetDateTimeProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetArrayProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetArrayProperty<T>(String)
  nameWithType: Resource.GetArrayProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetArrayProperty<T>(System.String)
  nameWithType.vb: Resource.GetArrayProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetArrayProperty(Of T)(System.String)
  name.vb: GetArrayProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
    name: GetArrayProperty<T>
    nameWithType: Resource.GetArrayProperty<T>
    fullName: Okta.Sdk.Resource.GetArrayProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetArrayProperty``1(System.String)
    name: GetArrayProperty(Of T)
    nameWithType: Resource.GetArrayProperty(Of T)
    fullName: Okta.Sdk.Resource.GetArrayProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetEnumProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetEnumProperty<TEnum>(String)
  nameWithType: Resource.GetEnumProperty<TEnum>(String)
  fullName: Okta.Sdk.Resource.GetEnumProperty<TEnum>(System.String)
  nameWithType.vb: Resource.GetEnumProperty(Of TEnum)(String)
  fullName.vb: Okta.Sdk.Resource.GetEnumProperty(Of TEnum)(System.String)
  name.vb: GetEnumProperty(Of TEnum)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
    name: GetEnumProperty<TEnum>
    nameWithType: Resource.GetEnumProperty<TEnum>
    fullName: Okta.Sdk.Resource.GetEnumProperty<TEnum>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetEnumProperty``1(System.String)
    name: GetEnumProperty(Of TEnum)
    nameWithType: Resource.GetEnumProperty(Of TEnum)
    fullName: Okta.Sdk.Resource.GetEnumProperty(Of TEnum)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  commentId: M:Okta.Sdk.Resource.GetResourceProperty``1(System.String)
  parent: Okta.Sdk.Resource
  isExternal: true
  name: GetResourceProperty<T>(String)
  nameWithType: Resource.GetResourceProperty<T>(String)
  fullName: Okta.Sdk.Resource.GetResourceProperty<T>(System.String)
  nameWithType.vb: Resource.GetResourceProperty(Of T)(String)
  fullName.vb: Okta.Sdk.Resource.GetResourceProperty(Of T)(System.String)
  name.vb: GetResourceProperty(Of T)(String)
  spec.csharp:
  - uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
    name: GetResourceProperty<T>
    nameWithType: Resource.GetResourceProperty<T>
    fullName: Okta.Sdk.Resource.GetResourceProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.Resource.GetResourceProperty``1(System.String)
    name: GetResourceProperty(Of T)
    nameWithType: Resource.GetResourceProperty(Of T)
    fullName: Okta.Sdk.Resource.GetResourceProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Okta.Sdk.Application.GetAccessPolicyId*
  commentId: Overload:Okta.Sdk.Application.GetAccessPolicyId
  name: GetAccessPolicyId
  nameWithType: Application.GetAccessPolicyId
  fullName: Okta.Sdk.Application.GetAccessPolicyId
- uid: Okta.Sdk.IApplication.GetAccessPolicyId
  commentId: M:Okta.Sdk.IApplication.GetAccessPolicyId
  parent: Okta.Sdk.IApplication
  name: GetAccessPolicyId()
  nameWithType: IApplication.GetAccessPolicyId()
  fullName: Okta.Sdk.IApplication.GetAccessPolicyId()
  spec.csharp:
  - uid: Okta.Sdk.IApplication.GetAccessPolicyId
    name: GetAccessPolicyId
    nameWithType: IApplication.GetAccessPolicyId
    fullName: Okta.Sdk.IApplication.GetAccessPolicyId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.GetAccessPolicyId
    name: GetAccessPolicyId
    nameWithType: IApplication.GetAccessPolicyId
    fullName: Okta.Sdk.IApplication.GetAccessPolicyId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Okta.Sdk.Application.Accessibility*
  commentId: Overload:Okta.Sdk.Application.Accessibility
  name: Accessibility
  nameWithType: Application.Accessibility
  fullName: Okta.Sdk.Application.Accessibility
- uid: Okta.Sdk.IApplication.Accessibility
  commentId: P:Okta.Sdk.IApplication.Accessibility
  parent: Okta.Sdk.IApplication
  name: Accessibility
  nameWithType: IApplication.Accessibility
  fullName: Okta.Sdk.IApplication.Accessibility
- uid: Okta.Sdk.IApplicationAccessibility
  commentId: T:Okta.Sdk.IApplicationAccessibility
  parent: Okta.Sdk
  name: IApplicationAccessibility
  nameWithType: IApplicationAccessibility
  fullName: Okta.Sdk.IApplicationAccessibility
- uid: Okta.Sdk.Application.Created*
  commentId: Overload:Okta.Sdk.Application.Created
  name: Created
  nameWithType: Application.Created
  fullName: Okta.Sdk.Application.Created
- uid: Okta.Sdk.IApplication.Created
  commentId: P:Okta.Sdk.IApplication.Created
  parent: Okta.Sdk.IApplication
  name: Created
  nameWithType: IApplication.Created
  fullName: Okta.Sdk.IApplication.Created
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.Credentials*
  commentId: Overload:Okta.Sdk.Application.Credentials
  name: Credentials
  nameWithType: Application.Credentials
  fullName: Okta.Sdk.Application.Credentials
- uid: Okta.Sdk.IApplication.Credentials
  commentId: P:Okta.Sdk.IApplication.Credentials
  parent: Okta.Sdk.IApplication
  name: Credentials
  nameWithType: IApplication.Credentials
  fullName: Okta.Sdk.IApplication.Credentials
- uid: Okta.Sdk.IApplicationCredentials
  commentId: T:Okta.Sdk.IApplicationCredentials
  parent: Okta.Sdk
  name: IApplicationCredentials
  nameWithType: IApplicationCredentials
  fullName: Okta.Sdk.IApplicationCredentials
- uid: Okta.Sdk.Application.Features*
  commentId: Overload:Okta.Sdk.Application.Features
  name: Features
  nameWithType: Application.Features
  fullName: Okta.Sdk.Application.Features
- uid: Okta.Sdk.IApplication.Features
  commentId: P:Okta.Sdk.IApplication.Features
  parent: Okta.Sdk.IApplication
  name: Features
  nameWithType: IApplication.Features
  fullName: Okta.Sdk.IApplication.Features
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Okta.Sdk.Application.Id*
  commentId: Overload:Okta.Sdk.Application.Id
  name: Id
  nameWithType: Application.Id
  fullName: Okta.Sdk.Application.Id
- uid: Okta.Sdk.IApplication.Id
  commentId: P:Okta.Sdk.IApplication.Id
  parent: Okta.Sdk.IApplication
  name: Id
  nameWithType: IApplication.Id
  fullName: Okta.Sdk.IApplication.Id
- uid: Okta.Sdk.Application.Label*
  commentId: Overload:Okta.Sdk.Application.Label
  name: Label
  nameWithType: Application.Label
  fullName: Okta.Sdk.Application.Label
- uid: Okta.Sdk.IApplication.Label
  commentId: P:Okta.Sdk.IApplication.Label
  parent: Okta.Sdk.IApplication
  name: Label
  nameWithType: IApplication.Label
  fullName: Okta.Sdk.IApplication.Label
- uid: Okta.Sdk.Application.LastUpdated*
  commentId: Overload:Okta.Sdk.Application.LastUpdated
  name: LastUpdated
  nameWithType: Application.LastUpdated
  fullName: Okta.Sdk.Application.LastUpdated
- uid: Okta.Sdk.IApplication.LastUpdated
  commentId: P:Okta.Sdk.IApplication.LastUpdated
  parent: Okta.Sdk.IApplication
  name: LastUpdated
  nameWithType: IApplication.LastUpdated
  fullName: Okta.Sdk.IApplication.LastUpdated
- uid: Okta.Sdk.Application.Licensing*
  commentId: Overload:Okta.Sdk.Application.Licensing
  name: Licensing
  nameWithType: Application.Licensing
  fullName: Okta.Sdk.Application.Licensing
- uid: Okta.Sdk.IApplication.Licensing
  commentId: P:Okta.Sdk.IApplication.Licensing
  parent: Okta.Sdk.IApplication
  name: Licensing
  nameWithType: IApplication.Licensing
  fullName: Okta.Sdk.IApplication.Licensing
- uid: Okta.Sdk.IApplicationLicensing
  commentId: T:Okta.Sdk.IApplicationLicensing
  parent: Okta.Sdk
  name: IApplicationLicensing
  nameWithType: IApplicationLicensing
  fullName: Okta.Sdk.IApplicationLicensing
- uid: Okta.Sdk.Application.Name*
  commentId: Overload:Okta.Sdk.Application.Name
  name: Name
  nameWithType: Application.Name
  fullName: Okta.Sdk.Application.Name
- uid: Okta.Sdk.IApplication.Name
  commentId: P:Okta.Sdk.IApplication.Name
  parent: Okta.Sdk.IApplication
  name: Name
  nameWithType: IApplication.Name
  fullName: Okta.Sdk.IApplication.Name
- uid: Okta.Sdk.Application.Profile*
  commentId: Overload:Okta.Sdk.Application.Profile
  name: Profile
  nameWithType: Application.Profile
  fullName: Okta.Sdk.Application.Profile
- uid: Okta.Sdk.IApplication.Profile
  commentId: P:Okta.Sdk.IApplication.Profile
  parent: Okta.Sdk.IApplication
  name: Profile
  nameWithType: IApplication.Profile
  fullName: Okta.Sdk.IApplication.Profile
- uid: Okta.Sdk.Application.Settings*
  commentId: Overload:Okta.Sdk.Application.Settings
  name: Settings
  nameWithType: Application.Settings
  fullName: Okta.Sdk.Application.Settings
- uid: Okta.Sdk.IApplication.Settings
  commentId: P:Okta.Sdk.IApplication.Settings
  parent: Okta.Sdk.IApplication
  name: Settings
  nameWithType: IApplication.Settings
  fullName: Okta.Sdk.IApplication.Settings
- uid: Okta.Sdk.IApplicationSettings
  commentId: T:Okta.Sdk.IApplicationSettings
  parent: Okta.Sdk
  name: IApplicationSettings
  nameWithType: IApplicationSettings
  fullName: Okta.Sdk.IApplicationSettings
- uid: Okta.Sdk.Application.SignOnMode*
  commentId: Overload:Okta.Sdk.Application.SignOnMode
  name: SignOnMode
  nameWithType: Application.SignOnMode
  fullName: Okta.Sdk.Application.SignOnMode
- uid: Okta.Sdk.IApplication.SignOnMode
  commentId: P:Okta.Sdk.IApplication.SignOnMode
  parent: Okta.Sdk.IApplication
  name: SignOnMode
  nameWithType: IApplication.SignOnMode
  fullName: Okta.Sdk.IApplication.SignOnMode
- uid: Okta.Sdk.ApplicationSignOnMode
  commentId: T:Okta.Sdk.ApplicationSignOnMode
  parent: Okta.Sdk
  name: ApplicationSignOnMode
  nameWithType: ApplicationSignOnMode
  fullName: Okta.Sdk.ApplicationSignOnMode
- uid: Okta.Sdk.Application.Status*
  commentId: Overload:Okta.Sdk.Application.Status
  name: Status
  nameWithType: Application.Status
  fullName: Okta.Sdk.Application.Status
- uid: Okta.Sdk.IApplication.Status
  commentId: P:Okta.Sdk.IApplication.Status
  parent: Okta.Sdk.IApplication
  name: Status
  nameWithType: IApplication.Status
  fullName: Okta.Sdk.IApplication.Status
- uid: Okta.Sdk.Application.Visibility*
  commentId: Overload:Okta.Sdk.Application.Visibility
  name: Visibility
  nameWithType: Application.Visibility
  fullName: Okta.Sdk.Application.Visibility
- uid: Okta.Sdk.IApplication.Visibility
  commentId: P:Okta.Sdk.IApplication.Visibility
  parent: Okta.Sdk.IApplication
  name: Visibility
  nameWithType: IApplication.Visibility
  fullName: Okta.Sdk.IApplication.Visibility
- uid: Okta.Sdk.IApplicationVisibility
  commentId: T:Okta.Sdk.IApplicationVisibility
  parent: Okta.Sdk
  name: IApplicationVisibility
  nameWithType: IApplicationVisibility
  fullName: Okta.Sdk.IApplicationVisibility
- uid: Okta.Sdk.Application.ActivateAsync*
  commentId: Overload:Okta.Sdk.Application.ActivateAsync
  name: ActivateAsync
  nameWithType: Application.ActivateAsync
  fullName: Okta.Sdk.Application.ActivateAsync
- uid: Okta.Sdk.IApplication.ActivateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.ActivateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: ActivateAsync(CancellationToken)
  nameWithType: IApplication.ActivateAsync(CancellationToken)
  fullName: Okta.Sdk.IApplication.ActivateAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.ActivateAsync(System.Threading.CancellationToken)
    name: ActivateAsync
    nameWithType: IApplication.ActivateAsync
    fullName: Okta.Sdk.IApplication.ActivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.ActivateAsync(System.Threading.CancellationToken)
    name: ActivateAsync
    nameWithType: IApplication.ActivateAsync
    fullName: Okta.Sdk.IApplication.ActivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Okta.Sdk.Application.DeactivateAsync*
  commentId: Overload:Okta.Sdk.Application.DeactivateAsync
  name: DeactivateAsync
  nameWithType: Application.DeactivateAsync
  fullName: Okta.Sdk.Application.DeactivateAsync
- uid: Okta.Sdk.IApplication.DeactivateAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.DeactivateAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: DeactivateAsync(CancellationToken)
  nameWithType: IApplication.DeactivateAsync(CancellationToken)
  fullName: Okta.Sdk.IApplication.DeactivateAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.DeactivateAsync(System.Threading.CancellationToken)
    name: DeactivateAsync
    nameWithType: IApplication.DeactivateAsync
    fullName: Okta.Sdk.IApplication.DeactivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.DeactivateAsync(System.Threading.CancellationToken)
    name: DeactivateAsync
    nameWithType: IApplication.DeactivateAsync
    fullName: Okta.Sdk.IApplication.DeactivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.ListApplicationUsers*
  commentId: Overload:Okta.Sdk.Application.ListApplicationUsers
  name: ListApplicationUsers
  nameWithType: Application.ListApplicationUsers
  fullName: Okta.Sdk.Application.ListApplicationUsers
- uid: Okta.Sdk.IApplication.ListApplicationUsers(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  commentId: M:Okta.Sdk.IApplication.ListApplicationUsers(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: ListApplicationUsers(String, String, String, Nullable<Int32>, String, String)
  nameWithType: IApplication.ListApplicationUsers(String, String, String, Nullable<Int32>, String, String)
  fullName: Okta.Sdk.IApplication.ListApplicationUsers(System.String, System.String, System.String, System.Nullable<System.Int32>, System.String, System.String)
  nameWithType.vb: IApplication.ListApplicationUsers(String, String, String, Nullable(Of Int32), String, String)
  fullName.vb: Okta.Sdk.IApplication.ListApplicationUsers(System.String, System.String, System.String, System.Nullable(Of System.Int32), System.String, System.String)
  name.vb: ListApplicationUsers(String, String, String, Nullable(Of Int32), String, String)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.ListApplicationUsers(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
    name: ListApplicationUsers
    nameWithType: IApplication.ListApplicationUsers
    fullName: Okta.Sdk.IApplication.ListApplicationUsers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.ListApplicationUsers(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
    name: ListApplicationUsers
    nameWithType: IApplication.ListApplicationUsers
    fullName: Okta.Sdk.IApplication.ListApplicationUsers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IAppUser}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IAppUser}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IAppUser>
  nameWithType: ICollectionClient<IAppUser>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IAppUser>
  nameWithType.vb: ICollectionClient(Of IAppUser)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IAppUser)
  name.vb: ICollectionClient(Of IAppUser)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAppUser
    name: IAppUser
    nameWithType: IAppUser
    fullName: Okta.Sdk.IAppUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAppUser
    name: IAppUser
    nameWithType: IAppUser
    fullName: Okta.Sdk.IAppUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient`1
  commentId: T:Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<T>
  nameWithType: ICollectionClient<T>
  fullName: Okta.Sdk.ICollectionClient<T>
  nameWithType.vb: ICollectionClient(Of T)
  fullName.vb: Okta.Sdk.ICollectionClient(Of T)
  name.vb: ICollectionClient(Of T)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.AssignUserToApplicationAsync*
  commentId: Overload:Okta.Sdk.Application.AssignUserToApplicationAsync
  name: AssignUserToApplicationAsync
  nameWithType: Application.AssignUserToApplicationAsync
  fullName: Okta.Sdk.Application.AssignUserToApplicationAsync
- uid: Okta.Sdk.IApplication.AssignUserToApplicationAsync(Okta.Sdk.IAppUser,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.AssignUserToApplicationAsync(Okta.Sdk.IAppUser,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: AssignUserToApplicationAsync(IAppUser, CancellationToken)
  nameWithType: IApplication.AssignUserToApplicationAsync(IAppUser, CancellationToken)
  fullName: Okta.Sdk.IApplication.AssignUserToApplicationAsync(Okta.Sdk.IAppUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.AssignUserToApplicationAsync(Okta.Sdk.IAppUser,System.Threading.CancellationToken)
    name: AssignUserToApplicationAsync
    nameWithType: IApplication.AssignUserToApplicationAsync
    fullName: Okta.Sdk.IApplication.AssignUserToApplicationAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAppUser
    name: IAppUser
    nameWithType: IAppUser
    fullName: Okta.Sdk.IAppUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.AssignUserToApplicationAsync(Okta.Sdk.IAppUser,System.Threading.CancellationToken)
    name: AssignUserToApplicationAsync
    nameWithType: IApplication.AssignUserToApplicationAsync
    fullName: Okta.Sdk.IApplication.AssignUserToApplicationAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IAppUser
    name: IAppUser
    nameWithType: IAppUser
    fullName: Okta.Sdk.IAppUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IAppUser
  commentId: T:Okta.Sdk.IAppUser
  parent: Okta.Sdk
  name: IAppUser
  nameWithType: IAppUser
  fullName: Okta.Sdk.IAppUser
- uid: System.Threading.Tasks.Task{Okta.Sdk.IAppUser}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IAppUser}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IAppUser>
  nameWithType: Task<IAppUser>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IAppUser>
  nameWithType.vb: Task(Of IAppUser)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IAppUser)
  name.vb: Task(Of IAppUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IAppUser
    name: IAppUser
    nameWithType: IAppUser
    fullName: Okta.Sdk.IAppUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IAppUser
    name: IAppUser
    nameWithType: IAppUser
    fullName: Okta.Sdk.IAppUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.GetApplicationUserAsync*
  commentId: Overload:Okta.Sdk.Application.GetApplicationUserAsync
  name: GetApplicationUserAsync
  nameWithType: Application.GetApplicationUserAsync
  fullName: Okta.Sdk.Application.GetApplicationUserAsync
- uid: Okta.Sdk.IApplication.GetApplicationUserAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.GetApplicationUserAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: GetApplicationUserAsync(String, String, CancellationToken)
  nameWithType: IApplication.GetApplicationUserAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplication.GetApplicationUserAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.GetApplicationUserAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetApplicationUserAsync
    nameWithType: IApplication.GetApplicationUserAsync
    fullName: Okta.Sdk.IApplication.GetApplicationUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.GetApplicationUserAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetApplicationUserAsync
    nameWithType: IApplication.GetApplicationUserAsync
    fullName: Okta.Sdk.IApplication.GetApplicationUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.CreateApplicationGroupAssignmentAsync*
  commentId: Overload:Okta.Sdk.Application.CreateApplicationGroupAssignmentAsync
  name: CreateApplicationGroupAssignmentAsync
  nameWithType: Application.CreateApplicationGroupAssignmentAsync
  fullName: Okta.Sdk.Application.CreateApplicationGroupAssignmentAsync
- uid: Okta.Sdk.IApplication.CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: CreateApplicationGroupAssignmentAsync(IApplicationGroupAssignment, String, CancellationToken)
  nameWithType: IApplication.CreateApplicationGroupAssignmentAsync(IApplicationGroupAssignment, String, CancellationToken)
  fullName: Okta.Sdk.IApplication.CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment,System.String,System.Threading.CancellationToken)
    name: CreateApplicationGroupAssignmentAsync
    nameWithType: IApplication.CreateApplicationGroupAssignmentAsync
    fullName: Okta.Sdk.IApplication.CreateApplicationGroupAssignmentAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IApplicationGroupAssignment
    name: IApplicationGroupAssignment
    nameWithType: IApplicationGroupAssignment
    fullName: Okta.Sdk.IApplicationGroupAssignment
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.CreateApplicationGroupAssignmentAsync(Okta.Sdk.IApplicationGroupAssignment,System.String,System.Threading.CancellationToken)
    name: CreateApplicationGroupAssignmentAsync
    nameWithType: IApplication.CreateApplicationGroupAssignmentAsync
    fullName: Okta.Sdk.IApplication.CreateApplicationGroupAssignmentAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IApplicationGroupAssignment
    name: IApplicationGroupAssignment
    nameWithType: IApplicationGroupAssignment
    fullName: Okta.Sdk.IApplicationGroupAssignment
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IApplicationGroupAssignment
  commentId: T:Okta.Sdk.IApplicationGroupAssignment
  parent: Okta.Sdk
  name: IApplicationGroupAssignment
  nameWithType: IApplicationGroupAssignment
  fullName: Okta.Sdk.IApplicationGroupAssignment
- uid: System.Threading.Tasks.Task{Okta.Sdk.IApplicationGroupAssignment}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IApplicationGroupAssignment}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IApplicationGroupAssignment>
  nameWithType: Task<IApplicationGroupAssignment>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IApplicationGroupAssignment>
  nameWithType.vb: Task(Of IApplicationGroupAssignment)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IApplicationGroupAssignment)
  name.vb: Task(Of IApplicationGroupAssignment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IApplicationGroupAssignment
    name: IApplicationGroupAssignment
    nameWithType: IApplicationGroupAssignment
    fullName: Okta.Sdk.IApplicationGroupAssignment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IApplicationGroupAssignment
    name: IApplicationGroupAssignment
    nameWithType: IApplicationGroupAssignment
    fullName: Okta.Sdk.IApplicationGroupAssignment
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.GetApplicationGroupAssignmentAsync*
  commentId: Overload:Okta.Sdk.Application.GetApplicationGroupAssignmentAsync
  name: GetApplicationGroupAssignmentAsync
  nameWithType: Application.GetApplicationGroupAssignmentAsync
  fullName: Okta.Sdk.Application.GetApplicationGroupAssignmentAsync
- uid: Okta.Sdk.IApplication.GetApplicationGroupAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.GetApplicationGroupAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: GetApplicationGroupAssignmentAsync(String, String, CancellationToken)
  nameWithType: IApplication.GetApplicationGroupAssignmentAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplication.GetApplicationGroupAssignmentAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.GetApplicationGroupAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetApplicationGroupAssignmentAsync
    nameWithType: IApplication.GetApplicationGroupAssignmentAsync
    fullName: Okta.Sdk.IApplication.GetApplicationGroupAssignmentAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.GetApplicationGroupAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetApplicationGroupAssignmentAsync
    nameWithType: IApplication.GetApplicationGroupAssignmentAsync
    fullName: Okta.Sdk.IApplication.GetApplicationGroupAssignmentAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.CloneApplicationKeyAsync*
  commentId: Overload:Okta.Sdk.Application.CloneApplicationKeyAsync
  name: CloneApplicationKeyAsync
  nameWithType: Application.CloneApplicationKeyAsync
  fullName: Okta.Sdk.Application.CloneApplicationKeyAsync
- uid: Okta.Sdk.IApplication.CloneApplicationKeyAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.CloneApplicationKeyAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: CloneApplicationKeyAsync(String, String, CancellationToken)
  nameWithType: IApplication.CloneApplicationKeyAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplication.CloneApplicationKeyAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.CloneApplicationKeyAsync(System.String,System.String,System.Threading.CancellationToken)
    name: CloneApplicationKeyAsync
    nameWithType: IApplication.CloneApplicationKeyAsync
    fullName: Okta.Sdk.IApplication.CloneApplicationKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.CloneApplicationKeyAsync(System.String,System.String,System.Threading.CancellationToken)
    name: CloneApplicationKeyAsync
    nameWithType: IApplication.CloneApplicationKeyAsync
    fullName: Okta.Sdk.IApplication.CloneApplicationKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IJsonWebKey}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IJsonWebKey>
  nameWithType: Task<IJsonWebKey>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IJsonWebKey>
  nameWithType.vb: Task(Of IJsonWebKey)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IJsonWebKey)
  name.vb: Task(Of IJsonWebKey)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.GetApplicationKeyAsync*
  commentId: Overload:Okta.Sdk.Application.GetApplicationKeyAsync
  name: GetApplicationKeyAsync
  nameWithType: Application.GetApplicationKeyAsync
  fullName: Okta.Sdk.Application.GetApplicationKeyAsync
- uid: Okta.Sdk.IApplication.GetApplicationKeyAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.GetApplicationKeyAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: GetApplicationKeyAsync(String, CancellationToken)
  nameWithType: IApplication.GetApplicationKeyAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplication.GetApplicationKeyAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.GetApplicationKeyAsync(System.String,System.Threading.CancellationToken)
    name: GetApplicationKeyAsync
    nameWithType: IApplication.GetApplicationKeyAsync
    fullName: Okta.Sdk.IApplication.GetApplicationKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.GetApplicationKeyAsync(System.String,System.Threading.CancellationToken)
    name: GetApplicationKeyAsync
    nameWithType: IApplication.GetApplicationKeyAsync
    fullName: Okta.Sdk.IApplication.GetApplicationKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.ListGroupAssignments*
  commentId: Overload:Okta.Sdk.Application.ListGroupAssignments
  name: ListGroupAssignments
  nameWithType: Application.ListGroupAssignments
  fullName: Okta.Sdk.Application.ListGroupAssignments
- uid: Okta.Sdk.IApplication.ListGroupAssignments(System.String,System.String,System.Nullable{System.Int32},System.String)
  commentId: M:Okta.Sdk.IApplication.ListGroupAssignments(System.String,System.String,System.Nullable{System.Int32},System.String)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: ListGroupAssignments(String, String, Nullable<Int32>, String)
  nameWithType: IApplication.ListGroupAssignments(String, String, Nullable<Int32>, String)
  fullName: Okta.Sdk.IApplication.ListGroupAssignments(System.String, System.String, System.Nullable<System.Int32>, System.String)
  nameWithType.vb: IApplication.ListGroupAssignments(String, String, Nullable(Of Int32), String)
  fullName.vb: Okta.Sdk.IApplication.ListGroupAssignments(System.String, System.String, System.Nullable(Of System.Int32), System.String)
  name.vb: ListGroupAssignments(String, String, Nullable(Of Int32), String)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.ListGroupAssignments(System.String,System.String,System.Nullable{System.Int32},System.String)
    name: ListGroupAssignments
    nameWithType: IApplication.ListGroupAssignments
    fullName: Okta.Sdk.IApplication.ListGroupAssignments
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.ListGroupAssignments(System.String,System.String,System.Nullable{System.Int32},System.String)
    name: ListGroupAssignments
    nameWithType: IApplication.ListGroupAssignments
    fullName: Okta.Sdk.IApplication.ListGroupAssignments
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IApplicationGroupAssignment}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IApplicationGroupAssignment}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IApplicationGroupAssignment>
  nameWithType: ICollectionClient<IApplicationGroupAssignment>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IApplicationGroupAssignment>
  nameWithType.vb: ICollectionClient(Of IApplicationGroupAssignment)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IApplicationGroupAssignment)
  name.vb: ICollectionClient(Of IApplicationGroupAssignment)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IApplicationGroupAssignment
    name: IApplicationGroupAssignment
    nameWithType: IApplicationGroupAssignment
    fullName: Okta.Sdk.IApplicationGroupAssignment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IApplicationGroupAssignment
    name: IApplicationGroupAssignment
    nameWithType: IApplicationGroupAssignment
    fullName: Okta.Sdk.IApplicationGroupAssignment
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.ListKeys*
  commentId: Overload:Okta.Sdk.Application.ListKeys
  name: ListKeys
  nameWithType: Application.ListKeys
  fullName: Okta.Sdk.Application.ListKeys
- uid: Okta.Sdk.IApplication.ListKeys
  commentId: M:Okta.Sdk.IApplication.ListKeys
  parent: Okta.Sdk.IApplication
  name: ListKeys()
  nameWithType: IApplication.ListKeys()
  fullName: Okta.Sdk.IApplication.ListKeys()
  spec.csharp:
  - uid: Okta.Sdk.IApplication.ListKeys
    name: ListKeys
    nameWithType: IApplication.ListKeys
    fullName: Okta.Sdk.IApplication.ListKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.ListKeys
    name: ListKeys
    nameWithType: IApplication.ListKeys
    fullName: Okta.Sdk.IApplication.ListKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IJsonWebKey}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IJsonWebKey>
  nameWithType: ICollectionClient<IJsonWebKey>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IJsonWebKey>
  nameWithType.vb: ICollectionClient(Of IJsonWebKey)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IJsonWebKey)
  name.vb: ICollectionClient(Of IJsonWebKey)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IJsonWebKey
    name: IJsonWebKey
    nameWithType: IJsonWebKey
    fullName: Okta.Sdk.IJsonWebKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.GenerateKeyAsync*
  commentId: Overload:Okta.Sdk.Application.GenerateKeyAsync
  name: GenerateKeyAsync
  nameWithType: Application.GenerateKeyAsync
  fullName: Okta.Sdk.Application.GenerateKeyAsync
- uid: Okta.Sdk.IApplication.GenerateKeyAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.GenerateKeyAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: GenerateKeyAsync(Nullable<Int32>, CancellationToken)
  nameWithType: IApplication.GenerateKeyAsync(Nullable<Int32>, CancellationToken)
  fullName: Okta.Sdk.IApplication.GenerateKeyAsync(System.Nullable<System.Int32>, System.Threading.CancellationToken)
  nameWithType.vb: IApplication.GenerateKeyAsync(Nullable(Of Int32), CancellationToken)
  fullName.vb: Okta.Sdk.IApplication.GenerateKeyAsync(System.Nullable(Of System.Int32), System.Threading.CancellationToken)
  name.vb: GenerateKeyAsync(Nullable(Of Int32), CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.GenerateKeyAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)
    name: GenerateKeyAsync
    nameWithType: IApplication.GenerateKeyAsync
    fullName: Okta.Sdk.IApplication.GenerateKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.GenerateKeyAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)
    name: GenerateKeyAsync
    nameWithType: IApplication.GenerateKeyAsync
    fullName: Okta.Sdk.IApplication.GenerateKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.GenerateCsrAsync*
  commentId: Overload:Okta.Sdk.Application.GenerateCsrAsync
  name: GenerateCsrAsync
  nameWithType: Application.GenerateCsrAsync
  fullName: Okta.Sdk.Application.GenerateCsrAsync
- uid: Okta.Sdk.IApplication.GenerateCsrAsync(Okta.Sdk.ICsrMetadata,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.GenerateCsrAsync(Okta.Sdk.ICsrMetadata,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: GenerateCsrAsync(ICsrMetadata, CancellationToken)
  nameWithType: IApplication.GenerateCsrAsync(ICsrMetadata, CancellationToken)
  fullName: Okta.Sdk.IApplication.GenerateCsrAsync(Okta.Sdk.ICsrMetadata, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.GenerateCsrAsync(Okta.Sdk.ICsrMetadata,System.Threading.CancellationToken)
    name: GenerateCsrAsync
    nameWithType: IApplication.GenerateCsrAsync
    fullName: Okta.Sdk.IApplication.GenerateCsrAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.ICsrMetadata
    name: ICsrMetadata
    nameWithType: ICsrMetadata
    fullName: Okta.Sdk.ICsrMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.GenerateCsrAsync(Okta.Sdk.ICsrMetadata,System.Threading.CancellationToken)
    name: GenerateCsrAsync
    nameWithType: IApplication.GenerateCsrAsync
    fullName: Okta.Sdk.IApplication.GenerateCsrAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.ICsrMetadata
    name: ICsrMetadata
    nameWithType: ICsrMetadata
    fullName: Okta.Sdk.ICsrMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICsrMetadata
  commentId: T:Okta.Sdk.ICsrMetadata
  parent: Okta.Sdk
  name: ICsrMetadata
  nameWithType: ICsrMetadata
  fullName: Okta.Sdk.ICsrMetadata
- uid: System.Threading.Tasks.Task{Okta.Sdk.ICsr}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.ICsr}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ICsr>
  nameWithType: Task<ICsr>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.ICsr>
  nameWithType.vb: Task(Of ICsr)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.ICsr)
  name.vb: Task(Of ICsr)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.ICsr
    name: ICsr
    nameWithType: ICsr
    fullName: Okta.Sdk.ICsr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.ICsr
    name: ICsr
    nameWithType: ICsr
    fullName: Okta.Sdk.ICsr
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.GetCsrAsync*
  commentId: Overload:Okta.Sdk.Application.GetCsrAsync
  name: GetCsrAsync
  nameWithType: Application.GetCsrAsync
  fullName: Okta.Sdk.Application.GetCsrAsync
- uid: Okta.Sdk.IApplication.GetCsrAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.GetCsrAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: GetCsrAsync(String, CancellationToken)
  nameWithType: IApplication.GetCsrAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplication.GetCsrAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.GetCsrAsync(System.String,System.Threading.CancellationToken)
    name: GetCsrAsync
    nameWithType: IApplication.GetCsrAsync
    fullName: Okta.Sdk.IApplication.GetCsrAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.GetCsrAsync(System.String,System.Threading.CancellationToken)
    name: GetCsrAsync
    nameWithType: IApplication.GetCsrAsync
    fullName: Okta.Sdk.IApplication.GetCsrAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.RevokeCsrAsync*
  commentId: Overload:Okta.Sdk.Application.RevokeCsrAsync
  name: RevokeCsrAsync
  nameWithType: Application.RevokeCsrAsync
  fullName: Okta.Sdk.Application.RevokeCsrAsync
- uid: Okta.Sdk.IApplication.RevokeCsrAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.RevokeCsrAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: RevokeCsrAsync(String, CancellationToken)
  nameWithType: IApplication.RevokeCsrAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplication.RevokeCsrAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.RevokeCsrAsync(System.String,System.Threading.CancellationToken)
    name: RevokeCsrAsync
    nameWithType: IApplication.RevokeCsrAsync
    fullName: Okta.Sdk.IApplication.RevokeCsrAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.RevokeCsrAsync(System.String,System.Threading.CancellationToken)
    name: RevokeCsrAsync
    nameWithType: IApplication.RevokeCsrAsync
    fullName: Okta.Sdk.IApplication.RevokeCsrAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.ListCsrs*
  commentId: Overload:Okta.Sdk.Application.ListCsrs
  name: ListCsrs
  nameWithType: Application.ListCsrs
  fullName: Okta.Sdk.Application.ListCsrs
- uid: Okta.Sdk.IApplication.ListCsrs
  commentId: M:Okta.Sdk.IApplication.ListCsrs
  parent: Okta.Sdk.IApplication
  name: ListCsrs()
  nameWithType: IApplication.ListCsrs()
  fullName: Okta.Sdk.IApplication.ListCsrs()
  spec.csharp:
  - uid: Okta.Sdk.IApplication.ListCsrs
    name: ListCsrs
    nameWithType: IApplication.ListCsrs
    fullName: Okta.Sdk.IApplication.ListCsrs
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.ListCsrs
    name: ListCsrs
    nameWithType: IApplication.ListCsrs
    fullName: Okta.Sdk.IApplication.ListCsrs
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.ICsr}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.ICsr}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<ICsr>
  nameWithType: ICollectionClient<ICsr>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.ICsr>
  nameWithType.vb: ICollectionClient(Of ICsr)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.ICsr)
  name.vb: ICollectionClient(Of ICsr)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.ICsr
    name: ICsr
    nameWithType: ICsr
    fullName: Okta.Sdk.ICsr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.ICsr
    name: ICsr
    nameWithType: ICsr
    fullName: Okta.Sdk.ICsr
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.PublishCerCertAsync*
  commentId: Overload:Okta.Sdk.Application.PublishCerCertAsync
  name: PublishCerCertAsync
  nameWithType: Application.PublishCerCertAsync
  fullName: Okta.Sdk.Application.PublishCerCertAsync
- uid: Okta.Sdk.IApplication.PublishCerCertAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.PublishCerCertAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: PublishCerCertAsync(String, String, CancellationToken)
  nameWithType: IApplication.PublishCerCertAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplication.PublishCerCertAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.PublishCerCertAsync(System.String,System.String,System.Threading.CancellationToken)
    name: PublishCerCertAsync
    nameWithType: IApplication.PublishCerCertAsync
    fullName: Okta.Sdk.IApplication.PublishCerCertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.PublishCerCertAsync(System.String,System.String,System.Threading.CancellationToken)
    name: PublishCerCertAsync
    nameWithType: IApplication.PublishCerCertAsync
    fullName: Okta.Sdk.IApplication.PublishCerCertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.PublishBinaryCerCertAsync*
  commentId: Overload:Okta.Sdk.Application.PublishBinaryCerCertAsync
  name: PublishBinaryCerCertAsync
  nameWithType: Application.PublishBinaryCerCertAsync
  fullName: Okta.Sdk.Application.PublishBinaryCerCertAsync
- uid: Okta.Sdk.IApplication.PublishBinaryCerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.PublishBinaryCerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: PublishBinaryCerCertAsync(Byte[], String, CancellationToken)
  nameWithType: IApplication.PublishBinaryCerCertAsync(Byte[], String, CancellationToken)
  fullName: Okta.Sdk.IApplication.PublishBinaryCerCertAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  nameWithType.vb: IApplication.PublishBinaryCerCertAsync(Byte(), String, CancellationToken)
  fullName.vb: Okta.Sdk.IApplication.PublishBinaryCerCertAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: PublishBinaryCerCertAsync(Byte(), String, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.PublishBinaryCerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
    name: PublishBinaryCerCertAsync
    nameWithType: IApplication.PublishBinaryCerCertAsync
    fullName: Okta.Sdk.IApplication.PublishBinaryCerCertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.PublishBinaryCerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
    name: PublishBinaryCerCertAsync
    nameWithType: IApplication.PublishBinaryCerCertAsync
    fullName: Okta.Sdk.IApplication.PublishBinaryCerCertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Okta.Sdk.Application.PublishDerCertAsync*
  commentId: Overload:Okta.Sdk.Application.PublishDerCertAsync
  name: PublishDerCertAsync
  nameWithType: Application.PublishDerCertAsync
  fullName: Okta.Sdk.Application.PublishDerCertAsync
- uid: Okta.Sdk.IApplication.PublishDerCertAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.PublishDerCertAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: PublishDerCertAsync(String, String, CancellationToken)
  nameWithType: IApplication.PublishDerCertAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplication.PublishDerCertAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.PublishDerCertAsync(System.String,System.String,System.Threading.CancellationToken)
    name: PublishDerCertAsync
    nameWithType: IApplication.PublishDerCertAsync
    fullName: Okta.Sdk.IApplication.PublishDerCertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.PublishDerCertAsync(System.String,System.String,System.Threading.CancellationToken)
    name: PublishDerCertAsync
    nameWithType: IApplication.PublishDerCertAsync
    fullName: Okta.Sdk.IApplication.PublishDerCertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.PublishBinaryDerCertAsync*
  commentId: Overload:Okta.Sdk.Application.PublishBinaryDerCertAsync
  name: PublishBinaryDerCertAsync
  nameWithType: Application.PublishBinaryDerCertAsync
  fullName: Okta.Sdk.Application.PublishBinaryDerCertAsync
- uid: Okta.Sdk.IApplication.PublishBinaryDerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.PublishBinaryDerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: PublishBinaryDerCertAsync(Byte[], String, CancellationToken)
  nameWithType: IApplication.PublishBinaryDerCertAsync(Byte[], String, CancellationToken)
  fullName: Okta.Sdk.IApplication.PublishBinaryDerCertAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  nameWithType.vb: IApplication.PublishBinaryDerCertAsync(Byte(), String, CancellationToken)
  fullName.vb: Okta.Sdk.IApplication.PublishBinaryDerCertAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: PublishBinaryDerCertAsync(Byte(), String, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.PublishBinaryDerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
    name: PublishBinaryDerCertAsync
    nameWithType: IApplication.PublishBinaryDerCertAsync
    fullName: Okta.Sdk.IApplication.PublishBinaryDerCertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.PublishBinaryDerCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
    name: PublishBinaryDerCertAsync
    nameWithType: IApplication.PublishBinaryDerCertAsync
    fullName: Okta.Sdk.IApplication.PublishBinaryDerCertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.PublishBinaryPemCertAsync*
  commentId: Overload:Okta.Sdk.Application.PublishBinaryPemCertAsync
  name: PublishBinaryPemCertAsync
  nameWithType: Application.PublishBinaryPemCertAsync
  fullName: Okta.Sdk.Application.PublishBinaryPemCertAsync
- uid: Okta.Sdk.IApplication.PublishBinaryPemCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.PublishBinaryPemCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: PublishBinaryPemCertAsync(Byte[], String, CancellationToken)
  nameWithType: IApplication.PublishBinaryPemCertAsync(Byte[], String, CancellationToken)
  fullName: Okta.Sdk.IApplication.PublishBinaryPemCertAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  nameWithType.vb: IApplication.PublishBinaryPemCertAsync(Byte(), String, CancellationToken)
  fullName.vb: Okta.Sdk.IApplication.PublishBinaryPemCertAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: PublishBinaryPemCertAsync(Byte(), String, CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.PublishBinaryPemCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
    name: PublishBinaryPemCertAsync
    nameWithType: IApplication.PublishBinaryPemCertAsync
    fullName: Okta.Sdk.IApplication.PublishBinaryPemCertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.PublishBinaryPemCertAsync(System.Byte[],System.String,System.Threading.CancellationToken)
    name: PublishBinaryPemCertAsync
    nameWithType: IApplication.PublishBinaryPemCertAsync
    fullName: Okta.Sdk.IApplication.PublishBinaryPemCertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.ListOAuth2Tokens*
  commentId: Overload:Okta.Sdk.Application.ListOAuth2Tokens
  name: ListOAuth2Tokens
  nameWithType: Application.ListOAuth2Tokens
  fullName: Okta.Sdk.Application.ListOAuth2Tokens
- uid: Okta.Sdk.IApplication.ListOAuth2Tokens(System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Okta.Sdk.IApplication.ListOAuth2Tokens(System.String,System.String,System.Nullable{System.Int32})
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: ListOAuth2Tokens(String, String, Nullable<Int32>)
  nameWithType: IApplication.ListOAuth2Tokens(String, String, Nullable<Int32>)
  fullName: Okta.Sdk.IApplication.ListOAuth2Tokens(System.String, System.String, System.Nullable<System.Int32>)
  nameWithType.vb: IApplication.ListOAuth2Tokens(String, String, Nullable(Of Int32))
  fullName.vb: Okta.Sdk.IApplication.ListOAuth2Tokens(System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: ListOAuth2Tokens(String, String, Nullable(Of Int32))
  spec.csharp:
  - uid: Okta.Sdk.IApplication.ListOAuth2Tokens(System.String,System.String,System.Nullable{System.Int32})
    name: ListOAuth2Tokens
    nameWithType: IApplication.ListOAuth2Tokens
    fullName: Okta.Sdk.IApplication.ListOAuth2Tokens
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.ListOAuth2Tokens(System.String,System.String,System.Nullable{System.Int32})
    name: ListOAuth2Tokens
    nameWithType: IApplication.ListOAuth2Tokens
    fullName: Okta.Sdk.IApplication.ListOAuth2Tokens
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Token}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2Token}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2Token>
  nameWithType: ICollectionClient<IOAuth2Token>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2Token>
  nameWithType.vb: ICollectionClient(Of IOAuth2Token)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2Token)
  name.vb: ICollectionClient(Of IOAuth2Token)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Token
    name: IOAuth2Token
    nameWithType: IOAuth2Token
    fullName: Okta.Sdk.IOAuth2Token
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Token
    name: IOAuth2Token
    nameWithType: IOAuth2Token
    fullName: Okta.Sdk.IOAuth2Token
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.RevokeOAuth2TokenForApplicationAsync*
  commentId: Overload:Okta.Sdk.Application.RevokeOAuth2TokenForApplicationAsync
  name: RevokeOAuth2TokenForApplicationAsync
  nameWithType: Application.RevokeOAuth2TokenForApplicationAsync
  fullName: Okta.Sdk.Application.RevokeOAuth2TokenForApplicationAsync
- uid: Okta.Sdk.IApplication.RevokeOAuth2TokenForApplicationAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.RevokeOAuth2TokenForApplicationAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: RevokeOAuth2TokenForApplicationAsync(String, CancellationToken)
  nameWithType: IApplication.RevokeOAuth2TokenForApplicationAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplication.RevokeOAuth2TokenForApplicationAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.RevokeOAuth2TokenForApplicationAsync(System.String,System.Threading.CancellationToken)
    name: RevokeOAuth2TokenForApplicationAsync
    nameWithType: IApplication.RevokeOAuth2TokenForApplicationAsync
    fullName: Okta.Sdk.IApplication.RevokeOAuth2TokenForApplicationAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.RevokeOAuth2TokenForApplicationAsync(System.String,System.Threading.CancellationToken)
    name: RevokeOAuth2TokenForApplicationAsync
    nameWithType: IApplication.RevokeOAuth2TokenForApplicationAsync
    fullName: Okta.Sdk.IApplication.RevokeOAuth2TokenForApplicationAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.GetOAuth2TokenAsync*
  commentId: Overload:Okta.Sdk.Application.GetOAuth2TokenAsync
  name: GetOAuth2TokenAsync
  nameWithType: Application.GetOAuth2TokenAsync
  fullName: Okta.Sdk.Application.GetOAuth2TokenAsync
- uid: Okta.Sdk.IApplication.GetOAuth2TokenAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.GetOAuth2TokenAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: GetOAuth2TokenAsync(String, String, CancellationToken)
  nameWithType: IApplication.GetOAuth2TokenAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplication.GetOAuth2TokenAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.GetOAuth2TokenAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetOAuth2TokenAsync
    nameWithType: IApplication.GetOAuth2TokenAsync
    fullName: Okta.Sdk.IApplication.GetOAuth2TokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.GetOAuth2TokenAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetOAuth2TokenAsync
    nameWithType: IApplication.GetOAuth2TokenAsync
    fullName: Okta.Sdk.IApplication.GetOAuth2TokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Token}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2Token}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2Token>
  nameWithType: Task<IOAuth2Token>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2Token>
  nameWithType.vb: Task(Of IOAuth2Token)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2Token)
  name.vb: Task(Of IOAuth2Token)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2Token
    name: IOAuth2Token
    nameWithType: IOAuth2Token
    fullName: Okta.Sdk.IOAuth2Token
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2Token
    name: IOAuth2Token
    nameWithType: IOAuth2Token
    fullName: Okta.Sdk.IOAuth2Token
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.RevokeOAuth2TokensAsync*
  commentId: Overload:Okta.Sdk.Application.RevokeOAuth2TokensAsync
  name: RevokeOAuth2TokensAsync
  nameWithType: Application.RevokeOAuth2TokensAsync
  fullName: Okta.Sdk.Application.RevokeOAuth2TokensAsync
- uid: Okta.Sdk.IApplication.RevokeOAuth2TokensAsync(System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.RevokeOAuth2TokensAsync(System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: RevokeOAuth2TokensAsync(CancellationToken)
  nameWithType: IApplication.RevokeOAuth2TokensAsync(CancellationToken)
  fullName: Okta.Sdk.IApplication.RevokeOAuth2TokensAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.RevokeOAuth2TokensAsync(System.Threading.CancellationToken)
    name: RevokeOAuth2TokensAsync
    nameWithType: IApplication.RevokeOAuth2TokensAsync
    fullName: Okta.Sdk.IApplication.RevokeOAuth2TokensAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.RevokeOAuth2TokensAsync(System.Threading.CancellationToken)
    name: RevokeOAuth2TokensAsync
    nameWithType: IApplication.RevokeOAuth2TokensAsync
    fullName: Okta.Sdk.IApplication.RevokeOAuth2TokensAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.ListScopeConsentGrants*
  commentId: Overload:Okta.Sdk.Application.ListScopeConsentGrants
  name: ListScopeConsentGrants
  nameWithType: Application.ListScopeConsentGrants
  fullName: Okta.Sdk.Application.ListScopeConsentGrants
- uid: Okta.Sdk.IApplication.ListScopeConsentGrants(System.String)
  commentId: M:Okta.Sdk.IApplication.ListScopeConsentGrants(System.String)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: ListScopeConsentGrants(String)
  nameWithType: IApplication.ListScopeConsentGrants(String)
  fullName: Okta.Sdk.IApplication.ListScopeConsentGrants(System.String)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.ListScopeConsentGrants(System.String)
    name: ListScopeConsentGrants
    nameWithType: IApplication.ListScopeConsentGrants
    fullName: Okta.Sdk.IApplication.ListScopeConsentGrants
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.ListScopeConsentGrants(System.String)
    name: ListScopeConsentGrants
    nameWithType: IApplication.ListScopeConsentGrants
    fullName: Okta.Sdk.IApplication.ListScopeConsentGrants
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2ScopeConsentGrant}
  commentId: T:Okta.Sdk.ICollectionClient{Okta.Sdk.IOAuth2ScopeConsentGrant}
  parent: Okta.Sdk
  definition: Okta.Sdk.ICollectionClient`1
  name: ICollectionClient<IOAuth2ScopeConsentGrant>
  nameWithType: ICollectionClient<IOAuth2ScopeConsentGrant>
  fullName: Okta.Sdk.ICollectionClient<Okta.Sdk.IOAuth2ScopeConsentGrant>
  nameWithType.vb: ICollectionClient(Of IOAuth2ScopeConsentGrant)
  fullName.vb: Okta.Sdk.ICollectionClient(Of Okta.Sdk.IOAuth2ScopeConsentGrant)
  name.vb: ICollectionClient(Of IOAuth2ScopeConsentGrant)
  spec.csharp:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Okta.Sdk.ICollectionClient`1
    name: ICollectionClient
    nameWithType: ICollectionClient
    fullName: Okta.Sdk.ICollectionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.GrantConsentToScopeAsync*
  commentId: Overload:Okta.Sdk.Application.GrantConsentToScopeAsync
  name: GrantConsentToScopeAsync
  nameWithType: Application.GrantConsentToScopeAsync
  fullName: Okta.Sdk.Application.GrantConsentToScopeAsync
- uid: Okta.Sdk.IApplication.GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: GrantConsentToScopeAsync(IOAuth2ScopeConsentGrant, CancellationToken)
  nameWithType: IApplication.GrantConsentToScopeAsync(IOAuth2ScopeConsentGrant, CancellationToken)
  fullName: Okta.Sdk.IApplication.GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant,System.Threading.CancellationToken)
    name: GrantConsentToScopeAsync
    nameWithType: IApplication.GrantConsentToScopeAsync
    fullName: Okta.Sdk.IApplication.GrantConsentToScopeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.GrantConsentToScopeAsync(Okta.Sdk.IOAuth2ScopeConsentGrant,System.Threading.CancellationToken)
    name: GrantConsentToScopeAsync
    nameWithType: IApplication.GrantConsentToScopeAsync
    fullName: Okta.Sdk.IApplication.GrantConsentToScopeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.IOAuth2ScopeConsentGrant
  commentId: T:Okta.Sdk.IOAuth2ScopeConsentGrant
  parent: Okta.Sdk
  name: IOAuth2ScopeConsentGrant
  nameWithType: IOAuth2ScopeConsentGrant
  fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
- uid: System.Threading.Tasks.Task{Okta.Sdk.IOAuth2ScopeConsentGrant}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IOAuth2ScopeConsentGrant}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOAuth2ScopeConsentGrant>
  nameWithType: Task<IOAuth2ScopeConsentGrant>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IOAuth2ScopeConsentGrant>
  nameWithType.vb: Task(Of IOAuth2ScopeConsentGrant)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IOAuth2ScopeConsentGrant)
  name.vb: Task(Of IOAuth2ScopeConsentGrant)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IOAuth2ScopeConsentGrant
    name: IOAuth2ScopeConsentGrant
    nameWithType: IOAuth2ScopeConsentGrant
    fullName: Okta.Sdk.IOAuth2ScopeConsentGrant
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.RevokeScopeConsentGrantAsync*
  commentId: Overload:Okta.Sdk.Application.RevokeScopeConsentGrantAsync
  name: RevokeScopeConsentGrantAsync
  nameWithType: Application.RevokeScopeConsentGrantAsync
  fullName: Okta.Sdk.Application.RevokeScopeConsentGrantAsync
- uid: Okta.Sdk.IApplication.RevokeScopeConsentGrantAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.RevokeScopeConsentGrantAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: RevokeScopeConsentGrantAsync(String, CancellationToken)
  nameWithType: IApplication.RevokeScopeConsentGrantAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplication.RevokeScopeConsentGrantAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.RevokeScopeConsentGrantAsync(System.String,System.Threading.CancellationToken)
    name: RevokeScopeConsentGrantAsync
    nameWithType: IApplication.RevokeScopeConsentGrantAsync
    fullName: Okta.Sdk.IApplication.RevokeScopeConsentGrantAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.RevokeScopeConsentGrantAsync(System.String,System.Threading.CancellationToken)
    name: RevokeScopeConsentGrantAsync
    nameWithType: IApplication.RevokeScopeConsentGrantAsync
    fullName: Okta.Sdk.IApplication.RevokeScopeConsentGrantAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.GetScopeConsentGrantAsync*
  commentId: Overload:Okta.Sdk.Application.GetScopeConsentGrantAsync
  name: GetScopeConsentGrantAsync
  nameWithType: Application.GetScopeConsentGrantAsync
  fullName: Okta.Sdk.Application.GetScopeConsentGrantAsync
- uid: Okta.Sdk.IApplication.GetScopeConsentGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.GetScopeConsentGrantAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: GetScopeConsentGrantAsync(String, String, CancellationToken)
  nameWithType: IApplication.GetScopeConsentGrantAsync(String, String, CancellationToken)
  fullName: Okta.Sdk.IApplication.GetScopeConsentGrantAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.GetScopeConsentGrantAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetScopeConsentGrantAsync
    nameWithType: IApplication.GetScopeConsentGrantAsync
    fullName: Okta.Sdk.IApplication.GetScopeConsentGrantAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.GetScopeConsentGrantAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetScopeConsentGrantAsync
    nameWithType: IApplication.GetScopeConsentGrantAsync
    fullName: Okta.Sdk.IApplication.GetScopeConsentGrantAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.UploadApplicationLogoAsync*
  commentId: Overload:Okta.Sdk.Application.UploadApplicationLogoAsync
  name: UploadApplicationLogoAsync
  nameWithType: Application.UploadApplicationLogoAsync
  fullName: Okta.Sdk.Application.UploadApplicationLogoAsync
- uid: Okta.Sdk.IApplication.UploadApplicationLogoAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.UploadApplicationLogoAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: UploadApplicationLogoAsync(String, CancellationToken)
  nameWithType: IApplication.UploadApplicationLogoAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplication.UploadApplicationLogoAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.UploadApplicationLogoAsync(System.String,System.Threading.CancellationToken)
    name: UploadApplicationLogoAsync
    nameWithType: IApplication.UploadApplicationLogoAsync
    fullName: Okta.Sdk.IApplication.UploadApplicationLogoAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.UploadApplicationLogoAsync(System.String,System.Threading.CancellationToken)
    name: UploadApplicationLogoAsync
    nameWithType: IApplication.UploadApplicationLogoAsync
    fullName: Okta.Sdk.IApplication.UploadApplicationLogoAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.GetFeatureForApplicationAsync*
  commentId: Overload:Okta.Sdk.Application.GetFeatureForApplicationAsync
  name: GetFeatureForApplicationAsync
  nameWithType: Application.GetFeatureForApplicationAsync
  fullName: Okta.Sdk.Application.GetFeatureForApplicationAsync
- uid: Okta.Sdk.IApplication.GetFeatureForApplicationAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.GetFeatureForApplicationAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: GetFeatureForApplicationAsync(String, CancellationToken)
  nameWithType: IApplication.GetFeatureForApplicationAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplication.GetFeatureForApplicationAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.GetFeatureForApplicationAsync(System.String,System.Threading.CancellationToken)
    name: GetFeatureForApplicationAsync
    nameWithType: IApplication.GetFeatureForApplicationAsync
    fullName: Okta.Sdk.IApplication.GetFeatureForApplicationAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.GetFeatureForApplicationAsync(System.String,System.Threading.CancellationToken)
    name: GetFeatureForApplicationAsync
    nameWithType: IApplication.GetFeatureForApplicationAsync
    fullName: Okta.Sdk.IApplication.GetFeatureForApplicationAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Okta.Sdk.IApplicationFeature}
  commentId: T:System.Threading.Tasks.Task{Okta.Sdk.IApplicationFeature}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IApplicationFeature>
  nameWithType: Task<IApplicationFeature>
  fullName: System.Threading.Tasks.Task<Okta.Sdk.IApplicationFeature>
  nameWithType.vb: Task(Of IApplicationFeature)
  fullName.vb: System.Threading.Tasks.Task(Of Okta.Sdk.IApplicationFeature)
  name.vb: Task(Of IApplicationFeature)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Okta.Sdk.IApplicationFeature
    name: IApplicationFeature
    nameWithType: IApplicationFeature
    fullName: Okta.Sdk.IApplicationFeature
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Okta.Sdk.IApplicationFeature
    name: IApplicationFeature
    nameWithType: IApplicationFeature
    fullName: Okta.Sdk.IApplicationFeature
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.Application.UpdateFeatureForApplicationAsync*
  commentId: Overload:Okta.Sdk.Application.UpdateFeatureForApplicationAsync
  name: UpdateFeatureForApplicationAsync
  nameWithType: Application.UpdateFeatureForApplicationAsync
  fullName: Okta.Sdk.Application.UpdateFeatureForApplicationAsync
- uid: Okta.Sdk.IApplication.UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject,System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject,System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: UpdateFeatureForApplicationAsync(ICapabilitiesObject, String, CancellationToken)
  nameWithType: IApplication.UpdateFeatureForApplicationAsync(ICapabilitiesObject, String, CancellationToken)
  fullName: Okta.Sdk.IApplication.UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject,System.String,System.Threading.CancellationToken)
    name: UpdateFeatureForApplicationAsync
    nameWithType: IApplication.UpdateFeatureForApplicationAsync
    fullName: Okta.Sdk.IApplication.UpdateFeatureForApplicationAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.ICapabilitiesObject
    name: ICapabilitiesObject
    nameWithType: ICapabilitiesObject
    fullName: Okta.Sdk.ICapabilitiesObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.UpdateFeatureForApplicationAsync(Okta.Sdk.ICapabilitiesObject,System.String,System.Threading.CancellationToken)
    name: UpdateFeatureForApplicationAsync
    nameWithType: IApplication.UpdateFeatureForApplicationAsync
    fullName: Okta.Sdk.IApplication.UpdateFeatureForApplicationAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Okta.Sdk.ICapabilitiesObject
    name: ICapabilitiesObject
    nameWithType: ICapabilitiesObject
    fullName: Okta.Sdk.ICapabilitiesObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Okta.Sdk.ICapabilitiesObject
  commentId: T:Okta.Sdk.ICapabilitiesObject
  parent: Okta.Sdk
  name: ICapabilitiesObject
  nameWithType: ICapabilitiesObject
  fullName: Okta.Sdk.ICapabilitiesObject
- uid: Okta.Sdk.Application.UpdateApplicationPolicyAsync*
  commentId: Overload:Okta.Sdk.Application.UpdateApplicationPolicyAsync
  name: UpdateApplicationPolicyAsync
  nameWithType: Application.UpdateApplicationPolicyAsync
  fullName: Okta.Sdk.Application.UpdateApplicationPolicyAsync
- uid: Okta.Sdk.IApplication.UpdateApplicationPolicyAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Okta.Sdk.IApplication.UpdateApplicationPolicyAsync(System.String,System.Threading.CancellationToken)
  parent: Okta.Sdk.IApplication
  isExternal: true
  name: UpdateApplicationPolicyAsync(String, CancellationToken)
  nameWithType: IApplication.UpdateApplicationPolicyAsync(String, CancellationToken)
  fullName: Okta.Sdk.IApplication.UpdateApplicationPolicyAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Okta.Sdk.IApplication.UpdateApplicationPolicyAsync(System.String,System.Threading.CancellationToken)
    name: UpdateApplicationPolicyAsync
    nameWithType: IApplication.UpdateApplicationPolicyAsync
    fullName: Okta.Sdk.IApplication.UpdateApplicationPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Okta.Sdk.IApplication.UpdateApplicationPolicyAsync(System.String,System.Threading.CancellationToken)
    name: UpdateApplicationPolicyAsync
    nameWithType: IApplication.UpdateApplicationPolicyAsync
    fullName: Okta.Sdk.IApplication.UpdateApplicationPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
